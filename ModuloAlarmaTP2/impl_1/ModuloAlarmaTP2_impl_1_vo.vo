
// Verilog netlist produced by program backanno, Version Radiant Software (64-bit) 3.0.0.24.1

// backanno -o ModuloAlarmaTP2_impl_1_vo.vo -sp High-Performance_1.2V -w -neg -gui ModuloAlarmaTP2_impl_1.udb 
// Netlist created on Thu Nov 18 14:52:25 2021
// Netlist written on Thu Nov 18 14:52:32 2021
// Design is for device iCE40UP5K
// Design is for package SG48
// Design is for performance grade High-Performance_1.2V

`timescale 1 ns / 1 ps

module MainModule ( STATUS_SEND, STATUS_OUT, SIREN_OUT, SERCLK_OUT, KEY_STATUS, 
                    debug, timeout, SENSOR1_IN, SENSOR2_IN, KB_IN, KB_RECV, 
                    RESET_IN );
  input  SENSOR1_IN, SENSOR2_IN;
  input  [1:0] KB_IN;
  input  KB_RECV, RESET_IN;
  output STATUS_SEND, STATUS_OUT, SIREN_OUT, SERCLK_OUT;
  output [1:0] KEY_STATUS;
  output [1:0] debug;
  output timeout;
  wire   \mainTimer.n3137 , \mainTimer.clkCont[14] , \mainTimer.n1261 , 
         \mainTimer.clkCont[13] , \mainTimer.clkCont_17__N_41[13] , 
         \mainTimer.clkCont_17__N_41[14] , \mainTimer.n1263 , 
         \mainTimer.n3134 , \mainTimer.clkCont[12] , \mainTimer.n1259 , 
         \mainTimer.clkCont[11] , \mainTimer.clkCont_17__N_41[11] , 
         \mainTimer.clkCont_17__N_41[12] , \mainTimer.n3131 , 
         \mainTimer.clkCont[10] , \mainTimer.n1257 , \mainTimer.clkCont[9] , 
         \mainTimer.clkCont_17__N_41[9] , \mainTimer.clkCont_17__N_41[10] , 
         \mainTimer.n3128 , \mainTimer.clkCont[8] , \mainTimer.n1255 , 
         \mainTimer.clkCont[7] , \mainTimer.clkCont_17__N_41[7] , 
         \mainTimer.clkCont_17__N_41[8] , \mainTimer.n3125 , 
         \mainTimer.clkCont[6] , \mainTimer.n1253 , \mainTimer.clkCont[5] , 
         \mainTimer.clkCont_17__N_41[5] , \mainTimer.clkCont_17__N_41[6] , 
         \mainTimer.n3122 , \mainTimer.clkCont[4] , \mainTimer.n1251 , 
         \mainTimer.clkCont[3] , \mainTimer.clkCont_17__N_41[3] , 
         \mainTimer.clkCont_17__N_41[4] , \mainTimer.n3119 , 
         \mainTimer.clkCont[2] , \mainTimer.n1249 , \mainTimer.clkCont[1] , 
         \mainTimer.clkCont_17__N_41[1] , \mainTimer.clkCont_17__N_41[2] , 
         \mainTimer.n3053 , VCC_net, \mainTimer.clkCont[0] , 
         \mainTimer.clkCont_17__N_41[0] , \mainTimer.n3143 , \mainTimer.n1265 , 
         \mainTimer.clkCont[17] , \mainTimer.clkCont_17__N_41[17] , 
         \mainTimer.n3140 , \mainTimer.clkCont[16] , \mainTimer.clkCont[15] , 
         \mainTimer.clkCont_17__N_41[15] , \mainTimer.clkCont_17__N_41[16] , 
         \STATE_OUT.n3044 , \j[28] , \STATE_OUT.n1242 , \j[27] , 
         \waiting_N_141[27] , \waiting_N_141[28] , \STATE_OUT.n1244 , 
         \STATE_OUT.n3008 , \j[4] , \STATE_OUT.n1218 , \j[3] , 
         \waiting_N_141[3] , \waiting_N_141[4] , \STATE_OUT.n1220 , 
         \STATE_OUT.waiting_N_141[1]_2 , \STATE_OUT.n3005 , \j[2] , 
         \STATE_OUT.n1216 , \STATE_OUT.j[1]_2 , \STATE_OUT.waiting_N_136 , 
         \STATE_OUT.n143_c , SERCLK_OUT_c, \waiting_N_141[2] , 
         \STATE_OUT.waiting_N_141[0]_2 , \STATE_OUT.n3002 , \STATE_OUT.j[0]_2 , 
         \STATE_OUT.n3041 , \j[26] , \STATE_OUT.n1240 , \j[25] , 
         \waiting_N_141[25] , \waiting_N_141[26] , \STATE_OUT.n3038 , \j[24] , 
         \STATE_OUT.n1238 , \j[23] , \waiting_N_141[23] , \waiting_N_141[24] , 
         \STATE_OUT.n3035 , \j[22] , \STATE_OUT.n1236 , \j[21] , 
         \waiting_N_141[21] , \waiting_N_141[22] , \STATE_OUT.n3032 , \j[20] , 
         \STATE_OUT.n1234 , \j[19] , \waiting_N_141[19] , \waiting_N_141[20] , 
         \STATE_OUT.n3050 , \STATE_OUT.n1246 , \j[31] , \waiting_N_141[31] , 
         \STATE_OUT.n3029 , \j[18] , \STATE_OUT.n1232 , \j[17] , 
         \waiting_N_141[17] , \waiting_N_141[18] , \STATE_OUT.n3026 , \j[16] , 
         \STATE_OUT.n1230 , \j[15] , \waiting_N_141[15] , \waiting_N_141[16] , 
         \STATE_OUT.n3023 , \j[14] , \STATE_OUT.n1228 , \j[13] , 
         \waiting_N_141[13] , \waiting_N_141[14] , \STATE_OUT.n3020 , \j[12] , 
         \STATE_OUT.n1226 , \j[11] , \waiting_N_141[11] , \waiting_N_141[12] , 
         \STATE_OUT.n3017 , \j[10] , \STATE_OUT.n1224 , \j[9] , 
         \waiting_N_141[9] , \waiting_N_141[10] , \STATE_OUT.n3014 , \j[8] , 
         \STATE_OUT.n1222 , \j[7] , \waiting_N_141[7] , \waiting_N_141[8] , 
         \STATE_OUT.n3011 , \j[6] , \j[5] , \waiting_N_141[5] , 
         \waiting_N_141[6] , \STATE_OUT.n3047 , \j[30] , \j[29] , 
         \waiting_N_141[29] , \waiting_N_141[30] , \STATE_OUT.serial.n3107 , 
         \STATE_OUT.serial.n1213 , \STATE_OUT.serial.j[31] , n135, 
         \STATE_OUT.serial.n3104 , \STATE_OUT.serial.j[30] , 
         \STATE_OUT.serial.n1211 , \STATE_OUT.serial.j[29] , n137, n136, 
         \STATE_OUT.serial.n3074 , \STATE_OUT.serial.j[10] , 
         \STATE_OUT.serial.n1191 , \STATE_OUT.serial.j[9] , n157, n156, 
         \STATE_OUT.serial.n1193 , \STATE_OUT.serial.n3101 , 
         \STATE_OUT.serial.j[28] , \STATE_OUT.serial.n1209 , 
         \STATE_OUT.serial.j[27] , n139, n138, \STATE_OUT.serial.n3098 , 
         \STATE_OUT.serial.j[26] , \STATE_OUT.serial.n1207 , 
         \STATE_OUT.serial.j[25] , n141, n140, \STATE_OUT.serial.n3095 , 
         \STATE_OUT.serial.j[24] , \STATE_OUT.serial.n1205 , 
         \STATE_OUT.serial.j[23] , n143, n142, \STATE_OUT.serial.n3092 , 
         \STATE_OUT.serial.j[22] , \STATE_OUT.serial.n1203 , 
         \STATE_OUT.serial.j[21] , n145, n144, \STATE_OUT.serial.n3065 , 
         \STATE_OUT.serial.j[4] , \STATE_OUT.serial.n1185 , 
         \STATE_OUT.serial.j[3] , n163, n162, \STATE_OUT.serial.n1187 , 
         \STATE_OUT.serial.n3089 , \STATE_OUT.serial.j[20] , 
         \STATE_OUT.serial.n1201 , \STATE_OUT.serial.j[19] , n147, n146, 
         \STATE_OUT.serial.n167[1] , \STATE_OUT.serial.n3062 , 
         \STATE_OUT.serial.j[2] , \STATE_OUT.serial.n1183 , 
         \STATE_OUT.serial.j[1] , n121, n164, \STATE_OUT.serial.n3086 , 
         \STATE_OUT.serial.j[18] , \STATE_OUT.serial.n1199 , 
         \STATE_OUT.serial.j[17] , n149, n148, \STATE_OUT.serial.n3083 , 
         \STATE_OUT.serial.j[16] , \STATE_OUT.serial.n1197 , 
         \STATE_OUT.serial.j[15] , n151, n150, \STATE_OUT.serial.n3080 , 
         \STATE_OUT.serial.j[14] , \STATE_OUT.serial.n1195 , 
         \STATE_OUT.serial.j[13] , n153, n152, \STATE_OUT.serial.n3068 , 
         \STATE_OUT.serial.j[6] , \STATE_OUT.serial.j[5] , n161, n160, 
         \STATE_OUT.serial.n1189 , \STATE_OUT.serial.n3071 , 
         \STATE_OUT.serial.j[8] , \STATE_OUT.serial.j[7] , n159, n158, 
         \STATE_OUT.serial.n3077 , \STATE_OUT.serial.j[12] , 
         \STATE_OUT.serial.j[11] , n155, n154, \STATE_OUT.serial.n167[0] , 
         \STATE_OUT.serial.n3059 , \STATE_OUT.serial.j[0] , \debug_c_1$n1 , 
         \debug_c_0$n0 , n32, n2169, debug_c_1, n1773, debug_c_0, 
         KEY_STATUS_c_0, n22, \Snext_1__N_1[0] , RESET_IN_c, \Sreg[0] , 
         \Sreg[1] , n459, n556, \state[0] , \PREV_KEY[0] , \state[1] , 
         \PREV_KEY[1] , KEY_STATUS_c_1, \keyboard.nextState[0]$n3 , 
         \keyboard.nextState[1]$n2 , \keyboard.counter[0] , \keyboard.n349 , 
         \keyboard.nextState[0] , \keyboard.counter[1] , \keyboard.n6_adj_277 , 
         \keyboard.n13[1] , \keyboard.n1 , KB_RECV_c, 
         \mainTimer.clkCont_17__N_20[16] , \mainTimer.clkCont_17__N_20[17] , 
         timeout_c, \mainTimer.clkCont_17__N_38 , 
         \mainTimer.clkCont_17__N_20[14] , \mainTimer.clkCont_17__N_20[15] , 
         \mainTimer.clkCont_17__N_20[12] , \mainTimer.clkCont_17__N_20[13] , 
         \mainTimer.clkCont_17__N_20[10] , \mainTimer.clkCont_17__N_20[11] , 
         \mainTimer.clkCont_17__N_20[8] , \mainTimer.clkCont_17__N_20[9] , 
         \mainTimer.clkCont_17__N_20[6] , \mainTimer.clkCont_17__N_20[7] , 
         \mainTimer.clkCont_17__N_20[4] , \mainTimer.clkCont_17__N_20[5] , 
         \mainTimer.clkCont_17__N_20[2] , \mainTimer.clkCont_17__N_20[3] , 
         \mainTimer.clkCont_17__N_20[0] , \mainTimer.clkCont_17__N_20[1] , 
         n527, n525, waiting_N_140, waiting, n545, n547, n541, n543, n531, 
         n529, n535, n533, n551, n549, n555, n553, n539, n537, 
         \STATE_OUT.n21[1] , \STATE_OUT.n21[0] , \STATE_OUT.cont[1] , 
         \STATE_OUT.cont[0] , n469, n515, n458, n456, n463, n461, n467, n465, 
         n473, n471, n523, n521, n519, n517, \STATE_OUT.n21[3] , 
         \STATE_OUT.n21[2] , \STATE_OUT.cont[3] , \STATE_OUT.cont[2] , n486, 
         n485, n483, n484, \SENSOR1_IN_c.sig_001.FeedThruLUT , 
         \SENSOR2_IN_c.sig_000.FeedThruLUT , SENSOR1_IN_c, SENSOR2_IN_c, 
         \STATE_OUT.n120 , \STATE_OUT.serial.temp_data_out[0] , 
         \STATE_OUT.serial.temp_data_out[1] , n481, n482, n479, n480, n477, 
         n478, n475, n476, init, n503, n504, n501, n502, n499, n500, n497, 
         n498, n495, n496, n493, n494, n491, n492, n489, n490, n487, n488, 
         \Sreg[1].sig_002.FeedThruLUT , \STATE_OUT.serial.n453 , 
         \STATE_OUT.serial.temp_data_out[3] , \keyboard.nextState[1] , 
         \Snext_1__N_7[0] , n2532, \Snext_1__N_11[0] , 
         \keyboard.actualKey[3][1] , \keyboard.n6 , \keyboard.n1970 , 
         \keyboard.actualKey[2][1] , \keyboard.actualKey[3][0] , 
         \keyboard.actualKey[1][0] , \KEY_STATUS_1__N_254[1] , 
         \keyboard.n1620 , KB_IN_c_0, \keyboard.actualKey[0][1] , 
         \keyboard.actualKey[0][0] , \keyboard.actualKey[1][1] , 
         \keyboard.actualKey[2][0] , \keyboard.n1618 , KB_IN_c_1, TIMER_EN, 
         n15, n1771, n1755, n1958, \keyboard.n1621 , \keyboard.n851 , n3, 
         \mainTimer.n1968 , \mainTimer.n17 , \mainTimer.n2708 , \mainTimer.n8 , 
         \mainTimer.n7 , \mainTimer.n18 , \mainTimer.n19 , n2157, 
         \STATE_OUT.n32 , \STATE_OUT.n46 , \STATE_OUT.n52 , \STATE_OUT.n47 , 
         \STATE_OUT.n50 , \STATE_OUT.n48 , \STATE_OUT.n49 , \STATE_OUT.n56 , 
         \STATE_OUT.n30 , \STATE_OUT.n51 , \STATE_OUT.serial.n48 , 
         \STATE_OUT.serial.n50 , \STATE_OUT.serial.n49 , 
         \STATE_OUT.serial.n47 , \STATE_OUT.serial.n56 , 
         \STATE_OUT.serial.n32 , \STATE_OUT.serial.n46 , 
         \STATE_OUT.serial.n52 , \STATE_OUT.serial.n44 , 
         \STATE_OUT.serial.n55 , \STATE_OUT.serial.status_out_N_253 , 
         \STATE_OUT.serial.n2526 , \temp_data_out[2] , STATUS_OUT_c, 
         \STATE_OUT.n2154 , \STATE_OUT.n1651 , n577, SIREN_OUT_c, 
         \STATE_OUT.waiting_N_136$n4 , STATUS_SEND_c;

  mainTimer_SLICE_0 \mainTimer.SLICE_0 ( .D1(\mainTimer.n3137 ), 
    .B1(\mainTimer.clkCont[14] ), .D0(\mainTimer.n1261 ), 
    .B0(\mainTimer.clkCont[13] ), .CIN0(\mainTimer.n1261 ), 
    .CIN1(\mainTimer.n3137 ), .F0(\mainTimer.clkCont_17__N_41[13] ), 
    .F1(\mainTimer.clkCont_17__N_41[14] ), .COUT1(\mainTimer.n1263 ), 
    .COUT0(\mainTimer.n3137 ));
  mainTimer_SLICE_1 \mainTimer.SLICE_1 ( .D1(\mainTimer.n3134 ), 
    .B1(\mainTimer.clkCont[12] ), .D0(\mainTimer.n1259 ), 
    .B0(\mainTimer.clkCont[11] ), .CIN0(\mainTimer.n1259 ), 
    .CIN1(\mainTimer.n3134 ), .F0(\mainTimer.clkCont_17__N_41[11] ), 
    .F1(\mainTimer.clkCont_17__N_41[12] ), .COUT1(\mainTimer.n1261 ), 
    .COUT0(\mainTimer.n3134 ));
  mainTimer_SLICE_2 \mainTimer.SLICE_2 ( .D1(\mainTimer.n3131 ), 
    .B1(\mainTimer.clkCont[10] ), .D0(\mainTimer.n1257 ), 
    .B0(\mainTimer.clkCont[9] ), .CIN0(\mainTimer.n1257 ), 
    .CIN1(\mainTimer.n3131 ), .F0(\mainTimer.clkCont_17__N_41[9] ), 
    .F1(\mainTimer.clkCont_17__N_41[10] ), .COUT1(\mainTimer.n1259 ), 
    .COUT0(\mainTimer.n3131 ));
  mainTimer_SLICE_3 \mainTimer.SLICE_3 ( .D1(\mainTimer.n3128 ), 
    .B1(\mainTimer.clkCont[8] ), .D0(\mainTimer.n1255 ), 
    .B0(\mainTimer.clkCont[7] ), .CIN0(\mainTimer.n1255 ), 
    .CIN1(\mainTimer.n3128 ), .F0(\mainTimer.clkCont_17__N_41[7] ), 
    .F1(\mainTimer.clkCont_17__N_41[8] ), .COUT1(\mainTimer.n1257 ), 
    .COUT0(\mainTimer.n3128 ));
  mainTimer_SLICE_4 \mainTimer.SLICE_4 ( .D1(\mainTimer.n3125 ), 
    .B1(\mainTimer.clkCont[6] ), .D0(\mainTimer.n1253 ), 
    .B0(\mainTimer.clkCont[5] ), .CIN0(\mainTimer.n1253 ), 
    .CIN1(\mainTimer.n3125 ), .F0(\mainTimer.clkCont_17__N_41[5] ), 
    .F1(\mainTimer.clkCont_17__N_41[6] ), .COUT1(\mainTimer.n1255 ), 
    .COUT0(\mainTimer.n3125 ));
  mainTimer_SLICE_5 \mainTimer.SLICE_5 ( .D1(\mainTimer.n3122 ), 
    .B1(\mainTimer.clkCont[4] ), .D0(\mainTimer.n1251 ), 
    .B0(\mainTimer.clkCont[3] ), .CIN0(\mainTimer.n1251 ), 
    .CIN1(\mainTimer.n3122 ), .F0(\mainTimer.clkCont_17__N_41[3] ), 
    .F1(\mainTimer.clkCont_17__N_41[4] ), .COUT1(\mainTimer.n1253 ), 
    .COUT0(\mainTimer.n3122 ));
  mainTimer_SLICE_6 \mainTimer.SLICE_6 ( .D1(\mainTimer.n3119 ), 
    .B1(\mainTimer.clkCont[2] ), .D0(\mainTimer.n1249 ), 
    .B0(\mainTimer.clkCont[1] ), .CIN0(\mainTimer.n1249 ), 
    .CIN1(\mainTimer.n3119 ), .F0(\mainTimer.clkCont_17__N_41[1] ), 
    .F1(\mainTimer.clkCont_17__N_41[2] ), .COUT1(\mainTimer.n1251 ), 
    .COUT0(\mainTimer.n3119 ));
  mainTimer_SLICE_7 \mainTimer.SLICE_7 ( .D1(\mainTimer.n3053 ), .C1(VCC_net), 
    .B1(\mainTimer.clkCont[0] ), .CIN1(\mainTimer.n3053 ), 
    .F1(\mainTimer.clkCont_17__N_41[0] ), .COUT1(\mainTimer.n1249 ), 
    .COUT0(\mainTimer.n3053 ));
  mainTimer_SLICE_8 \mainTimer.SLICE_8 ( .D1(\mainTimer.n3143 ), 
    .D0(\mainTimer.n1265 ), .B0(\mainTimer.clkCont[17] ), 
    .CIN0(\mainTimer.n1265 ), .CIN1(\mainTimer.n3143 ), 
    .F0(\mainTimer.clkCont_17__N_41[17] ), .COUT0(\mainTimer.n3143 ));
  mainTimer_SLICE_9 \mainTimer.SLICE_9 ( .D1(\mainTimer.n3140 ), 
    .B1(\mainTimer.clkCont[16] ), .D0(\mainTimer.n1263 ), 
    .B0(\mainTimer.clkCont[15] ), .CIN0(\mainTimer.n1263 ), 
    .CIN1(\mainTimer.n3140 ), .F0(\mainTimer.clkCont_17__N_41[15] ), 
    .F1(\mainTimer.clkCont_17__N_41[16] ), .COUT1(\mainTimer.n1265 ), 
    .COUT0(\mainTimer.n3140 ));
  STATE_OUT_SLICE_10 \STATE_OUT.SLICE_10 ( .D1(\STATE_OUT.n3044 ), 
    .B1(\j[28] ), .D0(\STATE_OUT.n1242 ), .B0(\j[27] ), 
    .CIN0(\STATE_OUT.n1242 ), .CIN1(\STATE_OUT.n3044 ), 
    .F0(\waiting_N_141[27] ), .F1(\waiting_N_141[28] ), 
    .COUT1(\STATE_OUT.n1244 ), .COUT0(\STATE_OUT.n3044 ));
  STATE_OUT_SLICE_11 \STATE_OUT.SLICE_11 ( .D1(\STATE_OUT.n3008 ), .B1(\j[4] ), 
    .D0(\STATE_OUT.n1218 ), .B0(\j[3] ), .CIN0(\STATE_OUT.n1218 ), 
    .CIN1(\STATE_OUT.n3008 ), .F0(\waiting_N_141[3] ), .F1(\waiting_N_141[4] ), 
    .COUT1(\STATE_OUT.n1220 ), .COUT0(\STATE_OUT.n3008 ));
  STATE_OUT_SLICE_12 \STATE_OUT.SLICE_12 ( 
    .DI0(\STATE_OUT.waiting_N_141[1]_2 ), .D1(\STATE_OUT.n3005 ), .B1(\j[2] ), 
    .D0(\STATE_OUT.n1216 ), .B0(\STATE_OUT.j[1]_2 ), 
    .CE(\STATE_OUT.waiting_N_136 ), .LSR(\STATE_OUT.n143_c ), 
    .CLK(SERCLK_OUT_c), .CIN0(\STATE_OUT.n1216 ), .CIN1(\STATE_OUT.n3005 ), 
    .Q0(\STATE_OUT.j[1]_2 ), .F0(\STATE_OUT.waiting_N_141[1]_2 ), 
    .F1(\waiting_N_141[2] ), .COUT1(\STATE_OUT.n1218 ), 
    .COUT0(\STATE_OUT.n3005 ));
  STATE_OUT_SLICE_13 \STATE_OUT.SLICE_13 ( 
    .DI1(\STATE_OUT.waiting_N_141[0]_2 ), .D1(\STATE_OUT.n3002 ), .C1(VCC_net), 
    .B1(\STATE_OUT.j[0]_2 ), .CE(\STATE_OUT.waiting_N_136 ), 
    .LSR(\STATE_OUT.n143_c ), .CLK(SERCLK_OUT_c), .CIN1(\STATE_OUT.n3002 ), 
    .Q1(\STATE_OUT.j[0]_2 ), .F1(\STATE_OUT.waiting_N_141[0]_2 ), 
    .COUT1(\STATE_OUT.n1216 ), .COUT0(\STATE_OUT.n3002 ));
  STATE_OUT_SLICE_14 \STATE_OUT.SLICE_14 ( .D1(\STATE_OUT.n3041 ), 
    .B1(\j[26] ), .D0(\STATE_OUT.n1240 ), .B0(\j[25] ), 
    .CIN0(\STATE_OUT.n1240 ), .CIN1(\STATE_OUT.n3041 ), 
    .F0(\waiting_N_141[25] ), .F1(\waiting_N_141[26] ), 
    .COUT1(\STATE_OUT.n1242 ), .COUT0(\STATE_OUT.n3041 ));
  STATE_OUT_SLICE_15 \STATE_OUT.SLICE_15 ( .D1(\STATE_OUT.n3038 ), 
    .B1(\j[24] ), .D0(\STATE_OUT.n1238 ), .B0(\j[23] ), 
    .CIN0(\STATE_OUT.n1238 ), .CIN1(\STATE_OUT.n3038 ), 
    .F0(\waiting_N_141[23] ), .F1(\waiting_N_141[24] ), 
    .COUT1(\STATE_OUT.n1240 ), .COUT0(\STATE_OUT.n3038 ));
  STATE_OUT_SLICE_16 \STATE_OUT.SLICE_16 ( .D1(\STATE_OUT.n3035 ), 
    .B1(\j[22] ), .D0(\STATE_OUT.n1236 ), .B0(\j[21] ), 
    .CIN0(\STATE_OUT.n1236 ), .CIN1(\STATE_OUT.n3035 ), 
    .F0(\waiting_N_141[21] ), .F1(\waiting_N_141[22] ), 
    .COUT1(\STATE_OUT.n1238 ), .COUT0(\STATE_OUT.n3035 ));
  STATE_OUT_SLICE_17 \STATE_OUT.SLICE_17 ( .D1(\STATE_OUT.n3032 ), 
    .B1(\j[20] ), .D0(\STATE_OUT.n1234 ), .B0(\j[19] ), 
    .CIN0(\STATE_OUT.n1234 ), .CIN1(\STATE_OUT.n3032 ), 
    .F0(\waiting_N_141[19] ), .F1(\waiting_N_141[20] ), 
    .COUT1(\STATE_OUT.n1236 ), .COUT0(\STATE_OUT.n3032 ));
  STATE_OUT_SLICE_18 \STATE_OUT.SLICE_18 ( .D1(\STATE_OUT.n3050 ), 
    .D0(\STATE_OUT.n1246 ), .B0(\j[31] ), .CIN0(\STATE_OUT.n1246 ), 
    .CIN1(\STATE_OUT.n3050 ), .F0(\waiting_N_141[31] ), 
    .COUT0(\STATE_OUT.n3050 ));
  STATE_OUT_SLICE_19 \STATE_OUT.SLICE_19 ( .D1(\STATE_OUT.n3029 ), 
    .B1(\j[18] ), .D0(\STATE_OUT.n1232 ), .B0(\j[17] ), 
    .CIN0(\STATE_OUT.n1232 ), .CIN1(\STATE_OUT.n3029 ), 
    .F0(\waiting_N_141[17] ), .F1(\waiting_N_141[18] ), 
    .COUT1(\STATE_OUT.n1234 ), .COUT0(\STATE_OUT.n3029 ));
  STATE_OUT_SLICE_20 \STATE_OUT.SLICE_20 ( .D1(\STATE_OUT.n3026 ), 
    .B1(\j[16] ), .D0(\STATE_OUT.n1230 ), .B0(\j[15] ), 
    .CIN0(\STATE_OUT.n1230 ), .CIN1(\STATE_OUT.n3026 ), 
    .F0(\waiting_N_141[15] ), .F1(\waiting_N_141[16] ), 
    .COUT1(\STATE_OUT.n1232 ), .COUT0(\STATE_OUT.n3026 ));
  STATE_OUT_SLICE_21 \STATE_OUT.SLICE_21 ( .D1(\STATE_OUT.n3023 ), 
    .B1(\j[14] ), .D0(\STATE_OUT.n1228 ), .B0(\j[13] ), 
    .CIN0(\STATE_OUT.n1228 ), .CIN1(\STATE_OUT.n3023 ), 
    .F0(\waiting_N_141[13] ), .F1(\waiting_N_141[14] ), 
    .COUT1(\STATE_OUT.n1230 ), .COUT0(\STATE_OUT.n3023 ));
  STATE_OUT_SLICE_22 \STATE_OUT.SLICE_22 ( .D1(\STATE_OUT.n3020 ), 
    .B1(\j[12] ), .D0(\STATE_OUT.n1226 ), .B0(\j[11] ), 
    .CIN0(\STATE_OUT.n1226 ), .CIN1(\STATE_OUT.n3020 ), 
    .F0(\waiting_N_141[11] ), .F1(\waiting_N_141[12] ), 
    .COUT1(\STATE_OUT.n1228 ), .COUT0(\STATE_OUT.n3020 ));
  STATE_OUT_SLICE_23 \STATE_OUT.SLICE_23 ( .D1(\STATE_OUT.n3017 ), 
    .B1(\j[10] ), .D0(\STATE_OUT.n1224 ), .B0(\j[9] ), 
    .CIN0(\STATE_OUT.n1224 ), .CIN1(\STATE_OUT.n3017 ), 
    .F0(\waiting_N_141[9] ), .F1(\waiting_N_141[10] ), 
    .COUT1(\STATE_OUT.n1226 ), .COUT0(\STATE_OUT.n3017 ));
  STATE_OUT_SLICE_24 \STATE_OUT.SLICE_24 ( .D1(\STATE_OUT.n3014 ), .B1(\j[8] ), 
    .D0(\STATE_OUT.n1222 ), .B0(\j[7] ), .CIN0(\STATE_OUT.n1222 ), 
    .CIN1(\STATE_OUT.n3014 ), .F0(\waiting_N_141[7] ), .F1(\waiting_N_141[8] ), 
    .COUT1(\STATE_OUT.n1224 ), .COUT0(\STATE_OUT.n3014 ));
  STATE_OUT_SLICE_25 \STATE_OUT.SLICE_25 ( .D1(\STATE_OUT.n3011 ), .B1(\j[6] ), 
    .D0(\STATE_OUT.n1220 ), .B0(\j[5] ), .CIN0(\STATE_OUT.n1220 ), 
    .CIN1(\STATE_OUT.n3011 ), .F0(\waiting_N_141[5] ), .F1(\waiting_N_141[6] ), 
    .COUT1(\STATE_OUT.n1222 ), .COUT0(\STATE_OUT.n3011 ));
  STATE_OUT_SLICE_26 \STATE_OUT.SLICE_26 ( .D1(\STATE_OUT.n3047 ), 
    .B1(\j[30] ), .D0(\STATE_OUT.n1244 ), .B0(\j[29] ), 
    .CIN0(\STATE_OUT.n1244 ), .CIN1(\STATE_OUT.n3047 ), 
    .F0(\waiting_N_141[29] ), .F1(\waiting_N_141[30] ), 
    .COUT1(\STATE_OUT.n1246 ), .COUT0(\STATE_OUT.n3047 ));
  STATE_OUT_serial_SLICE_27 \STATE_OUT.serial.SLICE_27 ( 
    .D1(\STATE_OUT.serial.n3107 ), .D0(\STATE_OUT.serial.n1213 ), 
    .B0(\STATE_OUT.serial.j[31] ), .CIN0(\STATE_OUT.serial.n1213 ), 
    .CIN1(\STATE_OUT.serial.n3107 ), .F0(n135), 
    .COUT0(\STATE_OUT.serial.n3107 ));
  STATE_OUT_serial_SLICE_28 \STATE_OUT.serial.SLICE_28 ( 
    .D1(\STATE_OUT.serial.n3104 ), .B1(\STATE_OUT.serial.j[30] ), 
    .D0(\STATE_OUT.serial.n1211 ), .B0(\STATE_OUT.serial.j[29] ), 
    .CIN0(\STATE_OUT.serial.n1211 ), .CIN1(\STATE_OUT.serial.n3104 ), 
    .F0(n137), .F1(n136), .COUT1(\STATE_OUT.serial.n1213 ), 
    .COUT0(\STATE_OUT.serial.n3104 ));
  STATE_OUT_serial_SLICE_29 \STATE_OUT.serial.SLICE_29 ( 
    .D1(\STATE_OUT.serial.n3074 ), .B1(\STATE_OUT.serial.j[10] ), 
    .D0(\STATE_OUT.serial.n1191 ), .B0(\STATE_OUT.serial.j[9] ), 
    .CIN0(\STATE_OUT.serial.n1191 ), .CIN1(\STATE_OUT.serial.n3074 ), 
    .F0(n157), .F1(n156), .COUT1(\STATE_OUT.serial.n1193 ), 
    .COUT0(\STATE_OUT.serial.n3074 ));
  STATE_OUT_serial_SLICE_30 \STATE_OUT.serial.SLICE_30 ( 
    .D1(\STATE_OUT.serial.n3101 ), .B1(\STATE_OUT.serial.j[28] ), 
    .D0(\STATE_OUT.serial.n1209 ), .B0(\STATE_OUT.serial.j[27] ), 
    .CIN0(\STATE_OUT.serial.n1209 ), .CIN1(\STATE_OUT.serial.n3101 ), 
    .F0(n139), .F1(n138), .COUT1(\STATE_OUT.serial.n1211 ), 
    .COUT0(\STATE_OUT.serial.n3101 ));
  STATE_OUT_serial_SLICE_31 \STATE_OUT.serial.SLICE_31 ( 
    .D1(\STATE_OUT.serial.n3098 ), .B1(\STATE_OUT.serial.j[26] ), 
    .D0(\STATE_OUT.serial.n1207 ), .B0(\STATE_OUT.serial.j[25] ), 
    .CIN0(\STATE_OUT.serial.n1207 ), .CIN1(\STATE_OUT.serial.n3098 ), 
    .F0(n141), .F1(n140), .COUT1(\STATE_OUT.serial.n1209 ), 
    .COUT0(\STATE_OUT.serial.n3098 ));
  STATE_OUT_serial_SLICE_32 \STATE_OUT.serial.SLICE_32 ( 
    .D1(\STATE_OUT.serial.n3095 ), .B1(\STATE_OUT.serial.j[24] ), 
    .D0(\STATE_OUT.serial.n1205 ), .B0(\STATE_OUT.serial.j[23] ), 
    .CIN0(\STATE_OUT.serial.n1205 ), .CIN1(\STATE_OUT.serial.n3095 ), 
    .F0(n143), .F1(n142), .COUT1(\STATE_OUT.serial.n1207 ), 
    .COUT0(\STATE_OUT.serial.n3095 ));
  STATE_OUT_serial_SLICE_33 \STATE_OUT.serial.SLICE_33 ( 
    .D1(\STATE_OUT.serial.n3092 ), .B1(\STATE_OUT.serial.j[22] ), 
    .D0(\STATE_OUT.serial.n1203 ), .B0(\STATE_OUT.serial.j[21] ), 
    .CIN0(\STATE_OUT.serial.n1203 ), .CIN1(\STATE_OUT.serial.n3092 ), 
    .F0(n145), .F1(n144), .COUT1(\STATE_OUT.serial.n1205 ), 
    .COUT0(\STATE_OUT.serial.n3092 ));
  STATE_OUT_serial_SLICE_34 \STATE_OUT.serial.SLICE_34 ( 
    .D1(\STATE_OUT.serial.n3065 ), .B1(\STATE_OUT.serial.j[4] ), 
    .D0(\STATE_OUT.serial.n1185 ), .B0(\STATE_OUT.serial.j[3] ), 
    .CIN0(\STATE_OUT.serial.n1185 ), .CIN1(\STATE_OUT.serial.n3065 ), 
    .F0(n163), .F1(n162), .COUT1(\STATE_OUT.serial.n1187 ), 
    .COUT0(\STATE_OUT.serial.n3065 ));
  STATE_OUT_serial_SLICE_35 \STATE_OUT.serial.SLICE_35 ( 
    .D1(\STATE_OUT.serial.n3089 ), .B1(\STATE_OUT.serial.j[20] ), 
    .D0(\STATE_OUT.serial.n1201 ), .B0(\STATE_OUT.serial.j[19] ), 
    .CIN0(\STATE_OUT.serial.n1201 ), .CIN1(\STATE_OUT.serial.n3089 ), 
    .F0(n147), .F1(n146), .COUT1(\STATE_OUT.serial.n1203 ), 
    .COUT0(\STATE_OUT.serial.n3089 ));
  STATE_OUT_serial_SLICE_36 \STATE_OUT.serial.SLICE_36 ( 
    .DI0(\STATE_OUT.serial.n167[1] ), .D1(\STATE_OUT.serial.n3062 ), 
    .B1(\STATE_OUT.serial.j[2] ), .D0(\STATE_OUT.serial.n1183 ), 
    .B0(\STATE_OUT.serial.j[1] ), .LSR(n121), .CLK(SERCLK_OUT_c), 
    .CIN0(\STATE_OUT.serial.n1183 ), .CIN1(\STATE_OUT.serial.n3062 ), 
    .Q0(\STATE_OUT.serial.j[1] ), .F0(\STATE_OUT.serial.n167[1] ), .F1(n164), 
    .COUT1(\STATE_OUT.serial.n1185 ), .COUT0(\STATE_OUT.serial.n3062 ));
  STATE_OUT_serial_SLICE_37 \STATE_OUT.serial.SLICE_37 ( 
    .D1(\STATE_OUT.serial.n3086 ), .B1(\STATE_OUT.serial.j[18] ), 
    .D0(\STATE_OUT.serial.n1199 ), .B0(\STATE_OUT.serial.j[17] ), 
    .CIN0(\STATE_OUT.serial.n1199 ), .CIN1(\STATE_OUT.serial.n3086 ), 
    .F0(n149), .F1(n148), .COUT1(\STATE_OUT.serial.n1201 ), 
    .COUT0(\STATE_OUT.serial.n3086 ));
  STATE_OUT_serial_SLICE_38 \STATE_OUT.serial.SLICE_38 ( 
    .D1(\STATE_OUT.serial.n3083 ), .B1(\STATE_OUT.serial.j[16] ), 
    .D0(\STATE_OUT.serial.n1197 ), .B0(\STATE_OUT.serial.j[15] ), 
    .CIN0(\STATE_OUT.serial.n1197 ), .CIN1(\STATE_OUT.serial.n3083 ), 
    .F0(n151), .F1(n150), .COUT1(\STATE_OUT.serial.n1199 ), 
    .COUT0(\STATE_OUT.serial.n3083 ));
  STATE_OUT_serial_SLICE_39 \STATE_OUT.serial.SLICE_39 ( 
    .D1(\STATE_OUT.serial.n3080 ), .B1(\STATE_OUT.serial.j[14] ), 
    .D0(\STATE_OUT.serial.n1195 ), .B0(\STATE_OUT.serial.j[13] ), 
    .CIN0(\STATE_OUT.serial.n1195 ), .CIN1(\STATE_OUT.serial.n3080 ), 
    .F0(n153), .F1(n152), .COUT1(\STATE_OUT.serial.n1197 ), 
    .COUT0(\STATE_OUT.serial.n3080 ));
  STATE_OUT_serial_SLICE_40 \STATE_OUT.serial.SLICE_40 ( 
    .D1(\STATE_OUT.serial.n3068 ), .B1(\STATE_OUT.serial.j[6] ), 
    .D0(\STATE_OUT.serial.n1187 ), .B0(\STATE_OUT.serial.j[5] ), 
    .CIN0(\STATE_OUT.serial.n1187 ), .CIN1(\STATE_OUT.serial.n3068 ), 
    .F0(n161), .F1(n160), .COUT1(\STATE_OUT.serial.n1189 ), 
    .COUT0(\STATE_OUT.serial.n3068 ));
  STATE_OUT_serial_SLICE_41 \STATE_OUT.serial.SLICE_41 ( 
    .D1(\STATE_OUT.serial.n3071 ), .B1(\STATE_OUT.serial.j[8] ), 
    .D0(\STATE_OUT.serial.n1189 ), .B0(\STATE_OUT.serial.j[7] ), 
    .CIN0(\STATE_OUT.serial.n1189 ), .CIN1(\STATE_OUT.serial.n3071 ), 
    .F0(n159), .F1(n158), .COUT1(\STATE_OUT.serial.n1191 ), 
    .COUT0(\STATE_OUT.serial.n3071 ));
  STATE_OUT_serial_SLICE_42 \STATE_OUT.serial.SLICE_42 ( 
    .D1(\STATE_OUT.serial.n3077 ), .B1(\STATE_OUT.serial.j[12] ), 
    .D0(\STATE_OUT.serial.n1193 ), .B0(\STATE_OUT.serial.j[11] ), 
    .CIN0(\STATE_OUT.serial.n1193 ), .CIN1(\STATE_OUT.serial.n3077 ), 
    .F0(n155), .F1(n154), .COUT1(\STATE_OUT.serial.n1195 ), 
    .COUT0(\STATE_OUT.serial.n3077 ));
  STATE_OUT_serial_SLICE_43 \STATE_OUT.serial.SLICE_43 ( 
    .DI1(\STATE_OUT.serial.n167[0] ), .D1(\STATE_OUT.serial.n3059 ), 
    .C1(VCC_net), .B1(\STATE_OUT.serial.j[0] ), .LSR(n121), .CLK(SERCLK_OUT_c), 
    .CIN1(\STATE_OUT.serial.n3059 ), .Q1(\STATE_OUT.serial.j[0] ), 
    .F1(\STATE_OUT.serial.n167[0] ), .COUT1(\STATE_OUT.serial.n1183 ), 
    .COUT0(\STATE_OUT.serial.n3059 ));
  SLICE_44 SLICE_44( .DI1(\debug_c_1$n1 ), .DI0(\debug_c_0$n0 ), .D1(n32), 
    .C1(n2169), .B1(debug_c_1), .A1(n1773), .D0(debug_c_0), 
    .C0(KEY_STATUS_c_0), .B0(n22), .A0(\Snext_1__N_1[0] ), .LSR(RESET_IN_c), 
    .CLK(SERCLK_OUT_c), .Q0(\Sreg[0] ), .Q1(\Sreg[1] ), .F0(\debug_c_0$n0 ), 
    .F1(\debug_c_1$n1 ));
  SLICE_46 SLICE_46( .DI1(n459), .DI0(n556), .D1(\state[0] ), .C1(RESET_IN_c), 
    .B1(\PREV_KEY[0] ), .A1(\state[1] ), .D0(\PREV_KEY[1] ), .B0(RESET_IN_c), 
    .A0(KEY_STATUS_c_1), .CLK(SERCLK_OUT_c), .Q0(\PREV_KEY[1] ), 
    .Q1(\PREV_KEY[0] ), .F0(n556), .F1(n459));
  keyboard_SLICE_48 \keyboard.SLICE_48 ( .DI1(\keyboard.nextState[0]$n3 ), 
    .DI0(\keyboard.nextState[1]$n2 ), .D1(\keyboard.counter[0] ), 
    .C1(\keyboard.n349 ), .B1(\keyboard.nextState[0] ), 
    .A1(\keyboard.counter[1] ), .D0(\state[0] ), .B0(\keyboard.n6_adj_277 ), 
    .CLK(SERCLK_OUT_c), .Q0(\state[1] ), .Q1(\state[0] ), 
    .F0(\keyboard.nextState[1]$n2 ), .F1(\keyboard.nextState[0]$n3 ));
  keyboard_SLICE_49 \keyboard.SLICE_49 ( .DI1(\keyboard.n13[1] ), 
    .DI0(\keyboard.n1 ), .D1(\keyboard.counter[0] ), 
    .C1(\keyboard.counter[1] ), .A0(\keyboard.counter[0] ), .CLK(KB_RECV_c), 
    .Q0(\keyboard.counter[0] ), .Q1(\keyboard.counter[1] ), .F0(\keyboard.n1 ), 
    .F1(\keyboard.n13[1] ));
  mainTimer_SLICE_53 \mainTimer.SLICE_53 ( 
    .DI1(\mainTimer.clkCont_17__N_20[16] ), 
    .DI0(\mainTimer.clkCont_17__N_20[17] ), 
    .B1(\mainTimer.clkCont_17__N_41[16] ), .A1(timeout_c), .B0(timeout_c), 
    .A0(\mainTimer.clkCont_17__N_41[17] ), .LSR(\mainTimer.clkCont_17__N_38 ), 
    .CLK(SERCLK_OUT_c), .Q0(\mainTimer.clkCont[17] ), 
    .Q1(\mainTimer.clkCont[16] ), .F0(\mainTimer.clkCont_17__N_20[17] ), 
    .F1(\mainTimer.clkCont_17__N_20[16] ));
  mainTimer_SLICE_55 \mainTimer.SLICE_55 ( 
    .DI1(\mainTimer.clkCont_17__N_20[14] ), 
    .DI0(\mainTimer.clkCont_17__N_20[15] ), .C1(timeout_c), 
    .A1(\mainTimer.clkCont_17__N_41[14] ), 
    .D0(\mainTimer.clkCont_17__N_41[15] ), .B0(timeout_c), 
    .LSR(\mainTimer.clkCont_17__N_38 ), .CLK(SERCLK_OUT_c), 
    .Q0(\mainTimer.clkCont[15] ), .Q1(\mainTimer.clkCont[14] ), 
    .F0(\mainTimer.clkCont_17__N_20[15] ), 
    .F1(\mainTimer.clkCont_17__N_20[14] ));
  mainTimer_SLICE_57 \mainTimer.SLICE_57 ( 
    .DI1(\mainTimer.clkCont_17__N_20[12] ), 
    .DI0(\mainTimer.clkCont_17__N_20[13] ), 
    .C1(\mainTimer.clkCont_17__N_41[12] ), .B1(timeout_c), 
    .D0(\mainTimer.clkCont_17__N_41[13] ), .A0(timeout_c), 
    .LSR(\mainTimer.clkCont_17__N_38 ), .CLK(SERCLK_OUT_c), 
    .Q0(\mainTimer.clkCont[13] ), .Q1(\mainTimer.clkCont[12] ), 
    .F0(\mainTimer.clkCont_17__N_20[13] ), 
    .F1(\mainTimer.clkCont_17__N_20[12] ));
  mainTimer_SLICE_59 \mainTimer.SLICE_59 ( 
    .DI1(\mainTimer.clkCont_17__N_20[10] ), 
    .DI0(\mainTimer.clkCont_17__N_20[11] ), .D1(timeout_c), 
    .C1(\mainTimer.clkCont_17__N_41[10] ), 
    .D0(\mainTimer.clkCont_17__N_41[11] ), .A0(timeout_c), 
    .LSR(\mainTimer.clkCont_17__N_38 ), .CLK(SERCLK_OUT_c), 
    .Q0(\mainTimer.clkCont[11] ), .Q1(\mainTimer.clkCont[10] ), 
    .F0(\mainTimer.clkCont_17__N_20[11] ), 
    .F1(\mainTimer.clkCont_17__N_20[10] ));
  mainTimer_SLICE_61 \mainTimer.SLICE_61 ( 
    .DI1(\mainTimer.clkCont_17__N_20[8] ), 
    .DI0(\mainTimer.clkCont_17__N_20[9] ), .B1(timeout_c), 
    .A1(\mainTimer.clkCont_17__N_41[8] ), .D0(\mainTimer.clkCont_17__N_41[9] ), 
    .A0(timeout_c), .LSR(\mainTimer.clkCont_17__N_38 ), .CLK(SERCLK_OUT_c), 
    .Q0(\mainTimer.clkCont[9] ), .Q1(\mainTimer.clkCont[8] ), 
    .F0(\mainTimer.clkCont_17__N_20[9] ), .F1(\mainTimer.clkCont_17__N_20[8] ));
  mainTimer_SLICE_63 \mainTimer.SLICE_63 ( 
    .DI1(\mainTimer.clkCont_17__N_20[6] ), 
    .DI0(\mainTimer.clkCont_17__N_20[7] ), 
    .D1(\mainTimer.clkCont_17__N_41[6] ), .C1(timeout_c), 
    .D0(\mainTimer.clkCont_17__N_41[7] ), .B0(timeout_c), 
    .LSR(\mainTimer.clkCont_17__N_38 ), .CLK(SERCLK_OUT_c), 
    .Q0(\mainTimer.clkCont[7] ), .Q1(\mainTimer.clkCont[6] ), 
    .F0(\mainTimer.clkCont_17__N_20[7] ), .F1(\mainTimer.clkCont_17__N_20[6] ));
  mainTimer_SLICE_65 \mainTimer.SLICE_65 ( 
    .DI1(\mainTimer.clkCont_17__N_20[4] ), 
    .DI0(\mainTimer.clkCont_17__N_20[5] ), .D1(timeout_c), 
    .B1(\mainTimer.clkCont_17__N_41[4] ), .C0(\mainTimer.clkCont_17__N_41[5] ), 
    .A0(timeout_c), .LSR(\mainTimer.clkCont_17__N_38 ), .CLK(SERCLK_OUT_c), 
    .Q0(\mainTimer.clkCont[5] ), .Q1(\mainTimer.clkCont[4] ), 
    .F0(\mainTimer.clkCont_17__N_20[5] ), .F1(\mainTimer.clkCont_17__N_20[4] ));
  mainTimer_SLICE_67 \mainTimer.SLICE_67 ( 
    .DI1(\mainTimer.clkCont_17__N_20[2] ), 
    .DI0(\mainTimer.clkCont_17__N_20[3] ), 
    .D1(\mainTimer.clkCont_17__N_41[2] ), .B1(timeout_c), 
    .B0(\mainTimer.clkCont_17__N_41[3] ), .A0(timeout_c), 
    .LSR(\mainTimer.clkCont_17__N_38 ), .CLK(SERCLK_OUT_c), 
    .Q0(\mainTimer.clkCont[3] ), .Q1(\mainTimer.clkCont[2] ), 
    .F0(\mainTimer.clkCont_17__N_20[3] ), .F1(\mainTimer.clkCont_17__N_20[2] ));
  mainTimer_SLICE_69 \mainTimer.SLICE_69 ( 
    .DI1(\mainTimer.clkCont_17__N_20[0] ), 
    .DI0(\mainTimer.clkCont_17__N_20[1] ), 
    .C1(\mainTimer.clkCont_17__N_41[0] ), .B1(timeout_c), 
    .B0(\mainTimer.clkCont_17__N_41[1] ), .A0(timeout_c), 
    .LSR(\mainTimer.clkCont_17__N_38 ), .CLK(SERCLK_OUT_c), 
    .Q0(\mainTimer.clkCont[1] ), .Q1(\mainTimer.clkCont[0] ), 
    .F0(\mainTimer.clkCont_17__N_20[1] ), .F1(\mainTimer.clkCont_17__N_20[0] ));
  SLICE_71 SLICE_71( .DI1(n527), .DI0(n525), .D1(waiting_N_140), .C1(\j[17] ), 
    .B1(waiting), .A1(\waiting_N_141[17] ), .D0(\waiting_N_141[16] ), 
    .C0(waiting_N_140), .B0(waiting), .A0(\j[16] ), .CLK(SERCLK_OUT_c), 
    .Q0(\j[16] ), .Q1(\j[17] ), .F0(n525), .F1(n527));
  SLICE_72 SLICE_72( .DI1(n545), .DI0(n547), .D1(waiting_N_140), .C1(\j[26] ), 
    .B1(\waiting_N_141[26] ), .A1(waiting), .D0(\j[27] ), .C0(waiting_N_140), 
    .B0(waiting), .A0(\waiting_N_141[27] ), .CLK(SERCLK_OUT_c), .Q0(\j[27] ), 
    .Q1(\j[26] ), .F0(n547), .F1(n545));
  SLICE_74 SLICE_74( .DI1(n541), .DI0(n543), .D1(waiting), 
    .C1(\waiting_N_141[24] ), .B1(\j[24] ), .A1(waiting_N_140), 
    .D0(\waiting_N_141[25] ), .C0(waiting), .B0(waiting_N_140), .A0(\j[25] ), 
    .CLK(SERCLK_OUT_c), .Q0(\j[25] ), .Q1(\j[24] ), .F0(n543), .F1(n541));
  SLICE_77 SLICE_77( .DI1(n531), .DI0(n529), .D1(waiting_N_140), .C1(\j[19] ), 
    .B1(\waiting_N_141[19] ), .A1(waiting), .D0(waiting), 
    .C0(\waiting_N_141[18] ), .B0(\j[18] ), .A0(waiting_N_140), 
    .CLK(SERCLK_OUT_c), .Q0(\j[18] ), .Q1(\j[19] ), .F0(n529), .F1(n531));
  SLICE_79 SLICE_79( .DI1(n535), .DI0(n533), .D1(\waiting_N_141[21] ), 
    .C1(\j[21] ), .B1(waiting), .A1(waiting_N_140), .D0(waiting_N_140), 
    .C0(\waiting_N_141[20] ), .B0(waiting), .A0(\j[20] ), .CLK(SERCLK_OUT_c), 
    .Q0(\j[20] ), .Q1(\j[21] ), .F0(n533), .F1(n535));
  SLICE_81 SLICE_81( .DI1(n551), .DI0(n549), .D1(\j[29] ), .C1(waiting_N_140), 
    .B1(waiting), .A1(\waiting_N_141[29] ), .D0(waiting), 
    .C0(\waiting_N_141[28] ), .B0(waiting_N_140), .A0(\j[28] ), 
    .CLK(SERCLK_OUT_c), .Q0(\j[28] ), .Q1(\j[29] ), .F0(n549), .F1(n551));
  SLICE_83 SLICE_83( .DI1(n555), .DI0(n553), .D1(\j[31] ), .C1(waiting), 
    .B1(waiting_N_140), .A1(\waiting_N_141[31] ), .D0(\j[30] ), .C0(waiting), 
    .B0(\waiting_N_141[30] ), .A0(waiting_N_140), .CLK(SERCLK_OUT_c), 
    .Q0(\j[30] ), .Q1(\j[31] ), .F0(n553), .F1(n555));
  SLICE_84 SLICE_84( .DI1(n539), .DI0(n537), .D1(\j[23] ), .C1(waiting_N_140), 
    .B1(waiting), .A1(\waiting_N_141[23] ), .D0(waiting_N_140), .C0(waiting), 
    .B0(\waiting_N_141[22] ), .A0(\j[22] ), .CLK(SERCLK_OUT_c), .Q0(\j[22] ), 
    .Q1(\j[23] ), .F0(n537), .F1(n539));
  STATE_OUT_SLICE_87 \STATE_OUT.SLICE_87 ( .DI1(\STATE_OUT.n21[1] ), 
    .DI0(\STATE_OUT.n21[0] ), .D1(\STATE_OUT.cont[1] ), 
    .A1(\STATE_OUT.cont[0] ), .B0(\STATE_OUT.cont[0] ), 
    .LSR(\STATE_OUT.waiting_N_136 ), .CLK(SERCLK_OUT_c), 
    .Q0(\STATE_OUT.cont[0] ), .Q1(\STATE_OUT.cont[1] ), 
    .F0(\STATE_OUT.n21[0] ), .F1(\STATE_OUT.n21[1] ));
  SLICE_89 SLICE_89( .DI1(n469), .DI0(n515), .D1(\waiting_N_141[10] ), 
    .C1(waiting_N_140), .B1(waiting), .A1(\j[10] ), .D0(\waiting_N_141[11] ), 
    .C0(waiting), .B0(waiting_N_140), .A0(\j[11] ), .CLK(SERCLK_OUT_c), 
    .Q0(\j[11] ), .Q1(\j[10] ), .F0(n515), .F1(n469));
  SLICE_90 SLICE_90( .DI1(n458), .DI0(n456), .D1(\waiting_N_141[8] ), 
    .C1(waiting_N_140), .B1(waiting), .A1(\j[8] ), .D0(\waiting_N_141[9] ), 
    .C0(waiting), .B0(waiting_N_140), .A0(\j[9] ), .CLK(SERCLK_OUT_c), 
    .Q0(\j[9] ), .Q1(\j[8] ), .F0(n456), .F1(n458));
  SLICE_92 SLICE_92( .DI1(n463), .DI0(n461), .D1(waiting), .C1(\j[6] ), 
    .B1(\waiting_N_141[6] ), .A1(waiting_N_140), .D0(waiting_N_140), 
    .C0(waiting), .B0(\waiting_N_141[7] ), .A0(\j[7] ), .CLK(SERCLK_OUT_c), 
    .Q0(\j[7] ), .Q1(\j[6] ), .F0(n461), .F1(n463));
  SLICE_94 SLICE_94( .DI1(n467), .DI0(n465), .D1(waiting_N_140), .C1(\j[4] ), 
    .B1(\waiting_N_141[4] ), .A1(waiting), .D0(waiting), .C0(\j[5] ), 
    .B0(\waiting_N_141[5] ), .A0(waiting_N_140), .CLK(SERCLK_OUT_c), 
    .Q0(\j[5] ), .Q1(\j[4] ), .F0(n465), .F1(n467));
  SLICE_97 SLICE_97( .DI1(n473), .DI0(n471), .D1(waiting), .C1(waiting_N_140), 
    .B1(\waiting_N_141[2] ), .A1(\j[2] ), .D0(waiting), .C0(\j[3] ), 
    .B0(waiting_N_140), .A0(\waiting_N_141[3] ), .CLK(SERCLK_OUT_c), 
    .Q0(\j[3] ), .Q1(\j[2] ), .F0(n471), .F1(n473));
  SLICE_99 SLICE_99( .DI1(n523), .DI0(n521), .D1(waiting), .C1(waiting_N_140), 
    .B1(\waiting_N_141[15] ), .A1(\j[15] ), .D0(waiting_N_140), .C0(waiting), 
    .B0(\waiting_N_141[14] ), .A0(\j[14] ), .CLK(SERCLK_OUT_c), .Q0(\j[14] ), 
    .Q1(\j[15] ), .F0(n521), .F1(n523));
  SLICE_100 SLICE_100( .DI1(n519), .DI0(n517), .D1(\waiting_N_141[13] ), 
    .C1(\j[13] ), .B1(waiting), .A1(waiting_N_140), .D0(waiting_N_140), 
    .C0(\waiting_N_141[12] ), .B0(\j[12] ), .A0(waiting), .CLK(SERCLK_OUT_c), 
    .Q0(\j[12] ), .Q1(\j[13] ), .F0(n517), .F1(n519));
  STATE_OUT_SLICE_103 \STATE_OUT.SLICE_103 ( .DI1(\STATE_OUT.n21[3] ), 
    .DI0(\STATE_OUT.n21[2] ), .D1(\STATE_OUT.cont[3] ), 
    .C1(\STATE_OUT.cont[1] ), .B1(\STATE_OUT.cont[2] ), 
    .A1(\STATE_OUT.cont[0] ), .C0(\STATE_OUT.cont[2] ), 
    .B0(\STATE_OUT.cont[0] ), .A0(\STATE_OUT.cont[1] ), 
    .LSR(\STATE_OUT.waiting_N_136 ), .CLK(SERCLK_OUT_c), 
    .Q0(\STATE_OUT.cont[2] ), .Q1(\STATE_OUT.cont[3] ), 
    .F0(\STATE_OUT.n21[2] ), .F1(\STATE_OUT.n21[3] ));
  SLICE_106 SLICE_106( .DI1(n486), .DI0(n485), .C1(n146), .A1(n121), .D0(n121), 
    .B0(n145), .CLK(SERCLK_OUT_c), .Q0(\STATE_OUT.serial.j[21] ), 
    .Q1(\STATE_OUT.serial.j[20] ), .F0(n485), .F1(n486));
  SLICE_108 SLICE_108( .DI1(n483), .DI0(n484), .B1(n121), .A1(n143), .C0(n121), 
    .A0(n144), .CLK(SERCLK_OUT_c), .Q0(\STATE_OUT.serial.j[22] ), 
    .Q1(\STATE_OUT.serial.j[23] ), .F0(n484), .F1(n483));
  SLICE_109 SLICE_109( .DI1(\SENSOR1_IN_c.sig_001.FeedThruLUT ), 
    .DI0(\SENSOR2_IN_c.sig_000.FeedThruLUT ), .D1(SENSOR1_IN_c), 
    .B0(SENSOR2_IN_c), .CE(\STATE_OUT.n120 ), .CLK(SERCLK_OUT_c), 
    .Q0(\STATE_OUT.serial.temp_data_out[0] ), 
    .Q1(\STATE_OUT.serial.temp_data_out[1] ), 
    .F0(\SENSOR2_IN_c.sig_000.FeedThruLUT ), 
    .F1(\SENSOR1_IN_c.sig_001.FeedThruLUT ));
  SLICE_111 SLICE_111( .DI1(n481), .DI0(n482), .C1(n141), .B1(n121), .C0(n121), 
    .B0(n142), .CLK(SERCLK_OUT_c), .Q0(\STATE_OUT.serial.j[24] ), 
    .Q1(\STATE_OUT.serial.j[25] ), .F0(n482), .F1(n481));
  SLICE_113 SLICE_113( .DI1(n479), .DI0(n480), .B1(n139), .A1(n121), .D0(n140), 
    .B0(n121), .CLK(SERCLK_OUT_c), .Q0(\STATE_OUT.serial.j[26] ), 
    .Q1(\STATE_OUT.serial.j[27] ), .F0(n480), .F1(n479));
  SLICE_115 SLICE_115( .DI1(n477), .DI0(n478), .C1(n121), .A1(n137), .D0(n138), 
    .B0(n121), .CLK(SERCLK_OUT_c), .Q0(\STATE_OUT.serial.j[28] ), 
    .Q1(\STATE_OUT.serial.j[29] ), .F0(n478), .F1(n477));
  SLICE_117 SLICE_117( .DI1(n475), .DI0(n476), .D1(init), .C1(n135), .C0(n121), 
    .A0(n136), .CLK(SERCLK_OUT_c), .Q0(\STATE_OUT.serial.j[30] ), 
    .Q1(\STATE_OUT.serial.j[31] ), .F0(n476), .F1(n475));
  SLICE_121 SLICE_121( .DI1(n503), .DI0(n504), .D1(n163), .B1(n121), .C0(n121), 
    .B0(n164), .CLK(SERCLK_OUT_c), .Q0(\STATE_OUT.serial.j[2] ), 
    .Q1(\STATE_OUT.serial.j[3] ), .F0(n504), .F1(n503));
  SLICE_123 SLICE_123( .DI1(n501), .DI0(n502), .C1(n161), .B1(n121), .C0(n121), 
    .B0(n162), .CLK(SERCLK_OUT_c), .Q0(\STATE_OUT.serial.j[4] ), 
    .Q1(\STATE_OUT.serial.j[5] ), .F0(n502), .F1(n501));
  SLICE_125 SLICE_125( .DI1(n499), .DI0(n500), .D1(n121), .B1(n159), .C0(n121), 
    .A0(n160), .CLK(SERCLK_OUT_c), .Q0(\STATE_OUT.serial.j[6] ), 
    .Q1(\STATE_OUT.serial.j[7] ), .F0(n500), .F1(n499));
  SLICE_127 SLICE_127( .DI1(n497), .DI0(n498), .C1(n121), .A1(n157), .D0(n121), 
    .B0(n158), .CLK(SERCLK_OUT_c), .Q0(\STATE_OUT.serial.j[8] ), 
    .Q1(\STATE_OUT.serial.j[9] ), .F0(n498), .F1(n497));
  SLICE_129 SLICE_129( .DI1(n495), .DI0(n496), .D1(n155), .A1(n121), .D0(n121), 
    .A0(n156), .CLK(SERCLK_OUT_c), .Q0(\STATE_OUT.serial.j[10] ), 
    .Q1(\STATE_OUT.serial.j[11] ), .F0(n496), .F1(n495));
  SLICE_131 SLICE_131( .DI1(n493), .DI0(n494), .D1(n153), .A1(n121), .C0(n154), 
    .B0(n121), .CLK(SERCLK_OUT_c), .Q0(\STATE_OUT.serial.j[12] ), 
    .Q1(\STATE_OUT.serial.j[13] ), .F0(n494), .F1(n493));
  SLICE_133 SLICE_133( .DI1(n491), .DI0(n492), .B1(n151), .A1(n121), .D0(n121), 
    .C0(n152), .CLK(SERCLK_OUT_c), .Q0(\STATE_OUT.serial.j[14] ), 
    .Q1(\STATE_OUT.serial.j[15] ), .F0(n492), .F1(n491));
  SLICE_135 SLICE_135( .DI1(n489), .DI0(n490), .C1(n149), .A1(n121), .B0(n121), 
    .A0(n150), .CLK(SERCLK_OUT_c), .Q0(\STATE_OUT.serial.j[16] ), 
    .Q1(\STATE_OUT.serial.j[17] ), .F0(n490), .F1(n489));
  SLICE_137 SLICE_137( .DI1(n487), .DI0(n488), .C1(n121), .B1(n147), .D0(n121), 
    .C0(n148), .CLK(SERCLK_OUT_c), .Q0(\STATE_OUT.serial.j[18] ), 
    .Q1(\STATE_OUT.serial.j[19] ), .F0(n488), .F1(n487));
  SLICE_140 SLICE_140( .DI0(\Sreg[1].sig_002.FeedThruLUT ), .D0(\Sreg[1] ), 
    .CE(\STATE_OUT.n120 ), .LSR(\STATE_OUT.serial.n453 ), .CLK(SERCLK_OUT_c), 
    .Q0(\STATE_OUT.serial.temp_data_out[3] ), 
    .F0(\Sreg[1].sig_002.FeedThruLUT ));
  keyboard_SLICE_142 \keyboard.SLICE_142 ( .C1(\keyboard.n6_adj_277 ), 
    .A1(\state[0] ), .D0(\keyboard.nextState[1] ), .C0(\keyboard.counter[0] ), 
    .B0(\keyboard.counter[1] ), .A0(\state[1] ), .F0(\keyboard.n6_adj_277 ), 
    .F1(\keyboard.nextState[1] ));
  SLICE_144 SLICE_144( .D1(\Snext_1__N_7[0] ), .C1(n2532), .B1(\Sreg[1] ), 
    .A1(\Snext_1__N_11[0] ), .D0(\Sreg[0] ), .C0(\Snext_1__N_7[0] ), 
    .B0(\Sreg[1] ), .A0(timeout_c), .F0(n2532), .F1(\Snext_1__N_1[0] ));
  keyboard_SLICE_146 \keyboard.SLICE_146 ( .D1(\keyboard.actualKey[3][1] ), 
    .C1(\keyboard.n6 ), .B1(\keyboard.n1970 ), .A1(\keyboard.actualKey[2][1] ), 
    .C0(\keyboard.actualKey[3][0] ), .A0(\keyboard.actualKey[1][0] ), 
    .F0(\keyboard.n6 ), .F1(\KEY_STATUS_1__N_254[1] ));
  keyboard_SLICE_147 \keyboard.SLICE_147 ( .D1(\keyboard.actualKey[3][0] ), 
    .C1(\keyboard.n1620 ), .B1(KB_IN_c_0), .D0(\state[0] ), .C0(\state[1] ), 
    .B0(\keyboard.counter[0] ), .A0(\keyboard.counter[1] ), 
    .F0(\keyboard.n1620 ), .F1(\keyboard.actualKey[3][0] ));
  keyboard_SLICE_148 \keyboard.SLICE_148 ( .D1(\keyboard.actualKey[0][1] ), 
    .C1(\keyboard.actualKey[0][0] ), .B1(\keyboard.actualKey[1][1] ), 
    .A1(\keyboard.actualKey[2][0] ), .C0(KB_IN_c_0), 
    .B0(\keyboard.actualKey[0][0] ), .A0(\keyboard.n1618 ), 
    .F0(\keyboard.actualKey[0][0] ), .F1(\keyboard.n1970 ));
  keyboard_SLICE_149 \keyboard.SLICE_149 ( .D1(KB_IN_c_1), 
    .C1(\keyboard.n1618 ), .A1(\keyboard.actualKey[0][1] ), .D0(\state[0] ), 
    .C0(\keyboard.counter[1] ), .B0(\keyboard.counter[0] ), .A0(\state[1] ), 
    .F0(\keyboard.n1618 ), .F1(\keyboard.actualKey[0][1] ));
  keyboard_SLICE_151 \keyboard.SLICE_151 ( .C0(\keyboard.actualKey[3][1] ), 
    .B0(KB_IN_c_1), .A0(\keyboard.n1620 ), .F0(\keyboard.actualKey[3][1] ));
  mainTimer_SLICE_152 \mainTimer.SLICE_152 ( .C1(TIMER_EN), .C0(n15), 
    .B0(n1771), .A0(TIMER_EN), .F0(TIMER_EN), 
    .F1(\mainTimer.clkCont_17__N_38 ));
  SLICE_154 SLICE_154( .D1(KEY_STATUS_c_0), .C1(n1755), .B1(\Sreg[0] ), 
    .A1(timeout_c), .D0(n1958), .C0(\Sreg[1] ), .B0(\KEY_STATUS_1__N_254[1] ), 
    .A0(KEY_STATUS_c_0), .F0(n1755), .F1(n32));
  keyboard_SLICE_156 \keyboard.SLICE_156 ( .D1(timeout_c), .C1(KEY_STATUS_c_0), 
    .B1(\Sreg[1] ), .A1(\Sreg[0] ), .B0(\state[1] ), .A0(\state[0] ), 
    .F0(KEY_STATUS_c_0), .F1(n1771));
  SLICE_157 SLICE_157( .D1(KEY_STATUS_c_0), .C1(timeout_c), 
    .B1(\KEY_STATUS_1__N_254[1] ), .A1(\Sreg[0] ), .D0(n22), 
    .C0(\Snext_1__N_1[0] ), .B0(KEY_STATUS_c_0), .A0(debug_c_0), 
    .F0(debug_c_0), .F1(n1773));
  keyboard_SLICE_160 \keyboard.SLICE_160 ( .D1(KB_IN_c_1), 
    .C1(\keyboard.n1621 ), .A1(\keyboard.actualKey[2][1] ), 
    .D0(\keyboard.counter[0] ), .C0(\state[0] ), .B0(\keyboard.counter[1] ), 
    .A0(\state[1] ), .F0(\keyboard.n1621 ), .F1(\keyboard.actualKey[2][1] ));
  keyboard_SLICE_162 \keyboard.SLICE_162 ( .D1(\keyboard.nextState[0] ), 
    .C1(\keyboard.n349 ), .B1(\keyboard.counter[0] ), 
    .A1(\keyboard.counter[1] ), .D0(\state[0] ), .C0(\state[1] ), 
    .F0(\keyboard.n349 ), .F1(\keyboard.nextState[0] ));
  keyboard_SLICE_164 \keyboard.SLICE_164 ( .D1(\keyboard.actualKey[1][1] ), 
    .C1(\keyboard.n851 ), .B1(KB_IN_c_1), .D0(\keyboard.counter[0] ), 
    .C0(\state[1] ), .B0(\state[0] ), .A0(\keyboard.counter[1] ), 
    .F0(\keyboard.n851 ), .F1(\keyboard.actualKey[1][1] ));
  SLICE_166 SLICE_166( .D1(KEY_STATUS_c_0), .C1(n3), .B1(SENSOR1_IN_c), 
    .A1(\Snext_1__N_7[0] ), .B0(\PREV_KEY[1] ), .A0(\PREV_KEY[0] ), .F0(n3), 
    .F1(\Snext_1__N_11[0] ));
  SLICE_168 SLICE_168( .D1(timeout_c), .C1(\Snext_1__N_7[0] ), .B1(\Sreg[0] ), 
    .A1(\Sreg[1] ), .D0(\state[0] ), .C0(\KEY_STATUS_1__N_254[1] ), 
    .A0(\state[1] ), .F0(\Snext_1__N_7[0] ), .F1(n15));
  mainTimer_SLICE_170 \mainTimer.SLICE_170 ( .D1(\mainTimer.clkCont[12] ), 
    .C1(\mainTimer.n1968 ), .B1(\mainTimer.clkCont[10] ), 
    .D0(\mainTimer.clkCont[15] ), .C0(\mainTimer.clkCont[8] ), 
    .B0(\mainTimer.clkCont[14] ), .A0(\mainTimer.clkCont[0] ), 
    .F0(\mainTimer.n1968 ), .F1(\mainTimer.n17 ));
  mainTimer_SLICE_172 \mainTimer.SLICE_172 ( .DI1(\mainTimer.n2708 ), 
    .D1(\mainTimer.n8 ), .C1(\mainTimer.clkCont[9] ), .B1(\mainTimer.n7 ), 
    .A1(\mainTimer.clkCont[3] ), .D0(\mainTimer.clkCont[17] ), 
    .C0(\mainTimer.clkCont[13] ), .B0(timeout_c), .A0(\mainTimer.clkCont[7] ), 
    .LSR(\mainTimer.clkCont_17__N_38 ), .CLK(SERCLK_OUT_c), .Q1(timeout_c), 
    .F0(\mainTimer.n18 ), .F1(\mainTimer.n2708 ));
  mainTimer_SLICE_173 \mainTimer.SLICE_173 ( .D1(\mainTimer.n18 ), 
    .C1(\mainTimer.n19 ), .B1(\mainTimer.n17 ), .A1(\mainTimer.clkCont[6] ), 
    .D0(\mainTimer.clkCont[4] ), .C0(\mainTimer.clkCont[11] ), 
    .B0(\mainTimer.clkCont[16] ), .A0(\mainTimer.clkCont[5] ), 
    .F0(\mainTimer.n19 ), .F1(\mainTimer.n7 ));
  SLICE_174 SLICE_174( .D1(debug_c_1), .C1(n2169), .B1(n32), .A1(n1773), 
    .D0(\KEY_STATUS_1__N_254[1] ), .C0(\Sreg[1] ), .B0(\Sreg[0] ), 
    .A0(KEY_STATUS_c_0), .F0(n2169), .F1(debug_c_1));
  SLICE_176 SLICE_176( .D1(\Sreg[0] ), .C1(n2157), .B1(\Sreg[1] ), 
    .A1(timeout_c), .D0(n1755), .C0(\state[0] ), .B0(\state[1] ), 
    .A0(\KEY_STATUS_1__N_254[1] ), .F0(n2157), .F1(n22));
  STATE_OUT_SLICE_178 \STATE_OUT.SLICE_178 ( .D0(\waiting_N_141[4] ), 
    .A0(\waiting_N_141[13] ), .F0(\STATE_OUT.n32 ));
  STATE_OUT_SLICE_179 \STATE_OUT.SLICE_179 ( .D1(\STATE_OUT.n32 ), 
    .C1(\STATE_OUT.n46 ), .B1(\waiting_N_141[3] ), .A1(\waiting_N_141[29] ), 
    .D0(\waiting_N_141[20] ), .C0(\waiting_N_141[19] ), 
    .B0(\waiting_N_141[17] ), .A0(\waiting_N_141[25] ), .F0(\STATE_OUT.n46 ), 
    .F1(\STATE_OUT.n52 ));
  STATE_OUT_SLICE_180 \STATE_OUT.SLICE_180 ( .D1(\STATE_OUT.n47 ), 
    .C1(\STATE_OUT.n50 ), .B1(\STATE_OUT.n48 ), .A1(\STATE_OUT.n49 ), 
    .D0(\waiting_N_141[8] ), .C0(\waiting_N_141[10] ), .B0(\waiting_N_141[7] ), 
    .A0(\waiting_N_141[30] ), .F0(\STATE_OUT.n50 ), .F1(\STATE_OUT.n56 ));
  STATE_OUT_SLICE_182 \STATE_OUT.SLICE_182 ( .D1(\waiting_N_141[22] ), 
    .C1(\STATE_OUT.n30 ), .B1(\waiting_N_141[6] ), .A1(\waiting_N_141[14] ), 
    .D0(\waiting_N_141[5] ), .B0(\waiting_N_141[21] ), .F0(\STATE_OUT.n30 ), 
    .F1(\STATE_OUT.n51 ));
  STATE_OUT_SLICE_184 \STATE_OUT.SLICE_184 ( .C1(waiting_N_140), .B1(waiting), 
    .D0(\waiting_N_141[31] ), .C0(\STATE_OUT.n56 ), .B0(\STATE_OUT.n52 ), 
    .A0(\STATE_OUT.n51 ), .F0(waiting_N_140), .F1(\STATE_OUT.n143_c ));
  STATE_OUT_serial_SLICE_186 \STATE_OUT.serial.SLICE_186 ( 
    .D1(\STATE_OUT.serial.n48 ), .C1(\STATE_OUT.serial.n50 ), 
    .B1(\STATE_OUT.serial.n49 ), .A1(\STATE_OUT.serial.n47 ), .D0(n156), 
    .C0(n159), .B0(n158), .A0(n136), .F0(\STATE_OUT.serial.n50 ), 
    .F1(\STATE_OUT.serial.n56 ));
  STATE_OUT_serial_SLICE_188 \STATE_OUT.serial.SLICE_188 ( .D1(n157), 
    .C1(n164), .B1(n139), .A1(n138), .B0(n153), .A0(n162), 
    .F0(\STATE_OUT.serial.n32 ), .F1(\STATE_OUT.serial.n47 ));
  STATE_OUT_serial_SLICE_189 \STATE_OUT.serial.SLICE_189 ( .D1(n163), 
    .C1(\STATE_OUT.serial.n46 ), .B1(\STATE_OUT.serial.n32 ), .A1(n137), 
    .D0(n146), .C0(n141), .B0(n149), .A0(n147), .F0(\STATE_OUT.serial.n46 ), 
    .F1(\STATE_OUT.serial.n52 ));
  STATE_OUT_serial_SLICE_190 \STATE_OUT.serial.SLICE_190 ( .D1(n144), 
    .C1(\STATE_OUT.serial.n44 ), .B1(\STATE_OUT.serial.n52 ), .A1(n152), 
    .D0(n145), .B0(n160), .A0(n161), .F0(\STATE_OUT.serial.n44 ), 
    .F1(\STATE_OUT.serial.n55 ));
  STATE_OUT_serial_SLICE_194 \STATE_OUT.serial.SLICE_194 ( 
    .DI1(\STATE_OUT.serial.status_out_N_253 ), 
    .D1(\STATE_OUT.serial.temp_data_out[1] ), .C1(\STATE_OUT.serial.n2526 ), 
    .B1(\STATE_OUT.serial.temp_data_out[0] ), .A1(\STATE_OUT.serial.j[1] ), 
    .D0(\temp_data_out[2] ), .C0(\STATE_OUT.serial.j[0] ), 
    .B0(\STATE_OUT.serial.j[1] ), .A0(\STATE_OUT.serial.temp_data_out[3] ), 
    .LSR(\STATE_OUT.n120 ), .CLK(SERCLK_OUT_c), .Q1(STATUS_OUT_c), 
    .F0(\STATE_OUT.serial.n2526 ), .F1(\STATE_OUT.serial.status_out_N_253 ));
  STATE_OUT_serial_SLICE_195 \STATE_OUT.serial.SLICE_195 ( 
    .D1(\STATE_OUT.serial.n56 ), .C1(init), .B1(\STATE_OUT.serial.n55 ), 
    .A1(n135), .C0(init), .A0(\Sreg[0] ), .F0(\STATE_OUT.serial.n453 ), 
    .F1(n121));
  STATE_OUT_SLICE_196 \STATE_OUT.SLICE_196 ( .D0(\STATE_OUT.cont[1] ), 
    .C0(\STATE_OUT.cont[2] ), .B0(\STATE_OUT.cont[0] ), 
    .A0(\STATE_OUT.cont[3] ), .F0(\STATE_OUT.n2154 ));
  STATE_OUT_SLICE_197 \STATE_OUT.SLICE_197 ( .DI1(\STATE_OUT.n1651 ), 
    .D1(\STATE_OUT.n2154 ), .C1(waiting_N_140), .B1(waiting), .A0(waiting), 
    .CLK(SERCLK_OUT_c), .Q1(waiting), .F0(\STATE_OUT.waiting_N_136 ), 
    .F1(\STATE_OUT.n1651 ));
  keyboard_SLICE_198 \keyboard.SLICE_198 ( .D1(\keyboard.n1621 ), 
    .C1(\keyboard.actualKey[2][0] ), .B1(KB_IN_c_0), 
    .C0(\keyboard.actualKey[1][0] ), .B0(\keyboard.n851 ), .A0(KB_IN_c_0), 
    .F0(\keyboard.actualKey[1][0] ), .F1(\keyboard.actualKey[2][0] ));
  SLICE_200 SLICE_200( .B0(SENSOR2_IN_c), .A0(SENSOR1_IN_c), .F0(n1958));
  keyboard_SLICE_201 \keyboard.SLICE_201 ( .D0(\state[1] ), .C0(\state[0] ), 
    .A0(\KEY_STATUS_1__N_254[1] ), .F0(KEY_STATUS_c_1));
  STATE_OUT_serial_SLICE_203 \STATE_OUT.serial.SLICE_203 ( .D0(n140), 
    .C0(n148), .B0(n142), .A0(n143), .F0(\STATE_OUT.serial.n49 ));
  STATE_OUT_serial_SLICE_204 \STATE_OUT.serial.SLICE_204 ( .D0(n151), 
    .C0(n154), .B0(n150), .A0(n155), .F0(\STATE_OUT.serial.n48 ));
  STATE_OUT_SLICE_206 \STATE_OUT.SLICE_206 ( .D1(\waiting_N_141[11] ), 
    .C1(\waiting_N_141[15] ), .B1(\waiting_N_141[12] ), 
    .A1(\waiting_N_141[16] ), .D0(\waiting_N_141[2] ), 
    .C0(\waiting_N_141[27] ), .B0(\waiting_N_141[9] ), 
    .A0(\waiting_N_141[28] ), .F0(\STATE_OUT.n47 ), .F1(\STATE_OUT.n48 ));
  STATE_OUT_SLICE_207 \STATE_OUT.SLICE_207 ( .D0(\waiting_N_141[24] ), 
    .C0(\waiting_N_141[18] ), .B0(\waiting_N_141[26] ), 
    .A0(\waiting_N_141[23] ), .F0(\STATE_OUT.n49 ));
  SLICE_208 SLICE_208( .F0(VCC_net));
  SLICE_209 SLICE_209( .DI1(n577), .D1(\temp_data_out[2] ), .C1(\Sreg[1] ), 
    .B1(init), .A1(\Sreg[0] ), .D0(\Sreg[0] ), .B0(\Sreg[1] ), 
    .CLK(SERCLK_OUT_c), .Q1(\temp_data_out[2] ), .F0(SIREN_OUT_c), .F1(n577));
  mainTimer_SLICE_212 \mainTimer.SLICE_212 ( .B0(\mainTimer.clkCont[2] ), 
    .A0(\mainTimer.clkCont[1] ), .F0(\mainTimer.n8 ));
  STATE_OUT_SLICE_213 \STATE_OUT.SLICE_213 ( 
    .DI1(\STATE_OUT.waiting_N_136$n4 ), .D1(waiting), .B0(init), 
    .CLK(SERCLK_OUT_c), .Q1(init), .F0(\STATE_OUT.n120 ), 
    .F1(\STATE_OUT.waiting_N_136$n4 ));
  OSCInst1 OSCInst1( .CLKLFPU(VCC_net), .CLKLFEN(VCC_net), 
    .CLKLF(SERCLK_OUT_c));
  STATE_OUT_serial_status_send \STATE_OUT.serial.status_send ( .DO0(init), 
    .OUTCLK(SERCLK_OUT_c), .PADDO(STATUS_SEND_c));
  STATUS_SEND STATUS_SEND_I( .PADDO(STATUS_SEND_c), .STATUS_SEND(STATUS_SEND));
  STATUS_OUT STATUS_OUT_I( .PADDO(STATUS_OUT_c), .STATUS_OUT(STATUS_OUT));
  SIREN_OUT SIREN_OUT_I( .PADDO(SIREN_OUT_c), .SIREN_OUT(SIREN_OUT));
  SERCLK_OUT SERCLK_OUT_I( .PADDO(SERCLK_OUT_c), .SERCLK_OUT(SERCLK_OUT));
  KEY_STATUS_1_ \KEY_STATUS[1]_I ( .PADDO(KEY_STATUS_c_1), 
    .KEYSTATUS1(KEY_STATUS[1]));
  KEY_STATUS_0_ \KEY_STATUS[0]_I ( .PADDO(KEY_STATUS_c_0), 
    .KEYSTATUS0(KEY_STATUS[0]));
  debug_1_ \debug[1]_I ( .PADDO(debug_c_1), .debug1(debug[1]));
  debug_0_ \debug[0]_I ( .PADDO(debug_c_0), .debug0(debug[0]));
  timeout timeout_I( .PADDO(timeout_c), .timeout(timeout));
  SENSOR1_IN SENSOR1_IN_I( .PADDI(SENSOR1_IN_c), .SENSOR1_IN(SENSOR1_IN));
  SENSOR2_IN SENSOR2_IN_I( .PADDI(SENSOR2_IN_c), .SENSOR2_IN(SENSOR2_IN));
  KB_IN_1_ \KB_IN[1]_I ( .PADDI(KB_IN_c_1), .KBIN1(KB_IN[1]));
  KB_IN_0_ \KB_IN[0]_I ( .PADDI(KB_IN_c_0), .KBIN0(KB_IN[0]));
  KB_RECV KB_RECV_I( .PADDI(KB_RECV_c), .KB_RECV(KB_RECV));
  RESET_IN RESET_IN_I( .PADDI(RESET_IN_c), .RESET_IN(RESET_IN));
endmodule

module mainTimer_SLICE_0 ( input D1, B1, D0, B0, CIN0, CIN1, output F0, F1, 
    COUT1, COUT0 );
  wire   GNDI;

  fa2 \mainTimer/add_7_add_5_15 ( .A0(GNDI), .B0(B0), .C0(GNDI), .D0(D0), 
    .A1(GNDI), .B1(B1), .C1(GNDI), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module fa2 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI0, CI1, output S0, S1, 
    CO0, CO1 );

  FA2 inst1( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .CI0(CI0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .CI1(CI1), .CO0(CO0), .CO1(CO1), .S0(S0), .S1(S1));
  defparam inst1.INIT0 = "0xc33c";
  defparam inst1.INIT1 = "0xc33c";
endmodule

module gnd ( output PWR0 );

  VLO INST1( .Z(PWR0));
endmodule

module mainTimer_SLICE_1 ( input D1, B1, D0, B0, CIN0, CIN1, output F0, F1, 
    COUT1, COUT0 );
  wire   GNDI;

  fa2 \mainTimer/add_7_add_5_13 ( .A0(GNDI), .B0(B0), .C0(GNDI), .D0(D0), 
    .A1(GNDI), .B1(B1), .C1(GNDI), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module mainTimer_SLICE_2 ( input D1, B1, D0, B0, CIN0, CIN1, output F0, F1, 
    COUT1, COUT0 );
  wire   GNDI;

  fa2 \mainTimer/add_7_add_5_11 ( .A0(GNDI), .B0(B0), .C0(GNDI), .D0(D0), 
    .A1(GNDI), .B1(B1), .C1(GNDI), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module mainTimer_SLICE_3 ( input D1, B1, D0, B0, CIN0, CIN1, output F0, F1, 
    COUT1, COUT0 );
  wire   GNDI;

  fa2 \mainTimer/add_7_add_5_9 ( .A0(GNDI), .B0(B0), .C0(GNDI), .D0(D0), 
    .A1(GNDI), .B1(B1), .C1(GNDI), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module mainTimer_SLICE_4 ( input D1, B1, D0, B0, CIN0, CIN1, output F0, F1, 
    COUT1, COUT0 );
  wire   GNDI;

  fa2 \mainTimer/add_7_add_5_7 ( .A0(GNDI), .B0(B0), .C0(GNDI), .D0(D0), 
    .A1(GNDI), .B1(B1), .C1(GNDI), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module mainTimer_SLICE_5 ( input D1, B1, D0, B0, CIN0, CIN1, output F0, F1, 
    COUT1, COUT0 );
  wire   GNDI;

  fa2 \mainTimer/add_7_add_5_5 ( .A0(GNDI), .B0(B0), .C0(GNDI), .D0(D0), 
    .A1(GNDI), .B1(B1), .C1(GNDI), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module mainTimer_SLICE_6 ( input D1, B1, D0, B0, CIN0, CIN1, output F0, F1, 
    COUT1, COUT0 );
  wire   GNDI;

  fa2 \mainTimer/add_7_add_5_3 ( .A0(GNDI), .B0(B0), .C0(GNDI), .D0(D0), 
    .A1(GNDI), .B1(B1), .C1(GNDI), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module mainTimer_SLICE_7 ( input D1, C1, B1, CIN1, output F1, COUT1, COUT0 );
  wire   GNDI, VCCI;

  fa2 \mainTimer/add_7_add_5_1 ( .A0(GNDI), .B0(GNDI), .C0(GNDI), .D0(VCCI), 
    .A1(GNDI), .B1(B1), .C1(C1), .D1(D1), .CI0(VCCI), .CI1(CIN1), .S0(), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module vcc ( output PWR1 );

  VHI INST1( .Z(PWR1));
endmodule

module mainTimer_SLICE_8 ( input D1, D0, B0, CIN0, CIN1, output F0, COUT0 );
  wire   GNDI;

  fa2 \mainTimer/add_7_add_5_19 ( .A0(GNDI), .B0(B0), .C0(GNDI), .D0(D0), 
    .A1(GNDI), .B1(GNDI), .C1(GNDI), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(), .CO0(COUT0), .CO1());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
  endspecify

endmodule

module mainTimer_SLICE_9 ( input D1, B1, D0, B0, CIN0, CIN1, output F0, F1, 
    COUT1, COUT0 );
  wire   GNDI;

  fa2 \mainTimer/add_7_add_5_17 ( .A0(GNDI), .B0(B0), .C0(GNDI), .D0(D0), 
    .A1(GNDI), .B1(B1), .C1(GNDI), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module STATE_OUT_SLICE_10 ( input D1, B1, D0, B0, CIN0, CIN1, output F0, F1, 
    COUT1, COUT0 );
  wire   GNDI;

  fa2 \STATE_OUT/add_7_add_5_29 ( .A0(GNDI), .B0(B0), .C0(GNDI), .D0(D0), 
    .A1(GNDI), .B1(B1), .C1(GNDI), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module STATE_OUT_SLICE_11 ( input D1, B1, D0, B0, CIN0, CIN1, output F0, F1, 
    COUT1, COUT0 );
  wire   GNDI;

  fa2 \STATE_OUT/add_7_add_5_5 ( .A0(GNDI), .B0(B0), .C0(GNDI), .D0(D0), 
    .A1(GNDI), .B1(B1), .C1(GNDI), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module STATE_OUT_SLICE_12 ( input DI0, D1, B1, D0, B0, CE, LSR, CLK, CIN0, 
    CIN1, output Q0, F0, F1, COUT1, COUT0 );
  wire   GNDI, DI0_dly, CLK_dly, CE_dly, LSR_dly;

  fa2 \STATE_OUT/add_7_add_5_3 ( .A0(GNDI), .B0(B0), .C0(GNDI), .D0(D0), 
    .A1(GNDI), .B1(B1), .C1(GNDI), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \STATE_OUT/j__i1 ( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module ffsre2 ( input D0, SP, CK, LSR, output Q );

  FD1P3XZ INST01( .D(D0), .SP(SP), .CK(CK), .SR(LSR), .Q(Q));
  defparam INST01.REGSET = "RESET";
  defparam INST01.SRMODE = "CE_OVER_LSR";
endmodule

module STATE_OUT_SLICE_13 ( input DI1, D1, C1, B1, CE, LSR, CLK, CIN1, output 
    Q1, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, CE_dly, LSR_dly;

  fa2 \STATE_OUT/add_7_add_5_1 ( .A0(GNDI), .B0(GNDI), .C0(GNDI), .D0(VCCI), 
    .A1(GNDI), .B1(B1), .C1(C1), .D1(D1), .CI0(VCCI), .CI1(CIN1), .S0(), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \STATE_OUT/j__i0 ( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module STATE_OUT_SLICE_14 ( input D1, B1, D0, B0, CIN0, CIN1, output F0, F1, 
    COUT1, COUT0 );
  wire   GNDI;

  fa2 \STATE_OUT/add_7_add_5_27 ( .A0(GNDI), .B0(B0), .C0(GNDI), .D0(D0), 
    .A1(GNDI), .B1(B1), .C1(GNDI), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module STATE_OUT_SLICE_15 ( input D1, B1, D0, B0, CIN0, CIN1, output F0, F1, 
    COUT1, COUT0 );
  wire   GNDI;

  fa2 \STATE_OUT/add_7_add_5_25 ( .A0(GNDI), .B0(B0), .C0(GNDI), .D0(D0), 
    .A1(GNDI), .B1(B1), .C1(GNDI), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module STATE_OUT_SLICE_16 ( input D1, B1, D0, B0, CIN0, CIN1, output F0, F1, 
    COUT1, COUT0 );
  wire   GNDI;

  fa2 \STATE_OUT/add_7_add_5_23 ( .A0(GNDI), .B0(B0), .C0(GNDI), .D0(D0), 
    .A1(GNDI), .B1(B1), .C1(GNDI), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module STATE_OUT_SLICE_17 ( input D1, B1, D0, B0, CIN0, CIN1, output F0, F1, 
    COUT1, COUT0 );
  wire   GNDI;

  fa2 \STATE_OUT/add_7_add_5_21 ( .A0(GNDI), .B0(B0), .C0(GNDI), .D0(D0), 
    .A1(GNDI), .B1(B1), .C1(GNDI), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module STATE_OUT_SLICE_18 ( input D1, D0, B0, CIN0, CIN1, output F0, COUT0 );
  wire   GNDI;

  fa2 \STATE_OUT/add_7_add_5_33 ( .A0(GNDI), .B0(B0), .C0(GNDI), .D0(D0), 
    .A1(GNDI), .B1(GNDI), .C1(GNDI), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(), .CO0(COUT0), .CO1());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
  endspecify

endmodule

module STATE_OUT_SLICE_19 ( input D1, B1, D0, B0, CIN0, CIN1, output F0, F1, 
    COUT1, COUT0 );
  wire   GNDI;

  fa2 \STATE_OUT/add_7_add_5_19 ( .A0(GNDI), .B0(B0), .C0(GNDI), .D0(D0), 
    .A1(GNDI), .B1(B1), .C1(GNDI), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module STATE_OUT_SLICE_20 ( input D1, B1, D0, B0, CIN0, CIN1, output F0, F1, 
    COUT1, COUT0 );
  wire   GNDI;

  fa2 \STATE_OUT/add_7_add_5_17 ( .A0(GNDI), .B0(B0), .C0(GNDI), .D0(D0), 
    .A1(GNDI), .B1(B1), .C1(GNDI), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module STATE_OUT_SLICE_21 ( input D1, B1, D0, B0, CIN0, CIN1, output F0, F1, 
    COUT1, COUT0 );
  wire   GNDI;

  fa2 \STATE_OUT/add_7_add_5_15 ( .A0(GNDI), .B0(B0), .C0(GNDI), .D0(D0), 
    .A1(GNDI), .B1(B1), .C1(GNDI), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module STATE_OUT_SLICE_22 ( input D1, B1, D0, B0, CIN0, CIN1, output F0, F1, 
    COUT1, COUT0 );
  wire   GNDI;

  fa2 \STATE_OUT/add_7_add_5_13 ( .A0(GNDI), .B0(B0), .C0(GNDI), .D0(D0), 
    .A1(GNDI), .B1(B1), .C1(GNDI), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module STATE_OUT_SLICE_23 ( input D1, B1, D0, B0, CIN0, CIN1, output F0, F1, 
    COUT1, COUT0 );
  wire   GNDI;

  fa2 \STATE_OUT/add_7_add_5_11 ( .A0(GNDI), .B0(B0), .C0(GNDI), .D0(D0), 
    .A1(GNDI), .B1(B1), .C1(GNDI), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module STATE_OUT_SLICE_24 ( input D1, B1, D0, B0, CIN0, CIN1, output F0, F1, 
    COUT1, COUT0 );
  wire   GNDI;

  fa2 \STATE_OUT/add_7_add_5_9 ( .A0(GNDI), .B0(B0), .C0(GNDI), .D0(D0), 
    .A1(GNDI), .B1(B1), .C1(GNDI), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module STATE_OUT_SLICE_25 ( input D1, B1, D0, B0, CIN0, CIN1, output F0, F1, 
    COUT1, COUT0 );
  wire   GNDI;

  fa2 \STATE_OUT/add_7_add_5_7 ( .A0(GNDI), .B0(B0), .C0(GNDI), .D0(D0), 
    .A1(GNDI), .B1(B1), .C1(GNDI), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module STATE_OUT_SLICE_26 ( input D1, B1, D0, B0, CIN0, CIN1, output F0, F1, 
    COUT1, COUT0 );
  wire   GNDI;

  fa2 \STATE_OUT/add_7_add_5_31 ( .A0(GNDI), .B0(B0), .C0(GNDI), .D0(D0), 
    .A1(GNDI), .B1(B1), .C1(GNDI), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module STATE_OUT_serial_SLICE_27 ( input D1, D0, B0, CIN0, CIN1, output F0, 
    COUT0 );
  wire   GNDI;

  fa2 \STATE_OUT/serial/add_6_add_5_33 ( .A0(GNDI), .B0(B0), .C0(GNDI), 
    .D0(D0), .A1(GNDI), .B1(GNDI), .C1(GNDI), .D1(D1), .CI0(CIN0), .CI1(CIN1), 
    .S0(F0), .S1(), .CO0(COUT0), .CO1());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
  endspecify

endmodule

module STATE_OUT_serial_SLICE_28 ( input D1, B1, D0, B0, CIN0, CIN1, output F0, 
    F1, COUT1, COUT0 );
  wire   GNDI;

  fa2 \STATE_OUT/serial/add_6_add_5_31 ( .A0(GNDI), .B0(B0), .C0(GNDI), 
    .D0(D0), .A1(GNDI), .B1(B1), .C1(GNDI), .D1(D1), .CI0(CIN0), .CI1(CIN1), 
    .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module STATE_OUT_serial_SLICE_29 ( input D1, B1, D0, B0, CIN0, CIN1, output F0, 
    F1, COUT1, COUT0 );
  wire   GNDI;

  fa2 \STATE_OUT/serial/add_6_add_5_11 ( .A0(GNDI), .B0(B0), .C0(GNDI), 
    .D0(D0), .A1(GNDI), .B1(B1), .C1(GNDI), .D1(D1), .CI0(CIN0), .CI1(CIN1), 
    .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module STATE_OUT_serial_SLICE_30 ( input D1, B1, D0, B0, CIN0, CIN1, output F0, 
    F1, COUT1, COUT0 );
  wire   GNDI;

  fa2 \STATE_OUT/serial/add_6_add_5_29 ( .A0(GNDI), .B0(B0), .C0(GNDI), 
    .D0(D0), .A1(GNDI), .B1(B1), .C1(GNDI), .D1(D1), .CI0(CIN0), .CI1(CIN1), 
    .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module STATE_OUT_serial_SLICE_31 ( input D1, B1, D0, B0, CIN0, CIN1, output F0, 
    F1, COUT1, COUT0 );
  wire   GNDI;

  fa2 \STATE_OUT/serial/add_6_add_5_27 ( .A0(GNDI), .B0(B0), .C0(GNDI), 
    .D0(D0), .A1(GNDI), .B1(B1), .C1(GNDI), .D1(D1), .CI0(CIN0), .CI1(CIN1), 
    .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module STATE_OUT_serial_SLICE_32 ( input D1, B1, D0, B0, CIN0, CIN1, output F0, 
    F1, COUT1, COUT0 );
  wire   GNDI;

  fa2 \STATE_OUT/serial/add_6_add_5_25 ( .A0(GNDI), .B0(B0), .C0(GNDI), 
    .D0(D0), .A1(GNDI), .B1(B1), .C1(GNDI), .D1(D1), .CI0(CIN0), .CI1(CIN1), 
    .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module STATE_OUT_serial_SLICE_33 ( input D1, B1, D0, B0, CIN0, CIN1, output F0, 
    F1, COUT1, COUT0 );
  wire   GNDI;

  fa2 \STATE_OUT/serial/add_6_add_5_23 ( .A0(GNDI), .B0(B0), .C0(GNDI), 
    .D0(D0), .A1(GNDI), .B1(B1), .C1(GNDI), .D1(D1), .CI0(CIN0), .CI1(CIN1), 
    .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module STATE_OUT_serial_SLICE_34 ( input D1, B1, D0, B0, CIN0, CIN1, output F0, 
    F1, COUT1, COUT0 );
  wire   GNDI;

  fa2 \STATE_OUT/serial/add_6_add_5_5 ( .A0(GNDI), .B0(B0), .C0(GNDI), .D0(D0), 
    .A1(GNDI), .B1(B1), .C1(GNDI), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module STATE_OUT_serial_SLICE_35 ( input D1, B1, D0, B0, CIN0, CIN1, output F0, 
    F1, COUT1, COUT0 );
  wire   GNDI;

  fa2 \STATE_OUT/serial/add_6_add_5_21 ( .A0(GNDI), .B0(B0), .C0(GNDI), 
    .D0(D0), .A1(GNDI), .B1(B1), .C1(GNDI), .D1(D1), .CI0(CIN0), .CI1(CIN1), 
    .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module STATE_OUT_serial_SLICE_36 ( input DI0, D1, B1, D0, B0, LSR, CLK, CIN0, 
    CIN1, output Q0, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI0_dly, CLK_dly, LSR_dly;

  fa2 \STATE_OUT/serial/add_6_add_5_3 ( .A0(GNDI), .B0(B0), .C0(GNDI), .D0(D0), 
    .A1(GNDI), .B1(B1), .C1(GNDI), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \STATE_OUT/serial/j__i1 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module STATE_OUT_serial_SLICE_37 ( input D1, B1, D0, B0, CIN0, CIN1, output F0, 
    F1, COUT1, COUT0 );
  wire   GNDI;

  fa2 \STATE_OUT/serial/add_6_add_5_19 ( .A0(GNDI), .B0(B0), .C0(GNDI), 
    .D0(D0), .A1(GNDI), .B1(B1), .C1(GNDI), .D1(D1), .CI0(CIN0), .CI1(CIN1), 
    .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module STATE_OUT_serial_SLICE_38 ( input D1, B1, D0, B0, CIN0, CIN1, output F0, 
    F1, COUT1, COUT0 );
  wire   GNDI;

  fa2 \STATE_OUT/serial/add_6_add_5_17 ( .A0(GNDI), .B0(B0), .C0(GNDI), 
    .D0(D0), .A1(GNDI), .B1(B1), .C1(GNDI), .D1(D1), .CI0(CIN0), .CI1(CIN1), 
    .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module STATE_OUT_serial_SLICE_39 ( input D1, B1, D0, B0, CIN0, CIN1, output F0, 
    F1, COUT1, COUT0 );
  wire   GNDI;

  fa2 \STATE_OUT/serial/add_6_add_5_15 ( .A0(GNDI), .B0(B0), .C0(GNDI), 
    .D0(D0), .A1(GNDI), .B1(B1), .C1(GNDI), .D1(D1), .CI0(CIN0), .CI1(CIN1), 
    .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module STATE_OUT_serial_SLICE_40 ( input D1, B1, D0, B0, CIN0, CIN1, output F0, 
    F1, COUT1, COUT0 );
  wire   GNDI;

  fa2 \STATE_OUT/serial/add_6_add_5_7 ( .A0(GNDI), .B0(B0), .C0(GNDI), .D0(D0), 
    .A1(GNDI), .B1(B1), .C1(GNDI), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module STATE_OUT_serial_SLICE_41 ( input D1, B1, D0, B0, CIN0, CIN1, output F0, 
    F1, COUT1, COUT0 );
  wire   GNDI;

  fa2 \STATE_OUT/serial/add_6_add_5_9 ( .A0(GNDI), .B0(B0), .C0(GNDI), .D0(D0), 
    .A1(GNDI), .B1(B1), .C1(GNDI), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module STATE_OUT_serial_SLICE_42 ( input D1, B1, D0, B0, CIN0, CIN1, output F0, 
    F1, COUT1, COUT0 );
  wire   GNDI;

  fa2 \STATE_OUT/serial/add_6_add_5_13 ( .A0(GNDI), .B0(B0), .C0(GNDI), 
    .D0(D0), .A1(GNDI), .B1(B1), .C1(GNDI), .D1(D1), .CI0(CIN0), .CI1(CIN1), 
    .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module STATE_OUT_serial_SLICE_43 ( input DI1, D1, C1, B1, LSR, CLK, CIN1, 
    output Q1, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, LSR_dly;

  fa2 \STATE_OUT/serial/add_6_add_5_1 ( .A0(GNDI), .B0(GNDI), .C0(GNDI), 
    .D0(VCCI), .A1(GNDI), .B1(B1), .C1(C1), .D1(D1), .CI0(VCCI), .CI1(CIN1), 
    .S0(), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \STATE_OUT/serial/j__i0 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module SLICE_44 ( input DI1, DI0, D1, C1, B1, A1, D0, C0, B0, A0, LSR, CLK, 
    output Q0, Q1, F0, F1 );
  wire   VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  lut4 SLICE_44_K1( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40001 SLICE_44_K0( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  ffsre20002 Sreg_i1( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), 
    .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre20002 Sreg_i0( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), 
    .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module lut4 ( input A, B, C, D, output Z );

  LUT4 #("0x4050") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40001 ( input A, B, C, D, output Z );

  LUT4 #("0xEA2A") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module ffsre20002 ( input D0, SP, CK, LSR, output Q );

  FD1P3XZ INST01( .D(D0), .SP(SP), .CK(CK), .SR(LSR), .Q(Q));
  defparam INST01.REGSET = "RESET";
  defparam INST01.SRMODE = "ASYNC";
endmodule

module SLICE_46 ( input DI1, DI0, D1, C1, B1, A1, D0, B0, A0, CLK, output Q0, 
    Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  lut40003 i340_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40004 i437_3_lut( .A(A0), .B(B0), .C(GNDI), .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 PREV_KEY_i0_i0( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 PREV_KEY_i0_i1( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module lut40003 ( input A, B, C, D, output Z );

  LUT4 #("0xCACF") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40004 ( input A, B, C, D, output Z );

  LUT4 #("0xEE22") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module keyboard_SLICE_48 ( input DI1, DI0, D1, C1, B1, A1, D0, B0, CLK, 
    output Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  lut40005 \keyboard.SLICE_48_K1 ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40006 \keyboard.SLICE_48_K0 ( .A(GNDI), .B(B0), .C(GNDI), .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \keyboard/state_i0 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \keyboard/state_i1 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module lut40005 ( input A, B, C, D, output Z );

  LUT4 #("0x0E0C") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40006 ( input A, B, C, D, output Z );

  LUT4 #("0xFFCC") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module keyboard_SLICE_49 ( input DI1, DI0, D1, C1, A0, CLK, output Q0, Q1, F0, 
    F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  lut40007 \keyboard/i969_2_lut ( .A(GNDI), .B(GNDI), .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40008 \keyboard/i136_1_lut ( .A(A0), .B(GNDI), .C(GNDI), .D(GNDI), .Z(F0));
  ffsre2 \keyboard/counter_111__i1 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \keyboard/counter_111__i0 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module lut40007 ( input A, B, C, D, output Z );

  LUT4 #("0x0FF0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40008 ( input A, B, C, D, output Z );

  LUT4 #("0x5555") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module mainTimer_SLICE_53 ( input DI1, DI0, B1, A1, B0, A0, LSR, CLK, output 
    Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  lut40009 \mainTimer/i664_2_lut ( .A(A1), .B(B1), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40010 \mainTimer/i663_2_lut ( .A(A0), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));
  ffsre20002 \mainTimer/clkCont_i16 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre20002 \mainTimer/clkCont_i17 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module lut40009 ( input A, B, C, D, output Z );

  LUT4 #("0x4444") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40010 ( input A, B, C, D, output Z );

  LUT4 #("0x2222") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module mainTimer_SLICE_55 ( input DI1, DI0, C1, A1, D0, B0, LSR, CLK, output 
    Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  lut40011 \mainTimer/i666_2_lut ( .A(A1), .B(GNDI), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40012 \mainTimer/i665_2_lut ( .A(GNDI), .B(B0), .C(GNDI), .D(D0), .Z(F0));
  ffsre20002 \mainTimer/clkCont_i14 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre20002 \mainTimer/clkCont_i15 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module lut40011 ( input A, B, C, D, output Z );

  LUT4 #("0x0A0A") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40012 ( input A, B, C, D, output Z );

  LUT4 #("0x3300") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module mainTimer_SLICE_57 ( input DI1, DI0, C1, B1, D0, A0, LSR, CLK, output 
    Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  lut40013 \mainTimer/i668_2_lut ( .A(GNDI), .B(B1), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40014 \mainTimer/i667_2_lut ( .A(A0), .B(GNDI), .C(GNDI), .D(D0), .Z(F0));
  ffsre20002 \mainTimer/clkCont_i12 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre20002 \mainTimer/clkCont_i13 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module lut40013 ( input A, B, C, D, output Z );

  LUT4 #("0x3030") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40014 ( input A, B, C, D, output Z );

  LUT4 #("0x5500") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module mainTimer_SLICE_59 ( input DI1, DI0, D1, C1, D0, A0, LSR, CLK, output 
    Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  lut40015 \mainTimer/i670_2_lut ( .A(GNDI), .B(GNDI), .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40014 \mainTimer/i669_2_lut ( .A(A0), .B(GNDI), .C(GNDI), .D(D0), .Z(F0));
  ffsre20002 \mainTimer/clkCont_i10 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre20002 \mainTimer/clkCont_i11 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module lut40015 ( input A, B, C, D, output Z );

  LUT4 #("0x00F0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module mainTimer_SLICE_61 ( input DI1, DI0, B1, A1, D0, A0, LSR, CLK, output 
    Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  lut40016 \mainTimer/i672_2_lut ( .A(A1), .B(B1), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40014 \mainTimer/i671_2_lut ( .A(A0), .B(GNDI), .C(GNDI), .D(D0), .Z(F0));
  ffsre20002 \mainTimer/clkCont_i8 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre20002 \mainTimer/clkCont_i9 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module lut40016 ( input A, B, C, D, output Z );

  LUT4 #("0x2222") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module mainTimer_SLICE_63 ( input DI1, DI0, D1, C1, D0, B0, LSR, CLK, output 
    Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  lut40017 \mainTimer/i662_2_lut ( .A(GNDI), .B(GNDI), .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40012 \mainTimer/i661_2_lut ( .A(GNDI), .B(B0), .C(GNDI), .D(D0), .Z(F0));
  ffsre20002 \mainTimer/clkCont_i6 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre20002 \mainTimer/clkCont_i7 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module lut40017 ( input A, B, C, D, output Z );

  LUT4 #("0x0F00") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module mainTimer_SLICE_65 ( input DI1, DI0, D1, B1, C0, A0, LSR, CLK, output 
    Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  lut40018 \mainTimer/i649_2_lut ( .A(GNDI), .B(B1), .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40019 \mainTimer/i676_2_lut ( .A(A0), .B(GNDI), .C(C0), .D(GNDI), .Z(F0));
  ffsre20002 \mainTimer/clkCont_i4 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre20002 \mainTimer/clkCont_i5 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module lut40018 ( input A, B, C, D, output Z );

  LUT4 #("0x00CC") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40019 ( input A, B, C, D, output Z );

  LUT4 #("0x5050") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module mainTimer_SLICE_67 ( input DI1, DI0, D1, B1, B0, A0, LSR, CLK, output 
    Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  lut40020 \mainTimer/i655_2_lut ( .A(GNDI), .B(B1), .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40021 \mainTimer/i653_2_lut ( .A(A0), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));
  ffsre20002 \mainTimer/clkCont_i2 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre20002 \mainTimer/clkCont_i3 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module lut40020 ( input A, B, C, D, output Z );

  LUT4 #("0x3300") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40021 ( input A, B, C, D, output Z );

  LUT4 #("0x4444") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module mainTimer_SLICE_69 ( input DI1, DI0, C1, B1, B0, A0, LSR, CLK, output 
    Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  lut40013 \mainTimer/i645_2_lut ( .A(GNDI), .B(B1), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40021 \mainTimer/i656_2_lut ( .A(A0), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));
  ffsre20002 \mainTimer/clkCont_i0 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre20002 \mainTimer/clkCont_i1 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module SLICE_71 ( input DI1, DI0, D1, C1, B1, A1, D0, C0, B0, A0, CLK, output 
    Q0, Q1, F0, F1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  lut40022 i408_4_lut_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40023 i406_4_lut_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  ffsre2 \STATE_OUT/j__i17 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \STATE_OUT/j__i16 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module lut40022 ( input A, B, C, D, output Z );

  LUT4 #("0xC0E2") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40023 ( input A, B, C, D, output Z );

  LUT4 #("0x8B88") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_72 ( input DI1, DI0, D1, C1, B1, A1, D0, C0, B0, A0, CLK, output 
    Q0, Q1, F0, F1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  lut40024 i426_4_lut_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40025 i428_4_lut_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  ffsre2 \STATE_OUT/j__i26 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \STATE_OUT/j__i27 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module lut40024 ( input A, B, C, D, output Z );

  LUT4 #("0xA0E4") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40025 ( input A, B, C, D, output Z );

  LUT4 #("0xCE02") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_74 ( input DI1, DI0, D1, C1, B1, A1, D0, C0, B0, A0, CLK, output 
    Q0, Q1, F0, F1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  lut40026 i422_4_lut_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40027 i424_4_lut_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  ffsre2 \STATE_OUT/j__i24 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \STATE_OUT/j__i25 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module lut40026 ( input A, B, C, D, output Z );

  LUT4 #("0xCC50") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40027 ( input A, B, C, D, output Z );

  LUT4 #("0xA3A0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_77 ( input DI1, DI0, D1, C1, B1, A1, D0, C0, B0, A0, CLK, output 
    Q0, Q1, F0, F1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  lut40024 i412_4_lut_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40028 i410_4_lut_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  ffsre2 \STATE_OUT/j__i19 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \STATE_OUT/j__i18 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module lut40028 ( input A, B, C, D, output Z );

  LUT4 #("0xCC50") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_79 ( input DI1, DI0, D1, C1, B1, A1, D0, C0, B0, A0, CLK, output 
    Q0, Q1, F0, F1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  lut40029 i416_4_lut_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40030 i414_4_lut_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  ffsre2 \STATE_OUT/j__i21 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \STATE_OUT/j__i20 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module lut40029 ( input A, B, C, D, output Z );

  LUT4 #("0xD1C0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40030 ( input A, B, C, D, output Z );

  LUT4 #("0x88B8") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_81 ( input DI1, DI0, D1, C1, B1, A1, D0, C0, B0, A0, CLK, output 
    Q0, Q1, F0, F1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  lut40031 i432_4_lut_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40032 i430_4_lut_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  ffsre2 \STATE_OUT/j__i29 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \STATE_OUT/j__i28 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module lut40031 ( input A, B, C, D, output Z );

  LUT4 #("0xCE02") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40032 ( input A, B, C, D, output Z );

  LUT4 #("0xAA30") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_83 ( input DI1, DI0, D1, C1, B1, A1, D0, C0, B0, A0, CLK, output 
    Q0, Q1, F0, F1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  lut40033 i436_4_lut_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40034 i434_4_lut_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  ffsre2 \STATE_OUT/j__i31 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \STATE_OUT/j__i30 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module lut40033 ( input A, B, C, D, output Z );

  LUT4 #("0xF202") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40034 ( input A, B, C, D, output Z );

  LUT4 #("0xF404") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_84 ( input DI1, DI0, D1, C1, B1, A1, D0, C0, B0, A0, CLK, output 
    Q0, Q1, F0, F1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  lut40031 i420_4_lut_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40035 i418_4_lut_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  ffsre2 \STATE_OUT/j__i23 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \STATE_OUT/j__i22 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module lut40035 ( input A, B, C, D, output Z );

  LUT4 #("0xA0AC") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module STATE_OUT_SLICE_87 ( input DI1, DI0, D1, A1, B0, LSR, CLK, output Q0, 
    Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  lut40036 \STATE_OUT/i984_2_lut ( .A(A1), .B(GNDI), .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40037 \STATE_OUT/i982_1_lut ( .A(GNDI), .B(B0), .C(GNDI), .D(GNDI), 
    .Z(F0));
  ffsre2 \STATE_OUT/cont_110__i1 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \STATE_OUT/cont_110__i0 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module lut40036 ( input A, B, C, D, output Z );

  LUT4 #("0x55AA") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40037 ( input A, B, C, D, output Z );

  LUT4 #("0x3333") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_89 ( input DI1, DI0, D1, C1, B1, A1, D0, C0, B0, A0, CLK, output 
    Q0, Q1, F0, F1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  lut40038 i350_4_lut_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40027 i396_4_lut_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  ffsre2 \STATE_OUT/j__i10 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \STATE_OUT/j__i11 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module lut40038 ( input A, B, C, D, output Z );

  LUT4 #("0x8B88") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_90 ( input DI1, DI0, D1, C1, B1, A1, D0, C0, B0, A0, CLK, output 
    Q0, Q1, F0, F1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  lut40038 i339_4_lut_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40027 i337_4_lut_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  ffsre2 \STATE_OUT/j__i8 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \STATE_OUT/j__i9 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module SLICE_92 ( input DI1, DI0, D1, C1, B1, A1, D0, C0, B0, A0, CLK, output 
    Q0, Q1, F0, F1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  lut40039 i344_4_lut_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40035 i342_4_lut_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  ffsre2 \STATE_OUT/j__i6 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \STATE_OUT/j__i7 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module lut40039 ( input A, B, C, D, output Z );

  LUT4 #("0xF044") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_94 ( input DI1, DI0, D1, C1, B1, A1, D0, C0, B0, A0, CLK, output 
    Q0, Q1, F0, F1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  lut40024 i348_4_lut_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40040 i346_4_lut_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  ffsre2 \STATE_OUT/j__i4 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \STATE_OUT/j__i5 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module lut40040 ( input A, B, C, D, output Z );

  LUT4 #("0xF044") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_97 ( input DI1, DI0, D1, C1, B1, A1, D0, C0, B0, A0, CLK, output 
    Q0, Q1, F0, F1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  lut40041 i354_4_lut_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40042 i352_4_lut_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  ffsre2 \STATE_OUT/j__i2 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \STATE_OUT/j__i3 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module lut40041 ( input A, B, C, D, output Z );

  LUT4 #("0xAA0C") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40042 ( input A, B, C, D, output Z );

  LUT4 #("0xF022") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_99 ( input DI1, DI0, D1, C1, B1, A1, D0, C0, B0, A0, CLK, output 
    Q0, Q1, F0, F1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  lut40041 i404_4_lut_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40035 i402_4_lut_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  ffsre2 \STATE_OUT/j__i15 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \STATE_OUT/j__i14 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module SLICE_100 ( input DI1, DI0, D1, C1, B1, A1, D0, C0, B0, A0, CLK, 
    output Q0, Q1, F0, F1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  lut40029 i400_4_lut_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40043 i398_4_lut_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  ffsre2 \STATE_OUT/j__i13 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \STATE_OUT/j__i12 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module lut40043 ( input A, B, C, D, output Z );

  LUT4 #("0x88D8") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module STATE_OUT_SLICE_103 ( input DI1, DI0, D1, C1, B1, A1, C0, B0, A0, LSR, 
    CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  lut40044 \STATE_OUT/i998_3_lut_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40045 \STATE_OUT/i991_2_lut_3_lut ( .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \STATE_OUT/cont_110__i3 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \STATE_OUT/cont_110__i2 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module lut40044 ( input A, B, C, D, output Z );

  LUT4 #("0x7F80") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40045 ( input A, B, C, D, output Z );

  LUT4 #("0x7878") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_106 ( input DI1, DI0, C1, A1, D0, B0, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  lut40046 i367_2_lut( .A(A1), .B(GNDI), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40047 i366_2_lut( .A(GNDI), .B(B0), .C(GNDI), .D(D0), .Z(F0));
  ffsre2 \STATE_OUT/serial/j__i20 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \STATE_OUT/serial/j__i21 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module lut40046 ( input A, B, C, D, output Z );

  LUT4 #("0x5050") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40047 ( input A, B, C, D, output Z );

  LUT4 #("0x00CC") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_108 ( input DI1, DI0, B1, A1, C0, A0, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  lut40048 i364_2_lut( .A(A1), .B(B1), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40049 i365_2_lut( .A(A0), .B(GNDI), .C(C0), .D(GNDI), .Z(F0));
  ffsre2 \STATE_OUT/serial/j__i23 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \STATE_OUT/serial/j__i22 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module lut40048 ( input A, B, C, D, output Z );

  LUT4 #("0x2222") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40049 ( input A, B, C, D, output Z );

  LUT4 #("0x0A0A") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_109 ( input DI1, DI0, D1, B0, CE, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut40050 SLICE_109_K1( .A(GNDI), .B(GNDI), .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40051 SLICE_109_K0( .A(GNDI), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));
  ffsre2 \STATE_OUT/serial/temp_data_out_i0_i1 ( .D0(DI1_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  ffsre2 \STATE_OUT/serial/temp_data_out_i0_i0 ( .D0(DI0_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module lut40050 ( input A, B, C, D, output Z );

  LUT4 #("0xFF00") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40051 ( input A, B, C, D, output Z );

  LUT4 #("0xCCCC") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_111 ( input DI1, DI0, C1, B1, C0, B0, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  lut40052 i362_2_lut( .A(GNDI), .B(B1), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40053 i363_2_lut( .A(GNDI), .B(B0), .C(C0), .D(GNDI), .Z(F0));
  ffsre2 \STATE_OUT/serial/j__i25 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \STATE_OUT/serial/j__i24 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module lut40052 ( input A, B, C, D, output Z );

  LUT4 #("0x3030") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40053 ( input A, B, C, D, output Z );

  LUT4 #("0x0C0C") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_113 ( input DI1, DI0, B1, A1, D0, B0, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  lut40054 i360_2_lut( .A(A1), .B(B1), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40055 i361_2_lut( .A(GNDI), .B(B0), .C(GNDI), .D(D0), .Z(F0));
  ffsre2 \STATE_OUT/serial/j__i27 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \STATE_OUT/serial/j__i26 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module lut40054 ( input A, B, C, D, output Z );

  LUT4 #("0x4444") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40055 ( input A, B, C, D, output Z );

  LUT4 #("0x3300") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_115 ( input DI1, DI0, C1, A1, D0, B0, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  lut40056 i358_2_lut( .A(A1), .B(GNDI), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40055 i359_2_lut( .A(GNDI), .B(B0), .C(GNDI), .D(D0), .Z(F0));
  ffsre2 \STATE_OUT/serial/j__i29 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \STATE_OUT/serial/j__i28 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module lut40056 ( input A, B, C, D, output Z );

  LUT4 #("0x0A0A") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_117 ( input DI1, DI0, D1, C1, C0, A0, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  lut40057 i356_2_lut( .A(GNDI), .B(GNDI), .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40049 i357_2_lut( .A(A0), .B(GNDI), .C(C0), .D(GNDI), .Z(F0));
  ffsre2 \STATE_OUT/serial/j__i31 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \STATE_OUT/serial/j__i30 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module lut40057 ( input A, B, C, D, output Z );

  LUT4 #("0xF000") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_121 ( input DI1, DI0, D1, B1, C0, B0, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  lut40058 i384_2_lut( .A(GNDI), .B(B1), .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40053 i385_2_lut( .A(GNDI), .B(B0), .C(C0), .D(GNDI), .Z(F0));
  ffsre2 \STATE_OUT/serial/j__i3 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \STATE_OUT/serial/j__i2 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module lut40058 ( input A, B, C, D, output Z );

  LUT4 #("0x3300") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_123 ( input DI1, DI0, C1, B1, C0, B0, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  lut40052 i382_2_lut( .A(GNDI), .B(B1), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40053 i383_2_lut( .A(GNDI), .B(B0), .C(C0), .D(GNDI), .Z(F0));
  ffsre2 \STATE_OUT/serial/j__i5 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \STATE_OUT/serial/j__i4 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module SLICE_125 ( input DI1, DI0, D1, B1, C0, A0, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  lut40059 i380_2_lut( .A(GNDI), .B(B1), .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40049 i381_2_lut( .A(A0), .B(GNDI), .C(C0), .D(GNDI), .Z(F0));
  ffsre2 \STATE_OUT/serial/j__i7 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \STATE_OUT/serial/j__i6 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module lut40059 ( input A, B, C, D, output Z );

  LUT4 #("0x00CC") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_127 ( input DI1, DI0, C1, A1, D0, B0, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  lut40056 i378_2_lut( .A(A1), .B(GNDI), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40047 i379_2_lut( .A(GNDI), .B(B0), .C(GNDI), .D(D0), .Z(F0));
  ffsre2 \STATE_OUT/serial/j__i9 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \STATE_OUT/serial/j__i8 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module SLICE_129 ( input DI1, DI0, D1, A1, D0, A0, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  lut40060 i376_2_lut( .A(A1), .B(GNDI), .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40061 i377_2_lut( .A(A0), .B(GNDI), .C(GNDI), .D(D0), .Z(F0));
  ffsre2 \STATE_OUT/serial/j__i11 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \STATE_OUT/serial/j__i10 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module lut40060 ( input A, B, C, D, output Z );

  LUT4 #("0x5500") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40061 ( input A, B, C, D, output Z );

  LUT4 #("0x00AA") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_131 ( input DI1, DI0, D1, A1, C0, B0, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  lut40060 i374_2_lut( .A(A1), .B(GNDI), .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40062 i375_2_lut( .A(GNDI), .B(B0), .C(C0), .D(GNDI), .Z(F0));
  ffsre2 \STATE_OUT/serial/j__i13 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \STATE_OUT/serial/j__i12 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module lut40062 ( input A, B, C, D, output Z );

  LUT4 #("0x3030") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_133 ( input DI1, DI0, B1, A1, D0, C0, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  lut40054 i372_2_lut( .A(A1), .B(B1), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40063 i373_2_lut( .A(GNDI), .B(GNDI), .C(C0), .D(D0), .Z(F0));
  ffsre2 \STATE_OUT/serial/j__i15 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \STATE_OUT/serial/j__i14 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module lut40063 ( input A, B, C, D, output Z );

  LUT4 #("0x00F0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_135 ( input DI1, DI0, C1, A1, B0, A0, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  lut40046 i370_2_lut( .A(A1), .B(GNDI), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40064 i371_2_lut( .A(A0), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));
  ffsre2 \STATE_OUT/serial/j__i17 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \STATE_OUT/serial/j__i16 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module lut40064 ( input A, B, C, D, output Z );

  LUT4 #("0x2222") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_137 ( input DI1, DI0, C1, B1, D0, C0, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  lut40065 i368_2_lut( .A(GNDI), .B(B1), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40063 i369_2_lut( .A(GNDI), .B(GNDI), .C(C0), .D(D0), .Z(F0));
  ffsre2 \STATE_OUT/serial/j__i19 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \STATE_OUT/serial/j__i18 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module lut40065 ( input A, B, C, D, output Z );

  LUT4 #("0x0C0C") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_140 ( input DI0, D0, CE, LSR, CLK, output Q0, F0 );
  wire   GNDI, DI0_dly, CLK_dly, CE_dly, LSR_dly;

  lut40066 SLICE_140_K0( .A(GNDI), .B(GNDI), .C(GNDI), .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre20067 \STATE_OUT/serial/temp_data_out_i0_i3 ( .D0(DI0_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module lut40066 ( input A, B, C, D, output Z );

  LUT4 #("0xFF00") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module ffsre20067 ( input D0, SP, CK, LSR, output Q );

  FD1P3XZ INST01( .D(D0), .SP(SP), .CK(CK), .SR(LSR), .Q(Q));
  defparam INST01.REGSET = "SET";
  defparam INST01.SRMODE = "CE_OVER_LSR";
endmodule

module keyboard_SLICE_142 ( input C1, A1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40068 \keyboard/i1_2_lut_adj_40 ( .A(A1), .B(GNDI), .C(C1), .D(GNDI), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40069 \keyboard/i12_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40068 ( input A, B, C, D, output Z );

  LUT4 #("0xFAFA") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40069 ( input A, B, C, D, output Z );

  LUT4 #("0xBDA8") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_144 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40070 n2532_bdd_4_lut_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40071 \Sreg[0]_bdd_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40070 ( input A, B, C, D, output Z );

  LUT4 #("0xE0E3") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40071 ( input A, B, C, D, output Z );

  LUT4 #("0xF388") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module keyboard_SLICE_146 ( input D1, C1, B1, A1, C0, A0, output F0, F1 );
  wire   GNDI;

  lut40072 \keyboard/i4_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40073 \keyboard/i1_2_lut_adj_37 ( .A(A0), .B(GNDI), .C(C0), .D(GNDI), 
    .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40072 ( input A, B, C, D, output Z );

  LUT4 #("0xFFFB") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40073 ( input A, B, C, D, output Z );

  LUT4 #("0xFAFA") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module keyboard_SLICE_147 ( input D1, C1, B1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40074 \keyboard/i474_3_lut ( .A(GNDI), .B(B1), .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40075 \keyboard/i2_3_lut_4_lut_adj_38 ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40074 ( input A, B, C, D, output Z );

  LUT4 #("0xFC0C") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40075 ( input A, B, C, D, output Z );

  LUT4 #("0xFFFD") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module keyboard_SLICE_148 ( input D1, C1, B1, A1, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40076 \keyboard/i1536_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40077 \keyboard/i468_3_lut ( .A(A0), .B(B0), .C(C0), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40076 ( input A, B, C, D, output Z );

  LUT4 #("0x8000") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40077 ( input A, B, C, D, output Z );

  LUT4 #("0xD8D8") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module keyboard_SLICE_149 ( input D1, C1, A1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40078 \keyboard/i482_3_lut ( .A(A1), .B(GNDI), .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40079 \keyboard/i2_3_lut_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40078 ( input A, B, C, D, output Z );

  LUT4 #("0xAFA0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40079 ( input A, B, C, D, output Z );

  LUT4 #("0xFFFD") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module keyboard_SLICE_151 ( input C0, B0, A0, output F0 );
  wire   GNDI;

  lut40080 \keyboard/i488_3_lut ( .A(A0), .B(B0), .C(C0), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40080 ( input A, B, C, D, output Z );

  LUT4 #("0xE4E4") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module mainTimer_SLICE_152 ( input C1, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40081 \mainTimer/EN_I_0_1_lut ( .A(GNDI), .B(GNDI), .C(C1), .D(GNDI), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40082 i1_3_lut( .A(A0), .B(B0), .C(C0), .D(GNDI), .Z(F0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40081 ( input A, B, C, D, output Z );

  LUT4 #("0x0F0F") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40082 ( input A, B, C, D, output Z );

  LUT4 #("0xECEC") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_154 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40083 i1_4_lut_adj_41( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40084 i2_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40083 ( input A, B, C, D, output Z );

  LUT4 #("0xF1F0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40084 ( input A, B, C, D, output Z );

  LUT4 #("0x000B") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module keyboard_SLICE_156 ( input D1, C1, B1, A1, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40085 i2_4_lut_adj_42( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40086 \keyboard/i1_2_lut ( .A(A0), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40085 ( input A, B, C, D, output Z );

  LUT4 #("0x0040") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40086 ( input A, B, C, D, output Z );

  LUT4 #("0xDDDD") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_157 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40087 i1_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40088 i464_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40087 ( input A, B, C, D, output Z );

  LUT4 #("0x0023") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40088 ( input A, B, C, D, output Z );

  LUT4 #("0xB8F0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module keyboard_SLICE_160 ( input D1, C1, A1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40078 \keyboard/i486_3_lut ( .A(A1), .B(GNDI), .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40089 \keyboard/i2_3_lut_4_lut_adj_39 ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40089 ( input A, B, C, D, output Z );

  LUT4 #("0xFEFF") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module keyboard_SLICE_162 ( input D1, C1, B1, A1, D0, C0, output F0, F1 );
  wire   GNDI;

  lut40090 \keyboard/i476_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40091 \keyboard/i718_2_lut ( .A(GNDI), .B(GNDI), .C(C0), .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40090 ( input A, B, C, D, output Z );

  LUT4 #("0x0F08") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40091 ( input A, B, C, D, output Z );

  LUT4 #("0xFFF0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module keyboard_SLICE_164 ( input D1, C1, B1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40074 \keyboard/i484_3_lut ( .A(GNDI), .B(B1), .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40092 \keyboard/i708_2_lut_3_lut_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40092 ( input A, B, C, D, output Z );

  LUT4 #("0xFFFE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_166 ( input D1, C1, B1, A1, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40093 mux_15_i1_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40094 equal_8_i3_2_lut( .A(A0), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40093 ( input A, B, C, D, output Z );

  LUT4 #("0x8DAF") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40094 ( input A, B, C, D, output Z );

  LUT4 #("0xEEEE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_168 ( input D1, C1, B1, A1, D0, C0, A0, output F0, F1 );
  wire   GNDI;

  lut40095 i2_4_lut_adj_43( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40096 i673_3_lut( .A(A0), .B(GNDI), .C(C0), .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40095 ( input A, B, C, D, output Z );

  LUT4 #("0xDDFD") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40096 ( input A, B, C, D, output Z );

  LUT4 #("0xFAFF") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module mainTimer_SLICE_170 ( input D1, C1, B1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40097 \mainTimer/i6_3_lut ( .A(GNDI), .B(B1), .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40098 \mainTimer/i1534_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40097 ( input A, B, C, D, output Z );

  LUT4 #("0xFFCF") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40098 ( input A, B, C, D, output Z );

  LUT4 #("0x8000") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module mainTimer_SLICE_172 ( input DI1, D1, C1, B1, A1, D0, C0, B0, A0, LSR, 
    CLK, output Q1, F0, F1 );
  wire   VCCI, DI1_dly, CLK_dly, LSR_dly;

  lut40099 \mainTimer/i5_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40100 \mainTimer/i7_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  ffsre20002 \mainTimer/state ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module lut40099 ( input A, B, C, D, output Z );

  LUT4 #("0x8000") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40100 ( input A, B, C, D, output Z );

  LUT4 #("0xFFFE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module mainTimer_SLICE_173 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, 
    F1 );

  lut40101 \mainTimer/i1_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40092 \mainTimer/i8_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40101 ( input A, B, C, D, output Z );

  LUT4 #("0x0002") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_174 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40102 i1796_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40103 i1678_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40102 ( input A, B, C, D, output Z );

  LUT4 #("0x5010") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40103 ( input A, B, C, D, output Z );

  LUT4 #("0xFCF8") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_176 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40104 i40_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40105 i1672_2_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40104 ( input A, B, C, D, output Z );

  LUT4 #("0xF044") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40105 ( input A, B, C, D, output Z );

  LUT4 #("0xEF00") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module STATE_OUT_SLICE_178 ( input D0, A0, output F0 );
  wire   GNDI;

  lut40106 \STATE_OUT/i3_2_lut ( .A(A0), .B(GNDI), .C(GNDI), .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40106 ( input A, B, C, D, output Z );

  LUT4 #("0xFFAA") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module STATE_OUT_SLICE_179 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, 
    F1 );

  lut40107 \STATE_OUT/i23_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40108 \STATE_OUT/i17_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40107 ( input A, B, C, D, output Z );

  LUT4 #("0xFFFE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40108 ( input A, B, C, D, output Z );

  LUT4 #("0xFFFE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module STATE_OUT_SLICE_180 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, 
    F1 );

  lut40109 \STATE_OUT/i27_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40110 \STATE_OUT/i21_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40109 ( input A, B, C, D, output Z );

  LUT4 #("0xFFFE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40110 ( input A, B, C, D, output Z );

  LUT4 #("0xFFFE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module STATE_OUT_SLICE_182 ( input D1, C1, B1, A1, D0, B0, output F0, F1 );
  wire   GNDI;

  lut40111 \STATE_OUT/i22_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40006 \STATE_OUT/i1_2_lut ( .A(GNDI), .B(B0), .C(GNDI), .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40111 ( input A, B, C, D, output Z );

  LUT4 #("0xFFFE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module STATE_OUT_SLICE_184 ( input C1, B1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40052 \STATE_OUT/i114_2_lut ( .A(GNDI), .B(B1), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40112 \STATE_OUT/i678_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40112 ( input A, B, C, D, output Z );

  LUT4 #("0x00FE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module STATE_OUT_serial_SLICE_186 ( input D1, C1, B1, A1, D0, C0, B0, A0, 
    output F0, F1 );

  lut40111 \STATE_OUT/serial/i27_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40113 \STATE_OUT/serial/i21_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40113 ( input A, B, C, D, output Z );

  LUT4 #("0xFFFE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module STATE_OUT_serial_SLICE_188 ( input D1, C1, B1, A1, B0, A0, output F0, 
    F1 );
  wire   GNDI;

  lut40114 \STATE_OUT/serial/i18_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40094 \STATE_OUT/serial/i3_2_lut ( .A(A0), .B(B0), .C(GNDI), .D(GNDI), 
    .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40114 ( input A, B, C, D, output Z );

  LUT4 #("0xFFFE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module STATE_OUT_serial_SLICE_189 ( input D1, C1, B1, A1, D0, C0, B0, A0, 
    output F0, F1 );

  lut40115 \STATE_OUT/serial/i23_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40116 \STATE_OUT/serial/i17_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40115 ( input A, B, C, D, output Z );

  LUT4 #("0xFFFE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40116 ( input A, B, C, D, output Z );

  LUT4 #("0xFFFE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module STATE_OUT_serial_SLICE_190 ( input D1, C1, B1, A1, D0, B0, A0, output 
    F0, F1 );
  wire   GNDI;

  lut40117 \STATE_OUT/serial/i26_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40118 \STATE_OUT/serial/i15_3_lut ( .A(A0), .B(B0), .C(GNDI), .D(D0), 
    .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40117 ( input A, B, C, D, output Z );

  LUT4 #("0xFFFE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40118 ( input A, B, C, D, output Z );

  LUT4 #("0xFFEE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module STATE_OUT_serial_SLICE_194 ( input DI1, D1, C1, B1, A1, D0, C0, B0, A0, 
    LSR, CLK, output Q1, F0, F1 );
  wire   VCCI, DI1_dly, CLK_dly, LSR_dly;

  lut40119 \STATE_OUT/serial/n2526_bdd_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40120 \STATE_OUT/serial/j[0]_bdd_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));
  ffsre2 \STATE_OUT/serial/status_out ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module lut40119 ( input A, B, C, D, output Z );

  LUT4 #("0xF4A4") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40120 ( input A, B, C, D, output Z );

  LUT4 #("0xBCB0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module STATE_OUT_serial_SLICE_195 ( input D1, C1, B1, A1, C0, A0, output F0, 
    F1 );
  wire   GNDI;

  lut40121 \STATE_OUT.serial.i93_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40049 \STATE_OUT/serial/i334_2_lut_2_lut ( .A(A0), .B(GNDI), .C(C0), 
    .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40121 ( input A, B, C, D, output Z );

  LUT4 #("0x5F4F") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module STATE_OUT_SLICE_196 ( input D0, C0, B0, A0, output F0 );

  lut40122 \STATE_OUT/i1670_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40122 ( input A, B, C, D, output Z );

  LUT4 #("0xFEFF") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module STATE_OUT_SLICE_197 ( input DI1, D1, C1, B1, A0, CLK, output Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly;

  lut40123 \STATE_OUT/i12_3_lut ( .A(GNDI), .B(B1), .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40008 \STATE_OUT/waiting_I_31_1_lut ( .A(A0), .B(GNDI), .C(GNDI), 
    .D(GNDI), .Z(F0));
  ffsre2 \STATE_OUT/waiting_c ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
  endspecify

endmodule

module lut40123 ( input A, B, C, D, output Z );

  LUT4 #("0xFC30") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module keyboard_SLICE_198 ( input D1, C1, B1, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40124 \keyboard/i472_3_lut ( .A(GNDI), .B(B1), .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40125 \keyboard/i470_3_lut ( .A(A0), .B(B0), .C(C0), .D(GNDI), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40124 ( input A, B, C, D, output Z );

  LUT4 #("0xF0CC") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40125 ( input A, B, C, D, output Z );

  LUT4 #("0xE2E2") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_200 ( input B0, A0, output F0 );
  wire   GNDI;

  lut40126 i1524_2_lut( .A(A0), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40126 ( input A, B, C, D, output Z );

  LUT4 #("0xEEEE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module keyboard_SLICE_201 ( input D0, C0, A0, output F0 );
  wire   GNDI;

  lut40127 \keyboard/i1_2_lut_3_lut ( .A(A0), .B(GNDI), .C(C0), .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40127 ( input A, B, C, D, output Z );

  LUT4 #("0xFFAF") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module STATE_OUT_serial_SLICE_203 ( input D0, C0, B0, A0, output F0 );

  lut40128 \STATE_OUT/serial/i20_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40128 ( input A, B, C, D, output Z );

  LUT4 #("0xFFFE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module STATE_OUT_serial_SLICE_204 ( input D0, C0, B0, A0, output F0 );

  lut40129 \STATE_OUT/serial/i19_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40129 ( input A, B, C, D, output Z );

  LUT4 #("0xFFFE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module STATE_OUT_SLICE_206 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, 
    F1 );

  lut40130 \STATE_OUT/i19_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40131 \STATE_OUT/i18_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40130 ( input A, B, C, D, output Z );

  LUT4 #("0xFFFE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40131 ( input A, B, C, D, output Z );

  LUT4 #("0xFFFE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module STATE_OUT_SLICE_207 ( input D0, C0, B0, A0, output F0 );

  lut40131 \STATE_OUT/i20_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_208 ( output F0 );
  wire   GNDI;

  lut40132 i2( .A(GNDI), .B(GNDI), .C(GNDI), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
  endspecify

endmodule

module lut40132 ( input A, B, C, D, output Z );

  LUT4 #("0xFFFF") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_209 ( input DI1, D1, C1, B1, A1, D0, B0, CLK, output Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly;

  lut40133 i458_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40134 i642_2_lut( .A(GNDI), .B(B0), .C(GNDI), .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \STATE_OUT/serial/temp_data_out_i0_i2 ( .D0(DI1_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
  endspecify

endmodule

module lut40133 ( input A, B, C, D, output Z );

  LUT4 #("0xEC20") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40134 ( input A, B, C, D, output Z );

  LUT4 #("0xCC00") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module mainTimer_SLICE_212 ( input B0, A0, output F0 );
  wire   GNDI;

  lut40135 \mainTimer/i2_2_lut ( .A(A0), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40135 ( input A, B, C, D, output Z );

  LUT4 #("0x8888") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module STATE_OUT_SLICE_213 ( input DI1, D1, B0, CLK, output Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly;

  lut40136 \STATE_OUT.SLICE_213_K1 ( .A(GNDI), .B(GNDI), .C(GNDI), .D(D1), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40037 \STATE_OUT/i92_1_lut ( .A(GNDI), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));
  ffsre2 \STATE_OUT/init_c ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
  endspecify

endmodule

module lut40136 ( input A, B, C, D, output Z );

  LUT4 #("0x00FF") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module OSCInst1 ( input CLKLFPU, CLKLFEN, output CLKLF );
  wire   GNDI;

  LSOSC_CORE_B OSCInst1( .CLKLFPU(CLKLFPU), .CLKLFEN(CLKLFEN), .TRIM9(GNDI), 
    .TRIM8(GNDI), .TRIM7(GNDI), .TRIM6(GNDI), .TRIM5(GNDI), .TRIM4(GNDI), 
    .TRIM3(GNDI), .TRIM2(GNDI), .TRIM1(GNDI), .TRIM0(GNDI), .CLKLF(CLKLF));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
  endspecify

endmodule

module LSOSC_CORE_B ( input CLKLFPU, CLKLFEN, TRIM9, TRIM8, TRIM7, TRIM6, 
    TRIM5, TRIM4, TRIM3, TRIM2, TRIM1, TRIM0, output CLKLF );

  LSOSC_CORE INST10( .CLKLFPU(CLKLFPU), .CLKLFEN(CLKLFEN), .TRIM9(TRIM9), 
    .TRIM8(TRIM8), .TRIM7(TRIM7), .TRIM6(TRIM6), .TRIM5(TRIM5), .TRIM4(TRIM4), 
    .TRIM3(TRIM3), .TRIM2(TRIM2), .TRIM1(TRIM1), .TRIM0(TRIM0), .CLKLF(CLKLF));
  defparam INST10.FABRIC_TRIME = "DISABLE";
endmodule

module STATE_OUT_serial_status_send ( input DO0, OUTCLK, output PADDO );
  wire   GNDI, VCCI, DO0_dly, OUTCLK_dly;

  IOL_B_B \STATE_OUT/serial/status_send ( .PADDI(GNDI), .DO1(GNDI), 
    .DO0(DO0_dly), .CE(VCCI), .IOLTO(GNDI), .HOLD(GNDI), .INCLK(GNDI), 
    .OUTCLK(OUTCLK_dly), .PADDO(PADDO), .PADDT(), .DI1(), .DI0());
  gnd DRIVEGND( .PWR0(GNDI));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (OUTCLK => PADDO) = (0:0:0,0:0:0);
    $setuphold (posedge OUTCLK, DO0, 0:0:0, 0:0:0,,,, OUTCLK_dly, DO0_dly);
  endspecify

endmodule

module IOL_B_B ( input PADDI, DO1, DO0, CE, IOLTO, HOLD, INCLK, OUTCLK, 
    output PADDO, PADDT, DI1, DI0 );

  IOL_B INST10( .PADDI(PADDI), .DO1(DO1), .DO0(DO0), .CE(CE), .IOLTO(IOLTO), 
    .HOLD(HOLD), .INCLK(INCLK), .OUTCLK(OUTCLK), .PADDO(PADDO), .PADDT(PADDT), 
    .DI1(DI1), .DI0(DI0));
  defparam INST10.LATCHIN = "LATCH_REG";
  defparam INST10.DDROUT = "NO";
endmodule

module STATUS_SEND ( input PADDO, output STATUS_SEND );
  wire   VCCI;

  BB_B_B \STATUS_SEND_pad.bb_inst ( .T_N(VCCI), .I(PADDO), .O(), 
    .B(STATUS_SEND));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (PADDO => STATUS_SEND) = (0:0:0,0:0:0);
  endspecify

endmodule

module BB_B_B ( input T_N, I, output O, inout B );

  BB_B INST10( .T_N(T_N), .I(I), .O(O), .B(B));
endmodule

module STATUS_OUT ( input PADDO, output STATUS_OUT );
  wire   VCCI;

  BB_B_B \STATUS_OUT_pad.bb_inst ( .T_N(VCCI), .I(PADDO), .O(), .B(STATUS_OUT));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (PADDO => STATUS_OUT) = (0:0:0,0:0:0);
  endspecify

endmodule

module SIREN_OUT ( input PADDO, output SIREN_OUT );
  wire   VCCI;

  BB_B_B \SIREN_OUT_pad.bb_inst ( .T_N(VCCI), .I(PADDO), .O(), .B(SIREN_OUT));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (PADDO => SIREN_OUT) = (0:0:0,0:0:0);
  endspecify

endmodule

module SERCLK_OUT ( input PADDO, output SERCLK_OUT );
  wire   VCCI;

  BB_B_B \SERCLK_OUT_pad.bb_inst ( .T_N(VCCI), .I(PADDO), .O(), .B(SERCLK_OUT));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (PADDO => SERCLK_OUT) = (0:0:0,0:0:0);
  endspecify

endmodule

module KEY_STATUS_1_ ( input PADDO, output KEYSTATUS1 );
  wire   VCCI;

  BB_B_B \KEY_STATUS_pad[1].bb_inst ( .T_N(VCCI), .I(PADDO), .O(), 
    .B(KEYSTATUS1));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (PADDO => KEYSTATUS1) = (0:0:0,0:0:0);
  endspecify

endmodule

module KEY_STATUS_0_ ( input PADDO, output KEYSTATUS0 );
  wire   VCCI;

  BB_B_B \KEY_STATUS_pad[0].bb_inst ( .T_N(VCCI), .I(PADDO), .O(), 
    .B(KEYSTATUS0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (PADDO => KEYSTATUS0) = (0:0:0,0:0:0);
  endspecify

endmodule

module debug_1_ ( input PADDO, output debug1 );
  wire   VCCI;

  BB_B_B \debug_pad[1].bb_inst ( .T_N(VCCI), .I(PADDO), .O(), .B(debug1));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (PADDO => debug1) = (0:0:0,0:0:0);
  endspecify

endmodule

module debug_0_ ( input PADDO, output debug0 );
  wire   VCCI;

  BB_B_B \debug_pad[0].bb_inst ( .T_N(VCCI), .I(PADDO), .O(), .B(debug0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (PADDO => debug0) = (0:0:0,0:0:0);
  endspecify

endmodule

module timeout ( input PADDO, output timeout );
  wire   VCCI;

  BB_B_B \timeout_pad.bb_inst ( .T_N(VCCI), .I(PADDO), .O(), .B(timeout));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (PADDO => timeout) = (0:0:0,0:0:0);
  endspecify

endmodule

module SENSOR1_IN ( output PADDI, input SENSOR1_IN );
  wire   GNDI;

  BB_B_B \SENSOR1_IN_pad.bb_inst ( .T_N(GNDI), .I(GNDI), .O(PADDI), 
    .B(SENSOR1_IN));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (SENSOR1_IN => PADDI) = (0:0:0,0:0:0);
  endspecify

endmodule

module SENSOR2_IN ( output PADDI, input SENSOR2_IN );
  wire   GNDI;

  BB_B_B \SENSOR2_IN_pad.bb_inst ( .T_N(GNDI), .I(GNDI), .O(PADDI), 
    .B(SENSOR2_IN));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (SENSOR2_IN => PADDI) = (0:0:0,0:0:0);
  endspecify

endmodule

module KB_IN_1_ ( output PADDI, input KBIN1 );
  wire   GNDI;

  BB_B_B \KB_IN_pad[1].bb_inst ( .T_N(GNDI), .I(GNDI), .O(PADDI), .B(KBIN1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (KBIN1 => PADDI) = (0:0:0,0:0:0);
  endspecify

endmodule

module KB_IN_0_ ( output PADDI, input KBIN0 );
  wire   GNDI;

  BB_B_B \KB_IN_pad[0].bb_inst ( .T_N(GNDI), .I(GNDI), .O(PADDI), .B(KBIN0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (KBIN0 => PADDI) = (0:0:0,0:0:0);
  endspecify

endmodule

module KB_RECV ( output PADDI, input KB_RECV );
  wire   GNDI;

  BB_B_B \KB_RECV_pad.bb_inst ( .T_N(GNDI), .I(GNDI), .O(PADDI), .B(KB_RECV));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (KB_RECV => PADDI) = (0:0:0,0:0:0);
  endspecify

endmodule

module RESET_IN ( output PADDI, input RESET_IN );
  wire   GNDI;

  BB_B_B \RESET_IN_pad.bb_inst ( .T_N(GNDI), .I(GNDI), .O(PADDI), .B(RESET_IN));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (RESET_IN => PADDI) = (0:0:0,0:0:0);
  endspecify

endmodule

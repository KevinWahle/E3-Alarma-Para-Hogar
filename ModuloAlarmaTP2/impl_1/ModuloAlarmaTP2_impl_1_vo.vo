
// Verilog netlist produced by program backanno, Version Radiant Software (64-bit) 3.0.0.24.1

// backanno -o ModuloAlarmaTP2_impl_1_vo.vo -sp High-Performance_1.2V -w -neg -gui ModuloAlarmaTP2_impl_1.udb 
// Netlist created on Thu Nov 18 13:30:50 2021
// Netlist written on Thu Nov 18 13:30:56 2021
// Design is for device iCE40UP5K
// Design is for package SG48
// Design is for performance grade High-Performance_1.2V

`timescale 1 ns / 1 ps

module MainModule ( STATUS_SEND, STATUS_OUT, SIREN_OUT, SERCLK_OUT, SENSOR1_IN, 
                    SENSOR2_IN, KB_IN, KB_RECV, RESET_IN );
  input  SENSOR1_IN, SENSOR2_IN;
  input  [1:0] KB_IN;
  input  KB_RECV, RESET_IN;
  output STATUS_SEND, STATUS_OUT, SIREN_OUT, SERCLK_OUT;
  wire   \mainTimer.n3071 , \mainTimer.clkCont[16] , \mainTimer.n1212 , 
         \mainTimer.clkCont[15] , \mainTimer.clkCont_17__N_40[15] , 
         \mainTimer.clkCont_17__N_40[16] , \mainTimer.n1214 , 
         \mainTimer.n3068 , \mainTimer.clkCont[14] , \mainTimer.n1210 , 
         \mainTimer.clkCont[13] , \mainTimer.clkCont_17__N_40[13] , 
         \mainTimer.clkCont_17__N_40[14] , \mainTimer.n3065 , 
         \mainTimer.clkCont[12] , \mainTimer.n1208 , \mainTimer.clkCont[11] , 
         \mainTimer.clkCont_17__N_40[11] , \mainTimer.clkCont_17__N_40[12] , 
         \mainTimer.n3062 , \mainTimer.clkCont[10] , \mainTimer.n1206 , 
         \mainTimer.clkCont[9] , \mainTimer.clkCont_17__N_40[9] , 
         \mainTimer.clkCont_17__N_40[10] , \mainTimer.n3059 , 
         \mainTimer.clkCont[8] , \mainTimer.n1204 , \mainTimer.clkCont[7] , 
         \mainTimer.clkCont_17__N_40[7] , \mainTimer.clkCont_17__N_40[8] , 
         \mainTimer.n3056 , \mainTimer.clkCont[6] , \mainTimer.n1202 , 
         \mainTimer.clkCont[5] , \mainTimer.clkCont_17__N_40[5] , 
         \mainTimer.clkCont_17__N_40[6] , \mainTimer.n3053 , 
         \mainTimer.clkCont[4] , \mainTimer.n1200 , \mainTimer.clkCont[3] , 
         \mainTimer.clkCont_17__N_40[3] , \mainTimer.clkCont_17__N_40[4] , 
         \mainTimer.n3050 , \mainTimer.clkCont[2] , \mainTimer.n1198 , 
         \mainTimer.clkCont[1] , \mainTimer.clkCont_17__N_40[1] , 
         \mainTimer.clkCont_17__N_40[2] , \mainTimer.n3074 , 
         \mainTimer.clkCont[17] , \mainTimer.clkCont_17__N_40[17] , 
         \mainTimer.n2960 , VCC_net, \mainTimer.clkCont[0] , 
         \mainTimer.clkCont_17__N_40[0] , \STATE_OUT.n2915 , \j[4] , 
         \STATE_OUT.n1167 , \j[3] , \waiting_N_140[3] , \waiting_N_140[4] , 
         \STATE_OUT.n1169 , \STATE_OUT.n2936 , \j[18] , \STATE_OUT.n1181 , 
         \j[17] , \waiting_N_140[17] , \waiting_N_140[18] , \STATE_OUT.n1183 , 
         \STATE_OUT.waiting_N_140[1] , \STATE_OUT.n2912 , \j[2] , 
         \STATE_OUT.n1165 , \STATE_OUT.j[1]_2 , \STATE_OUT.waiting_N_135 , 
         \STATE_OUT.n135_c , SERCLK_OUT_c, \waiting_N_140[2] , 
         \STATE_OUT.waiting_N_140[0] , \STATE_OUT.n2909 , \STATE_OUT.j[0]_2 , 
         \STATE_OUT.n2933 , \j[16] , \STATE_OUT.n1179 , \j[15] , 
         \waiting_N_140[15] , \waiting_N_140[16] , \STATE_OUT.n2930 , \j[14] , 
         \STATE_OUT.n1177 , \j[13] , \waiting_N_140[13] , \waiting_N_140[14] , 
         \STATE_OUT.n2927 , \j[12] , \STATE_OUT.n1175 , \j[11] , 
         \waiting_N_140[11] , \waiting_N_140[12] , \STATE_OUT.n2924 , \j[10] , 
         \STATE_OUT.n1173 , \j[9] , \waiting_N_140[9] , \waiting_N_140[10] , 
         \STATE_OUT.n2921 , \j[8] , \STATE_OUT.n1171 , \j[7] , 
         \waiting_N_140[7] , \waiting_N_140[8] , \STATE_OUT.n2918 , \j[6] , 
         \j[5] , \waiting_N_140[5] , \waiting_N_140[6] , \STATE_OUT.n2957 , 
         \STATE_OUT.n1195 , \j[31] , \waiting_N_140[31] , \STATE_OUT.n2954 , 
         \j[30] , \STATE_OUT.n1193 , \j[29] , \waiting_N_140[29] , 
         \waiting_N_140[30] , \STATE_OUT.n2951 , \j[28] , \STATE_OUT.n1191 , 
         \j[27] , \waiting_N_140[27] , \waiting_N_140[28] , \STATE_OUT.n2948 , 
         \j[26] , \STATE_OUT.n1189 , \j[25] , \waiting_N_140[25] , 
         \waiting_N_140[26] , \STATE_OUT.n2945 , \j[24] , \STATE_OUT.n1187 , 
         \j[23] , \waiting_N_140[23] , \waiting_N_140[24] , \STATE_OUT.n2942 , 
         \j[22] , \STATE_OUT.n1185 , \j[21] , \waiting_N_140[21] , 
         \waiting_N_140[22] , \STATE_OUT.n2939 , \j[20] , \j[19] , 
         \waiting_N_140[19] , \waiting_N_140[20] , \STATE_OUT.serial.n3038 , 
         \STATE_OUT.serial.n1162 , \STATE_OUT.serial.j[31] , n135, 
         \STATE_OUT.serial.n3005 , \STATE_OUT.serial.j[10] , 
         \STATE_OUT.serial.n1140 , \STATE_OUT.serial.j[9] , n157, n156, 
         \STATE_OUT.serial.n1142 , \STATE_OUT.serial.n3035 , 
         \STATE_OUT.serial.j[30] , \STATE_OUT.serial.n1160 , 
         \STATE_OUT.serial.j[29] , n137, n136, \STATE_OUT.serial.n3032 , 
         \STATE_OUT.serial.j[28] , \STATE_OUT.serial.n1158 , 
         \STATE_OUT.serial.j[27] , n139, n138, \STATE_OUT.serial.n3029 , 
         \STATE_OUT.serial.j[26] , \STATE_OUT.serial.n1156 , 
         \STATE_OUT.serial.j[25] , n141, n140, \STATE_OUT.serial.n3026 , 
         \STATE_OUT.serial.j[24] , \STATE_OUT.serial.n1154 , 
         \STATE_OUT.serial.j[23] , n143, n142, \STATE_OUT.serial.n2996 , 
         \STATE_OUT.serial.j[4] , \STATE_OUT.serial.n1134 , 
         \STATE_OUT.serial.j[3] , n163, n162, \STATE_OUT.serial.n1136 , 
         \STATE_OUT.serial.n3023 , \STATE_OUT.serial.j[22] , 
         \STATE_OUT.serial.n1152 , \STATE_OUT.serial.j[21] , n145, n144, 
         \STATE_OUT.serial.n167[1] , \STATE_OUT.serial.n2993 , 
         \STATE_OUT.serial.j[2] , \STATE_OUT.serial.n1132 , 
         \STATE_OUT.serial.j[1] , n114, n164, \STATE_OUT.serial.n3020 , 
         \STATE_OUT.serial.j[20] , \STATE_OUT.serial.n1150 , 
         \STATE_OUT.serial.j[19] , n147, n146, \STATE_OUT.serial.n3011 , 
         \STATE_OUT.serial.j[14] , \STATE_OUT.serial.n1144 , 
         \STATE_OUT.serial.j[13] , n153, n152, \STATE_OUT.serial.n1146 , 
         \STATE_OUT.serial.n3017 , \STATE_OUT.serial.j[18] , 
         \STATE_OUT.serial.n1148 , \STATE_OUT.serial.j[17] , n149, n148, 
         \STATE_OUT.serial.n3002 , \STATE_OUT.serial.j[8] , 
         \STATE_OUT.serial.n1138 , \STATE_OUT.serial.j[7] , n159, n158, 
         \STATE_OUT.serial.n3014 , \STATE_OUT.serial.j[16] , 
         \STATE_OUT.serial.j[15] , n151, n150, \STATE_OUT.serial.n3008 , 
         \STATE_OUT.serial.j[12] , \STATE_OUT.serial.j[11] , n155, n154, 
         \STATE_OUT.serial.n2999 , \STATE_OUT.serial.j[6] , 
         \STATE_OUT.serial.j[5] , n161, n160, \STATE_OUT.serial.n167[0] , 
         \STATE_OUT.serial.n2990 , \STATE_OUT.serial.j[0] , \Snext[1]$n1 , 
         \Snext[0]$n0 , \Snext_1__N_1[1] , Snext_1__N_3, \Snext[1] , 
         \Snext[0] , \Snext_1__N_1[0] , RESET_IN_c, \Sreg[0] , \Sreg[1] , 
         \keyboard.nextState[0]$n3 , \keyboard.nextState[1]$n2 , 
         \keyboard.nextState[0] , \keyboard.counter[0] , \keyboard.counter[1] , 
         \keyboard.n340 , \keyboard.n6 , \state[0] , \state[1] , 
         \keyboard.n13[1] , \keyboard.n1 , KB_RECV_c, \mainTimer.n2651 , 
         \mainTimer.n20 , \mainTimer.n24 , \mainTimer.clkCont_17__N_37 , 
         TIME_OUT, \mainTimer.clkCont_17__N_19[16] , 
         \mainTimer.clkCont_17__N_19[17] , \mainTimer.clkCont_17__N_19[14] , 
         \mainTimer.clkCont_17__N_19[15] , \mainTimer.clkCont_17__N_19[12] , 
         \mainTimer.clkCont_17__N_19[13] , \mainTimer.clkCont_17__N_19[10] , 
         \mainTimer.clkCont_17__N_19[11] , \mainTimer.clkCont_17__N_19[8] , 
         \mainTimer.clkCont_17__N_19[9] , \mainTimer.clkCont_17__N_19[6] , 
         \mainTimer.clkCont_17__N_19[7] , \mainTimer.clkCont_17__N_19[4] , 
         \mainTimer.clkCont_17__N_19[5] , \mainTimer.clkCont_17__N_19[2] , 
         \mainTimer.clkCont_17__N_19[3] , \mainTimer.clkCont_17__N_19[0] , 
         \mainTimer.clkCont_17__N_19[1] , n503, n501, waiting_N_139, waiting, 
         n499, n497, \STATE_OUT.waiting_N_135$n4 , \STATE_OUT.n1595 , 
         \STATE_OUT.n2101 , init, n507, n505, n491, n489, n495, n493, 
         \STATE_OUT.n21[1] , \STATE_OUT.n21[0] , \STATE_OUT.cont[1] , 
         \STATE_OUT.cont[0] , n444, n442, n448, n446, n452, n450, n456, n454, 
         n529, n531, n525, n527, n521, n523, n517, n519, n513, n515, n509, 
         n511, \STATE_OUT.n21[3] , \STATE_OUT.n21[2] , \STATE_OUT.cont[3] , 
         \STATE_OUT.cont[2] , n470, n471, n468, n469, n466, n467, n464, n465, 
         n462, n463, n460, n461, n458, n459, n486, n487, 
         \Sreg[1].sig_000.FeedThruLUT , \STATE_OUT.n113 , 
         \STATE_OUT.serial.n439 , \STATE_OUT.serial.temp_data_out[0]_2 , n484, 
         n485, n482, n483, n480, n481, n478, n479, n476, n477, n474, n475, 
         \SENSOR1_IN_c.sig_001.FeedThruLUT , SENSOR1_IN_c, 
         \STATE_OUT.serial.temp_data_out[2]_2 , n472, n473, 
         \keyboard.nextState[1] , n2475, n2107, \Snext_1__N_5[0] , 
         \KEY_STATUS[0] , \KEY_STATUS_1__N_253[1] , n9, TIMER_EN, n1711, 
         \keyboard.actualKey[3][1] , KB_IN_c_1, \keyboard.n1566 , 
         \keyboard.actualKey[2][1] , \keyboard.n1569 , \keyboard.n6_adj_276 , 
         \keyboard.n1913 , \keyboard.actualKey[3][0] , 
         \keyboard.actualKey[1][0] , \keyboard.actualKey[2][0] , 
         \keyboard.actualKey[0][0] , \keyboard.actualKey[1][1] , 
         \keyboard.actualKey[0][1] , KB_IN_c_0, \keyboard.n1565 , n1720, 
         TIMER_EN_N_13, n1898, n2104, n2106, \keyboard.n786 , 
         \mainTimer.n1905 , \mainTimer.n1917 , \mainTimer.n18 , 
         \mainTimer.n21 , \STATE_OUT.n32 , \STATE_OUT.n46 , \STATE_OUT.n52 , 
         \STATE_OUT.n49 , \STATE_OUT.n50 , \STATE_OUT.n48 , \STATE_OUT.n47 , 
         \STATE_OUT.n56 , \STATE_OUT.n30 , \STATE_OUT.n51 , 
         \STATE_OUT.serial.n49 , \STATE_OUT.serial.n50 , 
         \STATE_OUT.serial.n47 , \STATE_OUT.serial.n48 , 
         \STATE_OUT.serial.n56 , \STATE_OUT.serial.n32 , 
         \STATE_OUT.serial.n46 , \STATE_OUT.serial.n52 , 
         \STATE_OUT.serial.n44 , \STATE_OUT.serial.n55 , n532, 
         \temp_data_out[1] , SIREN_OUT_c, \SENSOR2_IN_c.sig_002.FeedThruLUT , 
         SENSOR2_IN_c, \STATE_OUT.serial.temp_data_out[3]_2 , 
         \STATE_OUT.serial.status_out_N_252 , \STATE_OUT.serial.n2469 , 
         STATUS_OUT_c, STATUS_SEND_c;

  mainTimer_SLICE_0 \mainTimer.SLICE_0 ( .D1(\mainTimer.n3071 ), 
    .B1(\mainTimer.clkCont[16] ), .D0(\mainTimer.n1212 ), 
    .B0(\mainTimer.clkCont[15] ), .CIN0(\mainTimer.n1212 ), 
    .CIN1(\mainTimer.n3071 ), .F0(\mainTimer.clkCont_17__N_40[15] ), 
    .F1(\mainTimer.clkCont_17__N_40[16] ), .COUT1(\mainTimer.n1214 ), 
    .COUT0(\mainTimer.n3071 ));
  mainTimer_SLICE_1 \mainTimer.SLICE_1 ( .D1(\mainTimer.n3068 ), 
    .B1(\mainTimer.clkCont[14] ), .D0(\mainTimer.n1210 ), 
    .B0(\mainTimer.clkCont[13] ), .CIN0(\mainTimer.n1210 ), 
    .CIN1(\mainTimer.n3068 ), .F0(\mainTimer.clkCont_17__N_40[13] ), 
    .F1(\mainTimer.clkCont_17__N_40[14] ), .COUT1(\mainTimer.n1212 ), 
    .COUT0(\mainTimer.n3068 ));
  mainTimer_SLICE_2 \mainTimer.SLICE_2 ( .D1(\mainTimer.n3065 ), 
    .B1(\mainTimer.clkCont[12] ), .D0(\mainTimer.n1208 ), 
    .B0(\mainTimer.clkCont[11] ), .CIN0(\mainTimer.n1208 ), 
    .CIN1(\mainTimer.n3065 ), .F0(\mainTimer.clkCont_17__N_40[11] ), 
    .F1(\mainTimer.clkCont_17__N_40[12] ), .COUT1(\mainTimer.n1210 ), 
    .COUT0(\mainTimer.n3065 ));
  mainTimer_SLICE_3 \mainTimer.SLICE_3 ( .D1(\mainTimer.n3062 ), 
    .B1(\mainTimer.clkCont[10] ), .D0(\mainTimer.n1206 ), 
    .B0(\mainTimer.clkCont[9] ), .CIN0(\mainTimer.n1206 ), 
    .CIN1(\mainTimer.n3062 ), .F0(\mainTimer.clkCont_17__N_40[9] ), 
    .F1(\mainTimer.clkCont_17__N_40[10] ), .COUT1(\mainTimer.n1208 ), 
    .COUT0(\mainTimer.n3062 ));
  mainTimer_SLICE_4 \mainTimer.SLICE_4 ( .D1(\mainTimer.n3059 ), 
    .B1(\mainTimer.clkCont[8] ), .D0(\mainTimer.n1204 ), 
    .B0(\mainTimer.clkCont[7] ), .CIN0(\mainTimer.n1204 ), 
    .CIN1(\mainTimer.n3059 ), .F0(\mainTimer.clkCont_17__N_40[7] ), 
    .F1(\mainTimer.clkCont_17__N_40[8] ), .COUT1(\mainTimer.n1206 ), 
    .COUT0(\mainTimer.n3059 ));
  mainTimer_SLICE_5 \mainTimer.SLICE_5 ( .D1(\mainTimer.n3056 ), 
    .B1(\mainTimer.clkCont[6] ), .D0(\mainTimer.n1202 ), 
    .B0(\mainTimer.clkCont[5] ), .CIN0(\mainTimer.n1202 ), 
    .CIN1(\mainTimer.n3056 ), .F0(\mainTimer.clkCont_17__N_40[5] ), 
    .F1(\mainTimer.clkCont_17__N_40[6] ), .COUT1(\mainTimer.n1204 ), 
    .COUT0(\mainTimer.n3056 ));
  mainTimer_SLICE_6 \mainTimer.SLICE_6 ( .D1(\mainTimer.n3053 ), 
    .B1(\mainTimer.clkCont[4] ), .D0(\mainTimer.n1200 ), 
    .B0(\mainTimer.clkCont[3] ), .CIN0(\mainTimer.n1200 ), 
    .CIN1(\mainTimer.n3053 ), .F0(\mainTimer.clkCont_17__N_40[3] ), 
    .F1(\mainTimer.clkCont_17__N_40[4] ), .COUT1(\mainTimer.n1202 ), 
    .COUT0(\mainTimer.n3053 ));
  mainTimer_SLICE_7 \mainTimer.SLICE_7 ( .D1(\mainTimer.n3050 ), 
    .B1(\mainTimer.clkCont[2] ), .D0(\mainTimer.n1198 ), 
    .B0(\mainTimer.clkCont[1] ), .CIN0(\mainTimer.n1198 ), 
    .CIN1(\mainTimer.n3050 ), .F0(\mainTimer.clkCont_17__N_40[1] ), 
    .F1(\mainTimer.clkCont_17__N_40[2] ), .COUT1(\mainTimer.n1200 ), 
    .COUT0(\mainTimer.n3050 ));
  mainTimer_SLICE_8 \mainTimer.SLICE_8 ( .D1(\mainTimer.n3074 ), 
    .D0(\mainTimer.n1214 ), .B0(\mainTimer.clkCont[17] ), 
    .CIN0(\mainTimer.n1214 ), .CIN1(\mainTimer.n3074 ), 
    .F0(\mainTimer.clkCont_17__N_40[17] ), .COUT0(\mainTimer.n3074 ));
  mainTimer_SLICE_9 \mainTimer.SLICE_9 ( .D1(\mainTimer.n2960 ), .C1(VCC_net), 
    .B1(\mainTimer.clkCont[0] ), .CIN1(\mainTimer.n2960 ), 
    .F1(\mainTimer.clkCont_17__N_40[0] ), .COUT1(\mainTimer.n1198 ), 
    .COUT0(\mainTimer.n2960 ));
  STATE_OUT_SLICE_10 \STATE_OUT.SLICE_10 ( .D1(\STATE_OUT.n2915 ), .B1(\j[4] ), 
    .D0(\STATE_OUT.n1167 ), .B0(\j[3] ), .CIN0(\STATE_OUT.n1167 ), 
    .CIN1(\STATE_OUT.n2915 ), .F0(\waiting_N_140[3] ), .F1(\waiting_N_140[4] ), 
    .COUT1(\STATE_OUT.n1169 ), .COUT0(\STATE_OUT.n2915 ));
  STATE_OUT_SLICE_11 \STATE_OUT.SLICE_11 ( .D1(\STATE_OUT.n2936 ), 
    .B1(\j[18] ), .D0(\STATE_OUT.n1181 ), .B0(\j[17] ), 
    .CIN0(\STATE_OUT.n1181 ), .CIN1(\STATE_OUT.n2936 ), 
    .F0(\waiting_N_140[17] ), .F1(\waiting_N_140[18] ), 
    .COUT1(\STATE_OUT.n1183 ), .COUT0(\STATE_OUT.n2936 ));
  STATE_OUT_SLICE_12 \STATE_OUT.SLICE_12 ( .DI0(\STATE_OUT.waiting_N_140[1] ), 
    .D1(\STATE_OUT.n2912 ), .B1(\j[2] ), .D0(\STATE_OUT.n1165 ), 
    .B0(\STATE_OUT.j[1]_2 ), .CE(\STATE_OUT.waiting_N_135 ), 
    .LSR(\STATE_OUT.n135_c ), .CLK(SERCLK_OUT_c), .CIN0(\STATE_OUT.n1165 ), 
    .CIN1(\STATE_OUT.n2912 ), .Q0(\STATE_OUT.j[1]_2 ), 
    .F0(\STATE_OUT.waiting_N_140[1] ), .F1(\waiting_N_140[2] ), 
    .COUT1(\STATE_OUT.n1167 ), .COUT0(\STATE_OUT.n2912 ));
  STATE_OUT_SLICE_13 \STATE_OUT.SLICE_13 ( .DI1(\STATE_OUT.waiting_N_140[0] ), 
    .D1(\STATE_OUT.n2909 ), .C1(VCC_net), .B1(\STATE_OUT.j[0]_2 ), 
    .CE(\STATE_OUT.waiting_N_135 ), .LSR(\STATE_OUT.n135_c ), 
    .CLK(SERCLK_OUT_c), .CIN1(\STATE_OUT.n2909 ), .Q1(\STATE_OUT.j[0]_2 ), 
    .F1(\STATE_OUT.waiting_N_140[0] ), .COUT1(\STATE_OUT.n1165 ), 
    .COUT0(\STATE_OUT.n2909 ));
  STATE_OUT_SLICE_14 \STATE_OUT.SLICE_14 ( .D1(\STATE_OUT.n2933 ), 
    .B1(\j[16] ), .D0(\STATE_OUT.n1179 ), .B0(\j[15] ), 
    .CIN0(\STATE_OUT.n1179 ), .CIN1(\STATE_OUT.n2933 ), 
    .F0(\waiting_N_140[15] ), .F1(\waiting_N_140[16] ), 
    .COUT1(\STATE_OUT.n1181 ), .COUT0(\STATE_OUT.n2933 ));
  STATE_OUT_SLICE_15 \STATE_OUT.SLICE_15 ( .D1(\STATE_OUT.n2930 ), 
    .B1(\j[14] ), .D0(\STATE_OUT.n1177 ), .B0(\j[13] ), 
    .CIN0(\STATE_OUT.n1177 ), .CIN1(\STATE_OUT.n2930 ), 
    .F0(\waiting_N_140[13] ), .F1(\waiting_N_140[14] ), 
    .COUT1(\STATE_OUT.n1179 ), .COUT0(\STATE_OUT.n2930 ));
  STATE_OUT_SLICE_16 \STATE_OUT.SLICE_16 ( .D1(\STATE_OUT.n2927 ), 
    .B1(\j[12] ), .D0(\STATE_OUT.n1175 ), .B0(\j[11] ), 
    .CIN0(\STATE_OUT.n1175 ), .CIN1(\STATE_OUT.n2927 ), 
    .F0(\waiting_N_140[11] ), .F1(\waiting_N_140[12] ), 
    .COUT1(\STATE_OUT.n1177 ), .COUT0(\STATE_OUT.n2927 ));
  STATE_OUT_SLICE_17 \STATE_OUT.SLICE_17 ( .D1(\STATE_OUT.n2924 ), 
    .B1(\j[10] ), .D0(\STATE_OUT.n1173 ), .B0(\j[9] ), 
    .CIN0(\STATE_OUT.n1173 ), .CIN1(\STATE_OUT.n2924 ), 
    .F0(\waiting_N_140[9] ), .F1(\waiting_N_140[10] ), 
    .COUT1(\STATE_OUT.n1175 ), .COUT0(\STATE_OUT.n2924 ));
  STATE_OUT_SLICE_18 \STATE_OUT.SLICE_18 ( .D1(\STATE_OUT.n2921 ), .B1(\j[8] ), 
    .D0(\STATE_OUT.n1171 ), .B0(\j[7] ), .CIN0(\STATE_OUT.n1171 ), 
    .CIN1(\STATE_OUT.n2921 ), .F0(\waiting_N_140[7] ), .F1(\waiting_N_140[8] ), 
    .COUT1(\STATE_OUT.n1173 ), .COUT0(\STATE_OUT.n2921 ));
  STATE_OUT_SLICE_19 \STATE_OUT.SLICE_19 ( .D1(\STATE_OUT.n2918 ), .B1(\j[6] ), 
    .D0(\STATE_OUT.n1169 ), .B0(\j[5] ), .CIN0(\STATE_OUT.n1169 ), 
    .CIN1(\STATE_OUT.n2918 ), .F0(\waiting_N_140[5] ), .F1(\waiting_N_140[6] ), 
    .COUT1(\STATE_OUT.n1171 ), .COUT0(\STATE_OUT.n2918 ));
  STATE_OUT_SLICE_20 \STATE_OUT.SLICE_20 ( .D1(\STATE_OUT.n2957 ), 
    .D0(\STATE_OUT.n1195 ), .B0(\j[31] ), .CIN0(\STATE_OUT.n1195 ), 
    .CIN1(\STATE_OUT.n2957 ), .F0(\waiting_N_140[31] ), 
    .COUT0(\STATE_OUT.n2957 ));
  STATE_OUT_SLICE_21 \STATE_OUT.SLICE_21 ( .D1(\STATE_OUT.n2954 ), 
    .B1(\j[30] ), .D0(\STATE_OUT.n1193 ), .B0(\j[29] ), 
    .CIN0(\STATE_OUT.n1193 ), .CIN1(\STATE_OUT.n2954 ), 
    .F0(\waiting_N_140[29] ), .F1(\waiting_N_140[30] ), 
    .COUT1(\STATE_OUT.n1195 ), .COUT0(\STATE_OUT.n2954 ));
  STATE_OUT_SLICE_22 \STATE_OUT.SLICE_22 ( .D1(\STATE_OUT.n2951 ), 
    .B1(\j[28] ), .D0(\STATE_OUT.n1191 ), .B0(\j[27] ), 
    .CIN0(\STATE_OUT.n1191 ), .CIN1(\STATE_OUT.n2951 ), 
    .F0(\waiting_N_140[27] ), .F1(\waiting_N_140[28] ), 
    .COUT1(\STATE_OUT.n1193 ), .COUT0(\STATE_OUT.n2951 ));
  STATE_OUT_SLICE_23 \STATE_OUT.SLICE_23 ( .D1(\STATE_OUT.n2948 ), 
    .B1(\j[26] ), .D0(\STATE_OUT.n1189 ), .B0(\j[25] ), 
    .CIN0(\STATE_OUT.n1189 ), .CIN1(\STATE_OUT.n2948 ), 
    .F0(\waiting_N_140[25] ), .F1(\waiting_N_140[26] ), 
    .COUT1(\STATE_OUT.n1191 ), .COUT0(\STATE_OUT.n2948 ));
  STATE_OUT_SLICE_24 \STATE_OUT.SLICE_24 ( .D1(\STATE_OUT.n2945 ), 
    .B1(\j[24] ), .D0(\STATE_OUT.n1187 ), .B0(\j[23] ), 
    .CIN0(\STATE_OUT.n1187 ), .CIN1(\STATE_OUT.n2945 ), 
    .F0(\waiting_N_140[23] ), .F1(\waiting_N_140[24] ), 
    .COUT1(\STATE_OUT.n1189 ), .COUT0(\STATE_OUT.n2945 ));
  STATE_OUT_SLICE_25 \STATE_OUT.SLICE_25 ( .D1(\STATE_OUT.n2942 ), 
    .B1(\j[22] ), .D0(\STATE_OUT.n1185 ), .B0(\j[21] ), 
    .CIN0(\STATE_OUT.n1185 ), .CIN1(\STATE_OUT.n2942 ), 
    .F0(\waiting_N_140[21] ), .F1(\waiting_N_140[22] ), 
    .COUT1(\STATE_OUT.n1187 ), .COUT0(\STATE_OUT.n2942 ));
  STATE_OUT_SLICE_26 \STATE_OUT.SLICE_26 ( .D1(\STATE_OUT.n2939 ), 
    .B1(\j[20] ), .D0(\STATE_OUT.n1183 ), .B0(\j[19] ), 
    .CIN0(\STATE_OUT.n1183 ), .CIN1(\STATE_OUT.n2939 ), 
    .F0(\waiting_N_140[19] ), .F1(\waiting_N_140[20] ), 
    .COUT1(\STATE_OUT.n1185 ), .COUT0(\STATE_OUT.n2939 ));
  STATE_OUT_serial_SLICE_27 \STATE_OUT.serial.SLICE_27 ( 
    .D1(\STATE_OUT.serial.n3038 ), .D0(\STATE_OUT.serial.n1162 ), 
    .B0(\STATE_OUT.serial.j[31] ), .CIN0(\STATE_OUT.serial.n1162 ), 
    .CIN1(\STATE_OUT.serial.n3038 ), .F0(n135), 
    .COUT0(\STATE_OUT.serial.n3038 ));
  STATE_OUT_serial_SLICE_28 \STATE_OUT.serial.SLICE_28 ( 
    .D1(\STATE_OUT.serial.n3005 ), .B1(\STATE_OUT.serial.j[10] ), 
    .D0(\STATE_OUT.serial.n1140 ), .B0(\STATE_OUT.serial.j[9] ), 
    .CIN0(\STATE_OUT.serial.n1140 ), .CIN1(\STATE_OUT.serial.n3005 ), 
    .F0(n157), .F1(n156), .COUT1(\STATE_OUT.serial.n1142 ), 
    .COUT0(\STATE_OUT.serial.n3005 ));
  STATE_OUT_serial_SLICE_29 \STATE_OUT.serial.SLICE_29 ( 
    .D1(\STATE_OUT.serial.n3035 ), .B1(\STATE_OUT.serial.j[30] ), 
    .D0(\STATE_OUT.serial.n1160 ), .B0(\STATE_OUT.serial.j[29] ), 
    .CIN0(\STATE_OUT.serial.n1160 ), .CIN1(\STATE_OUT.serial.n3035 ), 
    .F0(n137), .F1(n136), .COUT1(\STATE_OUT.serial.n1162 ), 
    .COUT0(\STATE_OUT.serial.n3035 ));
  STATE_OUT_serial_SLICE_30 \STATE_OUT.serial.SLICE_30 ( 
    .D1(\STATE_OUT.serial.n3032 ), .B1(\STATE_OUT.serial.j[28] ), 
    .D0(\STATE_OUT.serial.n1158 ), .B0(\STATE_OUT.serial.j[27] ), 
    .CIN0(\STATE_OUT.serial.n1158 ), .CIN1(\STATE_OUT.serial.n3032 ), 
    .F0(n139), .F1(n138), .COUT1(\STATE_OUT.serial.n1160 ), 
    .COUT0(\STATE_OUT.serial.n3032 ));
  STATE_OUT_serial_SLICE_31 \STATE_OUT.serial.SLICE_31 ( 
    .D1(\STATE_OUT.serial.n3029 ), .B1(\STATE_OUT.serial.j[26] ), 
    .D0(\STATE_OUT.serial.n1156 ), .B0(\STATE_OUT.serial.j[25] ), 
    .CIN0(\STATE_OUT.serial.n1156 ), .CIN1(\STATE_OUT.serial.n3029 ), 
    .F0(n141), .F1(n140), .COUT1(\STATE_OUT.serial.n1158 ), 
    .COUT0(\STATE_OUT.serial.n3029 ));
  STATE_OUT_serial_SLICE_32 \STATE_OUT.serial.SLICE_32 ( 
    .D1(\STATE_OUT.serial.n3026 ), .B1(\STATE_OUT.serial.j[24] ), 
    .D0(\STATE_OUT.serial.n1154 ), .B0(\STATE_OUT.serial.j[23] ), 
    .CIN0(\STATE_OUT.serial.n1154 ), .CIN1(\STATE_OUT.serial.n3026 ), 
    .F0(n143), .F1(n142), .COUT1(\STATE_OUT.serial.n1156 ), 
    .COUT0(\STATE_OUT.serial.n3026 ));
  STATE_OUT_serial_SLICE_33 \STATE_OUT.serial.SLICE_33 ( 
    .D1(\STATE_OUT.serial.n2996 ), .B1(\STATE_OUT.serial.j[4] ), 
    .D0(\STATE_OUT.serial.n1134 ), .B0(\STATE_OUT.serial.j[3] ), 
    .CIN0(\STATE_OUT.serial.n1134 ), .CIN1(\STATE_OUT.serial.n2996 ), 
    .F0(n163), .F1(n162), .COUT1(\STATE_OUT.serial.n1136 ), 
    .COUT0(\STATE_OUT.serial.n2996 ));
  STATE_OUT_serial_SLICE_34 \STATE_OUT.serial.SLICE_34 ( 
    .D1(\STATE_OUT.serial.n3023 ), .B1(\STATE_OUT.serial.j[22] ), 
    .D0(\STATE_OUT.serial.n1152 ), .B0(\STATE_OUT.serial.j[21] ), 
    .CIN0(\STATE_OUT.serial.n1152 ), .CIN1(\STATE_OUT.serial.n3023 ), 
    .F0(n145), .F1(n144), .COUT1(\STATE_OUT.serial.n1154 ), 
    .COUT0(\STATE_OUT.serial.n3023 ));
  STATE_OUT_serial_SLICE_35 \STATE_OUT.serial.SLICE_35 ( 
    .DI0(\STATE_OUT.serial.n167[1] ), .D1(\STATE_OUT.serial.n2993 ), 
    .B1(\STATE_OUT.serial.j[2] ), .D0(\STATE_OUT.serial.n1132 ), 
    .B0(\STATE_OUT.serial.j[1] ), .LSR(n114), .CLK(SERCLK_OUT_c), 
    .CIN0(\STATE_OUT.serial.n1132 ), .CIN1(\STATE_OUT.serial.n2993 ), 
    .Q0(\STATE_OUT.serial.j[1] ), .F0(\STATE_OUT.serial.n167[1] ), .F1(n164), 
    .COUT1(\STATE_OUT.serial.n1134 ), .COUT0(\STATE_OUT.serial.n2993 ));
  STATE_OUT_serial_SLICE_36 \STATE_OUT.serial.SLICE_36 ( 
    .D1(\STATE_OUT.serial.n3020 ), .B1(\STATE_OUT.serial.j[20] ), 
    .D0(\STATE_OUT.serial.n1150 ), .B0(\STATE_OUT.serial.j[19] ), 
    .CIN0(\STATE_OUT.serial.n1150 ), .CIN1(\STATE_OUT.serial.n3020 ), 
    .F0(n147), .F1(n146), .COUT1(\STATE_OUT.serial.n1152 ), 
    .COUT0(\STATE_OUT.serial.n3020 ));
  STATE_OUT_serial_SLICE_37 \STATE_OUT.serial.SLICE_37 ( 
    .D1(\STATE_OUT.serial.n3011 ), .B1(\STATE_OUT.serial.j[14] ), 
    .D0(\STATE_OUT.serial.n1144 ), .B0(\STATE_OUT.serial.j[13] ), 
    .CIN0(\STATE_OUT.serial.n1144 ), .CIN1(\STATE_OUT.serial.n3011 ), 
    .F0(n153), .F1(n152), .COUT1(\STATE_OUT.serial.n1146 ), 
    .COUT0(\STATE_OUT.serial.n3011 ));
  STATE_OUT_serial_SLICE_38 \STATE_OUT.serial.SLICE_38 ( 
    .D1(\STATE_OUT.serial.n3017 ), .B1(\STATE_OUT.serial.j[18] ), 
    .D0(\STATE_OUT.serial.n1148 ), .B0(\STATE_OUT.serial.j[17] ), 
    .CIN0(\STATE_OUT.serial.n1148 ), .CIN1(\STATE_OUT.serial.n3017 ), 
    .F0(n149), .F1(n148), .COUT1(\STATE_OUT.serial.n1150 ), 
    .COUT0(\STATE_OUT.serial.n3017 ));
  STATE_OUT_serial_SLICE_39 \STATE_OUT.serial.SLICE_39 ( 
    .D1(\STATE_OUT.serial.n3002 ), .B1(\STATE_OUT.serial.j[8] ), 
    .D0(\STATE_OUT.serial.n1138 ), .B0(\STATE_OUT.serial.j[7] ), 
    .CIN0(\STATE_OUT.serial.n1138 ), .CIN1(\STATE_OUT.serial.n3002 ), 
    .F0(n159), .F1(n158), .COUT1(\STATE_OUT.serial.n1140 ), 
    .COUT0(\STATE_OUT.serial.n3002 ));
  STATE_OUT_serial_SLICE_40 \STATE_OUT.serial.SLICE_40 ( 
    .D1(\STATE_OUT.serial.n3014 ), .B1(\STATE_OUT.serial.j[16] ), 
    .D0(\STATE_OUT.serial.n1146 ), .B0(\STATE_OUT.serial.j[15] ), 
    .CIN0(\STATE_OUT.serial.n1146 ), .CIN1(\STATE_OUT.serial.n3014 ), 
    .F0(n151), .F1(n150), .COUT1(\STATE_OUT.serial.n1148 ), 
    .COUT0(\STATE_OUT.serial.n3014 ));
  STATE_OUT_serial_SLICE_41 \STATE_OUT.serial.SLICE_41 ( 
    .D1(\STATE_OUT.serial.n3008 ), .B1(\STATE_OUT.serial.j[12] ), 
    .D0(\STATE_OUT.serial.n1142 ), .B0(\STATE_OUT.serial.j[11] ), 
    .CIN0(\STATE_OUT.serial.n1142 ), .CIN1(\STATE_OUT.serial.n3008 ), 
    .F0(n155), .F1(n154), .COUT1(\STATE_OUT.serial.n1144 ), 
    .COUT0(\STATE_OUT.serial.n3008 ));
  STATE_OUT_serial_SLICE_42 \STATE_OUT.serial.SLICE_42 ( 
    .D1(\STATE_OUT.serial.n2999 ), .B1(\STATE_OUT.serial.j[6] ), 
    .D0(\STATE_OUT.serial.n1136 ), .B0(\STATE_OUT.serial.j[5] ), 
    .CIN0(\STATE_OUT.serial.n1136 ), .CIN1(\STATE_OUT.serial.n2999 ), 
    .F0(n161), .F1(n160), .COUT1(\STATE_OUT.serial.n1138 ), 
    .COUT0(\STATE_OUT.serial.n2999 ));
  STATE_OUT_serial_SLICE_43 \STATE_OUT.serial.SLICE_43 ( 
    .DI1(\STATE_OUT.serial.n167[0] ), .D1(\STATE_OUT.serial.n2990 ), 
    .C1(VCC_net), .B1(\STATE_OUT.serial.j[0] ), .LSR(n114), .CLK(SERCLK_OUT_c), 
    .CIN1(\STATE_OUT.serial.n2990 ), .Q1(\STATE_OUT.serial.j[0] ), 
    .F1(\STATE_OUT.serial.n167[0] ), .COUT1(\STATE_OUT.serial.n1132 ), 
    .COUT0(\STATE_OUT.serial.n2990 ));
  SLICE_44 SLICE_44( .DI1(\Snext[1]$n1 ), .DI0(\Snext[0]$n0 ), 
    .C1(\Snext_1__N_1[1] ), .B1(Snext_1__N_3), .A1(\Snext[1] ), 
    .C0(\Snext[0] ), .B0(Snext_1__N_3), .A0(\Snext_1__N_1[0] ), 
    .LSR(RESET_IN_c), .CLK(SERCLK_OUT_c), .Q0(\Sreg[0] ), .Q1(\Sreg[1] ), 
    .F0(\Snext[0]$n0 ), .F1(\Snext[1]$n1 ));
  keyboard_SLICE_46 \keyboard.SLICE_46 ( .DI1(\keyboard.nextState[0]$n3 ), 
    .DI0(\keyboard.nextState[1]$n2 ), .D1(\keyboard.nextState[0] ), 
    .C1(\keyboard.counter[0] ), .B1(\keyboard.counter[1] ), 
    .A1(\keyboard.n340 ), .D0(\keyboard.n6 ), .A0(\state[0] ), 
    .CLK(SERCLK_OUT_c), .Q0(\state[1] ), .Q1(\state[0] ), 
    .F0(\keyboard.nextState[1]$n2 ), .F1(\keyboard.nextState[0]$n3 ));
  keyboard_SLICE_47 \keyboard.SLICE_47 ( .DI1(\keyboard.n13[1] ), 
    .DI0(\keyboard.n1 ), .D1(\keyboard.counter[0] ), 
    .C1(\keyboard.counter[1] ), .C0(\keyboard.counter[0] ), .CLK(KB_RECV_c), 
    .Q0(\keyboard.counter[0] ), .Q1(\keyboard.counter[1] ), .F0(\keyboard.n1 ), 
    .F1(\keyboard.n13[1] ));
  mainTimer_SLICE_50 \mainTimer.SLICE_50 ( .DI0(\mainTimer.n2651 ), 
    .D0(\mainTimer.n20 ), .C0(\mainTimer.n24 ), .B0(\mainTimer.clkCont[5] ), 
    .A0(\mainTimer.clkCont[8] ), .LSR(\mainTimer.clkCont_17__N_37 ), 
    .CLK(SERCLK_OUT_c), .Q0(TIME_OUT), .F0(\mainTimer.n2651 ));
  mainTimer_SLICE_51 \mainTimer.SLICE_51 ( 
    .DI1(\mainTimer.clkCont_17__N_19[16] ), 
    .DI0(\mainTimer.clkCont_17__N_19[17] ), .C1(TIME_OUT), 
    .B1(\mainTimer.clkCont_17__N_40[16] ), .B0(TIME_OUT), 
    .A0(\mainTimer.clkCont_17__N_40[17] ), .LSR(\mainTimer.clkCont_17__N_37 ), 
    .CLK(SERCLK_OUT_c), .Q0(\mainTimer.clkCont[17] ), 
    .Q1(\mainTimer.clkCont[16] ), .F0(\mainTimer.clkCont_17__N_19[17] ), 
    .F1(\mainTimer.clkCont_17__N_19[16] ));
  mainTimer_SLICE_53 \mainTimer.SLICE_53 ( 
    .DI1(\mainTimer.clkCont_17__N_19[14] ), 
    .DI0(\mainTimer.clkCont_17__N_19[15] ), 
    .C1(\mainTimer.clkCont_17__N_40[14] ), .A1(TIME_OUT), .D0(TIME_OUT), 
    .B0(\mainTimer.clkCont_17__N_40[15] ), .LSR(\mainTimer.clkCont_17__N_37 ), 
    .CLK(SERCLK_OUT_c), .Q0(\mainTimer.clkCont[15] ), 
    .Q1(\mainTimer.clkCont[14] ), .F0(\mainTimer.clkCont_17__N_19[15] ), 
    .F1(\mainTimer.clkCont_17__N_19[14] ));
  mainTimer_SLICE_55 \mainTimer.SLICE_55 ( 
    .DI1(\mainTimer.clkCont_17__N_19[12] ), 
    .DI0(\mainTimer.clkCont_17__N_19[13] ), 
    .D1(\mainTimer.clkCont_17__N_40[12] ), .B1(TIME_OUT), 
    .C0(\mainTimer.clkCont_17__N_40[13] ), .A0(TIME_OUT), 
    .LSR(\mainTimer.clkCont_17__N_37 ), .CLK(SERCLK_OUT_c), 
    .Q0(\mainTimer.clkCont[13] ), .Q1(\mainTimer.clkCont[12] ), 
    .F0(\mainTimer.clkCont_17__N_19[13] ), 
    .F1(\mainTimer.clkCont_17__N_19[12] ));
  mainTimer_SLICE_57 \mainTimer.SLICE_57 ( 
    .DI1(\mainTimer.clkCont_17__N_19[10] ), 
    .DI0(\mainTimer.clkCont_17__N_19[11] ), 
    .D1(\mainTimer.clkCont_17__N_40[10] ), .B1(TIME_OUT), .C0(TIME_OUT), 
    .A0(\mainTimer.clkCont_17__N_40[11] ), .LSR(\mainTimer.clkCont_17__N_37 ), 
    .CLK(SERCLK_OUT_c), .Q0(\mainTimer.clkCont[11] ), 
    .Q1(\mainTimer.clkCont[10] ), .F0(\mainTimer.clkCont_17__N_19[11] ), 
    .F1(\mainTimer.clkCont_17__N_19[10] ));
  mainTimer_SLICE_59 \mainTimer.SLICE_59 ( 
    .DI1(\mainTimer.clkCont_17__N_19[8] ), 
    .DI0(\mainTimer.clkCont_17__N_19[9] ), .C1(TIME_OUT), 
    .A1(\mainTimer.clkCont_17__N_40[8] ), .D0(\mainTimer.clkCont_17__N_40[9] ), 
    .B0(TIME_OUT), .LSR(\mainTimer.clkCont_17__N_37 ), .CLK(SERCLK_OUT_c), 
    .Q0(\mainTimer.clkCont[9] ), .Q1(\mainTimer.clkCont[8] ), 
    .F0(\mainTimer.clkCont_17__N_19[9] ), .F1(\mainTimer.clkCont_17__N_19[8] ));
  mainTimer_SLICE_61 \mainTimer.SLICE_61 ( 
    .DI1(\mainTimer.clkCont_17__N_19[6] ), 
    .DI0(\mainTimer.clkCont_17__N_19[7] ), 
    .D1(\mainTimer.clkCont_17__N_40[6] ), .A1(TIME_OUT), .D0(TIME_OUT), 
    .B0(\mainTimer.clkCont_17__N_40[7] ), .LSR(\mainTimer.clkCont_17__N_37 ), 
    .CLK(SERCLK_OUT_c), .Q0(\mainTimer.clkCont[7] ), 
    .Q1(\mainTimer.clkCont[6] ), .F0(\mainTimer.clkCont_17__N_19[7] ), 
    .F1(\mainTimer.clkCont_17__N_19[6] ));
  mainTimer_SLICE_63 \mainTimer.SLICE_63 ( 
    .DI1(\mainTimer.clkCont_17__N_19[4] ), 
    .DI0(\mainTimer.clkCont_17__N_19[5] ), .C1(TIME_OUT), 
    .A1(\mainTimer.clkCont_17__N_40[4] ), .D0(\mainTimer.clkCont_17__N_40[5] ), 
    .B0(TIME_OUT), .LSR(\mainTimer.clkCont_17__N_37 ), .CLK(SERCLK_OUT_c), 
    .Q0(\mainTimer.clkCont[5] ), .Q1(\mainTimer.clkCont[4] ), 
    .F0(\mainTimer.clkCont_17__N_19[5] ), .F1(\mainTimer.clkCont_17__N_19[4] ));
  mainTimer_SLICE_65 \mainTimer.SLICE_65 ( 
    .DI1(\mainTimer.clkCont_17__N_19[2] ), 
    .DI0(\mainTimer.clkCont_17__N_19[3] ), 
    .C1(\mainTimer.clkCont_17__N_40[2] ), .A1(TIME_OUT), 
    .C0(\mainTimer.clkCont_17__N_40[3] ), .B0(TIME_OUT), 
    .LSR(\mainTimer.clkCont_17__N_37 ), .CLK(SERCLK_OUT_c), 
    .Q0(\mainTimer.clkCont[3] ), .Q1(\mainTimer.clkCont[2] ), 
    .F0(\mainTimer.clkCont_17__N_19[3] ), .F1(\mainTimer.clkCont_17__N_19[2] ));
  mainTimer_SLICE_67 \mainTimer.SLICE_67 ( 
    .DI1(\mainTimer.clkCont_17__N_19[0] ), 
    .DI0(\mainTimer.clkCont_17__N_19[1] ), 
    .C1(\mainTimer.clkCont_17__N_40[0] ), .A1(TIME_OUT), 
    .D0(\mainTimer.clkCont_17__N_40[1] ), .B0(TIME_OUT), 
    .LSR(\mainTimer.clkCont_17__N_37 ), .CLK(SERCLK_OUT_c), 
    .Q0(\mainTimer.clkCont[1] ), .Q1(\mainTimer.clkCont[0] ), 
    .F0(\mainTimer.clkCont_17__N_19[1] ), .F1(\mainTimer.clkCont_17__N_19[0] ));
  SLICE_69 SLICE_69( .DI1(n503), .DI0(n501), .D1(waiting_N_139), 
    .C1(\waiting_N_140[17] ), .B1(waiting), .A1(\j[17] ), .D0(waiting), 
    .C0(waiting_N_139), .B0(\waiting_N_140[16] ), .A0(\j[16] ), 
    .CLK(SERCLK_OUT_c), .Q0(\j[16] ), .Q1(\j[17] ), .F0(n501), .F1(n503));
  SLICE_70 SLICE_70( .DI1(n499), .DI0(n497), .D1(waiting_N_139), 
    .C1(\waiting_N_140[15] ), .B1(\j[15] ), .A1(waiting), .D0(\j[14] ), 
    .C0(\waiting_N_140[14] ), .B0(waiting), .A0(waiting_N_139), 
    .CLK(SERCLK_OUT_c), .Q0(\j[14] ), .Q1(\j[15] ), .F0(n497), .F1(n499));
  STATE_OUT_SLICE_71 \STATE_OUT.SLICE_71 ( .DI1(\STATE_OUT.waiting_N_135$n4 ), 
    .DI0(\STATE_OUT.n1595 ), .D1(waiting), .D0(waiting_N_139), .C0(waiting), 
    .A0(\STATE_OUT.n2101 ), .CLK(SERCLK_OUT_c), .Q0(waiting), .Q1(init), 
    .F0(\STATE_OUT.n1595 ), .F1(\STATE_OUT.waiting_N_135$n4 ));
  SLICE_74 SLICE_74( .DI1(n507), .DI0(n505), .D1(waiting_N_139), .C1(waiting), 
    .B1(\waiting_N_140[19] ), .A1(\j[19] ), .D0(\waiting_N_140[18] ), 
    .C0(\j[18] ), .B0(waiting), .A0(waiting_N_139), .CLK(SERCLK_OUT_c), 
    .Q0(\j[18] ), .Q1(\j[19] ), .F0(n505), .F1(n507));
  SLICE_76 SLICE_76( .DI1(n491), .DI0(n489), .D1(waiting_N_139), .C1(\j[11] ), 
    .B1(\waiting_N_140[11] ), .A1(waiting), .D0(waiting), .C0(\j[10] ), 
    .B0(\waiting_N_140[10] ), .A0(waiting_N_139), .CLK(SERCLK_OUT_c), 
    .Q0(\j[10] ), .Q1(\j[11] ), .F0(n489), .F1(n491));
  SLICE_78 SLICE_78( .DI1(n495), .DI0(n493), .D1(\j[13] ), .C1(waiting_N_139), 
    .B1(waiting), .A1(\waiting_N_140[13] ), .D0(waiting), .C0(\j[12] ), 
    .B0(waiting_N_139), .A0(\waiting_N_140[12] ), .CLK(SERCLK_OUT_c), 
    .Q0(\j[12] ), .Q1(\j[13] ), .F0(n493), .F1(n495));
  STATE_OUT_SLICE_79 \STATE_OUT.SLICE_79 ( .DI1(\STATE_OUT.n21[1] ), 
    .DI0(\STATE_OUT.n21[0] ), .D1(\STATE_OUT.cont[1] ), 
    .C1(\STATE_OUT.cont[0] ), .B0(\STATE_OUT.cont[0] ), 
    .LSR(\STATE_OUT.waiting_N_135 ), .CLK(SERCLK_OUT_c), 
    .Q0(\STATE_OUT.cont[0] ), .Q1(\STATE_OUT.cont[1] ), 
    .F0(\STATE_OUT.n21[0] ), .F1(\STATE_OUT.n21[1] ));
  SLICE_80 SLICE_80( .DI1(n444), .DI0(n442), .D1(\j[8] ), 
    .C1(\waiting_N_140[8] ), .B1(waiting_N_139), .A1(waiting), 
    .D0(\waiting_N_140[9] ), .C0(\j[9] ), .B0(waiting), .A0(waiting_N_139), 
    .CLK(SERCLK_OUT_c), .Q0(\j[9] ), .Q1(\j[8] ), .F0(n442), .F1(n444));
  SLICE_82 SLICE_82( .DI1(n448), .DI0(n446), .D1(\waiting_N_140[6] ), 
    .C1(\j[6] ), .B1(waiting_N_139), .A1(waiting), .D0(waiting), .C0(\j[7] ), 
    .B0(\waiting_N_140[7] ), .A0(waiting_N_139), .CLK(SERCLK_OUT_c), 
    .Q0(\j[7] ), .Q1(\j[6] ), .F0(n446), .F1(n448));
  SLICE_84 SLICE_84( .DI1(n452), .DI0(n450), .D1(waiting_N_139), 
    .C1(\waiting_N_140[4] ), .B1(\j[4] ), .A1(waiting), 
    .D0(\waiting_N_140[5] ), .C0(\j[5] ), .B0(waiting), .A0(waiting_N_139), 
    .CLK(SERCLK_OUT_c), .Q0(\j[5] ), .Q1(\j[4] ), .F0(n450), .F1(n452));
  SLICE_86 SLICE_86( .DI1(n456), .DI0(n454), .D1(waiting), .C1(\j[2] ), 
    .B1(\waiting_N_140[2] ), .A1(waiting_N_139), .D0(waiting_N_139), 
    .C0(\waiting_N_140[3] ), .B0(waiting), .A0(\j[3] ), .CLK(SERCLK_OUT_c), 
    .Q0(\j[3] ), .Q1(\j[2] ), .F0(n454), .F1(n456));
  SLICE_88 SLICE_88( .DI1(n529), .DI0(n531), .D1(\waiting_N_140[30] ), 
    .C1(waiting), .B1(\j[30] ), .A1(waiting_N_139), .D0(waiting_N_139), 
    .C0(\j[31] ), .B0(\waiting_N_140[31] ), .A0(waiting), .CLK(SERCLK_OUT_c), 
    .Q0(\j[31] ), .Q1(\j[30] ), .F0(n531), .F1(n529));
  SLICE_90 SLICE_90( .DI1(n525), .DI0(n527), .D1(\j[28] ), 
    .C1(\waiting_N_140[28] ), .B1(waiting_N_139), .A1(waiting), .D0(waiting), 
    .C0(waiting_N_139), .B0(\j[29] ), .A0(\waiting_N_140[29] ), 
    .CLK(SERCLK_OUT_c), .Q0(\j[29] ), .Q1(\j[28] ), .F0(n527), .F1(n525));
  SLICE_92 SLICE_92( .DI1(n521), .DI0(n523), .D1(waiting), .C1(waiting_N_139), 
    .B1(\waiting_N_140[26] ), .A1(\j[26] ), .D0(waiting), 
    .C0(\waiting_N_140[27] ), .B0(waiting_N_139), .A0(\j[27] ), 
    .CLK(SERCLK_OUT_c), .Q0(\j[27] ), .Q1(\j[26] ), .F0(n523), .F1(n521));
  SLICE_94 SLICE_94( .DI1(n517), .DI0(n519), .D1(\j[24] ), 
    .C1(\waiting_N_140[24] ), .B1(waiting), .A1(waiting_N_139), 
    .D0(\waiting_N_140[25] ), .C0(waiting), .B0(waiting_N_139), .A0(\j[25] ), 
    .CLK(SERCLK_OUT_c), .Q0(\j[25] ), .Q1(\j[24] ), .F0(n519), .F1(n517));
  SLICE_96 SLICE_96( .DI1(n513), .DI0(n515), .D1(waiting_N_139), 
    .C1(\waiting_N_140[22] ), .B1(waiting), .A1(\j[22] ), .D0(\j[23] ), 
    .C0(waiting_N_139), .B0(waiting), .A0(\waiting_N_140[23] ), 
    .CLK(SERCLK_OUT_c), .Q0(\j[23] ), .Q1(\j[22] ), .F0(n515), .F1(n513));
  SLICE_98 SLICE_98( .DI1(n509), .DI0(n511), .D1(waiting_N_139), 
    .C1(\waiting_N_140[20] ), .B1(waiting), .A1(\j[20] ), 
    .D0(\waiting_N_140[21] ), .C0(waiting_N_139), .B0(waiting), .A0(\j[21] ), 
    .CLK(SERCLK_OUT_c), .Q0(\j[21] ), .Q1(\j[20] ), .F0(n511), .F1(n509));
  STATE_OUT_SLICE_101 \STATE_OUT.SLICE_101 ( .DI1(\STATE_OUT.n21[3] ), 
    .DI0(\STATE_OUT.n21[2] ), .D1(\STATE_OUT.cont[3] ), 
    .C1(\STATE_OUT.cont[0] ), .B1(\STATE_OUT.cont[1] ), 
    .A1(\STATE_OUT.cont[2] ), .D0(\STATE_OUT.cont[0] ), 
    .B0(\STATE_OUT.cont[2] ), .A0(\STATE_OUT.cont[1] ), 
    .LSR(\STATE_OUT.waiting_N_135 ), .CLK(SERCLK_OUT_c), 
    .Q0(\STATE_OUT.cont[2] ), .Q1(\STATE_OUT.cont[3] ), 
    .F0(\STATE_OUT.n21[2] ), .F1(\STATE_OUT.n21[3] ));
  SLICE_104 SLICE_104( .DI1(n470), .DI0(n471), .D1(n147), .A1(n114), .B0(n114), 
    .A0(n148), .CLK(SERCLK_OUT_c), .Q0(\STATE_OUT.serial.j[18] ), 
    .Q1(\STATE_OUT.serial.j[19] ), .F0(n471), .F1(n470));
  SLICE_107 SLICE_107( .DI1(n468), .DI0(n469), .C1(n114), .B1(n145), .C0(n146), 
    .B0(n114), .CLK(SERCLK_OUT_c), .Q0(\STATE_OUT.serial.j[20] ), 
    .Q1(\STATE_OUT.serial.j[21] ), .F0(n469), .F1(n468));
  SLICE_109 SLICE_109( .DI1(n466), .DI0(n467), .C1(n143), .A1(n114), .B0(n114), 
    .A0(n144), .CLK(SERCLK_OUT_c), .Q0(\STATE_OUT.serial.j[22] ), 
    .Q1(\STATE_OUT.serial.j[23] ), .F0(n467), .F1(n466));
  SLICE_111 SLICE_111( .DI1(n464), .DI0(n465), .C1(n141), .A1(n114), .D0(n142), 
    .B0(n114), .CLK(SERCLK_OUT_c), .Q0(\STATE_OUT.serial.j[24] ), 
    .Q1(\STATE_OUT.serial.j[25] ), .F0(n465), .F1(n464));
  SLICE_113 SLICE_113( .DI1(n462), .DI0(n463), .C1(n114), .B1(n139), .D0(n114), 
    .C0(n140), .CLK(SERCLK_OUT_c), .Q0(\STATE_OUT.serial.j[26] ), 
    .Q1(\STATE_OUT.serial.j[27] ), .F0(n463), .F1(n462));
  SLICE_115 SLICE_115( .DI1(n460), .DI0(n461), .D1(n137), .C1(n114), .D0(n114), 
    .C0(n138), .CLK(SERCLK_OUT_c), .Q0(\STATE_OUT.serial.j[28] ), 
    .Q1(\STATE_OUT.serial.j[29] ), .F0(n461), .F1(n460));
  SLICE_117 SLICE_117( .DI1(n458), .DI0(n459), .D1(init), .B1(n135), .D0(n136), 
    .A0(n114), .CLK(SERCLK_OUT_c), .Q0(\STATE_OUT.serial.j[30] ), 
    .Q1(\STATE_OUT.serial.j[31] ), .F0(n459), .F1(n458));
  SLICE_119 SLICE_119( .DI1(n486), .DI0(n487), .D1(n114), .B1(n163), .D0(n164), 
    .C0(n114), .CLK(SERCLK_OUT_c), .Q0(\STATE_OUT.serial.j[2] ), 
    .Q1(\STATE_OUT.serial.j[3] ), .F0(n487), .F1(n486));
  SLICE_120 SLICE_120( .DI0(\Sreg[1].sig_000.FeedThruLUT ), .B0(\Sreg[1] ), 
    .CE(\STATE_OUT.n113 ), .LSR(\STATE_OUT.serial.n439 ), .CLK(SERCLK_OUT_c), 
    .Q0(\STATE_OUT.serial.temp_data_out[0]_2 ), 
    .F0(\Sreg[1].sig_000.FeedThruLUT ));
  SLICE_122 SLICE_122( .DI1(n484), .DI0(n485), .C1(n161), .B1(n114), .B0(n162), 
    .A0(n114), .CLK(SERCLK_OUT_c), .Q0(\STATE_OUT.serial.j[4] ), 
    .Q1(\STATE_OUT.serial.j[5] ), .F0(n485), .F1(n484));
  SLICE_124 SLICE_124( .DI1(n482), .DI0(n483), .B1(n159), .A1(n114), .D0(n114), 
    .B0(n160), .CLK(SERCLK_OUT_c), .Q0(\STATE_OUT.serial.j[6] ), 
    .Q1(\STATE_OUT.serial.j[7] ), .F0(n483), .F1(n482));
  SLICE_126 SLICE_126( .DI1(n480), .DI0(n481), .C1(n114), .A1(n157), .D0(n114), 
    .B0(n158), .CLK(SERCLK_OUT_c), .Q0(\STATE_OUT.serial.j[8] ), 
    .Q1(\STATE_OUT.serial.j[9] ), .F0(n481), .F1(n480));
  SLICE_128 SLICE_128( .DI1(n478), .DI0(n479), .B1(n155), .A1(n114), .C0(n156), 
    .B0(n114), .CLK(SERCLK_OUT_c), .Q0(\STATE_OUT.serial.j[10] ), 
    .Q1(\STATE_OUT.serial.j[11] ), .F0(n479), .F1(n478));
  SLICE_130 SLICE_130( .DI1(n476), .DI0(n477), .C1(n114), .A1(n153), .D0(n154), 
    .B0(n114), .CLK(SERCLK_OUT_c), .Q0(\STATE_OUT.serial.j[12] ), 
    .Q1(\STATE_OUT.serial.j[13] ), .F0(n477), .F1(n476));
  SLICE_132 SLICE_132( .DI1(n474), .DI0(n475), .B1(n151), .A1(n114), .D0(n114), 
    .B0(n152), .CLK(SERCLK_OUT_c), .Q0(\STATE_OUT.serial.j[14] ), 
    .Q1(\STATE_OUT.serial.j[15] ), .F0(n475), .F1(n474));
  SLICE_133 SLICE_133( .DI0(\SENSOR1_IN_c.sig_001.FeedThruLUT ), 
    .B0(SENSOR1_IN_c), .CE(\STATE_OUT.n113 ), .CLK(SERCLK_OUT_c), 
    .Q0(\STATE_OUT.serial.temp_data_out[2]_2 ), 
    .F0(\SENSOR1_IN_c.sig_001.FeedThruLUT ));
  SLICE_136 SLICE_136( .DI1(n472), .DI0(n473), .C1(n114), .A1(n149), .C0(n150), 
    .B0(n114), .CLK(SERCLK_OUT_c), .Q0(\STATE_OUT.serial.j[16] ), 
    .Q1(\STATE_OUT.serial.j[17] ), .F0(n473), .F1(n472));
  keyboard_SLICE_140 \keyboard.SLICE_140 ( .D1(\keyboard.counter[1] ), 
    .C1(\keyboard.nextState[1] ), .B1(\state[1] ), .A1(\keyboard.counter[0] ), 
    .D0(\keyboard.n6 ), .A0(\state[0] ), .F0(\keyboard.nextState[1] ), 
    .F1(\keyboard.n6 ));
  SLICE_142 SLICE_142( .D1(\Sreg[1] ), .C1(n2475), .B1(n2107), 
    .A1(\Snext_1__N_5[0] ), .D0(TIME_OUT), .C0(\Sreg[1] ), 
    .B0(\Snext_1__N_5[0] ), .A0(\Sreg[0] ), .F0(n2475), .F1(\Snext_1__N_1[0] ));
  SLICE_144 SLICE_144( .D1(\Sreg[0] ), .C1(\KEY_STATUS[0] ), 
    .B1(\KEY_STATUS_1__N_253[1] ), .A1(\Sreg[1] ), .D0(\state[1] ), 
    .B0(\state[0] ), .F0(\KEY_STATUS[0] ), .F1(n9));
  SLICE_145 SLICE_145( .C1(TIMER_EN), .D0(\Sreg[0] ), .C0(n1711), .B0(n9), 
    .A0(TIMER_EN), .F0(TIMER_EN), .F1(\mainTimer.clkCont_17__N_37 ));
  keyboard_SLICE_146 \keyboard.SLICE_146 ( .C1(\keyboard.actualKey[3][1] ), 
    .B1(KB_IN_c_1), .A1(\keyboard.n1566 ), .C0(\keyboard.actualKey[2][1] ), 
    .B0(KB_IN_c_1), .A0(\keyboard.n1569 ), .F0(\keyboard.actualKey[2][1] ), 
    .F1(\keyboard.actualKey[3][1] ));
  keyboard_SLICE_147 \keyboard.SLICE_147 ( .D1(\keyboard.actualKey[2][1] ), 
    .C1(\keyboard.n6_adj_276 ), .B1(\keyboard.n1913 ), 
    .A1(\keyboard.actualKey[3][1] ), .C0(\keyboard.actualKey[3][0] ), 
    .A0(\keyboard.actualKey[1][0] ), .F0(\keyboard.n6_adj_276 ), 
    .F1(\KEY_STATUS_1__N_253[1] ));
  keyboard_SLICE_148 \keyboard.SLICE_148 ( .D1(\keyboard.actualKey[2][0] ), 
    .C1(\keyboard.actualKey[0][0] ), .B1(\keyboard.actualKey[1][1] ), 
    .A1(\keyboard.actualKey[0][1] ), .D0(KB_IN_c_0), .C0(\keyboard.n1565 ), 
    .A0(\keyboard.actualKey[0][0] ), .F0(\keyboard.actualKey[0][0] ), 
    .F1(\keyboard.n1913 ));
  keyboard_SLICE_150 \keyboard.SLICE_150 ( .D1(\keyboard.actualKey[3][0] ), 
    .C1(\keyboard.n1566 ), .A1(KB_IN_c_0), .D0(\keyboard.counter[0] ), 
    .C0(\state[1] ), .B0(\keyboard.counter[1] ), .A0(\state[0] ), 
    .F0(\keyboard.n1566 ), .F1(\keyboard.actualKey[3][0] ));
  SLICE_152 SLICE_152( .D1(\Sreg[0] ), .C1(n1720), .B1(\Sreg[1] ), 
    .A1(TIMER_EN_N_13), .D0(\Snext_1__N_5[0] ), .C0(n1898), 
    .B0(\KEY_STATUS[0] ), .A0(\Sreg[0] ), .F0(n1720), .F1(Snext_1__N_3));
  SLICE_154 SLICE_154( .D1(\Sreg[1] ), .C1(n2104), .B1(\Sreg[0] ), .A1(n2106), 
    .D0(\Snext_1__N_5[0] ), .C0(\Sreg[0] ), .A0(TIME_OUT), .F0(n2104), 
    .F1(\Snext_1__N_1[1] ));
  SLICE_156 SLICE_156( .D1(\Sreg[1] ), .C1(\Snext_1__N_5[0] ), .B1(TIME_OUT), 
    .D0(\state[0] ), .C0(\KEY_STATUS_1__N_253[1] ), .A0(\state[1] ), 
    .F0(\Snext_1__N_5[0] ), .F1(n1711));
  keyboard_SLICE_158 \keyboard.SLICE_158 ( .D1(\keyboard.n1565 ), 
    .C1(\keyboard.actualKey[0][1] ), .A1(KB_IN_c_1), .D0(\state[0] ), 
    .C0(\keyboard.counter[0] ), .B0(\state[1] ), .A0(\keyboard.counter[1] ), 
    .F0(\keyboard.n1565 ), .F1(\keyboard.actualKey[0][1] ));
  keyboard_SLICE_162 \keyboard.SLICE_162 ( .D1(\keyboard.actualKey[2][0] ), 
    .C1(\keyboard.n1569 ), .A1(KB_IN_c_0), .D0(\state[0] ), 
    .C0(\keyboard.counter[0] ), .B0(\state[1] ), .A0(\keyboard.counter[1] ), 
    .F0(\keyboard.n1569 ), .F1(\keyboard.actualKey[2][0] ));
  keyboard_SLICE_164 \keyboard.SLICE_164 ( .D1(\keyboard.actualKey[1][1] ), 
    .C1(\keyboard.n786 ), .A1(KB_IN_c_1), .D0(\state[1] ), 
    .C0(\keyboard.counter[1] ), .B0(\state[0] ), .A0(\keyboard.counter[0] ), 
    .F0(\keyboard.n786 ), .F1(\keyboard.actualKey[1][1] ));
  keyboard_SLICE_166 \keyboard.SLICE_166 ( .D1(\keyboard.nextState[0] ), 
    .C1(\keyboard.n340 ), .B1(\keyboard.counter[1] ), 
    .A1(\keyboard.counter[0] ), .C0(\state[1] ), .A0(\state[0] ), 
    .F0(\keyboard.n340 ), .F1(\keyboard.nextState[0] ));
  mainTimer_SLICE_168 \mainTimer.SLICE_168 ( .D1(\mainTimer.clkCont[13] ), 
    .C1(\mainTimer.n1905 ), .B1(\mainTimer.clkCont[16] ), 
    .A1(\mainTimer.clkCont[10] ), .C0(\mainTimer.clkCont[15] ), 
    .A0(\mainTimer.clkCont[9] ), .F0(\mainTimer.n1905 ), 
    .F1(\mainTimer.n1917 ));
  mainTimer_SLICE_170 \mainTimer.SLICE_170 ( .D0(\mainTimer.clkCont[4] ), 
    .B0(\mainTimer.clkCont[12] ), .A0(\mainTimer.clkCont[7] ), 
    .F0(\mainTimer.n18 ));
  mainTimer_SLICE_171 \mainTimer.SLICE_171 ( .D1(\mainTimer.clkCont[0] ), 
    .C1(\mainTimer.n21 ), .B1(\mainTimer.n18 ), .A1(\mainTimer.clkCont[6] ), 
    .D0(\mainTimer.clkCont[14] ), .C0(\mainTimer.clkCont[11] ), 
    .B0(\mainTimer.clkCont[2] ), .A0(\mainTimer.clkCont[17] ), 
    .F0(\mainTimer.n21 ), .F1(\mainTimer.n24 ));
  STATE_OUT_SLICE_172 \STATE_OUT.SLICE_172 ( .D0(\waiting_N_140[13] ), 
    .B0(\waiting_N_140[4] ), .F0(\STATE_OUT.n32 ));
  STATE_OUT_SLICE_173 \STATE_OUT.SLICE_173 ( .D1(\waiting_N_140[29] ), 
    .C1(\STATE_OUT.n46 ), .B1(\STATE_OUT.n32 ), .A1(\waiting_N_140[3] ), 
    .D0(\waiting_N_140[17] ), .C0(\waiting_N_140[25] ), 
    .B0(\waiting_N_140[20] ), .A0(\waiting_N_140[19] ), .F0(\STATE_OUT.n46 ), 
    .F1(\STATE_OUT.n52 ));
  STATE_OUT_SLICE_174 \STATE_OUT.SLICE_174 ( .D1(\STATE_OUT.n49 ), 
    .C1(\STATE_OUT.n50 ), .B1(\STATE_OUT.n48 ), .A1(\STATE_OUT.n47 ), 
    .D0(\waiting_N_140[10] ), .C0(\waiting_N_140[8] ), .B0(\waiting_N_140[7] ), 
    .A0(\waiting_N_140[30] ), .F0(\STATE_OUT.n50 ), .F1(\STATE_OUT.n56 ));
  STATE_OUT_SLICE_176 \STATE_OUT.SLICE_176 ( .D1(\waiting_N_140[6] ), 
    .C1(\STATE_OUT.n30 ), .B1(\waiting_N_140[14] ), .A1(\waiting_N_140[22] ), 
    .C0(\waiting_N_140[5] ), .A0(\waiting_N_140[21] ), .F0(\STATE_OUT.n30 ), 
    .F1(\STATE_OUT.n51 ));
  STATE_OUT_SLICE_178 \STATE_OUT.SLICE_178 ( .C1(waiting_N_139), .B1(waiting), 
    .D0(\STATE_OUT.n51 ), .C0(\STATE_OUT.n56 ), .B0(\waiting_N_140[31] ), 
    .A0(\STATE_OUT.n52 ), .F0(waiting_N_139), .F1(\STATE_OUT.n135_c ));
  STATE_OUT_serial_SLICE_180 \STATE_OUT.serial.SLICE_180 ( 
    .D1(\STATE_OUT.serial.n49 ), .C1(\STATE_OUT.serial.n50 ), 
    .B1(\STATE_OUT.serial.n47 ), .A1(\STATE_OUT.serial.n48 ), .D0(n158), 
    .C0(n159), .B0(n136), .A0(n156), .F0(\STATE_OUT.serial.n50 ), 
    .F1(\STATE_OUT.serial.n56 ));
  STATE_OUT_serial_SLICE_182 \STATE_OUT.serial.SLICE_182 ( .D0(n153), 
    .A0(n162), .F0(\STATE_OUT.serial.n32 ));
  STATE_OUT_serial_SLICE_183 \STATE_OUT.serial.SLICE_183 ( 
    .D1(\STATE_OUT.serial.n32 ), .C1(\STATE_OUT.serial.n46 ), .B1(n163), 
    .A1(n137), .D0(n146), .C0(n141), .B0(n149), .A0(n147), 
    .F0(\STATE_OUT.serial.n46 ), .F1(\STATE_OUT.serial.n52 ));
  STATE_OUT_serial_SLICE_184 \STATE_OUT.serial.SLICE_184 ( .D1(n144), 
    .C1(\STATE_OUT.serial.n44 ), .B1(\STATE_OUT.serial.n52 ), .A1(n152), 
    .D0(n160), .B0(n161), .A0(n145), .F0(\STATE_OUT.serial.n44 ), 
    .F1(\STATE_OUT.serial.n55 ));
  SLICE_186 SLICE_186( .D0(\state[0] ), .C0(\KEY_STATUS_1__N_253[1] ), 
    .B0(\state[1] ), .F0(TIMER_EN_N_13));
  SLICE_187 SLICE_187( .D1(SENSOR1_IN_c), .C1(\state[0] ), 
    .B1(\KEY_STATUS_1__N_253[1] ), .A1(\state[1] ), .D0(\state[1] ), 
    .B0(\state[0] ), .A0(\KEY_STATUS_1__N_253[1] ), .F0(n2106), .F1(n2107));
  SLICE_189 SLICE_189( .DI1(n532), .D1(\Sreg[1] ), .C1(init), .B1(\Sreg[0] ), 
    .A1(\temp_data_out[1] ), .C0(\Sreg[1] ), .A0(\Sreg[0] ), 
    .CLK(SERCLK_OUT_c), .Q1(\temp_data_out[1] ), .F0(SIREN_OUT_c), .F1(n532));
  SLICE_190 SLICE_190( .D0(\Snext_1__N_1[1] ), .C0(Snext_1__N_3), 
    .A0(\Snext[1] ), .F0(\Snext[1] ));
  SLICE_191 SLICE_191( .D0(Snext_1__N_3), .C0(\Snext_1__N_1[0] ), 
    .A0(\Snext[0] ), .F0(\Snext[0] ));
  STATE_OUT_SLICE_192 \STATE_OUT.SLICE_192 ( .D0(\STATE_OUT.cont[0] ), 
    .C0(\STATE_OUT.cont[1] ), .B0(\STATE_OUT.cont[2] ), 
    .A0(\STATE_OUT.cont[3] ), .F0(\STATE_OUT.n2101 ));
  STATE_OUT_SLICE_193 \STATE_OUT.SLICE_193 ( .D0(waiting), 
    .F0(\STATE_OUT.waiting_N_135 ));
  SLICE_194 SLICE_194( .DI1(\SENSOR2_IN_c.sig_002.FeedThruLUT ), 
    .C1(SENSOR2_IN_c), .D0(SENSOR1_IN_c), .B0(SENSOR2_IN_c), 
    .CE(\STATE_OUT.n113 ), .CLK(SERCLK_OUT_c), 
    .Q1(\STATE_OUT.serial.temp_data_out[3]_2 ), .F0(n1898), 
    .F1(\SENSOR2_IN_c.sig_002.FeedThruLUT ));
  STATE_OUT_serial_SLICE_196 \STATE_OUT.serial.SLICE_196 ( .D1(n150), 
    .C1(n154), .B1(n151), .A1(n155), .D0(n164), .C0(n139), .B0(n157), 
    .A0(n138), .F0(\STATE_OUT.serial.n47 ), .F1(\STATE_OUT.serial.n48 ));
  STATE_OUT_serial_SLICE_197 \STATE_OUT.serial.SLICE_197 ( .D0(n140), 
    .C0(n148), .B0(n142), .A0(n143), .F0(\STATE_OUT.serial.n49 ));
  STATE_OUT_serial_SLICE_199 \STATE_OUT.serial.SLICE_199 ( .C1(\Sreg[0] ), 
    .B1(init), .D0(\STATE_OUT.serial.n55 ), .C0(\STATE_OUT.serial.n56 ), 
    .B0(init), .A0(n135), .F0(n114), .F1(\STATE_OUT.serial.n439 ));
  STATE_OUT_SLICE_200 \STATE_OUT.SLICE_200 ( .D1(\waiting_N_140[15] ), 
    .C1(\waiting_N_140[16] ), .B1(\waiting_N_140[11] ), 
    .A1(\waiting_N_140[12] ), .D0(\waiting_N_140[28] ), 
    .C0(\waiting_N_140[9] ), .B0(\waiting_N_140[27] ), .A0(\waiting_N_140[2] ), 
    .F0(\STATE_OUT.n47 ), .F1(\STATE_OUT.n48 ));
  STATE_OUT_SLICE_201 \STATE_OUT.SLICE_201 ( .D0(\waiting_N_140[23] ), 
    .C0(\waiting_N_140[18] ), .B0(\waiting_N_140[24] ), 
    .A0(\waiting_N_140[26] ), .F0(\STATE_OUT.n49 ));
  SLICE_202 SLICE_202( .F0(VCC_net));
  keyboard_SLICE_203 \keyboard.SLICE_203 ( .D0(\keyboard.n786 ), 
    .C0(\keyboard.actualKey[1][0] ), .B0(KB_IN_c_0), 
    .F0(\keyboard.actualKey[1][0] ));
  mainTimer_SLICE_205 \mainTimer.SLICE_205 ( .D0(TIME_OUT), 
    .C0(\mainTimer.n1917 ), .B0(\mainTimer.clkCont[3] ), 
    .A0(\mainTimer.clkCont[1] ), .F0(\mainTimer.n20 ));
  STATE_OUT_SLICE_208 \STATE_OUT.SLICE_208 ( .D0(init), .F0(\STATE_OUT.n113 ));
  STATE_OUT_serial_SLICE_210 \STATE_OUT.serial.SLICE_210 ( 
    .DI1(\STATE_OUT.serial.status_out_N_252 ), .D1(\temp_data_out[1] ), 
    .C1(\STATE_OUT.serial.n2469 ), .B1(\STATE_OUT.serial.j[1] ), 
    .A1(\STATE_OUT.serial.temp_data_out[0]_2 ), 
    .D0(\STATE_OUT.serial.temp_data_out[3]_2 ), .C0(\STATE_OUT.serial.j[0] ), 
    .B0(\STATE_OUT.serial.temp_data_out[2]_2 ), .A0(\STATE_OUT.serial.j[1] ), 
    .LSR(\STATE_OUT.n113 ), .CLK(SERCLK_OUT_c), .Q1(STATUS_OUT_c), 
    .F0(\STATE_OUT.serial.n2469 ), .F1(\STATE_OUT.serial.status_out_N_252 ));
  OSCInst1 OSCInst1( .CLKLFPU(VCC_net), .CLKLFEN(VCC_net), 
    .CLKLF(SERCLK_OUT_c));
  STATE_OUT_serial_status_send \STATE_OUT.serial.status_send ( .DO0(init), 
    .OUTCLK(SERCLK_OUT_c), .PADDO(STATUS_SEND_c));
  STATUS_SEND STATUS_SEND_I( .PADDO(STATUS_SEND_c), .STATUS_SEND(STATUS_SEND));
  STATUS_OUT STATUS_OUT_I( .PADDO(STATUS_OUT_c), .STATUS_OUT(STATUS_OUT));
  SIREN_OUT SIREN_OUT_I( .PADDO(SIREN_OUT_c), .SIREN_OUT(SIREN_OUT));
  SERCLK_OUT SERCLK_OUT_I( .PADDO(SERCLK_OUT_c), .SERCLK_OUT(SERCLK_OUT));
  SENSOR1_IN SENSOR1_IN_I( .PADDI(SENSOR1_IN_c), .SENSOR1_IN(SENSOR1_IN));
  SENSOR2_IN SENSOR2_IN_I( .PADDI(SENSOR2_IN_c), .SENSOR2_IN(SENSOR2_IN));
  KB_IN_1_ \KB_IN[1]_I ( .PADDI(KB_IN_c_1), .KBIN1(KB_IN[1]));
  KB_IN_0_ \KB_IN[0]_I ( .PADDI(KB_IN_c_0), .KBIN0(KB_IN[0]));
  KB_RECV KB_RECV_I( .PADDI(KB_RECV_c), .KB_RECV(KB_RECV));
  RESET_IN RESET_IN_I( .PADDI(RESET_IN_c), .RESET_IN(RESET_IN));
endmodule

module mainTimer_SLICE_0 ( input D1, B1, D0, B0, CIN0, CIN1, output F0, F1, 
    COUT1, COUT0 );
  wire   GNDI;

  fa2 \mainTimer/add_7_add_5_17 ( .A0(GNDI), .B0(B0), .C0(GNDI), .D0(D0), 
    .A1(GNDI), .B1(B1), .C1(GNDI), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module fa2 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI0, CI1, output S0, S1, 
    CO0, CO1 );

  FA2 inst1( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .CI0(CI0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .CI1(CI1), .CO0(CO0), .CO1(CO1), .S0(S0), .S1(S1));
  defparam inst1.INIT0 = "0xc33c";
  defparam inst1.INIT1 = "0xc33c";
endmodule

module gnd ( output PWR0 );

  VLO INST1( .Z(PWR0));
endmodule

module mainTimer_SLICE_1 ( input D1, B1, D0, B0, CIN0, CIN1, output F0, F1, 
    COUT1, COUT0 );
  wire   GNDI;

  fa2 \mainTimer/add_7_add_5_15 ( .A0(GNDI), .B0(B0), .C0(GNDI), .D0(D0), 
    .A1(GNDI), .B1(B1), .C1(GNDI), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module mainTimer_SLICE_2 ( input D1, B1, D0, B0, CIN0, CIN1, output F0, F1, 
    COUT1, COUT0 );
  wire   GNDI;

  fa2 \mainTimer/add_7_add_5_13 ( .A0(GNDI), .B0(B0), .C0(GNDI), .D0(D0), 
    .A1(GNDI), .B1(B1), .C1(GNDI), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module mainTimer_SLICE_3 ( input D1, B1, D0, B0, CIN0, CIN1, output F0, F1, 
    COUT1, COUT0 );
  wire   GNDI;

  fa2 \mainTimer/add_7_add_5_11 ( .A0(GNDI), .B0(B0), .C0(GNDI), .D0(D0), 
    .A1(GNDI), .B1(B1), .C1(GNDI), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module mainTimer_SLICE_4 ( input D1, B1, D0, B0, CIN0, CIN1, output F0, F1, 
    COUT1, COUT0 );
  wire   GNDI;

  fa2 \mainTimer/add_7_add_5_9 ( .A0(GNDI), .B0(B0), .C0(GNDI), .D0(D0), 
    .A1(GNDI), .B1(B1), .C1(GNDI), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module mainTimer_SLICE_5 ( input D1, B1, D0, B0, CIN0, CIN1, output F0, F1, 
    COUT1, COUT0 );
  wire   GNDI;

  fa2 \mainTimer/add_7_add_5_7 ( .A0(GNDI), .B0(B0), .C0(GNDI), .D0(D0), 
    .A1(GNDI), .B1(B1), .C1(GNDI), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module mainTimer_SLICE_6 ( input D1, B1, D0, B0, CIN0, CIN1, output F0, F1, 
    COUT1, COUT0 );
  wire   GNDI;

  fa2 \mainTimer/add_7_add_5_5 ( .A0(GNDI), .B0(B0), .C0(GNDI), .D0(D0), 
    .A1(GNDI), .B1(B1), .C1(GNDI), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module mainTimer_SLICE_7 ( input D1, B1, D0, B0, CIN0, CIN1, output F0, F1, 
    COUT1, COUT0 );
  wire   GNDI;

  fa2 \mainTimer/add_7_add_5_3 ( .A0(GNDI), .B0(B0), .C0(GNDI), .D0(D0), 
    .A1(GNDI), .B1(B1), .C1(GNDI), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module mainTimer_SLICE_8 ( input D1, D0, B0, CIN0, CIN1, output F0, COUT0 );
  wire   GNDI;

  fa2 \mainTimer/add_7_add_5_19 ( .A0(GNDI), .B0(B0), .C0(GNDI), .D0(D0), 
    .A1(GNDI), .B1(GNDI), .C1(GNDI), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(), .CO0(COUT0), .CO1());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
  endspecify

endmodule

module mainTimer_SLICE_9 ( input D1, C1, B1, CIN1, output F1, COUT1, COUT0 );
  wire   GNDI, VCCI;

  fa2 \mainTimer/add_7_add_5_1 ( .A0(GNDI), .B0(GNDI), .C0(GNDI), .D0(VCCI), 
    .A1(GNDI), .B1(B1), .C1(C1), .D1(D1), .CI0(VCCI), .CI1(CIN1), .S0(), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module vcc ( output PWR1 );

  VHI INST1( .Z(PWR1));
endmodule

module STATE_OUT_SLICE_10 ( input D1, B1, D0, B0, CIN0, CIN1, output F0, F1, 
    COUT1, COUT0 );
  wire   GNDI;

  fa2 \STATE_OUT/add_7_add_5_5 ( .A0(GNDI), .B0(B0), .C0(GNDI), .D0(D0), 
    .A1(GNDI), .B1(B1), .C1(GNDI), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module STATE_OUT_SLICE_11 ( input D1, B1, D0, B0, CIN0, CIN1, output F0, F1, 
    COUT1, COUT0 );
  wire   GNDI;

  fa2 \STATE_OUT/add_7_add_5_19 ( .A0(GNDI), .B0(B0), .C0(GNDI), .D0(D0), 
    .A1(GNDI), .B1(B1), .C1(GNDI), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module STATE_OUT_SLICE_12 ( input DI0, D1, B1, D0, B0, CE, LSR, CLK, CIN0, 
    CIN1, output Q0, F0, F1, COUT1, COUT0 );
  wire   GNDI, DI0_dly, CLK_dly, CE_dly, LSR_dly;

  fa2 \STATE_OUT/add_7_add_5_3 ( .A0(GNDI), .B0(B0), .C0(GNDI), .D0(D0), 
    .A1(GNDI), .B1(B1), .C1(GNDI), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \STATE_OUT/j__i1 ( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module ffsre2 ( input D0, SP, CK, LSR, output Q );

  FD1P3XZ INST01( .D(D0), .SP(SP), .CK(CK), .SR(LSR), .Q(Q));
  defparam INST01.REGSET = "RESET";
  defparam INST01.SRMODE = "CE_OVER_LSR";
endmodule

module STATE_OUT_SLICE_13 ( input DI1, D1, C1, B1, CE, LSR, CLK, CIN1, output 
    Q1, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, CE_dly, LSR_dly;

  fa2 \STATE_OUT/add_7_add_5_1 ( .A0(GNDI), .B0(GNDI), .C0(GNDI), .D0(VCCI), 
    .A1(GNDI), .B1(B1), .C1(C1), .D1(D1), .CI0(VCCI), .CI1(CIN1), .S0(), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \STATE_OUT/j__i0 ( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module STATE_OUT_SLICE_14 ( input D1, B1, D0, B0, CIN0, CIN1, output F0, F1, 
    COUT1, COUT0 );
  wire   GNDI;

  fa2 \STATE_OUT/add_7_add_5_17 ( .A0(GNDI), .B0(B0), .C0(GNDI), .D0(D0), 
    .A1(GNDI), .B1(B1), .C1(GNDI), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module STATE_OUT_SLICE_15 ( input D1, B1, D0, B0, CIN0, CIN1, output F0, F1, 
    COUT1, COUT0 );
  wire   GNDI;

  fa2 \STATE_OUT/add_7_add_5_15 ( .A0(GNDI), .B0(B0), .C0(GNDI), .D0(D0), 
    .A1(GNDI), .B1(B1), .C1(GNDI), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module STATE_OUT_SLICE_16 ( input D1, B1, D0, B0, CIN0, CIN1, output F0, F1, 
    COUT1, COUT0 );
  wire   GNDI;

  fa2 \STATE_OUT/add_7_add_5_13 ( .A0(GNDI), .B0(B0), .C0(GNDI), .D0(D0), 
    .A1(GNDI), .B1(B1), .C1(GNDI), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module STATE_OUT_SLICE_17 ( input D1, B1, D0, B0, CIN0, CIN1, output F0, F1, 
    COUT1, COUT0 );
  wire   GNDI;

  fa2 \STATE_OUT/add_7_add_5_11 ( .A0(GNDI), .B0(B0), .C0(GNDI), .D0(D0), 
    .A1(GNDI), .B1(B1), .C1(GNDI), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module STATE_OUT_SLICE_18 ( input D1, B1, D0, B0, CIN0, CIN1, output F0, F1, 
    COUT1, COUT0 );
  wire   GNDI;

  fa2 \STATE_OUT/add_7_add_5_9 ( .A0(GNDI), .B0(B0), .C0(GNDI), .D0(D0), 
    .A1(GNDI), .B1(B1), .C1(GNDI), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module STATE_OUT_SLICE_19 ( input D1, B1, D0, B0, CIN0, CIN1, output F0, F1, 
    COUT1, COUT0 );
  wire   GNDI;

  fa2 \STATE_OUT/add_7_add_5_7 ( .A0(GNDI), .B0(B0), .C0(GNDI), .D0(D0), 
    .A1(GNDI), .B1(B1), .C1(GNDI), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module STATE_OUT_SLICE_20 ( input D1, D0, B0, CIN0, CIN1, output F0, COUT0 );
  wire   GNDI;

  fa2 \STATE_OUT/add_7_add_5_33 ( .A0(GNDI), .B0(B0), .C0(GNDI), .D0(D0), 
    .A1(GNDI), .B1(GNDI), .C1(GNDI), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(), .CO0(COUT0), .CO1());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
  endspecify

endmodule

module STATE_OUT_SLICE_21 ( input D1, B1, D0, B0, CIN0, CIN1, output F0, F1, 
    COUT1, COUT0 );
  wire   GNDI;

  fa2 \STATE_OUT/add_7_add_5_31 ( .A0(GNDI), .B0(B0), .C0(GNDI), .D0(D0), 
    .A1(GNDI), .B1(B1), .C1(GNDI), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module STATE_OUT_SLICE_22 ( input D1, B1, D0, B0, CIN0, CIN1, output F0, F1, 
    COUT1, COUT0 );
  wire   GNDI;

  fa2 \STATE_OUT/add_7_add_5_29 ( .A0(GNDI), .B0(B0), .C0(GNDI), .D0(D0), 
    .A1(GNDI), .B1(B1), .C1(GNDI), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module STATE_OUT_SLICE_23 ( input D1, B1, D0, B0, CIN0, CIN1, output F0, F1, 
    COUT1, COUT0 );
  wire   GNDI;

  fa2 \STATE_OUT/add_7_add_5_27 ( .A0(GNDI), .B0(B0), .C0(GNDI), .D0(D0), 
    .A1(GNDI), .B1(B1), .C1(GNDI), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module STATE_OUT_SLICE_24 ( input D1, B1, D0, B0, CIN0, CIN1, output F0, F1, 
    COUT1, COUT0 );
  wire   GNDI;

  fa2 \STATE_OUT/add_7_add_5_25 ( .A0(GNDI), .B0(B0), .C0(GNDI), .D0(D0), 
    .A1(GNDI), .B1(B1), .C1(GNDI), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module STATE_OUT_SLICE_25 ( input D1, B1, D0, B0, CIN0, CIN1, output F0, F1, 
    COUT1, COUT0 );
  wire   GNDI;

  fa2 \STATE_OUT/add_7_add_5_23 ( .A0(GNDI), .B0(B0), .C0(GNDI), .D0(D0), 
    .A1(GNDI), .B1(B1), .C1(GNDI), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module STATE_OUT_SLICE_26 ( input D1, B1, D0, B0, CIN0, CIN1, output F0, F1, 
    COUT1, COUT0 );
  wire   GNDI;

  fa2 \STATE_OUT/add_7_add_5_21 ( .A0(GNDI), .B0(B0), .C0(GNDI), .D0(D0), 
    .A1(GNDI), .B1(B1), .C1(GNDI), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module STATE_OUT_serial_SLICE_27 ( input D1, D0, B0, CIN0, CIN1, output F0, 
    COUT0 );
  wire   GNDI;

  fa2 \STATE_OUT/serial/add_6_add_5_33 ( .A0(GNDI), .B0(B0), .C0(GNDI), 
    .D0(D0), .A1(GNDI), .B1(GNDI), .C1(GNDI), .D1(D1), .CI0(CIN0), .CI1(CIN1), 
    .S0(F0), .S1(), .CO0(COUT0), .CO1());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
  endspecify

endmodule

module STATE_OUT_serial_SLICE_28 ( input D1, B1, D0, B0, CIN0, CIN1, output F0, 
    F1, COUT1, COUT0 );
  wire   GNDI;

  fa2 \STATE_OUT/serial/add_6_add_5_11 ( .A0(GNDI), .B0(B0), .C0(GNDI), 
    .D0(D0), .A1(GNDI), .B1(B1), .C1(GNDI), .D1(D1), .CI0(CIN0), .CI1(CIN1), 
    .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module STATE_OUT_serial_SLICE_29 ( input D1, B1, D0, B0, CIN0, CIN1, output F0, 
    F1, COUT1, COUT0 );
  wire   GNDI;

  fa2 \STATE_OUT/serial/add_6_add_5_31 ( .A0(GNDI), .B0(B0), .C0(GNDI), 
    .D0(D0), .A1(GNDI), .B1(B1), .C1(GNDI), .D1(D1), .CI0(CIN0), .CI1(CIN1), 
    .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module STATE_OUT_serial_SLICE_30 ( input D1, B1, D0, B0, CIN0, CIN1, output F0, 
    F1, COUT1, COUT0 );
  wire   GNDI;

  fa2 \STATE_OUT/serial/add_6_add_5_29 ( .A0(GNDI), .B0(B0), .C0(GNDI), 
    .D0(D0), .A1(GNDI), .B1(B1), .C1(GNDI), .D1(D1), .CI0(CIN0), .CI1(CIN1), 
    .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module STATE_OUT_serial_SLICE_31 ( input D1, B1, D0, B0, CIN0, CIN1, output F0, 
    F1, COUT1, COUT0 );
  wire   GNDI;

  fa2 \STATE_OUT/serial/add_6_add_5_27 ( .A0(GNDI), .B0(B0), .C0(GNDI), 
    .D0(D0), .A1(GNDI), .B1(B1), .C1(GNDI), .D1(D1), .CI0(CIN0), .CI1(CIN1), 
    .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module STATE_OUT_serial_SLICE_32 ( input D1, B1, D0, B0, CIN0, CIN1, output F0, 
    F1, COUT1, COUT0 );
  wire   GNDI;

  fa2 \STATE_OUT/serial/add_6_add_5_25 ( .A0(GNDI), .B0(B0), .C0(GNDI), 
    .D0(D0), .A1(GNDI), .B1(B1), .C1(GNDI), .D1(D1), .CI0(CIN0), .CI1(CIN1), 
    .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module STATE_OUT_serial_SLICE_33 ( input D1, B1, D0, B0, CIN0, CIN1, output F0, 
    F1, COUT1, COUT0 );
  wire   GNDI;

  fa2 \STATE_OUT/serial/add_6_add_5_5 ( .A0(GNDI), .B0(B0), .C0(GNDI), .D0(D0), 
    .A1(GNDI), .B1(B1), .C1(GNDI), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module STATE_OUT_serial_SLICE_34 ( input D1, B1, D0, B0, CIN0, CIN1, output F0, 
    F1, COUT1, COUT0 );
  wire   GNDI;

  fa2 \STATE_OUT/serial/add_6_add_5_23 ( .A0(GNDI), .B0(B0), .C0(GNDI), 
    .D0(D0), .A1(GNDI), .B1(B1), .C1(GNDI), .D1(D1), .CI0(CIN0), .CI1(CIN1), 
    .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module STATE_OUT_serial_SLICE_35 ( input DI0, D1, B1, D0, B0, LSR, CLK, CIN0, 
    CIN1, output Q0, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI0_dly, CLK_dly, LSR_dly;

  fa2 \STATE_OUT/serial/add_6_add_5_3 ( .A0(GNDI), .B0(B0), .C0(GNDI), .D0(D0), 
    .A1(GNDI), .B1(B1), .C1(GNDI), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \STATE_OUT/serial/j__i1 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module STATE_OUT_serial_SLICE_36 ( input D1, B1, D0, B0, CIN0, CIN1, output F0, 
    F1, COUT1, COUT0 );
  wire   GNDI;

  fa2 \STATE_OUT/serial/add_6_add_5_21 ( .A0(GNDI), .B0(B0), .C0(GNDI), 
    .D0(D0), .A1(GNDI), .B1(B1), .C1(GNDI), .D1(D1), .CI0(CIN0), .CI1(CIN1), 
    .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module STATE_OUT_serial_SLICE_37 ( input D1, B1, D0, B0, CIN0, CIN1, output F0, 
    F1, COUT1, COUT0 );
  wire   GNDI;

  fa2 \STATE_OUT/serial/add_6_add_5_15 ( .A0(GNDI), .B0(B0), .C0(GNDI), 
    .D0(D0), .A1(GNDI), .B1(B1), .C1(GNDI), .D1(D1), .CI0(CIN0), .CI1(CIN1), 
    .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module STATE_OUT_serial_SLICE_38 ( input D1, B1, D0, B0, CIN0, CIN1, output F0, 
    F1, COUT1, COUT0 );
  wire   GNDI;

  fa2 \STATE_OUT/serial/add_6_add_5_19 ( .A0(GNDI), .B0(B0), .C0(GNDI), 
    .D0(D0), .A1(GNDI), .B1(B1), .C1(GNDI), .D1(D1), .CI0(CIN0), .CI1(CIN1), 
    .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module STATE_OUT_serial_SLICE_39 ( input D1, B1, D0, B0, CIN0, CIN1, output F0, 
    F1, COUT1, COUT0 );
  wire   GNDI;

  fa2 \STATE_OUT/serial/add_6_add_5_9 ( .A0(GNDI), .B0(B0), .C0(GNDI), .D0(D0), 
    .A1(GNDI), .B1(B1), .C1(GNDI), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module STATE_OUT_serial_SLICE_40 ( input D1, B1, D0, B0, CIN0, CIN1, output F0, 
    F1, COUT1, COUT0 );
  wire   GNDI;

  fa2 \STATE_OUT/serial/add_6_add_5_17 ( .A0(GNDI), .B0(B0), .C0(GNDI), 
    .D0(D0), .A1(GNDI), .B1(B1), .C1(GNDI), .D1(D1), .CI0(CIN0), .CI1(CIN1), 
    .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module STATE_OUT_serial_SLICE_41 ( input D1, B1, D0, B0, CIN0, CIN1, output F0, 
    F1, COUT1, COUT0 );
  wire   GNDI;

  fa2 \STATE_OUT/serial/add_6_add_5_13 ( .A0(GNDI), .B0(B0), .C0(GNDI), 
    .D0(D0), .A1(GNDI), .B1(B1), .C1(GNDI), .D1(D1), .CI0(CIN0), .CI1(CIN1), 
    .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module STATE_OUT_serial_SLICE_42 ( input D1, B1, D0, B0, CIN0, CIN1, output F0, 
    F1, COUT1, COUT0 );
  wire   GNDI;

  fa2 \STATE_OUT/serial/add_6_add_5_7 ( .A0(GNDI), .B0(B0), .C0(GNDI), .D0(D0), 
    .A1(GNDI), .B1(B1), .C1(GNDI), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module STATE_OUT_serial_SLICE_43 ( input DI1, D1, C1, B1, LSR, CLK, CIN1, 
    output Q1, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, LSR_dly;

  fa2 \STATE_OUT/serial/add_6_add_5_1 ( .A0(GNDI), .B0(GNDI), .C0(GNDI), 
    .D0(VCCI), .A1(GNDI), .B1(B1), .C1(C1), .D1(D1), .CI0(VCCI), .CI1(CIN1), 
    .S0(), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \STATE_OUT/serial/j__i0 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module SLICE_44 ( input DI1, DI0, C1, B1, A1, C0, B0, A0, LSR, CLK, output Q0, 
    Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  lut4 SLICE_44_K1( .A(A1), .B(B1), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40001 SLICE_44_K0( .A(A0), .B(B0), .C(C0), .D(GNDI), .Z(F0));
  ffsre20002 Sreg_i1( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), 
    .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre20002 Sreg_i0( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), 
    .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module lut4 ( input A, B, C, D, output Z );

  LUT4 #("0xE2E2") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40001 ( input A, B, C, D, output Z );

  LUT4 #("0xB8B8") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module ffsre20002 ( input D0, SP, CK, LSR, output Q );

  FD1P3XZ INST01( .D(D0), .SP(SP), .CK(CK), .SR(LSR), .Q(Q));
  defparam INST01.REGSET = "RESET";
  defparam INST01.SRMODE = "ASYNC";
endmodule

module keyboard_SLICE_46 ( input DI1, DI0, D1, C1, B1, A1, D0, A0, CLK, 
    output Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  lut40003 \keyboard.SLICE_46_K1 ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40004 \keyboard.SLICE_46_K0 ( .A(A0), .B(GNDI), .C(GNDI), .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \keyboard/state_i0 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \keyboard/state_i1 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module lut40003 ( input A, B, C, D, output Z );

  LUT4 #("0x5540") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40004 ( input A, B, C, D, output Z );

  LUT4 #("0xFFAA") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module keyboard_SLICE_47 ( input DI1, DI0, D1, C1, C0, CLK, output Q0, Q1, F0, 
    F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  lut40005 \keyboard/i925_2_lut ( .A(GNDI), .B(GNDI), .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40006 \keyboard/i138_1_lut ( .A(GNDI), .B(GNDI), .C(C0), .D(GNDI), .Z(F0));
  ffsre2 \keyboard/counter_111__i1 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \keyboard/counter_111__i0 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module lut40005 ( input A, B, C, D, output Z );

  LUT4 #("0x0FF0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40006 ( input A, B, C, D, output Z );

  LUT4 #("0x0F0F") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module mainTimer_SLICE_50 ( input DI0, D0, C0, B0, A0, LSR, CLK, output Q0, F0 );
  wire   VCCI, DI0_dly, CLK_dly, LSR_dly;

  lut40007 \mainTimer/i12_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  ffsre20002 \mainTimer/state ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module lut40007 ( input A, B, C, D, output Z );

  LUT4 #("0x8000") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module mainTimer_SLICE_51 ( input DI1, DI0, C1, B1, B0, A0, LSR, CLK, output 
    Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  lut40008 \mainTimer/i596_2_lut ( .A(GNDI), .B(B1), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40009 \mainTimer/i607_2_lut ( .A(A0), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));
  ffsre20002 \mainTimer/clkCont_i16 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre20002 \mainTimer/clkCont_i17 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module lut40008 ( input A, B, C, D, output Z );

  LUT4 #("0x0C0C") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40009 ( input A, B, C, D, output Z );

  LUT4 #("0x2222") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module mainTimer_SLICE_53 ( input DI1, DI0, C1, A1, D0, B0, LSR, CLK, output 
    Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  lut40010 \mainTimer/i585_2_lut ( .A(A1), .B(GNDI), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40011 \mainTimer/i594_2_lut ( .A(GNDI), .B(B0), .C(GNDI), .D(D0), .Z(F0));
  ffsre20002 \mainTimer/clkCont_i14 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre20002 \mainTimer/clkCont_i15 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module lut40010 ( input A, B, C, D, output Z );

  LUT4 #("0x5050") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40011 ( input A, B, C, D, output Z );

  LUT4 #("0x00CC") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module mainTimer_SLICE_55 ( input DI1, DI0, D1, B1, C0, A0, LSR, CLK, output 
    Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  lut40012 \mainTimer/i583_2_lut ( .A(GNDI), .B(B1), .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40013 \mainTimer/i584_2_lut ( .A(A0), .B(GNDI), .C(C0), .D(GNDI), .Z(F0));
  ffsre20002 \mainTimer/clkCont_i12 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre20002 \mainTimer/clkCont_i13 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module lut40012 ( input A, B, C, D, output Z );

  LUT4 #("0x3300") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40013 ( input A, B, C, D, output Z );

  LUT4 #("0x5050") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module mainTimer_SLICE_57 ( input DI1, DI0, D1, B1, C0, A0, LSR, CLK, output 
    Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  lut40012 \mainTimer/i618_2_lut ( .A(GNDI), .B(B1), .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40014 \mainTimer/i619_2_lut ( .A(A0), .B(GNDI), .C(C0), .D(GNDI), .Z(F0));
  ffsre20002 \mainTimer/clkCont_i10 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre20002 \mainTimer/clkCont_i11 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module lut40014 ( input A, B, C, D, output Z );

  LUT4 #("0x0A0A") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module mainTimer_SLICE_59 ( input DI1, DI0, C1, A1, D0, B0, LSR, CLK, output 
    Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  lut40015 \mainTimer/i613_2_lut ( .A(A1), .B(GNDI), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40016 \mainTimer/i615_2_lut ( .A(GNDI), .B(B0), .C(GNDI), .D(D0), .Z(F0));
  ffsre20002 \mainTimer/clkCont_i8 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre20002 \mainTimer/clkCont_i9 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module lut40015 ( input A, B, C, D, output Z );

  LUT4 #("0x0A0A") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40016 ( input A, B, C, D, output Z );

  LUT4 #("0x3300") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module mainTimer_SLICE_61 ( input DI1, DI0, D1, A1, D0, B0, LSR, CLK, output 
    Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  lut40017 \mainTimer/i621_2_lut ( .A(A1), .B(GNDI), .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40011 \mainTimer/i614_2_lut ( .A(GNDI), .B(B0), .C(GNDI), .D(D0), .Z(F0));
  ffsre20002 \mainTimer/clkCont_i6 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre20002 \mainTimer/clkCont_i7 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module lut40017 ( input A, B, C, D, output Z );

  LUT4 #("0x5500") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module mainTimer_SLICE_63 ( input DI1, DI0, C1, A1, D0, B0, LSR, CLK, output 
    Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  lut40015 \mainTimer/i604_2_lut ( .A(A1), .B(GNDI), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40016 \mainTimer/i599_2_lut ( .A(GNDI), .B(B0), .C(GNDI), .D(D0), .Z(F0));
  ffsre20002 \mainTimer/clkCont_i4 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre20002 \mainTimer/clkCont_i5 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module mainTimer_SLICE_65 ( input DI1, DI0, C1, A1, C0, B0, LSR, CLK, output 
    Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  lut40010 \mainTimer/i606_2_lut ( .A(A1), .B(GNDI), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40018 \mainTimer/i605_2_lut ( .A(GNDI), .B(B0), .C(C0), .D(GNDI), .Z(F0));
  ffsre20002 \mainTimer/clkCont_i2 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre20002 \mainTimer/clkCont_i3 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module lut40018 ( input A, B, C, D, output Z );

  LUT4 #("0x3030") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module mainTimer_SLICE_67 ( input DI1, DI0, C1, A1, D0, B0, LSR, CLK, output 
    Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  lut40010 \mainTimer/i591_2_lut ( .A(A1), .B(GNDI), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40016 \mainTimer/i612_2_lut ( .A(GNDI), .B(B0), .C(GNDI), .D(D0), .Z(F0));
  ffsre20002 \mainTimer/clkCont_i0 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre20002 \mainTimer/clkCont_i1 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module SLICE_69 ( input DI1, DI0, D1, C1, B1, A1, D0, C0, B0, A0, CLK, output 
    Q0, Q1, F0, F1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  lut40019 i392_4_lut_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40020 i390_4_lut_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  ffsre2 \STATE_OUT/j__i17 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \STATE_OUT/j__i16 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module lut40019 ( input A, B, C, D, output Z );

  LUT4 #("0x88B8") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40020 ( input A, B, C, D, output Z );

  LUT4 #("0xAA0C") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_70 ( input DI1, DI0, D1, C1, B1, A1, D0, C0, B0, A0, CLK, output 
    Q0, Q1, F0, F1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  lut40021 i388_4_lut_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40022 i386_4_lut_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  ffsre2 \STATE_OUT/j__i15 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \STATE_OUT/j__i14 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module lut40021 ( input A, B, C, D, output Z );

  LUT4 #("0x88D8") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40022 ( input A, B, C, D, output Z );

  LUT4 #("0xDC10") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module STATE_OUT_SLICE_71 ( input DI1, DI0, D1, D0, C0, A0, CLK, output Q0, Q1, 
    F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  lut40023 \STATE_OUT.SLICE_71_K1 ( .A(GNDI), .B(GNDI), .C(GNDI), .D(D1), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40024 \STATE_OUT/i12_3_lut ( .A(A0), .B(GNDI), .C(C0), .D(D0), .Z(F0));
  ffsre2 \STATE_OUT/init_c ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \STATE_OUT/waiting_c ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module lut40023 ( input A, B, C, D, output Z );

  LUT4 #("0x00FF") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40024 ( input A, B, C, D, output Z );

  LUT4 #("0xAFA0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_74 ( input DI1, DI0, D1, C1, B1, A1, D0, C0, B0, A0, CLK, output 
    Q0, Q1, F0, F1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  lut40025 i396_4_lut_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40026 i394_4_lut_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  ffsre2 \STATE_OUT/j__i19 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \STATE_OUT/j__i18 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module lut40025 ( input A, B, C, D, output Z );

  LUT4 #("0xA0AC") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40026 ( input A, B, C, D, output Z );

  LUT4 #("0xD1C0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_76 ( input DI1, DI0, D1, C1, B1, A1, D0, C0, B0, A0, CLK, output 
    Q0, Q1, F0, F1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  lut40027 i380_4_lut_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40028 i378_4_lut_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  ffsre2 \STATE_OUT/j__i11 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \STATE_OUT/j__i10 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module lut40027 ( input A, B, C, D, output Z );

  LUT4 #("0xA0E4") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40028 ( input A, B, C, D, output Z );

  LUT4 #("0xF044") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_78 ( input DI1, DI0, D1, C1, B1, A1, D0, C0, B0, A0, CLK, output 
    Q0, Q1, F0, F1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  lut40029 i384_4_lut_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40030 i382_4_lut_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  ffsre2 \STATE_OUT/j__i13 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \STATE_OUT/j__i12 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module lut40029 ( input A, B, C, D, output Z );

  LUT4 #("0xCE02") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40030 ( input A, B, C, D, output Z );

  LUT4 #("0xF022") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module STATE_OUT_SLICE_79 ( input DI1, DI0, D1, C1, B0, LSR, CLK, output Q0, 
    Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  lut40031 \STATE_OUT/i940_2_lut ( .A(GNDI), .B(GNDI), .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40032 \STATE_OUT/i938_1_lut ( .A(GNDI), .B(B0), .C(GNDI), .D(GNDI), 
    .Z(F0));
  ffsre2 \STATE_OUT/cont_110__i1 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \STATE_OUT/cont_110__i0 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module lut40031 ( input A, B, C, D, output Z );

  LUT4 #("0x0FF0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40032 ( input A, B, C, D, output Z );

  LUT4 #("0x3333") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_80 ( input DI1, DI0, D1, C1, B1, A1, D0, C0, B0, A0, CLK, output 
    Q0, Q1, F0, F1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  lut40033 i333_4_lut_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40026 i331_4_lut_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  ffsre2 \STATE_OUT/j__i8 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \STATE_OUT/j__i9 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module lut40033 ( input A, B, C, D, output Z );

  LUT4 #("0xBA10") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_82 ( input DI1, DI0, D1, C1, B1, A1, D0, C0, B0, A0, CLK, output 
    Q0, Q1, F0, F1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  lut40034 i337_4_lut_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40028 i335_4_lut_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  ffsre2 \STATE_OUT/j__i6 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \STATE_OUT/j__i7 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module lut40034 ( input A, B, C, D, output Z );

  LUT4 #("0xB1A0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_84 ( input DI1, DI0, D1, C1, B1, A1, D0, C0, B0, A0, CLK, output 
    Q0, Q1, F0, F1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  lut40021 i341_4_lut_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40026 i339_4_lut_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  ffsre2 \STATE_OUT/j__i4 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \STATE_OUT/j__i5 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module SLICE_86 ( input DI1, DI0, D1, C1, B1, A1, D0, C0, B0, A0, CLK, output 
    Q0, Q1, F0, F1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  lut40035 i345_4_lut_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40036 i343_4_lut_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  ffsre2 \STATE_OUT/j__i2 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \STATE_OUT/j__i3 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module lut40035 ( input A, B, C, D, output Z );

  LUT4 #("0xF044") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40036 ( input A, B, C, D, output Z );

  LUT4 #("0x88B8") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_88 ( input DI1, DI0, D1, C1, B1, A1, D0, C0, B0, A0, CLK, output 
    Q0, Q1, F0, F1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  lut40037 i418_4_lut_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40038 i420_4_lut_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  ffsre2 \STATE_OUT/j__i30 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \STATE_OUT/j__i31 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module lut40037 ( input A, B, C, D, output Z );

  LUT4 #("0xC5C0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40038 ( input A, B, C, D, output Z );

  LUT4 #("0xA0E4") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_90 ( input DI1, DI0, D1, C1, B1, A1, D0, C0, B0, A0, CLK, output 
    Q0, Q1, F0, F1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  lut40033 i414_4_lut_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40039 i416_4_lut_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  ffsre2 \STATE_OUT/j__i28 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \STATE_OUT/j__i29 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module lut40039 ( input A, B, C, D, output Z );

  LUT4 #("0xCC0A") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_92 ( input DI1, DI0, D1, C1, B1, A1, D0, C0, B0, A0, CLK, output 
    Q0, Q1, F0, F1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  lut40040 i410_4_lut_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40041 i412_4_lut_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  ffsre2 \STATE_OUT/j__i26 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \STATE_OUT/j__i27 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module lut40040 ( input A, B, C, D, output Z );

  LUT4 #("0xAA0C") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40041 ( input A, B, C, D, output Z );

  LUT4 #("0xAA30") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_94 ( input DI1, DI0, D1, C1, B1, A1, D0, C0, B0, A0, CLK, output 
    Q0, Q1, F0, F1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  lut40042 i406_4_lut_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40043 i408_4_lut_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  ffsre2 \STATE_OUT/j__i24 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \STATE_OUT/j__i25 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module lut40042 ( input A, B, C, D, output Z );

  LUT4 #("0xDC10") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40043 ( input A, B, C, D, output Z );

  LUT4 #("0xA3A0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_96 ( input DI1, DI0, D1, C1, B1, A1, D0, C0, B0, A0, CLK, output 
    Q0, Q1, F0, F1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  lut40019 i402_4_lut_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40044 i404_4_lut_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  ffsre2 \STATE_OUT/j__i22 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \STATE_OUT/j__i23 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module lut40044 ( input A, B, C, D, output Z );

  LUT4 #("0xCE02") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_98 ( input DI1, DI0, D1, C1, B1, A1, D0, C0, B0, A0, CLK, output 
    Q0, Q1, F0, F1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  lut40019 i398_4_lut_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40045 i400_4_lut_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  ffsre2 \STATE_OUT/j__i20 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \STATE_OUT/j__i21 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module lut40045 ( input A, B, C, D, output Z );

  LUT4 #("0x8B88") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module STATE_OUT_SLICE_101 ( input DI1, DI0, D1, C1, B1, A1, D0, B0, A0, LSR, 
    CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  lut40046 \STATE_OUT/i954_3_lut_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40047 \STATE_OUT/i947_2_lut_3_lut ( .A(A0), .B(B0), .C(GNDI), .D(D0), 
    .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \STATE_OUT/cont_110__i3 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \STATE_OUT/cont_110__i2 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module lut40046 ( input A, B, C, D, output Z );

  LUT4 #("0x7F80") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40047 ( input A, B, C, D, output Z );

  LUT4 #("0x66CC") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_104 ( input DI1, DI0, D1, A1, B0, A0, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  lut40048 i359_2_lut( .A(A1), .B(GNDI), .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40049 i360_2_lut( .A(A0), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));
  ffsre2 \STATE_OUT/serial/j__i19 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \STATE_OUT/serial/j__i18 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module lut40048 ( input A, B, C, D, output Z );

  LUT4 #("0x5500") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40049 ( input A, B, C, D, output Z );

  LUT4 #("0x2222") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_107 ( input DI1, DI0, C1, B1, C0, B0, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  lut40050 i357_2_lut( .A(GNDI), .B(B1), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40051 i358_2_lut( .A(GNDI), .B(B0), .C(C0), .D(GNDI), .Z(F0));
  ffsre2 \STATE_OUT/serial/j__i21 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \STATE_OUT/serial/j__i20 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module lut40050 ( input A, B, C, D, output Z );

  LUT4 #("0x0C0C") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40051 ( input A, B, C, D, output Z );

  LUT4 #("0x3030") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_109 ( input DI1, DI0, C1, A1, B0, A0, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  lut40052 i355_2_lut( .A(A1), .B(GNDI), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40049 i356_2_lut( .A(A0), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));
  ffsre2 \STATE_OUT/serial/j__i23 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \STATE_OUT/serial/j__i22 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module lut40052 ( input A, B, C, D, output Z );

  LUT4 #("0x5050") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_111 ( input DI1, DI0, C1, A1, D0, B0, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  lut40052 i353_2_lut( .A(A1), .B(GNDI), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40053 i354_2_lut( .A(GNDI), .B(B0), .C(GNDI), .D(D0), .Z(F0));
  ffsre2 \STATE_OUT/serial/j__i25 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \STATE_OUT/serial/j__i24 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module lut40053 ( input A, B, C, D, output Z );

  LUT4 #("0x3300") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_113 ( input DI1, DI0, C1, B1, D0, C0, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  lut40050 i351_2_lut( .A(GNDI), .B(B1), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40054 i352_2_lut( .A(GNDI), .B(GNDI), .C(C0), .D(D0), .Z(F0));
  ffsre2 \STATE_OUT/serial/j__i27 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \STATE_OUT/serial/j__i26 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module lut40054 ( input A, B, C, D, output Z );

  LUT4 #("0x00F0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_115 ( input DI1, DI0, D1, C1, D0, C0, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  lut40055 i349_2_lut( .A(GNDI), .B(GNDI), .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40054 i350_2_lut( .A(GNDI), .B(GNDI), .C(C0), .D(D0), .Z(F0));
  ffsre2 \STATE_OUT/serial/j__i29 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \STATE_OUT/serial/j__i28 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module lut40055 ( input A, B, C, D, output Z );

  LUT4 #("0x0F00") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_117 ( input DI1, DI0, D1, B1, D0, A0, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  lut40056 i347_2_lut( .A(GNDI), .B(B1), .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40057 i348_2_lut( .A(A0), .B(GNDI), .C(GNDI), .D(D0), .Z(F0));
  ffsre2 \STATE_OUT/serial/j__i31 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \STATE_OUT/serial/j__i30 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module lut40056 ( input A, B, C, D, output Z );

  LUT4 #("0xCC00") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40057 ( input A, B, C, D, output Z );

  LUT4 #("0x5500") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_119 ( input DI1, DI0, D1, B1, D0, C0, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  lut40058 i375_2_lut( .A(GNDI), .B(B1), .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40059 i376_2_lut( .A(GNDI), .B(GNDI), .C(C0), .D(D0), .Z(F0));
  ffsre2 \STATE_OUT/serial/j__i3 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \STATE_OUT/serial/j__i2 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module lut40058 ( input A, B, C, D, output Z );

  LUT4 #("0x00CC") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40059 ( input A, B, C, D, output Z );

  LUT4 #("0x0F00") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_120 ( input DI0, B0, CE, LSR, CLK, output Q0, F0 );
  wire   GNDI, DI0_dly, CLK_dly, CE_dly, LSR_dly;

  lut40060 SLICE_120_K0( .A(GNDI), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre20061 \STATE_OUT/serial/temp_data_out_i0_i0 ( .D0(DI0_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (B0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module lut40060 ( input A, B, C, D, output Z );

  LUT4 #("0xCCCC") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module ffsre20061 ( input D0, SP, CK, LSR, output Q );

  FD1P3XZ INST01( .D(D0), .SP(SP), .CK(CK), .SR(LSR), .Q(Q));
  defparam INST01.REGSET = "SET";
  defparam INST01.SRMODE = "CE_OVER_LSR";
endmodule

module SLICE_122 ( input DI1, DI0, C1, B1, B0, A0, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  lut40062 i373_2_lut( .A(GNDI), .B(B1), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40063 i374_2_lut( .A(A0), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));
  ffsre2 \STATE_OUT/serial/j__i5 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \STATE_OUT/serial/j__i4 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module lut40062 ( input A, B, C, D, output Z );

  LUT4 #("0x3030") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40063 ( input A, B, C, D, output Z );

  LUT4 #("0x4444") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_124 ( input DI1, DI0, B1, A1, D0, B0, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  lut40064 i371_2_lut( .A(A1), .B(B1), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40065 i372_2_lut( .A(GNDI), .B(B0), .C(GNDI), .D(D0), .Z(F0));
  ffsre2 \STATE_OUT/serial/j__i7 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \STATE_OUT/serial/j__i6 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module lut40064 ( input A, B, C, D, output Z );

  LUT4 #("0x4444") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40065 ( input A, B, C, D, output Z );

  LUT4 #("0x00CC") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_126 ( input DI1, DI0, C1, A1, D0, B0, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  lut40066 i369_2_lut( .A(A1), .B(GNDI), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40065 i370_2_lut( .A(GNDI), .B(B0), .C(GNDI), .D(D0), .Z(F0));
  ffsre2 \STATE_OUT/serial/j__i9 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \STATE_OUT/serial/j__i8 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module lut40066 ( input A, B, C, D, output Z );

  LUT4 #("0x0A0A") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_128 ( input DI1, DI0, B1, A1, C0, B0, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  lut40064 i367_2_lut( .A(A1), .B(B1), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40051 i368_2_lut( .A(GNDI), .B(B0), .C(C0), .D(GNDI), .Z(F0));
  ffsre2 \STATE_OUT/serial/j__i11 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \STATE_OUT/serial/j__i10 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module SLICE_130 ( input DI1, DI0, C1, A1, D0, B0, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  lut40066 i365_2_lut( .A(A1), .B(GNDI), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40053 i366_2_lut( .A(GNDI), .B(B0), .C(GNDI), .D(D0), .Z(F0));
  ffsre2 \STATE_OUT/serial/j__i13 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \STATE_OUT/serial/j__i12 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module SLICE_132 ( input DI1, DI0, B1, A1, D0, B0, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  lut40064 i363_2_lut( .A(A1), .B(B1), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40065 i364_2_lut( .A(GNDI), .B(B0), .C(GNDI), .D(D0), .Z(F0));
  ffsre2 \STATE_OUT/serial/j__i15 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \STATE_OUT/serial/j__i14 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module SLICE_133 ( input DI0, B0, CE, CLK, output Q0, F0 );
  wire   GNDI, DI0_dly, CLK_dly, CE_dly;

  lut40060 SLICE_133_K0( .A(GNDI), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \STATE_OUT/serial/temp_data_out_i0_i2 ( .D0(DI0_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (B0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module SLICE_136 ( input DI1, DI0, C1, A1, C0, B0, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  lut40066 i361_2_lut( .A(A1), .B(GNDI), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40051 i362_2_lut( .A(GNDI), .B(B0), .C(C0), .D(GNDI), .Z(F0));
  ffsre2 \STATE_OUT/serial/j__i17 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \STATE_OUT/serial/j__i16 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module keyboard_SLICE_140 ( input D1, C1, B1, A1, D0, A0, output F0, F1 );
  wire   GNDI;

  lut40067 \keyboard/i12_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40004 \keyboard/i1_2_lut ( .A(A0), .B(GNDI), .C(GNDI), .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40067 ( input A, B, C, D, output Z );

  LUT4 #("0xDCB8") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_142 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40068 n2475_bdd_4_lut_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40069 \Sreg[0]_bdd_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40068 ( input A, B, C, D, output Z );

  LUT4 #("0xF0C5") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40069 ( input A, B, C, D, output Z );

  LUT4 #("0xDA8A") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_144 ( input D1, C1, B1, A1, D0, B0, output F0, F1 );
  wire   GNDI;

  lut40070 i2_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40071 \keyboard/i631_2_lut ( .A(GNDI), .B(B0), .C(GNDI), .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40070 ( input A, B, C, D, output Z );

  LUT4 #("0x00A8") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40071 ( input A, B, C, D, output Z );

  LUT4 #("0xFF33") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_145 ( input C1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40072 \mainTimer/EN_I_0_1_lut ( .A(GNDI), .B(GNDI), .C(C1), .D(GNDI), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40073 i1_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40072 ( input A, B, C, D, output Z );

  LUT4 #("0x0F0F") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40073 ( input A, B, C, D, output Z );

  LUT4 #("0xEEEC") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module keyboard_SLICE_146 ( input C1, B1, A1, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40074 \keyboard/i469_3_lut ( .A(A1), .B(B1), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40075 \keyboard/i467_3_lut ( .A(A0), .B(B0), .C(C0), .D(GNDI), .Z(F0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40074 ( input A, B, C, D, output Z );

  LUT4 #("0xE4E4") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40075 ( input A, B, C, D, output Z );

  LUT4 #("0xE4E4") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module keyboard_SLICE_147 ( input D1, C1, B1, A1, C0, A0, output F0, F1 );
  wire   GNDI;

  lut40076 \keyboard/i4_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40077 \keyboard/i1_2_lut_adj_39 ( .A(A0), .B(GNDI), .C(C0), .D(GNDI), 
    .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40076 ( input A, B, C, D, output Z );

  LUT4 #("0xFFFB") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40077 ( input A, B, C, D, output Z );

  LUT4 #("0xFAFA") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module keyboard_SLICE_148 ( input D1, C1, B1, A1, D0, C0, A0, output F0, F1 );
  wire   GNDI;

  lut40078 \keyboard/i1486_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40079 \keyboard/i449_3_lut ( .A(A0), .B(GNDI), .C(C0), .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40078 ( input A, B, C, D, output Z );

  LUT4 #("0x8000") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40079 ( input A, B, C, D, output Z );

  LUT4 #("0xAFA0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module keyboard_SLICE_150 ( input D1, C1, A1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40080 \keyboard/i455_3_lut ( .A(A1), .B(GNDI), .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40081 \keyboard/i2_3_lut_4_lut_adj_37 ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40080 ( input A, B, C, D, output Z );

  LUT4 #("0xFA0A") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40081 ( input A, B, C, D, output Z );

  LUT4 #("0xFFFB") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_152 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40082 Mux_40_i3_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40083 i3_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40082 ( input A, B, C, D, output Z );

  LUT4 #("0xCF47") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40083 ( input A, B, C, D, output Z );

  LUT4 #("0x0800") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_154 ( input D1, C1, B1, A1, D0, C0, A0, output F0, F1 );
  wire   GNDI;

  lut40084 Sreg_1__I_0_3_Mux_1_i3_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40085 i1635_3_lut( .A(A0), .B(GNDI), .C(C0), .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40084 ( input A, B, C, D, output Z );

  LUT4 #("0xF088") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40085 ( input A, B, C, D, output Z );

  LUT4 #("0xFF0A") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_156 ( input D1, C1, B1, D0, C0, A0, output F0, F1 );
  wire   GNDI;

  lut40086 i1_3_lut( .A(GNDI), .B(B1), .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40087 i620_3_lut( .A(A0), .B(GNDI), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40086 ( input A, B, C, D, output Z );

  LUT4 #("0x30FF") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40087 ( input A, B, C, D, output Z );

  LUT4 #("0xFAFF") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module keyboard_SLICE_158 ( input D1, C1, A1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40088 \keyboard/i463_3_lut ( .A(A1), .B(GNDI), .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40089 \keyboard/i2_3_lut_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40088 ( input A, B, C, D, output Z );

  LUT4 #("0xF0AA") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40089 ( input A, B, C, D, output Z );

  LUT4 #("0xFFFB") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module keyboard_SLICE_162 ( input D1, C1, A1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40080 \keyboard/i453_3_lut ( .A(A1), .B(GNDI), .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40090 \keyboard/i2_3_lut_4_lut_adj_38 ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40090 ( input A, B, C, D, output Z );

  LUT4 #("0xFFEF") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module keyboard_SLICE_164 ( input D1, C1, A1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40080 \keyboard/i465_3_lut ( .A(A1), .B(GNDI), .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40091 \keyboard/i650_2_lut_3_lut_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40091 ( input A, B, C, D, output Z );

  LUT4 #("0xFFFE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module keyboard_SLICE_166 ( input D1, C1, B1, A1, C0, A0, output F0, F1 );
  wire   GNDI;

  lut40092 \keyboard/i457_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40093 \keyboard/i658_2_lut ( .A(A0), .B(GNDI), .C(C0), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40092 ( input A, B, C, D, output Z );

  LUT4 #("0x0F08") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40093 ( input A, B, C, D, output Z );

  LUT4 #("0xFAFA") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module mainTimer_SLICE_168 ( input D1, C1, B1, A1, C0, A0, output F0, F1 );
  wire   GNDI;

  lut40094 \mainTimer/i1490_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40077 \mainTimer/i1478_2_lut ( .A(A0), .B(GNDI), .C(C0), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40094 ( input A, B, C, D, output Z );

  LUT4 #("0xFFFE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module mainTimer_SLICE_170 ( input D0, B0, A0, output F0 );
  wire   GNDI;

  lut40095 \mainTimer/i5_3_lut ( .A(A0), .B(B0), .C(GNDI), .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40095 ( input A, B, C, D, output Z );

  LUT4 #("0x0022") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module mainTimer_SLICE_171 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, 
    F1 );

  lut40096 \mainTimer/i11_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40097 \mainTimer/i8_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40096 ( input A, B, C, D, output Z );

  LUT4 #("0x8000") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40097 ( input A, B, C, D, output Z );

  LUT4 #("0x8000") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module STATE_OUT_SLICE_172 ( input D0, B0, output F0 );
  wire   GNDI;

  lut40098 \STATE_OUT/i3_2_lut ( .A(GNDI), .B(B0), .C(GNDI), .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40098 ( input A, B, C, D, output Z );

  LUT4 #("0xFFCC") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module STATE_OUT_SLICE_173 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, 
    F1 );

  lut40099 \STATE_OUT/i23_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40100 \STATE_OUT/i17_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40099 ( input A, B, C, D, output Z );

  LUT4 #("0xFFFE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40100 ( input A, B, C, D, output Z );

  LUT4 #("0xFFFE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module STATE_OUT_SLICE_174 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, 
    F1 );

  lut40101 \STATE_OUT/i27_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40091 \STATE_OUT/i21_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40101 ( input A, B, C, D, output Z );

  LUT4 #("0xFFFE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module STATE_OUT_SLICE_176 ( input D1, C1, B1, A1, C0, A0, output F0, F1 );
  wire   GNDI;

  lut40102 \STATE_OUT/i22_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40077 \STATE_OUT/i1_2_lut ( .A(A0), .B(GNDI), .C(C0), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40102 ( input A, B, C, D, output Z );

  LUT4 #("0xFFFE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module STATE_OUT_SLICE_178 ( input C1, B1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40062 \STATE_OUT/i114_2_lut ( .A(GNDI), .B(B1), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40103 \STATE_OUT/i623_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40103 ( input A, B, C, D, output Z );

  LUT4 #("0x3332") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module STATE_OUT_serial_SLICE_180 ( input D1, C1, B1, A1, D0, C0, B0, A0, 
    output F0, F1 );

  lut40102 \STATE_OUT/serial/i27_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40104 \STATE_OUT/serial/i21_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40104 ( input A, B, C, D, output Z );

  LUT4 #("0xFFFE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module STATE_OUT_serial_SLICE_182 ( input D0, A0, output F0 );
  wire   GNDI;

  lut40004 \STATE_OUT/serial/i3_2_lut ( .A(A0), .B(GNDI), .C(GNDI), .D(D0), 
    .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module STATE_OUT_serial_SLICE_183 ( input D1, C1, B1, A1, D0, C0, B0, A0, 
    output F0, F1 );

  lut40105 \STATE_OUT/serial/i23_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40106 \STATE_OUT/serial/i17_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40105 ( input A, B, C, D, output Z );

  LUT4 #("0xFFFE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40106 ( input A, B, C, D, output Z );

  LUT4 #("0xFFFE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module STATE_OUT_serial_SLICE_184 ( input D1, C1, B1, A1, D0, B0, A0, output 
    F0, F1 );
  wire   GNDI;

  lut40107 \STATE_OUT/serial/i26_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40108 \STATE_OUT/serial/i15_3_lut ( .A(A0), .B(B0), .C(GNDI), .D(D0), 
    .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40107 ( input A, B, C, D, output Z );

  LUT4 #("0xFFFE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40108 ( input A, B, C, D, output Z );

  LUT4 #("0xFFEE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_186 ( input D0, C0, B0, output F0 );
  wire   GNDI;

  lut40109 i1636_2_lut_3_lut( .A(GNDI), .B(B0), .C(C0), .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40109 ( input A, B, C, D, output Z );

  LUT4 #("0xFCFF") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_187 ( input D1, C1, B1, A1, D0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40110 i1626_3_lut_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40111 i1629_2_lut_4_lut( .A(A0), .B(B0), .C(GNDI), .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40110 ( input A, B, C, D, output Z );

  LUT4 #("0xEF40") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40111 ( input A, B, C, D, output Z );

  LUT4 #("0xFFBB") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_189 ( input DI1, D1, C1, B1, A1, C0, A0, CLK, output Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly;

  lut40112 i421_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40113 i586_2_lut( .A(A0), .B(GNDI), .C(C0), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \STATE_OUT/serial/temp_data_out_i0_i1 ( .D0(DI1_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
  endspecify

endmodule

module lut40112 ( input A, B, C, D, output Z );

  LUT4 #("0xACA0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40113 ( input A, B, C, D, output Z );

  LUT4 #("0xA0A0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_190 ( input D0, C0, A0, output F0 );
  wire   GNDI;

  lut40114 i461_3_lut( .A(A0), .B(GNDI), .C(C0), .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40114 ( input A, B, C, D, output Z );

  LUT4 #("0xFA0A") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_191 ( input D0, C0, A0, output F0 );
  wire   GNDI;

  lut40115 i445_3_lut( .A(A0), .B(GNDI), .C(C0), .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40115 ( input A, B, C, D, output Z );

  LUT4 #("0xF0AA") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module STATE_OUT_SLICE_192 ( input D0, C0, B0, A0, output F0 );

  lut40116 \STATE_OUT/i1630_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40116 ( input A, B, C, D, output Z );

  LUT4 #("0xFFEF") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module STATE_OUT_SLICE_193 ( input D0, output F0 );
  wire   GNDI;

  lut40117 \STATE_OUT/waiting_I_31_1_lut ( .A(GNDI), .B(GNDI), .C(GNDI), 
    .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40117 ( input A, B, C, D, output Z );

  LUT4 #("0x00FF") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_194 ( input DI1, C1, D0, B0, CE, CLK, output Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, CE_dly;

  lut40118 SLICE_194_K1( .A(GNDI), .B(GNDI), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40098 i1471_2_lut( .A(GNDI), .B(B0), .C(GNDI), .D(D0), .Z(F0));
  ffsre2 \STATE_OUT/serial/temp_data_out_i0_i3 ( .D0(DI1_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module lut40118 ( input A, B, C, D, output Z );

  LUT4 #("0xF0F0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module STATE_OUT_serial_SLICE_196 ( input D1, C1, B1, A1, D0, C0, B0, A0, 
    output F0, F1 );

  lut40107 \STATE_OUT/serial/i19_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40119 \STATE_OUT/serial/i18_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40119 ( input A, B, C, D, output Z );

  LUT4 #("0xFFFE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module STATE_OUT_serial_SLICE_197 ( input D0, C0, B0, A0, output F0 );

  lut40120 \STATE_OUT/serial/i20_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40120 ( input A, B, C, D, output Z );

  LUT4 #("0xFFFE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module STATE_OUT_serial_SLICE_199 ( input C1, B1, D0, C0, B0, A0, output F0, 
    F1 );
  wire   GNDI;

  lut40062 \STATE_OUT/serial/i328_2_lut_2_lut ( .A(GNDI), .B(B1), .C(C1), 
    .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40121 \STATE_OUT.serial.i93_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40121 ( input A, B, C, D, output Z );

  LUT4 #("0x7773") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module STATE_OUT_SLICE_200 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, 
    F1 );

  lut40102 \STATE_OUT/i19_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40122 \STATE_OUT/i18_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40122 ( input A, B, C, D, output Z );

  LUT4 #("0xFFFE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module STATE_OUT_SLICE_201 ( input D0, C0, B0, A0, output F0 );

  lut40123 \STATE_OUT/i20_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40123 ( input A, B, C, D, output Z );

  LUT4 #("0xFFFE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_202 ( output F0 );
  wire   GNDI;

  lut40124 i2( .A(GNDI), .B(GNDI), .C(GNDI), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
  endspecify

endmodule

module lut40124 ( input A, B, C, D, output Z );

  LUT4 #("0xFFFF") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module keyboard_SLICE_203 ( input D0, C0, B0, output F0 );
  wire   GNDI;

  lut40125 \keyboard/i451_3_lut ( .A(GNDI), .B(B0), .C(C0), .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40125 ( input A, B, C, D, output Z );

  LUT4 #("0xF0CC") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module mainTimer_SLICE_205 ( input D0, C0, B0, A0, output F0 );

  lut40126 \mainTimer/i7_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40126 ( input A, B, C, D, output Z );

  LUT4 #("0x0008") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module STATE_OUT_SLICE_208 ( input D0, output F0 );
  wire   GNDI;

  lut40117 \STATE_OUT/i92_1_lut ( .A(GNDI), .B(GNDI), .C(GNDI), .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module STATE_OUT_serial_SLICE_210 ( input DI1, D1, C1, B1, A1, D0, C0, B0, A0, 
    LSR, CLK, output Q1, F0, F1 );
  wire   VCCI, DI1_dly, CLK_dly, LSR_dly;

  lut40127 \STATE_OUT/serial/n2469_bdd_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40128 \STATE_OUT/serial/j[0]_bdd_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));
  ffsre2 \STATE_OUT/serial/status_out ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module lut40127 ( input A, B, C, D, output Z );

  LUT4 #("0xF2C2") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40128 ( input A, B, C, D, output Z );

  LUT4 #("0xF858") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module OSCInst1 ( input CLKLFPU, CLKLFEN, output CLKLF );
  wire   GNDI;

  LSOSC_CORE_B OSCInst1( .CLKLFPU(CLKLFPU), .CLKLFEN(CLKLFEN), .TRIM9(GNDI), 
    .TRIM8(GNDI), .TRIM7(GNDI), .TRIM6(GNDI), .TRIM5(GNDI), .TRIM4(GNDI), 
    .TRIM3(GNDI), .TRIM2(GNDI), .TRIM1(GNDI), .TRIM0(GNDI), .CLKLF(CLKLF));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
  endspecify

endmodule

module LSOSC_CORE_B ( input CLKLFPU, CLKLFEN, TRIM9, TRIM8, TRIM7, TRIM6, 
    TRIM5, TRIM4, TRIM3, TRIM2, TRIM1, TRIM0, output CLKLF );

  LSOSC_CORE INST10( .CLKLFPU(CLKLFPU), .CLKLFEN(CLKLFEN), .TRIM9(TRIM9), 
    .TRIM8(TRIM8), .TRIM7(TRIM7), .TRIM6(TRIM6), .TRIM5(TRIM5), .TRIM4(TRIM4), 
    .TRIM3(TRIM3), .TRIM2(TRIM2), .TRIM1(TRIM1), .TRIM0(TRIM0), .CLKLF(CLKLF));
  defparam INST10.FABRIC_TRIME = "DISABLE";
endmodule

module STATE_OUT_serial_status_send ( input DO0, OUTCLK, output PADDO );
  wire   GNDI, VCCI, DO0_dly, OUTCLK_dly;

  IOL_B_B \STATE_OUT/serial/status_send ( .PADDI(GNDI), .DO1(GNDI), 
    .DO0(DO0_dly), .CE(VCCI), .IOLTO(GNDI), .HOLD(GNDI), .INCLK(GNDI), 
    .OUTCLK(OUTCLK_dly), .PADDO(PADDO), .PADDT(), .DI1(), .DI0());
  gnd DRIVEGND( .PWR0(GNDI));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (OUTCLK => PADDO) = (0:0:0,0:0:0);
    $setuphold (posedge OUTCLK, DO0, 0:0:0, 0:0:0,,,, OUTCLK_dly, DO0_dly);
  endspecify

endmodule

module IOL_B_B ( input PADDI, DO1, DO0, CE, IOLTO, HOLD, INCLK, OUTCLK, 
    output PADDO, PADDT, DI1, DI0 );

  IOL_B INST10( .PADDI(PADDI), .DO1(DO1), .DO0(DO0), .CE(CE), .IOLTO(IOLTO), 
    .HOLD(HOLD), .INCLK(INCLK), .OUTCLK(OUTCLK), .PADDO(PADDO), .PADDT(PADDT), 
    .DI1(DI1), .DI0(DI0));
  defparam INST10.LATCHIN = "LATCH_REG";
  defparam INST10.DDROUT = "NO";
endmodule

module STATUS_SEND ( input PADDO, output STATUS_SEND );
  wire   VCCI;

  BB_B_B \STATUS_SEND_pad.bb_inst ( .T_N(VCCI), .I(PADDO), .O(), 
    .B(STATUS_SEND));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (PADDO => STATUS_SEND) = (0:0:0,0:0:0);
  endspecify

endmodule

module BB_B_B ( input T_N, I, output O, inout B );

  BB_B INST10( .T_N(T_N), .I(I), .O(O), .B(B));
endmodule

module STATUS_OUT ( input PADDO, output STATUS_OUT );
  wire   VCCI;

  BB_B_B \STATUS_OUT_pad.bb_inst ( .T_N(VCCI), .I(PADDO), .O(), .B(STATUS_OUT));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (PADDO => STATUS_OUT) = (0:0:0,0:0:0);
  endspecify

endmodule

module SIREN_OUT ( input PADDO, output SIREN_OUT );
  wire   VCCI;

  BB_B_B \SIREN_OUT_pad.bb_inst ( .T_N(VCCI), .I(PADDO), .O(), .B(SIREN_OUT));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (PADDO => SIREN_OUT) = (0:0:0,0:0:0);
  endspecify

endmodule

module SERCLK_OUT ( input PADDO, output SERCLK_OUT );
  wire   VCCI;

  BB_B_B \SERCLK_OUT_pad.bb_inst ( .T_N(VCCI), .I(PADDO), .O(), .B(SERCLK_OUT));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (PADDO => SERCLK_OUT) = (0:0:0,0:0:0);
  endspecify

endmodule

module SENSOR1_IN ( output PADDI, input SENSOR1_IN );
  wire   GNDI;

  BB_B_B \SENSOR1_IN_pad.bb_inst ( .T_N(GNDI), .I(GNDI), .O(PADDI), 
    .B(SENSOR1_IN));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (SENSOR1_IN => PADDI) = (0:0:0,0:0:0);
  endspecify

endmodule

module SENSOR2_IN ( output PADDI, input SENSOR2_IN );
  wire   GNDI;

  BB_B_B \SENSOR2_IN_pad.bb_inst ( .T_N(GNDI), .I(GNDI), .O(PADDI), 
    .B(SENSOR2_IN));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (SENSOR2_IN => PADDI) = (0:0:0,0:0:0);
  endspecify

endmodule

module KB_IN_1_ ( output PADDI, input KBIN1 );
  wire   GNDI;

  BB_B_B \KB_IN_pad[1].bb_inst ( .T_N(GNDI), .I(GNDI), .O(PADDI), .B(KBIN1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (KBIN1 => PADDI) = (0:0:0,0:0:0);
  endspecify

endmodule

module KB_IN_0_ ( output PADDI, input KBIN0 );
  wire   GNDI;

  BB_B_B \KB_IN_pad[0].bb_inst ( .T_N(GNDI), .I(GNDI), .O(PADDI), .B(KBIN0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (KBIN0 => PADDI) = (0:0:0,0:0:0);
  endspecify

endmodule

module KB_RECV ( output PADDI, input KB_RECV );
  wire   GNDI;

  BB_B_B \KB_RECV_pad.bb_inst ( .T_N(GNDI), .I(GNDI), .O(PADDI), .B(KB_RECV));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (KB_RECV => PADDI) = (0:0:0,0:0:0);
  endspecify

endmodule

module RESET_IN ( output PADDI, input RESET_IN );
  wire   GNDI;

  BB_B_B \RESET_IN_pad.bb_inst ( .T_N(GNDI), .I(GNDI), .O(PADDI), .B(RESET_IN));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (RESET_IN => PADDI) = (0:0:0,0:0:0);
  endspecify

endmodule

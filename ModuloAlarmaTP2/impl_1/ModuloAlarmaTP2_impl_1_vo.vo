
// Verilog netlist produced by program backanno, Version Radiant Software (64-bit) 3.0.0.24.1

// backanno -o ModuloAlarmaTP2_impl_1_vo.vo -sp High-Performance_1.2V -w -neg -gui ModuloAlarmaTP2_impl_1.udb 
// Netlist created on Wed Nov 17 21:56:55 2021
// Netlist written on Wed Nov 17 21:56:59 2021
// Design is for device iCE40UP5K
// Design is for package SG48
// Design is for performance grade High-Performance_1.2V

`timescale 1 ns / 1 ps

module MainModule ( STATUS_OUT, SIREN_OUT, STATUS_SEND, SERCLK_OUT, RESET_OUT, 
                    Sreg, KEY_STATUS, DEBUG_KEY, SENSOR1_IN, SENSOR2_IN, KB_IN, 
                    KB_RECV );
  input  SENSOR1_IN, SENSOR2_IN;
  input  [1:0] KB_IN;
  input  KB_RECV;
  output STATUS_OUT, SIREN_OUT, STATUS_SEND, SERCLK_OUT, RESET_OUT;
  output [1:0] Sreg;
  output [1:0] KEY_STATUS;
  output [1:0] DEBUG_KEY;
  wire   \Keyboard.n133[22] , \Keyboard.n133[21] , \Keyboard.n2343 , 
         \Keyboard.counter[22] , \Keyboard.n879 , \Keyboard.counter[21] , 
         \Keyboard.n445 , KB_RECV_c, \Keyboard.n881 , \Keyboard.n133[20] , 
         \Keyboard.n133[19] , \Keyboard.n2340 , \Keyboard.counter[20] , 
         \Keyboard.n877 , \Keyboard.counter[19] , \Keyboard.n133[4] , 
         \Keyboard.n133[3] , \Keyboard.n2316 , \Keyboard.counter[4] , 
         \Keyboard.n861 , \Keyboard.counter[3] , \Keyboard.n863 , 
         \Keyboard.n133[2] , \Keyboard.n133[1] , \Keyboard.n2313 , 
         \Keyboard.counter[2] , \Keyboard.n859 , DEBUG_KEY_c_1, 
         \Keyboard.n133[0] , \Keyboard.n2307 , DEBUG_KEY_c_0, VCC_net, 
         \Keyboard.n133[18] , \Keyboard.n133[17] , \Keyboard.n2337 , 
         \Keyboard.counter[18] , \Keyboard.n875 , \Keyboard.counter[17] , 
         \Keyboard.n133[16] , \Keyboard.n133[15] , \Keyboard.n2334 , 
         \Keyboard.counter[16] , \Keyboard.n873 , \Keyboard.counter[15] , 
         \Keyboard.n133[14] , \Keyboard.n133[13] , \Keyboard.n2331 , 
         \Keyboard.counter[14] , \Keyboard.n871 , \Keyboard.counter[13] , 
         \Keyboard.n133[12] , \Keyboard.n133[11] , \Keyboard.n2328 , 
         \Keyboard.counter[12] , \Keyboard.n869 , \Keyboard.counter[11] , 
         \Keyboard.n133[31] , \Keyboard.n2358 , \Keyboard.n889 , 
         \Keyboard.counter[31] , \Keyboard.n133[10] , \Keyboard.n133[9] , 
         \Keyboard.n2325 , \Keyboard.counter[10] , \Keyboard.n867 , 
         \Keyboard.counter[9] , \Keyboard.n133[30] , \Keyboard.n133[29] , 
         \Keyboard.n2355 , \Keyboard.counter[30] , \Keyboard.n887 , 
         \Keyboard.counter[29] , \Keyboard.n133[28] , \Keyboard.n133[27] , 
         \Keyboard.n2352 , \Keyboard.counter[28] , \Keyboard.n885 , 
         \Keyboard.counter[27] , \Keyboard.n133[26] , \Keyboard.n133[25] , 
         \Keyboard.n2349 , \Keyboard.counter[26] , \Keyboard.n883 , 
         \Keyboard.counter[25] , \Keyboard.n133[8] , \Keyboard.n133[7] , 
         \Keyboard.n2322 , \Keyboard.counter[8] , \Keyboard.n865 , 
         \Keyboard.counter[7] , \Keyboard.n133[6] , \Keyboard.n133[5] , 
         \Keyboard.n2319 , \Keyboard.counter[6] , \Keyboard.counter[5] , 
         \Keyboard.n133[24] , \Keyboard.n133[23] , \Keyboard.n2346 , 
         \Keyboard.counter[24] , \Keyboard.counter[23] , 
         \STATE_OUT.serial.n2262 , \STATE_OUT.serial.counter_31__N_121[22] , 
         \STATE_OUT.serial.n846 , \STATE_OUT.serial.counter_31__N_121[21] , 
         \STATE_OUT.serial.counter_31__N_153[21] , 
         \STATE_OUT.serial.counter_31__N_153[22] , \STATE_OUT.serial.n848 , 
         \STATE_OUT.serial.n2259 , \STATE_OUT.serial.counter_31__N_121[20] , 
         \STATE_OUT.serial.n844 , \STATE_OUT.serial.counter_31__N_121[19] , 
         \STATE_OUT.serial.counter_31__N_153[19] , 
         \STATE_OUT.serial.counter_31__N_153[20] , \STATE_OUT.serial.n2256 , 
         \STATE_OUT.serial.counter_31__N_121[18] , \STATE_OUT.serial.n842 , 
         \STATE_OUT.serial.counter_31__N_121[17] , 
         \STATE_OUT.serial.counter_31__N_153[17] , 
         \STATE_OUT.serial.counter_31__N_153[18] , \STATE_OUT.serial.n2253 , 
         \STATE_OUT.serial.counter_31__N_121[16] , \STATE_OUT.serial.n840 , 
         \STATE_OUT.serial.counter_31__N_121[15] , 
         \STATE_OUT.serial.counter_31__N_153[15] , 
         \STATE_OUT.serial.counter_31__N_153[16] , \STATE_OUT.serial.n2250 , 
         \STATE_OUT.serial.counter_31__N_121[14] , \STATE_OUT.serial.n838 , 
         \STATE_OUT.serial.counter_31__N_121[13] , 
         \STATE_OUT.serial.counter_31__N_153[13] , 
         \STATE_OUT.serial.counter_31__N_153[14] , \STATE_OUT.serial.n2277 , 
         \STATE_OUT.serial.n856 , \STATE_OUT.serial.counter_31__N_121[31] , 
         \STATE_OUT.serial.counter_31__N_153[31] , \STATE_OUT.serial.n2274 , 
         \STATE_OUT.serial.counter_31__N_121[30] , \STATE_OUT.serial.n854 , 
         \STATE_OUT.serial.counter_31__N_121[29] , 
         \STATE_OUT.serial.counter_31__N_153[29] , 
         \STATE_OUT.serial.counter_31__N_153[30] , \STATE_OUT.serial.n2271 , 
         \STATE_OUT.serial.counter_31__N_121[28] , \STATE_OUT.serial.n852 , 
         \STATE_OUT.serial.counter_31__N_121[27] , 
         \STATE_OUT.serial.counter_31__N_153[27] , 
         \STATE_OUT.serial.counter_31__N_153[28] , \STATE_OUT.serial.n2247 , 
         \STATE_OUT.serial.counter_31__N_121[12] , \STATE_OUT.serial.n836 , 
         \STATE_OUT.serial.counter_31__N_121[11] , 
         \STATE_OUT.serial.counter_31__N_153[11] , 
         \STATE_OUT.serial.counter_31__N_153[12] , \STATE_OUT.serial.n2268 , 
         \STATE_OUT.serial.counter_31__N_121[26] , \STATE_OUT.serial.n850 , 
         \STATE_OUT.serial.counter_31__N_121[25] , 
         \STATE_OUT.serial.counter_31__N_153[25] , 
         \STATE_OUT.serial.counter_31__N_153[26] , \STATE_OUT.serial.n2244 , 
         \STATE_OUT.serial.counter_31__N_121[10] , \STATE_OUT.serial.n834 , 
         \STATE_OUT.serial.counter_31__N_121[9] , 
         \STATE_OUT.serial.counter_31__N_153[9] , 
         \STATE_OUT.serial.counter_31__N_153[10] , \STATE_OUT.serial.n2241 , 
         \STATE_OUT.serial.counter_31__N_121[8] , \STATE_OUT.serial.n832 , 
         \STATE_OUT.serial.counter_31__N_121[7] , 
         \STATE_OUT.serial.counter_31__N_153[7] , 
         \STATE_OUT.serial.counter_31__N_153[8] , \STATE_OUT.serial.n2238 , 
         \STATE_OUT.serial.counter_31__N_121[6] , \STATE_OUT.serial.n830 , 
         \STATE_OUT.serial.counter_31__N_121[5] , 
         \STATE_OUT.serial.counter_31__N_153[5] , 
         \STATE_OUT.serial.counter_31__N_153[6] , \STATE_OUT.serial.n2235 , 
         \STATE_OUT.serial.counter_31__N_121[4] , \STATE_OUT.serial.n828 , 
         \STATE_OUT.counter_31__N_121[3] , 
         \STATE_OUT.serial.counter_31__N_153[3] , 
         \STATE_OUT.serial.counter_31__N_153[4] , \STATE_OUT.serial.n2265 , 
         \STATE_OUT.serial.counter_31__N_121[24] , 
         \STATE_OUT.serial.counter_31__N_121[23] , 
         \STATE_OUT.serial.counter_31__N_153[23] , 
         \STATE_OUT.serial.counter_31__N_153[24] , \STATE_OUT.serial.n2232 , 
         \STATE_OUT.counter_31__N_121[2] , \STATE_OUT.serial.n826 , 
         \STATE_OUT.counter_31__N_121[1] , 
         \STATE_OUT.serial.counter_31__N_183[1] , 
         \STATE_OUT.serial.counter_31__N_153[2] , \STATE_OUT.serial.n2223 , 
         \STATE_OUT.counter_31__N_121[0] , 
         \STATE_OUT.serial.counter_31__N_183[0] , \mainTimer.n2301 , 
         \mainTimer.clkCont[16] , \mainTimer.n821 , \mainTimer.clkCont[15] , 
         \mainTimer.clkCont_17__N_41[15] , \mainTimer.clkCont_17__N_41[16] , 
         \mainTimer.n823 , \mainTimer.n2298 , \mainTimer.clkCont[14] , 
         \mainTimer.n819 , \mainTimer.clkCont[13] , 
         \mainTimer.clkCont_17__N_41[13] , \mainTimer.clkCont_17__N_41[14] , 
         \mainTimer.n2283 , \mainTimer.clkCont[4] , \mainTimer.n809 , 
         \mainTimer.clkCont[3] , \mainTimer.clkCont_17__N_41[3] , 
         \mainTimer.clkCont_17__N_41[4] , \mainTimer.n811 , \mainTimer.n2295 , 
         \mainTimer.clkCont[12] , \mainTimer.n817 , \mainTimer.clkCont[11] , 
         \mainTimer.clkCont_17__N_41[11] , \mainTimer.clkCont_17__N_41[12] , 
         \mainTimer.n2289 , \mainTimer.clkCont[8] , \mainTimer.n813 , 
         \mainTimer.clkCont[7] , \mainTimer.clkCont_17__N_41[7] , 
         \mainTimer.clkCont_17__N_41[8] , \mainTimer.n815 , \mainTimer.n2229 , 
         \mainTimer.clkCont[0] , \mainTimer.clkCont_17__N_41[0] , 
         \mainTimer.n807 , \mainTimer.n2286 , \mainTimer.clkCont[6] , 
         \mainTimer.clkCont[5] , \mainTimer.clkCont_17__N_41[5] , 
         \mainTimer.clkCont_17__N_41[6] , \mainTimer.n2280 , 
         \mainTimer.clkCont[2] , \mainTimer.clkCont[1] , 
         \mainTimer.clkCont_17__N_41[1] , \mainTimer.clkCont_17__N_41[2] , 
         \mainTimer.n2292 , \mainTimer.clkCont[10] , \mainTimer.clkCont[9] , 
         \mainTimer.clkCont_17__N_41[9] , \mainTimer.clkCont_17__N_41[10] , 
         \mainTimer.n2304 , \mainTimer.clkCont[17] , 
         \mainTimer.clkCont_17__N_41[17] , n237, \n245$n0 , actualKey_0_0, 
         n4_adj_260, KB_IN_c_0, actualKey_0_1, KB_IN_c_1, 
         \Keyboard.n262[0]$n2 , \Keyboard.n53$n1 , \Keyboard.actualKey_1_1 , 
         \Keyboard.n422 , \Keyboard.actualKey_1_0 , \Keyboard.n71$n4 , 
         \Keyboard.n270[0]$n3 , \Keyboard.actualKey_2_1 , 
         \Keyboard.actualKey_2_0 , \Keyboard.n83$n6 , \Keyboard.n77$n5 , 
         \Keyboard.actualKey_3_1 , \Keyboard.actualKey_3_0 , \Snext[1]$n9 , 
         \Snext[0]$n8 , Sreg_c_0, n4, n7, TIMER_EN_N_11, \Snext[0] , n375, 
         \Snext_1__N_2[0] , SERCLK_OUT_c, Sreg_c_1, \STATE_OUT.n21[1] , 
         \STATE_OUT.n21[0] , \STATE_OUT.cont[0] , \STATE_OUT.cont[1] , 
         \STATE_OUT.waiting , \STATE_OUT.state_send_N_67 , \STATE_OUT.n21[2] , 
         \STATE_OUT.n21[3] , \STATE_OUT.cont[2] , \STATE_OUT.n780 , 
         \STATE_OUT.cont[3] , \STATE_OUT.serial.counter_31__N_84[1] , 
         \STATE_OUT.serial.counter_31__N_84[0] , \STATE_OUT.init , 
         \STATE_OUT.counter[1] , \STATE_OUT.serial.n63 , 
         \STATE_OUT.counter[0] , \STATE_OUT.serial.counter_31__N_84[30] , 
         \STATE_OUT.serial.counter_31__N_84[31] , 
         \STATE_OUT.serial.counter[30] , \STATE_OUT.serial.counter[31] , 
         \STATE_OUT.serial.counter_31__N_84[28] , 
         \STATE_OUT.serial.counter_31__N_84[29] , 
         \STATE_OUT.serial.counter[28] , \STATE_OUT.serial.counter[29] , 
         \STATE_OUT.serial.counter_31__N_84[26] , 
         \STATE_OUT.serial.counter_31__N_84[27] , 
         \STATE_OUT.serial.counter[26] , \STATE_OUT.serial.counter[27] , 
         \STATE_OUT.serial.counter_31__N_84[24] , 
         \STATE_OUT.serial.counter_31__N_84[25] , 
         \STATE_OUT.serial.counter[24] , \STATE_OUT.serial.counter[25] , 
         \STATE_OUT.serial.counter_31__N_84[22] , 
         \STATE_OUT.serial.counter_31__N_84[23] , 
         \STATE_OUT.serial.counter[22] , \STATE_OUT.serial.counter[23] , 
         \STATE_OUT.serial.counter_31__N_84[20] , 
         \STATE_OUT.serial.counter_31__N_84[21] , 
         \STATE_OUT.serial.counter[20] , \STATE_OUT.serial.counter[21] , 
         \STATE_OUT.serial.counter_31__N_84[18] , 
         \STATE_OUT.serial.counter_31__N_84[19] , 
         \STATE_OUT.serial.counter[18] , \STATE_OUT.serial.counter[19] , 
         \STATE_OUT.serial.counter_31__N_84[16] , 
         \STATE_OUT.serial.counter_31__N_84[17] , 
         \STATE_OUT.serial.counter[16] , \STATE_OUT.serial.counter[17] , 
         \STATE_OUT.serial.counter_31__N_84[14] , 
         \STATE_OUT.serial.counter_31__N_84[15] , 
         \STATE_OUT.serial.counter[14] , \STATE_OUT.serial.counter[15] , 
         \STATE_OUT.serial.counter_31__N_84[12] , 
         \STATE_OUT.serial.counter_31__N_84[13] , 
         \STATE_OUT.serial.counter[12] , \STATE_OUT.serial.counter[13] , 
         \STATE_OUT.serial.counter_31__N_84[10] , 
         \STATE_OUT.serial.counter_31__N_84[11] , 
         \STATE_OUT.serial.counter[10] , \STATE_OUT.serial.counter[11] , 
         \STATE_OUT.serial.counter_31__N_84[8] , 
         \STATE_OUT.serial.counter_31__N_84[9] , \STATE_OUT.serial.counter[8] , 
         \STATE_OUT.serial.counter[9] , \STATE_OUT.serial.counter_31__N_84[6] , 
         \STATE_OUT.serial.counter_31__N_84[7] , \STATE_OUT.serial.counter[6] , 
         \STATE_OUT.serial.counter[7] , \STATE_OUT.serial.counter_31__N_84[4] , 
         \STATE_OUT.serial.counter_31__N_84[5] , \STATE_OUT.serial.counter[4] , 
         \STATE_OUT.serial.counter[5] , \STATE_OUT.serial.counter_31__N_84[2] , 
         \STATE_OUT.serial.counter_31__N_84[3] , \STATE_OUT.counter[3] , 
         \STATE_OUT.counter[2] , \STATE_OUT.serial.aux_3__N_116[2]$n11 , 
         \STATE_OUT.serial.aux_3__N_116[3]$n10 , \STATE_OUT.serial.aux[2] , 
         SENSOR1_IN_c, \STATE_OUT.serial.aux[3] , SENSOR2_IN_c, 
         \STATE_OUT.serial.aux_3__N_116[0]$n13 , 
         \STATE_OUT.serial.aux_3__N_116[1]$n12 , \STATE_OUT.serial.aux[0] , 
         \STATE_OUT.serial.aux[1] , \mainTimer.clkCont_17__N_20[1] , 
         \mainTimer.clkCont_17__N_20[0] , TIME_OUT, 
         \mainTimer.clkCont_17__N_38 , \mainTimer.clkCont_17__N_20[16] , 
         \mainTimer.clkCont_17__N_20[17] , \mainTimer.clkCont_17__N_20[14] , 
         \mainTimer.clkCont_17__N_20[15] , \mainTimer.clkCont_17__N_20[12] , 
         \mainTimer.clkCont_17__N_20[13] , \mainTimer.clkCont_17__N_20[10] , 
         \mainTimer.clkCont_17__N_20[11] , \mainTimer.clkCont_17__N_20[8] , 
         \mainTimer.clkCont_17__N_20[9] , \mainTimer.clkCont_17__N_20[6] , 
         \mainTimer.clkCont_17__N_20[7] , \mainTimer.clkCont_17__N_20[4] , 
         \mainTimer.clkCont_17__N_20[5] , \mainTimer.clkCont_17__N_20[2] , 
         \mainTimer.clkCont_17__N_20[3] , KEY_STATUS_c_1, KEY_STATUS_c_0, 
         \Snext[1] , n62, TIMER_EN, TIMER_EN_N_14, n662, n1536, \Keyboard.n77 , 
         \Keyboard.n83 , \Keyboard.n8 , \Keyboard.n7 , n245, 
         \Keyboard.n262[0] , \Keyboard.n270[0] , \Keyboard.valid_1__N_257[0] , 
         \Keyboard.n2020 , \Keyboard.n42[1] , \Keyboard.n71 , \Keyboard.n53 , 
         \Keyboard.n62 , \Keyboard.n50 , \Keyboard.n58 , \Keyboard.n49 , 
         \Keyboard.n55 , \Keyboard.n53_adj_259 , \Keyboard.n56 , 
         \Keyboard.n54 , \Keyboard.valid_1__N_257[0]$n7 , \Keyboard.n52 , 
         \Keyboard.n38 , n1539, \STATE_OUT.serial.n52 , \STATE_OUT.serial.n38 , 
         \STATE_OUT.serial.n58 , \STATE_OUT.serial.n56 , 
         \STATE_OUT.serial.n50 , \STATE_OUT.serial.n54 , 
         \STATE_OUT.serial.n53 , \STATE_OUT.serial.n55 , 
         \STATE_OUT.serial.n62 , \STATE_OUT.serial.n49 , 
         \STATE_OUT.serial.aux_3__N_116[3] , 
         \STATE_OUT.serial.aux_3__N_116[2] , \STATE_OUT.serial.n1872 , 
         \mainTimer.n1378 , \mainTimer.n12 , \mainTimer.n17 , 
         \mainTimer.n2018 , \mainTimer.n6 , \mainTimer.n18 , \mainTimer.n19 , 
         \STATE_OUT.serial.aux_3__N_116[0] , 
         \STATE_OUT.serial.status_out_N_190 , 
         \STATE_OUT.serial.aux_3__N_116[1] , 
         \STATE_OUT.serial.counter_31__N_185 , STATUS_OUT_c, \STATE_OUT.n14 , 
         \STATE_OUT.n603 , SIREN_OUT_c, GND_net, \STATE_OUT.n449 , 
         STATUS_SEND_c, \STATE_OUT.init.sig_000.FeedThruLUT , 
         \STATE_OUT.serial.n435 ;

  Keyboard_SLICE_0 \Keyboard.SLICE_0 ( .DI1(\Keyboard.n133[22] ), 
    .DI0(\Keyboard.n133[21] ), .D1(\Keyboard.n2343 ), 
    .C1(\Keyboard.counter[22] ), .D0(\Keyboard.n879 ), 
    .C0(\Keyboard.counter[21] ), .LSR(\Keyboard.n445 ), .CLK(KB_RECV_c), 
    .CIN0(\Keyboard.n879 ), .CIN1(\Keyboard.n2343 ), 
    .Q0(\Keyboard.counter[21] ), .Q1(\Keyboard.counter[22] ), 
    .F0(\Keyboard.n133[21] ), .F1(\Keyboard.n133[22] ), 
    .COUT1(\Keyboard.n881 ), .COUT0(\Keyboard.n2343 ));
  Keyboard_SLICE_1 \Keyboard.SLICE_1 ( .DI1(\Keyboard.n133[20] ), 
    .DI0(\Keyboard.n133[19] ), .D1(\Keyboard.n2340 ), 
    .C1(\Keyboard.counter[20] ), .D0(\Keyboard.n877 ), 
    .C0(\Keyboard.counter[19] ), .LSR(\Keyboard.n445 ), .CLK(KB_RECV_c), 
    .CIN0(\Keyboard.n877 ), .CIN1(\Keyboard.n2340 ), 
    .Q0(\Keyboard.counter[19] ), .Q1(\Keyboard.counter[20] ), 
    .F0(\Keyboard.n133[19] ), .F1(\Keyboard.n133[20] ), 
    .COUT1(\Keyboard.n879 ), .COUT0(\Keyboard.n2340 ));
  Keyboard_SLICE_2 \Keyboard.SLICE_2 ( .DI1(\Keyboard.n133[4] ), 
    .DI0(\Keyboard.n133[3] ), .D1(\Keyboard.n2316 ), 
    .C1(\Keyboard.counter[4] ), .D0(\Keyboard.n861 ), 
    .C0(\Keyboard.counter[3] ), .LSR(\Keyboard.n445 ), .CLK(KB_RECV_c), 
    .CIN0(\Keyboard.n861 ), .CIN1(\Keyboard.n2316 ), 
    .Q0(\Keyboard.counter[3] ), .Q1(\Keyboard.counter[4] ), 
    .F0(\Keyboard.n133[3] ), .F1(\Keyboard.n133[4] ), .COUT1(\Keyboard.n863 ), 
    .COUT0(\Keyboard.n2316 ));
  Keyboard_SLICE_3 \Keyboard.SLICE_3 ( .DI1(\Keyboard.n133[2] ), 
    .DI0(\Keyboard.n133[1] ), .D1(\Keyboard.n2313 ), 
    .C1(\Keyboard.counter[2] ), .D0(\Keyboard.n859 ), .C0(DEBUG_KEY_c_1), 
    .LSR(\Keyboard.n445 ), .CLK(KB_RECV_c), .CIN0(\Keyboard.n859 ), 
    .CIN1(\Keyboard.n2313 ), .Q0(DEBUG_KEY_c_1), .Q1(\Keyboard.counter[2] ), 
    .F0(\Keyboard.n133[1] ), .F1(\Keyboard.n133[2] ), .COUT1(\Keyboard.n861 ), 
    .COUT0(\Keyboard.n2313 ));
  Keyboard_SLICE_4 \Keyboard.SLICE_4 ( .DI1(\Keyboard.n133[0] ), 
    .D1(\Keyboard.n2307 ), .C1(DEBUG_KEY_c_0), .B1(VCC_net), 
    .LSR(\Keyboard.n445 ), .CLK(KB_RECV_c), .CIN1(\Keyboard.n2307 ), 
    .Q1(DEBUG_KEY_c_0), .F1(\Keyboard.n133[0] ), .COUT1(\Keyboard.n859 ), 
    .COUT0(\Keyboard.n2307 ));
  Keyboard_SLICE_5 \Keyboard.SLICE_5 ( .DI1(\Keyboard.n133[18] ), 
    .DI0(\Keyboard.n133[17] ), .D1(\Keyboard.n2337 ), 
    .C1(\Keyboard.counter[18] ), .D0(\Keyboard.n875 ), 
    .C0(\Keyboard.counter[17] ), .LSR(\Keyboard.n445 ), .CLK(KB_RECV_c), 
    .CIN0(\Keyboard.n875 ), .CIN1(\Keyboard.n2337 ), 
    .Q0(\Keyboard.counter[17] ), .Q1(\Keyboard.counter[18] ), 
    .F0(\Keyboard.n133[17] ), .F1(\Keyboard.n133[18] ), 
    .COUT1(\Keyboard.n877 ), .COUT0(\Keyboard.n2337 ));
  Keyboard_SLICE_6 \Keyboard.SLICE_6 ( .DI1(\Keyboard.n133[16] ), 
    .DI0(\Keyboard.n133[15] ), .D1(\Keyboard.n2334 ), 
    .C1(\Keyboard.counter[16] ), .D0(\Keyboard.n873 ), 
    .C0(\Keyboard.counter[15] ), .LSR(\Keyboard.n445 ), .CLK(KB_RECV_c), 
    .CIN0(\Keyboard.n873 ), .CIN1(\Keyboard.n2334 ), 
    .Q0(\Keyboard.counter[15] ), .Q1(\Keyboard.counter[16] ), 
    .F0(\Keyboard.n133[15] ), .F1(\Keyboard.n133[16] ), 
    .COUT1(\Keyboard.n875 ), .COUT0(\Keyboard.n2334 ));
  Keyboard_SLICE_7 \Keyboard.SLICE_7 ( .DI1(\Keyboard.n133[14] ), 
    .DI0(\Keyboard.n133[13] ), .D1(\Keyboard.n2331 ), 
    .C1(\Keyboard.counter[14] ), .D0(\Keyboard.n871 ), 
    .C0(\Keyboard.counter[13] ), .LSR(\Keyboard.n445 ), .CLK(KB_RECV_c), 
    .CIN0(\Keyboard.n871 ), .CIN1(\Keyboard.n2331 ), 
    .Q0(\Keyboard.counter[13] ), .Q1(\Keyboard.counter[14] ), 
    .F0(\Keyboard.n133[13] ), .F1(\Keyboard.n133[14] ), 
    .COUT1(\Keyboard.n873 ), .COUT0(\Keyboard.n2331 ));
  Keyboard_SLICE_8 \Keyboard.SLICE_8 ( .DI1(\Keyboard.n133[12] ), 
    .DI0(\Keyboard.n133[11] ), .D1(\Keyboard.n2328 ), 
    .C1(\Keyboard.counter[12] ), .D0(\Keyboard.n869 ), 
    .C0(\Keyboard.counter[11] ), .LSR(\Keyboard.n445 ), .CLK(KB_RECV_c), 
    .CIN0(\Keyboard.n869 ), .CIN1(\Keyboard.n2328 ), 
    .Q0(\Keyboard.counter[11] ), .Q1(\Keyboard.counter[12] ), 
    .F0(\Keyboard.n133[11] ), .F1(\Keyboard.n133[12] ), 
    .COUT1(\Keyboard.n871 ), .COUT0(\Keyboard.n2328 ));
  Keyboard_SLICE_9 \Keyboard.SLICE_9 ( .DI0(\Keyboard.n133[31] ), 
    .D1(\Keyboard.n2358 ), .D0(\Keyboard.n889 ), .C0(\Keyboard.counter[31] ), 
    .LSR(\Keyboard.n445 ), .CLK(KB_RECV_c), .CIN0(\Keyboard.n889 ), 
    .CIN1(\Keyboard.n2358 ), .Q0(\Keyboard.counter[31] ), 
    .F0(\Keyboard.n133[31] ), .COUT0(\Keyboard.n2358 ));
  Keyboard_SLICE_10 \Keyboard.SLICE_10 ( .DI1(\Keyboard.n133[10] ), 
    .DI0(\Keyboard.n133[9] ), .D1(\Keyboard.n2325 ), 
    .C1(\Keyboard.counter[10] ), .D0(\Keyboard.n867 ), 
    .C0(\Keyboard.counter[9] ), .LSR(\Keyboard.n445 ), .CLK(KB_RECV_c), 
    .CIN0(\Keyboard.n867 ), .CIN1(\Keyboard.n2325 ), 
    .Q0(\Keyboard.counter[9] ), .Q1(\Keyboard.counter[10] ), 
    .F0(\Keyboard.n133[9] ), .F1(\Keyboard.n133[10] ), .COUT1(\Keyboard.n869 ), 
    .COUT0(\Keyboard.n2325 ));
  Keyboard_SLICE_11 \Keyboard.SLICE_11 ( .DI1(\Keyboard.n133[30] ), 
    .DI0(\Keyboard.n133[29] ), .D1(\Keyboard.n2355 ), 
    .C1(\Keyboard.counter[30] ), .D0(\Keyboard.n887 ), 
    .C0(\Keyboard.counter[29] ), .LSR(\Keyboard.n445 ), .CLK(KB_RECV_c), 
    .CIN0(\Keyboard.n887 ), .CIN1(\Keyboard.n2355 ), 
    .Q0(\Keyboard.counter[29] ), .Q1(\Keyboard.counter[30] ), 
    .F0(\Keyboard.n133[29] ), .F1(\Keyboard.n133[30] ), 
    .COUT1(\Keyboard.n889 ), .COUT0(\Keyboard.n2355 ));
  Keyboard_SLICE_12 \Keyboard.SLICE_12 ( .DI1(\Keyboard.n133[28] ), 
    .DI0(\Keyboard.n133[27] ), .D1(\Keyboard.n2352 ), 
    .C1(\Keyboard.counter[28] ), .D0(\Keyboard.n885 ), 
    .C0(\Keyboard.counter[27] ), .LSR(\Keyboard.n445 ), .CLK(KB_RECV_c), 
    .CIN0(\Keyboard.n885 ), .CIN1(\Keyboard.n2352 ), 
    .Q0(\Keyboard.counter[27] ), .Q1(\Keyboard.counter[28] ), 
    .F0(\Keyboard.n133[27] ), .F1(\Keyboard.n133[28] ), 
    .COUT1(\Keyboard.n887 ), .COUT0(\Keyboard.n2352 ));
  Keyboard_SLICE_13 \Keyboard.SLICE_13 ( .DI1(\Keyboard.n133[26] ), 
    .DI0(\Keyboard.n133[25] ), .D1(\Keyboard.n2349 ), 
    .C1(\Keyboard.counter[26] ), .D0(\Keyboard.n883 ), 
    .C0(\Keyboard.counter[25] ), .LSR(\Keyboard.n445 ), .CLK(KB_RECV_c), 
    .CIN0(\Keyboard.n883 ), .CIN1(\Keyboard.n2349 ), 
    .Q0(\Keyboard.counter[25] ), .Q1(\Keyboard.counter[26] ), 
    .F0(\Keyboard.n133[25] ), .F1(\Keyboard.n133[26] ), 
    .COUT1(\Keyboard.n885 ), .COUT0(\Keyboard.n2349 ));
  Keyboard_SLICE_14 \Keyboard.SLICE_14 ( .DI1(\Keyboard.n133[8] ), 
    .DI0(\Keyboard.n133[7] ), .D1(\Keyboard.n2322 ), 
    .C1(\Keyboard.counter[8] ), .D0(\Keyboard.n865 ), 
    .C0(\Keyboard.counter[7] ), .LSR(\Keyboard.n445 ), .CLK(KB_RECV_c), 
    .CIN0(\Keyboard.n865 ), .CIN1(\Keyboard.n2322 ), 
    .Q0(\Keyboard.counter[7] ), .Q1(\Keyboard.counter[8] ), 
    .F0(\Keyboard.n133[7] ), .F1(\Keyboard.n133[8] ), .COUT1(\Keyboard.n867 ), 
    .COUT0(\Keyboard.n2322 ));
  Keyboard_SLICE_15 \Keyboard.SLICE_15 ( .DI1(\Keyboard.n133[6] ), 
    .DI0(\Keyboard.n133[5] ), .D1(\Keyboard.n2319 ), 
    .C1(\Keyboard.counter[6] ), .D0(\Keyboard.n863 ), 
    .C0(\Keyboard.counter[5] ), .LSR(\Keyboard.n445 ), .CLK(KB_RECV_c), 
    .CIN0(\Keyboard.n863 ), .CIN1(\Keyboard.n2319 ), 
    .Q0(\Keyboard.counter[5] ), .Q1(\Keyboard.counter[6] ), 
    .F0(\Keyboard.n133[5] ), .F1(\Keyboard.n133[6] ), .COUT1(\Keyboard.n865 ), 
    .COUT0(\Keyboard.n2319 ));
  Keyboard_SLICE_16 \Keyboard.SLICE_16 ( .DI1(\Keyboard.n133[24] ), 
    .DI0(\Keyboard.n133[23] ), .D1(\Keyboard.n2346 ), 
    .C1(\Keyboard.counter[24] ), .D0(\Keyboard.n881 ), 
    .C0(\Keyboard.counter[23] ), .LSR(\Keyboard.n445 ), .CLK(KB_RECV_c), 
    .CIN0(\Keyboard.n881 ), .CIN1(\Keyboard.n2346 ), 
    .Q0(\Keyboard.counter[23] ), .Q1(\Keyboard.counter[24] ), 
    .F0(\Keyboard.n133[23] ), .F1(\Keyboard.n133[24] ), 
    .COUT1(\Keyboard.n883 ), .COUT0(\Keyboard.n2346 ));
  STATE_OUT_serial_SLICE_17 \STATE_OUT.serial.SLICE_17 ( 
    .D1(\STATE_OUT.serial.n2262 ), .C1(VCC_net), 
    .B1(\STATE_OUT.serial.counter_31__N_121[22] ), 
    .D0(\STATE_OUT.serial.n846 ), .C0(VCC_net), 
    .B0(\STATE_OUT.serial.counter_31__N_121[21] ), 
    .CIN0(\STATE_OUT.serial.n846 ), .CIN1(\STATE_OUT.serial.n2262 ), 
    .F0(\STATE_OUT.serial.counter_31__N_153[21] ), 
    .F1(\STATE_OUT.serial.counter_31__N_153[22] ), 
    .COUT1(\STATE_OUT.serial.n848 ), .COUT0(\STATE_OUT.serial.n2262 ));
  STATE_OUT_serial_SLICE_18 \STATE_OUT.serial.SLICE_18 ( 
    .D1(\STATE_OUT.serial.n2259 ), .C1(VCC_net), 
    .B1(\STATE_OUT.serial.counter_31__N_121[20] ), 
    .D0(\STATE_OUT.serial.n844 ), .C0(VCC_net), 
    .B0(\STATE_OUT.serial.counter_31__N_121[19] ), 
    .CIN0(\STATE_OUT.serial.n844 ), .CIN1(\STATE_OUT.serial.n2259 ), 
    .F0(\STATE_OUT.serial.counter_31__N_153[19] ), 
    .F1(\STATE_OUT.serial.counter_31__N_153[20] ), 
    .COUT1(\STATE_OUT.serial.n846 ), .COUT0(\STATE_OUT.serial.n2259 ));
  STATE_OUT_serial_SLICE_19 \STATE_OUT.serial.SLICE_19 ( 
    .D1(\STATE_OUT.serial.n2256 ), .C1(VCC_net), 
    .B1(\STATE_OUT.serial.counter_31__N_121[18] ), 
    .D0(\STATE_OUT.serial.n842 ), .C0(VCC_net), 
    .B0(\STATE_OUT.serial.counter_31__N_121[17] ), 
    .CIN0(\STATE_OUT.serial.n842 ), .CIN1(\STATE_OUT.serial.n2256 ), 
    .F0(\STATE_OUT.serial.counter_31__N_153[17] ), 
    .F1(\STATE_OUT.serial.counter_31__N_153[18] ), 
    .COUT1(\STATE_OUT.serial.n844 ), .COUT0(\STATE_OUT.serial.n2256 ));
  STATE_OUT_serial_SLICE_20 \STATE_OUT.serial.SLICE_20 ( 
    .D1(\STATE_OUT.serial.n2253 ), .C1(VCC_net), 
    .B1(\STATE_OUT.serial.counter_31__N_121[16] ), 
    .D0(\STATE_OUT.serial.n840 ), .C0(VCC_net), 
    .B0(\STATE_OUT.serial.counter_31__N_121[15] ), 
    .CIN0(\STATE_OUT.serial.n840 ), .CIN1(\STATE_OUT.serial.n2253 ), 
    .F0(\STATE_OUT.serial.counter_31__N_153[15] ), 
    .F1(\STATE_OUT.serial.counter_31__N_153[16] ), 
    .COUT1(\STATE_OUT.serial.n842 ), .COUT0(\STATE_OUT.serial.n2253 ));
  STATE_OUT_serial_SLICE_21 \STATE_OUT.serial.SLICE_21 ( 
    .D1(\STATE_OUT.serial.n2250 ), .C1(VCC_net), 
    .B1(\STATE_OUT.serial.counter_31__N_121[14] ), 
    .D0(\STATE_OUT.serial.n838 ), .C0(VCC_net), 
    .B0(\STATE_OUT.serial.counter_31__N_121[13] ), 
    .CIN0(\STATE_OUT.serial.n838 ), .CIN1(\STATE_OUT.serial.n2250 ), 
    .F0(\STATE_OUT.serial.counter_31__N_153[13] ), 
    .F1(\STATE_OUT.serial.counter_31__N_153[14] ), 
    .COUT1(\STATE_OUT.serial.n840 ), .COUT0(\STATE_OUT.serial.n2250 ));
  STATE_OUT_serial_SLICE_22 \STATE_OUT.serial.SLICE_22 ( 
    .D1(\STATE_OUT.serial.n2277 ), .D0(\STATE_OUT.serial.n856 ), .C0(VCC_net), 
    .B0(\STATE_OUT.serial.counter_31__N_121[31] ), 
    .CIN0(\STATE_OUT.serial.n856 ), .CIN1(\STATE_OUT.serial.n2277 ), 
    .F0(\STATE_OUT.serial.counter_31__N_153[31] ), 
    .COUT0(\STATE_OUT.serial.n2277 ));
  STATE_OUT_serial_SLICE_23 \STATE_OUT.serial.SLICE_23 ( 
    .D1(\STATE_OUT.serial.n2274 ), .C1(VCC_net), 
    .B1(\STATE_OUT.serial.counter_31__N_121[30] ), 
    .D0(\STATE_OUT.serial.n854 ), .C0(VCC_net), 
    .B0(\STATE_OUT.serial.counter_31__N_121[29] ), 
    .CIN0(\STATE_OUT.serial.n854 ), .CIN1(\STATE_OUT.serial.n2274 ), 
    .F0(\STATE_OUT.serial.counter_31__N_153[29] ), 
    .F1(\STATE_OUT.serial.counter_31__N_153[30] ), 
    .COUT1(\STATE_OUT.serial.n856 ), .COUT0(\STATE_OUT.serial.n2274 ));
  STATE_OUT_serial_SLICE_24 \STATE_OUT.serial.SLICE_24 ( 
    .D1(\STATE_OUT.serial.n2271 ), .C1(VCC_net), 
    .B1(\STATE_OUT.serial.counter_31__N_121[28] ), 
    .D0(\STATE_OUT.serial.n852 ), .C0(VCC_net), 
    .B0(\STATE_OUT.serial.counter_31__N_121[27] ), 
    .CIN0(\STATE_OUT.serial.n852 ), .CIN1(\STATE_OUT.serial.n2271 ), 
    .F0(\STATE_OUT.serial.counter_31__N_153[27] ), 
    .F1(\STATE_OUT.serial.counter_31__N_153[28] ), 
    .COUT1(\STATE_OUT.serial.n854 ), .COUT0(\STATE_OUT.serial.n2271 ));
  STATE_OUT_serial_SLICE_25 \STATE_OUT.serial.SLICE_25 ( 
    .D1(\STATE_OUT.serial.n2247 ), .C1(VCC_net), 
    .B1(\STATE_OUT.serial.counter_31__N_121[12] ), 
    .D0(\STATE_OUT.serial.n836 ), .C0(VCC_net), 
    .B0(\STATE_OUT.serial.counter_31__N_121[11] ), 
    .CIN0(\STATE_OUT.serial.n836 ), .CIN1(\STATE_OUT.serial.n2247 ), 
    .F0(\STATE_OUT.serial.counter_31__N_153[11] ), 
    .F1(\STATE_OUT.serial.counter_31__N_153[12] ), 
    .COUT1(\STATE_OUT.serial.n838 ), .COUT0(\STATE_OUT.serial.n2247 ));
  STATE_OUT_serial_SLICE_26 \STATE_OUT.serial.SLICE_26 ( 
    .D1(\STATE_OUT.serial.n2268 ), .C1(VCC_net), 
    .B1(\STATE_OUT.serial.counter_31__N_121[26] ), 
    .D0(\STATE_OUT.serial.n850 ), .C0(VCC_net), 
    .B0(\STATE_OUT.serial.counter_31__N_121[25] ), 
    .CIN0(\STATE_OUT.serial.n850 ), .CIN1(\STATE_OUT.serial.n2268 ), 
    .F0(\STATE_OUT.serial.counter_31__N_153[25] ), 
    .F1(\STATE_OUT.serial.counter_31__N_153[26] ), 
    .COUT1(\STATE_OUT.serial.n852 ), .COUT0(\STATE_OUT.serial.n2268 ));
  STATE_OUT_serial_SLICE_27 \STATE_OUT.serial.SLICE_27 ( 
    .D1(\STATE_OUT.serial.n2244 ), .C1(VCC_net), 
    .B1(\STATE_OUT.serial.counter_31__N_121[10] ), 
    .D0(\STATE_OUT.serial.n834 ), .C0(VCC_net), 
    .B0(\STATE_OUT.serial.counter_31__N_121[9] ), 
    .CIN0(\STATE_OUT.serial.n834 ), .CIN1(\STATE_OUT.serial.n2244 ), 
    .F0(\STATE_OUT.serial.counter_31__N_153[9] ), 
    .F1(\STATE_OUT.serial.counter_31__N_153[10] ), 
    .COUT1(\STATE_OUT.serial.n836 ), .COUT0(\STATE_OUT.serial.n2244 ));
  STATE_OUT_serial_SLICE_28 \STATE_OUT.serial.SLICE_28 ( 
    .D1(\STATE_OUT.serial.n2241 ), .C1(VCC_net), 
    .B1(\STATE_OUT.serial.counter_31__N_121[8] ), .D0(\STATE_OUT.serial.n832 ), 
    .C0(VCC_net), .B0(\STATE_OUT.serial.counter_31__N_121[7] ), 
    .CIN0(\STATE_OUT.serial.n832 ), .CIN1(\STATE_OUT.serial.n2241 ), 
    .F0(\STATE_OUT.serial.counter_31__N_153[7] ), 
    .F1(\STATE_OUT.serial.counter_31__N_153[8] ), 
    .COUT1(\STATE_OUT.serial.n834 ), .COUT0(\STATE_OUT.serial.n2241 ));
  STATE_OUT_serial_SLICE_29 \STATE_OUT.serial.SLICE_29 ( 
    .D1(\STATE_OUT.serial.n2238 ), .C1(VCC_net), 
    .B1(\STATE_OUT.serial.counter_31__N_121[6] ), .D0(\STATE_OUT.serial.n830 ), 
    .C0(VCC_net), .B0(\STATE_OUT.serial.counter_31__N_121[5] ), 
    .CIN0(\STATE_OUT.serial.n830 ), .CIN1(\STATE_OUT.serial.n2238 ), 
    .F0(\STATE_OUT.serial.counter_31__N_153[5] ), 
    .F1(\STATE_OUT.serial.counter_31__N_153[6] ), 
    .COUT1(\STATE_OUT.serial.n832 ), .COUT0(\STATE_OUT.serial.n2238 ));
  STATE_OUT_serial_SLICE_30 \STATE_OUT.serial.SLICE_30 ( 
    .D1(\STATE_OUT.serial.n2235 ), .C1(VCC_net), 
    .B1(\STATE_OUT.serial.counter_31__N_121[4] ), .D0(\STATE_OUT.serial.n828 ), 
    .C0(VCC_net), .B0(\STATE_OUT.counter_31__N_121[3] ), 
    .CIN0(\STATE_OUT.serial.n828 ), .CIN1(\STATE_OUT.serial.n2235 ), 
    .F0(\STATE_OUT.serial.counter_31__N_153[3] ), 
    .F1(\STATE_OUT.serial.counter_31__N_153[4] ), 
    .COUT1(\STATE_OUT.serial.n830 ), .COUT0(\STATE_OUT.serial.n2235 ));
  STATE_OUT_serial_SLICE_31 \STATE_OUT.serial.SLICE_31 ( 
    .D1(\STATE_OUT.serial.n2265 ), .C1(VCC_net), 
    .B1(\STATE_OUT.serial.counter_31__N_121[24] ), 
    .D0(\STATE_OUT.serial.n848 ), .C0(VCC_net), 
    .B0(\STATE_OUT.serial.counter_31__N_121[23] ), 
    .CIN0(\STATE_OUT.serial.n848 ), .CIN1(\STATE_OUT.serial.n2265 ), 
    .F0(\STATE_OUT.serial.counter_31__N_153[23] ), 
    .F1(\STATE_OUT.serial.counter_31__N_153[24] ), 
    .COUT1(\STATE_OUT.serial.n850 ), .COUT0(\STATE_OUT.serial.n2265 ));
  STATE_OUT_serial_SLICE_32 \STATE_OUT.serial.SLICE_32 ( 
    .D1(\STATE_OUT.serial.n2232 ), .C1(VCC_net), 
    .B1(\STATE_OUT.counter_31__N_121[2] ), .D0(\STATE_OUT.serial.n826 ), 
    .C0(VCC_net), .B0(\STATE_OUT.counter_31__N_121[1] ), 
    .CIN0(\STATE_OUT.serial.n826 ), .CIN1(\STATE_OUT.serial.n2232 ), 
    .F0(\STATE_OUT.serial.counter_31__N_183[1] ), 
    .F1(\STATE_OUT.serial.counter_31__N_153[2] ), 
    .COUT1(\STATE_OUT.serial.n828 ), .COUT0(\STATE_OUT.serial.n2232 ));
  STATE_OUT_serial_SLICE_33 \STATE_OUT.serial.SLICE_33 ( 
    .D1(\STATE_OUT.serial.n2223 ), .C1(VCC_net), 
    .B1(\STATE_OUT.counter_31__N_121[0] ), .CIN1(\STATE_OUT.serial.n2223 ), 
    .F1(\STATE_OUT.serial.counter_31__N_183[0] ), 
    .COUT1(\STATE_OUT.serial.n826 ), .COUT0(\STATE_OUT.serial.n2223 ));
  mainTimer_SLICE_34 \mainTimer.SLICE_34 ( .D1(\mainTimer.n2301 ), 
    .B1(\mainTimer.clkCont[16] ), .D0(\mainTimer.n821 ), 
    .B0(\mainTimer.clkCont[15] ), .CIN0(\mainTimer.n821 ), 
    .CIN1(\mainTimer.n2301 ), .F0(\mainTimer.clkCont_17__N_41[15] ), 
    .F1(\mainTimer.clkCont_17__N_41[16] ), .COUT1(\mainTimer.n823 ), 
    .COUT0(\mainTimer.n2301 ));
  mainTimer_SLICE_35 \mainTimer.SLICE_35 ( .D1(\mainTimer.n2298 ), 
    .B1(\mainTimer.clkCont[14] ), .D0(\mainTimer.n819 ), 
    .B0(\mainTimer.clkCont[13] ), .CIN0(\mainTimer.n819 ), 
    .CIN1(\mainTimer.n2298 ), .F0(\mainTimer.clkCont_17__N_41[13] ), 
    .F1(\mainTimer.clkCont_17__N_41[14] ), .COUT1(\mainTimer.n821 ), 
    .COUT0(\mainTimer.n2298 ));
  mainTimer_SLICE_36 \mainTimer.SLICE_36 ( .D1(\mainTimer.n2283 ), 
    .B1(\mainTimer.clkCont[4] ), .D0(\mainTimer.n809 ), 
    .B0(\mainTimer.clkCont[3] ), .CIN0(\mainTimer.n809 ), 
    .CIN1(\mainTimer.n2283 ), .F0(\mainTimer.clkCont_17__N_41[3] ), 
    .F1(\mainTimer.clkCont_17__N_41[4] ), .COUT1(\mainTimer.n811 ), 
    .COUT0(\mainTimer.n2283 ));
  mainTimer_SLICE_37 \mainTimer.SLICE_37 ( .D1(\mainTimer.n2295 ), 
    .B1(\mainTimer.clkCont[12] ), .D0(\mainTimer.n817 ), 
    .B0(\mainTimer.clkCont[11] ), .CIN0(\mainTimer.n817 ), 
    .CIN1(\mainTimer.n2295 ), .F0(\mainTimer.clkCont_17__N_41[11] ), 
    .F1(\mainTimer.clkCont_17__N_41[12] ), .COUT1(\mainTimer.n819 ), 
    .COUT0(\mainTimer.n2295 ));
  mainTimer_SLICE_38 \mainTimer.SLICE_38 ( .D1(\mainTimer.n2289 ), 
    .B1(\mainTimer.clkCont[8] ), .D0(\mainTimer.n813 ), 
    .B0(\mainTimer.clkCont[7] ), .CIN0(\mainTimer.n813 ), 
    .CIN1(\mainTimer.n2289 ), .F0(\mainTimer.clkCont_17__N_41[7] ), 
    .F1(\mainTimer.clkCont_17__N_41[8] ), .COUT1(\mainTimer.n815 ), 
    .COUT0(\mainTimer.n2289 ));
  mainTimer_SLICE_39 \mainTimer.SLICE_39 ( .D1(\mainTimer.n2229 ), 
    .C1(VCC_net), .B1(\mainTimer.clkCont[0] ), .CIN1(\mainTimer.n2229 ), 
    .F1(\mainTimer.clkCont_17__N_41[0] ), .COUT1(\mainTimer.n807 ), 
    .COUT0(\mainTimer.n2229 ));
  mainTimer_SLICE_40 \mainTimer.SLICE_40 ( .D1(\mainTimer.n2286 ), 
    .B1(\mainTimer.clkCont[6] ), .D0(\mainTimer.n811 ), 
    .B0(\mainTimer.clkCont[5] ), .CIN0(\mainTimer.n811 ), 
    .CIN1(\mainTimer.n2286 ), .F0(\mainTimer.clkCont_17__N_41[5] ), 
    .F1(\mainTimer.clkCont_17__N_41[6] ), .COUT1(\mainTimer.n813 ), 
    .COUT0(\mainTimer.n2286 ));
  mainTimer_SLICE_41 \mainTimer.SLICE_41 ( .D1(\mainTimer.n2280 ), 
    .B1(\mainTimer.clkCont[2] ), .D0(\mainTimer.n807 ), 
    .B0(\mainTimer.clkCont[1] ), .CIN0(\mainTimer.n807 ), 
    .CIN1(\mainTimer.n2280 ), .F0(\mainTimer.clkCont_17__N_41[1] ), 
    .F1(\mainTimer.clkCont_17__N_41[2] ), .COUT1(\mainTimer.n809 ), 
    .COUT0(\mainTimer.n2280 ));
  mainTimer_SLICE_42 \mainTimer.SLICE_42 ( .D1(\mainTimer.n2292 ), 
    .B1(\mainTimer.clkCont[10] ), .D0(\mainTimer.n815 ), 
    .B0(\mainTimer.clkCont[9] ), .CIN0(\mainTimer.n815 ), 
    .CIN1(\mainTimer.n2292 ), .F0(\mainTimer.clkCont_17__N_41[9] ), 
    .F1(\mainTimer.clkCont_17__N_41[10] ), .COUT1(\mainTimer.n817 ), 
    .COUT0(\mainTimer.n2292 ));
  mainTimer_SLICE_43 \mainTimer.SLICE_43 ( .D1(\mainTimer.n2304 ), 
    .D0(\mainTimer.n823 ), .B0(\mainTimer.clkCont[17] ), 
    .CIN0(\mainTimer.n823 ), .CIN1(\mainTimer.n2304 ), 
    .F0(\mainTimer.clkCont_17__N_41[17] ), .COUT0(\mainTimer.n2304 ));
  SLICE_44 SLICE_44( .DI1(n237), .DI0(\n245$n0 ), .D1(actualKey_0_0), 
    .C1(n4_adj_260), .B1(KB_IN_c_0), .A1(DEBUG_KEY_c_1), .D0(DEBUG_KEY_c_1), 
    .C0(actualKey_0_1), .B0(n4_adj_260), .A0(KB_IN_c_1), .CLK(KB_RECV_c), 
    .Q0(actualKey_0_1), .Q1(actualKey_0_0), .F0(\n245$n0 ), .F1(n237));
  Keyboard_SLICE_45 \Keyboard.SLICE_45 ( .DI1(\Keyboard.n262[0]$n2 ), 
    .DI0(\Keyboard.n53$n1 ), .D1(KB_IN_c_1), .C1(\Keyboard.actualKey_1_1 ), 
    .B1(DEBUG_KEY_c_1), .A1(\Keyboard.n422 ), .D0(\Keyboard.n422 ), 
    .C0(\Keyboard.actualKey_1_0 ), .B0(DEBUG_KEY_c_1), .A0(KB_IN_c_0), 
    .CLK(KB_RECV_c), .Q0(\Keyboard.actualKey_1_0 ), 
    .Q1(\Keyboard.actualKey_1_1 ), .F0(\Keyboard.n53$n1 ), 
    .F1(\Keyboard.n262[0]$n2 ));
  Keyboard_SLICE_47 \Keyboard.SLICE_47 ( .DI1(\Keyboard.n71$n4 ), 
    .DI0(\Keyboard.n270[0]$n3 ), .D1(KB_IN_c_1), .C1(\Keyboard.actualKey_2_1 ), 
    .B1(n4_adj_260), .A1(DEBUG_KEY_c_1), .D0(DEBUG_KEY_c_1), .C0(n4_adj_260), 
    .B0(\Keyboard.actualKey_2_0 ), .A0(KB_IN_c_0), .CLK(KB_RECV_c), 
    .Q0(\Keyboard.actualKey_2_0 ), .Q1(\Keyboard.actualKey_2_1 ), 
    .F0(\Keyboard.n270[0]$n3 ), .F1(\Keyboard.n71$n4 ));
  Keyboard_SLICE_49 \Keyboard.SLICE_49 ( .DI1(\Keyboard.n83$n6 ), 
    .DI0(\Keyboard.n77$n5 ), .D1(\Keyboard.actualKey_3_1 ), .C1(DEBUG_KEY_c_1), 
    .B1(KB_IN_c_1), .A1(\Keyboard.n422 ), .D0(DEBUG_KEY_c_1), 
    .C0(\Keyboard.n422 ), .B0(\Keyboard.actualKey_3_0 ), .A0(KB_IN_c_0), 
    .CLK(KB_RECV_c), .Q0(\Keyboard.actualKey_3_0 ), 
    .Q1(\Keyboard.actualKey_3_1 ), .F0(\Keyboard.n77$n5 ), 
    .F1(\Keyboard.n83$n6 ));
  SLICE_54 SLICE_54( .DI1(\Snext[1]$n9 ), .DI0(\Snext[0]$n8 ), .D1(Sreg_c_0), 
    .C1(n4), .B1(n7), .A1(TIMER_EN_N_11), .D0(TIMER_EN_N_11), .C0(\Snext[0] ), 
    .B0(n375), .A0(\Snext_1__N_2[0] ), .CLK(SERCLK_OUT_c), .Q0(Sreg_c_0), 
    .Q1(Sreg_c_1), .F0(\Snext[0]$n8 ), .F1(\Snext[1]$n9 ));
  STATE_OUT_SLICE_56 \STATE_OUT.SLICE_56 ( .DI1(\STATE_OUT.n21[1] ), 
    .DI0(\STATE_OUT.n21[0] ), .D1(\STATE_OUT.cont[0] ), 
    .C1(\STATE_OUT.cont[1] ), .B1(\STATE_OUT.waiting ), 
    .C0(\STATE_OUT.cont[0] ), .A0(\STATE_OUT.waiting ), 
    .LSR(\STATE_OUT.state_send_N_67 ), .CLK(SERCLK_OUT_c), 
    .Q0(\STATE_OUT.cont[0] ), .Q1(\STATE_OUT.cont[1] ), 
    .F0(\STATE_OUT.n21[0] ), .F1(\STATE_OUT.n21[1] ));
  STATE_OUT_SLICE_57 \STATE_OUT.SLICE_57 ( .DI1(\STATE_OUT.n21[2] ), 
    .DI0(\STATE_OUT.n21[3] ), .D1(\STATE_OUT.cont[2] ), 
    .C1(\STATE_OUT.cont[1] ), .B1(\STATE_OUT.cont[0] ), 
    .A1(\STATE_OUT.waiting ), .D0(\STATE_OUT.n780 ), .C0(\STATE_OUT.cont[2] ), 
    .B0(\STATE_OUT.cont[3] ), .A0(\STATE_OUT.cont[1] ), 
    .LSR(\STATE_OUT.state_send_N_67 ), .CLK(SERCLK_OUT_c), 
    .Q0(\STATE_OUT.cont[3] ), .Q1(\STATE_OUT.cont[2] ), 
    .F0(\STATE_OUT.n21[3] ), .F1(\STATE_OUT.n21[2] ));
  STATE_OUT_serial_SLICE_61 \STATE_OUT.serial.SLICE_61 ( 
    .DI1(\STATE_OUT.serial.counter_31__N_84[1] ), 
    .DI0(\STATE_OUT.serial.counter_31__N_84[0] ), .D1(\STATE_OUT.init ), 
    .C1(\STATE_OUT.serial.counter_31__N_183[1] ), .B1(\STATE_OUT.counter[1] ), 
    .A1(\STATE_OUT.serial.n63 ), .D0(\STATE_OUT.serial.n63 ), 
    .C0(\STATE_OUT.init ), .B0(\STATE_OUT.serial.counter_31__N_183[0] ), 
    .A0(\STATE_OUT.counter[0] ), .CLK(SERCLK_OUT_c), 
    .Q0(\STATE_OUT.counter[0] ), .Q1(\STATE_OUT.counter[1] ), 
    .F0(\STATE_OUT.serial.counter_31__N_84[0] ), 
    .F1(\STATE_OUT.serial.counter_31__N_84[1] ));
  STATE_OUT_serial_SLICE_63 \STATE_OUT.serial.SLICE_63 ( 
    .DI1(\STATE_OUT.serial.counter_31__N_84[30] ), 
    .DI0(\STATE_OUT.serial.counter_31__N_84[31] ), .D1(\STATE_OUT.init ), 
    .C1(\STATE_OUT.serial.n63 ), .B1(\STATE_OUT.serial.counter_31__N_153[30] ), 
    .A1(\STATE_OUT.serial.counter[30] ), .D0(\STATE_OUT.serial.n63 ), 
    .C0(\STATE_OUT.serial.counter_31__N_153[31] ), 
    .B0(\STATE_OUT.serial.counter[31] ), .A0(\STATE_OUT.init ), 
    .CLK(SERCLK_OUT_c), .Q0(\STATE_OUT.serial.counter[31] ), 
    .Q1(\STATE_OUT.serial.counter[30] ), 
    .F0(\STATE_OUT.serial.counter_31__N_84[31] ), 
    .F1(\STATE_OUT.serial.counter_31__N_84[30] ));
  STATE_OUT_serial_SLICE_65 \STATE_OUT.serial.SLICE_65 ( 
    .DI1(\STATE_OUT.serial.counter_31__N_84[28] ), 
    .DI0(\STATE_OUT.serial.counter_31__N_84[29] ), .D1(\STATE_OUT.serial.n63 ), 
    .C1(\STATE_OUT.init ), .B1(\STATE_OUT.serial.counter[28] ), 
    .A1(\STATE_OUT.serial.counter_31__N_153[28] ), 
    .D0(\STATE_OUT.serial.counter_31__N_153[29] ), 
    .C0(\STATE_OUT.serial.counter[29] ), .B0(\STATE_OUT.init ), 
    .A0(\STATE_OUT.serial.n63 ), .CLK(SERCLK_OUT_c), 
    .Q0(\STATE_OUT.serial.counter[29] ), .Q1(\STATE_OUT.serial.counter[28] ), 
    .F0(\STATE_OUT.serial.counter_31__N_84[29] ), 
    .F1(\STATE_OUT.serial.counter_31__N_84[28] ));
  STATE_OUT_serial_SLICE_67 \STATE_OUT.serial.SLICE_67 ( 
    .DI1(\STATE_OUT.serial.counter_31__N_84[26] ), 
    .DI0(\STATE_OUT.serial.counter_31__N_84[27] ), .D1(\STATE_OUT.init ), 
    .C1(\STATE_OUT.serial.counter[26] ), 
    .B1(\STATE_OUT.serial.counter_31__N_153[26] ), .A1(\STATE_OUT.serial.n63 ), 
    .D0(\STATE_OUT.serial.counter[27] ), .C0(\STATE_OUT.init ), 
    .B0(\STATE_OUT.serial.n63 ), .A0(\STATE_OUT.serial.counter_31__N_153[27] ), 
    .CLK(SERCLK_OUT_c), .Q0(\STATE_OUT.serial.counter[27] ), 
    .Q1(\STATE_OUT.serial.counter[26] ), 
    .F0(\STATE_OUT.serial.counter_31__N_84[27] ), 
    .F1(\STATE_OUT.serial.counter_31__N_84[26] ));
  STATE_OUT_serial_SLICE_69 \STATE_OUT.serial.SLICE_69 ( 
    .DI1(\STATE_OUT.serial.counter_31__N_84[24] ), 
    .DI0(\STATE_OUT.serial.counter_31__N_84[25] ), .D1(\STATE_OUT.serial.n63 ), 
    .C1(\STATE_OUT.init ), .B1(\STATE_OUT.serial.counter[24] ), 
    .A1(\STATE_OUT.serial.counter_31__N_153[24] ), 
    .D0(\STATE_OUT.serial.counter_31__N_153[25] ), .C0(\STATE_OUT.serial.n63 ), 
    .B0(\STATE_OUT.init ), .A0(\STATE_OUT.serial.counter[25] ), 
    .CLK(SERCLK_OUT_c), .Q0(\STATE_OUT.serial.counter[25] ), 
    .Q1(\STATE_OUT.serial.counter[24] ), 
    .F0(\STATE_OUT.serial.counter_31__N_84[25] ), 
    .F1(\STATE_OUT.serial.counter_31__N_84[24] ));
  STATE_OUT_serial_SLICE_71 \STATE_OUT.serial.SLICE_71 ( 
    .DI1(\STATE_OUT.serial.counter_31__N_84[22] ), 
    .DI0(\STATE_OUT.serial.counter_31__N_84[23] ), .D1(\STATE_OUT.init ), 
    .C1(\STATE_OUT.serial.n63 ), .B1(\STATE_OUT.serial.counter[22] ), 
    .A1(\STATE_OUT.serial.counter_31__N_153[22] ), 
    .D0(\STATE_OUT.serial.counter[23] ), 
    .C0(\STATE_OUT.serial.counter_31__N_153[23] ), .B0(\STATE_OUT.serial.n63 ), 
    .A0(\STATE_OUT.init ), .CLK(SERCLK_OUT_c), 
    .Q0(\STATE_OUT.serial.counter[23] ), .Q1(\STATE_OUT.serial.counter[22] ), 
    .F0(\STATE_OUT.serial.counter_31__N_84[23] ), 
    .F1(\STATE_OUT.serial.counter_31__N_84[22] ));
  STATE_OUT_serial_SLICE_73 \STATE_OUT.serial.SLICE_73 ( 
    .DI1(\STATE_OUT.serial.counter_31__N_84[20] ), 
    .DI0(\STATE_OUT.serial.counter_31__N_84[21] ), .D1(\STATE_OUT.init ), 
    .C1(\STATE_OUT.serial.n63 ), .B1(\STATE_OUT.serial.counter_31__N_153[20] ), 
    .A1(\STATE_OUT.serial.counter[20] ), .D0(\STATE_OUT.serial.n63 ), 
    .C0(\STATE_OUT.serial.counter_31__N_153[21] ), 
    .B0(\STATE_OUT.serial.counter[21] ), .A0(\STATE_OUT.init ), 
    .CLK(SERCLK_OUT_c), .Q0(\STATE_OUT.serial.counter[21] ), 
    .Q1(\STATE_OUT.serial.counter[20] ), 
    .F0(\STATE_OUT.serial.counter_31__N_84[21] ), 
    .F1(\STATE_OUT.serial.counter_31__N_84[20] ));
  STATE_OUT_serial_SLICE_75 \STATE_OUT.serial.SLICE_75 ( 
    .DI1(\STATE_OUT.serial.counter_31__N_84[18] ), 
    .DI0(\STATE_OUT.serial.counter_31__N_84[19] ), 
    .D1(\STATE_OUT.serial.counter_31__N_153[18] ), .C1(\STATE_OUT.serial.n63 ), 
    .B1(\STATE_OUT.init ), .A1(\STATE_OUT.serial.counter[18] ), 
    .D0(\STATE_OUT.serial.counter_31__N_153[19] ), 
    .C0(\STATE_OUT.serial.counter[19] ), .B0(\STATE_OUT.serial.n63 ), 
    .A0(\STATE_OUT.init ), .CLK(SERCLK_OUT_c), 
    .Q0(\STATE_OUT.serial.counter[19] ), .Q1(\STATE_OUT.serial.counter[18] ), 
    .F0(\STATE_OUT.serial.counter_31__N_84[19] ), 
    .F1(\STATE_OUT.serial.counter_31__N_84[18] ));
  STATE_OUT_serial_SLICE_77 \STATE_OUT.serial.SLICE_77 ( 
    .DI1(\STATE_OUT.serial.counter_31__N_84[16] ), 
    .DI0(\STATE_OUT.serial.counter_31__N_84[17] ), 
    .D1(\STATE_OUT.serial.counter[16] ), .C1(\STATE_OUT.serial.n63 ), 
    .B1(\STATE_OUT.init ), .A1(\STATE_OUT.serial.counter_31__N_153[16] ), 
    .D0(\STATE_OUT.serial.counter_31__N_153[17] ), 
    .C0(\STATE_OUT.serial.counter[17] ), .B0(\STATE_OUT.serial.n63 ), 
    .A0(\STATE_OUT.init ), .CLK(SERCLK_OUT_c), 
    .Q0(\STATE_OUT.serial.counter[17] ), .Q1(\STATE_OUT.serial.counter[16] ), 
    .F0(\STATE_OUT.serial.counter_31__N_84[17] ), 
    .F1(\STATE_OUT.serial.counter_31__N_84[16] ));
  STATE_OUT_serial_SLICE_79 \STATE_OUT.serial.SLICE_79 ( 
    .DI1(\STATE_OUT.serial.counter_31__N_84[14] ), 
    .DI0(\STATE_OUT.serial.counter_31__N_84[15] ), 
    .D1(\STATE_OUT.serial.counter_31__N_153[14] ), 
    .C1(\STATE_OUT.serial.counter[14] ), .B1(\STATE_OUT.init ), 
    .A1(\STATE_OUT.serial.n63 ), .D0(\STATE_OUT.serial.n63 ), 
    .C0(\STATE_OUT.serial.counter_31__N_153[15] ), 
    .B0(\STATE_OUT.serial.counter[15] ), .A0(\STATE_OUT.init ), 
    .CLK(SERCLK_OUT_c), .Q0(\STATE_OUT.serial.counter[15] ), 
    .Q1(\STATE_OUT.serial.counter[14] ), 
    .F0(\STATE_OUT.serial.counter_31__N_84[15] ), 
    .F1(\STATE_OUT.serial.counter_31__N_84[14] ));
  STATE_OUT_serial_SLICE_81 \STATE_OUT.serial.SLICE_81 ( 
    .DI1(\STATE_OUT.serial.counter_31__N_84[12] ), 
    .DI0(\STATE_OUT.serial.counter_31__N_84[13] ), 
    .D1(\STATE_OUT.serial.counter[12] ), .C1(\STATE_OUT.serial.n63 ), 
    .B1(\STATE_OUT.init ), .A1(\STATE_OUT.serial.counter_31__N_153[12] ), 
    .D0(\STATE_OUT.serial.n63 ), .C0(\STATE_OUT.serial.counter[13] ), 
    .B0(\STATE_OUT.serial.counter_31__N_153[13] ), .A0(\STATE_OUT.init ), 
    .CLK(SERCLK_OUT_c), .Q0(\STATE_OUT.serial.counter[13] ), 
    .Q1(\STATE_OUT.serial.counter[12] ), 
    .F0(\STATE_OUT.serial.counter_31__N_84[13] ), 
    .F1(\STATE_OUT.serial.counter_31__N_84[12] ));
  STATE_OUT_serial_SLICE_83 \STATE_OUT.serial.SLICE_83 ( 
    .DI1(\STATE_OUT.serial.counter_31__N_84[10] ), 
    .DI0(\STATE_OUT.serial.counter_31__N_84[11] ), .D1(\STATE_OUT.init ), 
    .C1(\STATE_OUT.serial.n63 ), .B1(\STATE_OUT.serial.counter[10] ), 
    .A1(\STATE_OUT.serial.counter_31__N_153[10] ), .D0(\STATE_OUT.serial.n63 ), 
    .C0(\STATE_OUT.serial.counter_31__N_153[11] ), 
    .B0(\STATE_OUT.serial.counter[11] ), .A0(\STATE_OUT.init ), 
    .CLK(SERCLK_OUT_c), .Q0(\STATE_OUT.serial.counter[11] ), 
    .Q1(\STATE_OUT.serial.counter[10] ), 
    .F0(\STATE_OUT.serial.counter_31__N_84[11] ), 
    .F1(\STATE_OUT.serial.counter_31__N_84[10] ));
  STATE_OUT_serial_SLICE_85 \STATE_OUT.serial.SLICE_85 ( 
    .DI1(\STATE_OUT.serial.counter_31__N_84[8] ), 
    .DI0(\STATE_OUT.serial.counter_31__N_84[9] ), .D1(\STATE_OUT.init ), 
    .C1(\STATE_OUT.serial.n63 ), .B1(\STATE_OUT.serial.counter[8] ), 
    .A1(\STATE_OUT.serial.counter_31__N_153[8] ), .D0(\STATE_OUT.serial.n63 ), 
    .C0(\STATE_OUT.init ), .B0(\STATE_OUT.serial.counter[9] ), 
    .A0(\STATE_OUT.serial.counter_31__N_153[9] ), .CLK(SERCLK_OUT_c), 
    .Q0(\STATE_OUT.serial.counter[9] ), .Q1(\STATE_OUT.serial.counter[8] ), 
    .F0(\STATE_OUT.serial.counter_31__N_84[9] ), 
    .F1(\STATE_OUT.serial.counter_31__N_84[8] ));
  STATE_OUT_serial_SLICE_87 \STATE_OUT.serial.SLICE_87 ( 
    .DI1(\STATE_OUT.serial.counter_31__N_84[6] ), 
    .DI0(\STATE_OUT.serial.counter_31__N_84[7] ), 
    .D1(\STATE_OUT.serial.counter[6] ), .C1(\STATE_OUT.serial.n63 ), 
    .B1(\STATE_OUT.init ), .A1(\STATE_OUT.serial.counter_31__N_153[6] ), 
    .D0(\STATE_OUT.serial.n63 ), .C0(\STATE_OUT.serial.counter_31__N_153[7] ), 
    .B0(\STATE_OUT.serial.counter[7] ), .A0(\STATE_OUT.init ), 
    .CLK(SERCLK_OUT_c), .Q0(\STATE_OUT.serial.counter[7] ), 
    .Q1(\STATE_OUT.serial.counter[6] ), 
    .F0(\STATE_OUT.serial.counter_31__N_84[7] ), 
    .F1(\STATE_OUT.serial.counter_31__N_84[6] ));
  STATE_OUT_serial_SLICE_89 \STATE_OUT.serial.SLICE_89 ( 
    .DI1(\STATE_OUT.serial.counter_31__N_84[4] ), 
    .DI0(\STATE_OUT.serial.counter_31__N_84[5] ), 
    .D1(\STATE_OUT.serial.counter[4] ), .C1(\STATE_OUT.init ), 
    .B1(\STATE_OUT.serial.n63 ), .A1(\STATE_OUT.serial.counter_31__N_153[4] ), 
    .D0(\STATE_OUT.init ), .C0(\STATE_OUT.serial.counter[5] ), 
    .B0(\STATE_OUT.serial.counter_31__N_153[5] ), .A0(\STATE_OUT.serial.n63 ), 
    .CLK(SERCLK_OUT_c), .Q0(\STATE_OUT.serial.counter[5] ), 
    .Q1(\STATE_OUT.serial.counter[4] ), 
    .F0(\STATE_OUT.serial.counter_31__N_84[5] ), 
    .F1(\STATE_OUT.serial.counter_31__N_84[4] ));
  STATE_OUT_serial_SLICE_91 \STATE_OUT.serial.SLICE_91 ( 
    .DI1(\STATE_OUT.serial.counter_31__N_84[2] ), 
    .DI0(\STATE_OUT.serial.counter_31__N_84[3] ), .D1(\STATE_OUT.serial.n63 ), 
    .C1(\STATE_OUT.init ), .A1(\STATE_OUT.serial.counter_31__N_153[2] ), 
    .D0(\STATE_OUT.init ), .C0(\STATE_OUT.serial.counter_31__N_153[3] ), 
    .A0(\STATE_OUT.serial.n63 ), .CLK(SERCLK_OUT_c), 
    .Q0(\STATE_OUT.counter[3] ), .Q1(\STATE_OUT.counter[2] ), 
    .F0(\STATE_OUT.serial.counter_31__N_84[3] ), 
    .F1(\STATE_OUT.serial.counter_31__N_84[2] ));
  STATE_OUT_serial_SLICE_94 \STATE_OUT.serial.SLICE_94 ( 
    .DI1(\STATE_OUT.serial.aux_3__N_116[2]$n11 ), 
    .DI0(\STATE_OUT.serial.aux_3__N_116[3]$n10 ), 
    .D1(\STATE_OUT.serial.aux[2] ), .C1(\STATE_OUT.serial.n63 ), 
    .A1(SENSOR1_IN_c), .D0(\STATE_OUT.serial.aux[3] ), 
    .B0(\STATE_OUT.serial.n63 ), .A0(SENSOR2_IN_c), .CLK(SERCLK_OUT_c), 
    .Q0(\STATE_OUT.serial.aux[3] ), .Q1(\STATE_OUT.serial.aux[2] ), 
    .F0(\STATE_OUT.serial.aux_3__N_116[3]$n10 ), 
    .F1(\STATE_OUT.serial.aux_3__N_116[2]$n11 ));
  STATE_OUT_serial_SLICE_96 \STATE_OUT.serial.SLICE_96 ( 
    .DI1(\STATE_OUT.serial.aux_3__N_116[0]$n13 ), 
    .DI0(\STATE_OUT.serial.aux_3__N_116[1]$n12 ), .D1(Sreg_c_1), 
    .C1(\STATE_OUT.serial.aux[0] ), .B1(Sreg_c_0), .A1(\STATE_OUT.serial.n63 ), 
    .D0(\STATE_OUT.serial.aux[1] ), .C0(Sreg_c_1), .B0(\STATE_OUT.serial.n63 ), 
    .A0(Sreg_c_0), .CLK(SERCLK_OUT_c), .Q0(\STATE_OUT.serial.aux[1] ), 
    .Q1(\STATE_OUT.serial.aux[0] ), 
    .F0(\STATE_OUT.serial.aux_3__N_116[1]$n12 ), 
    .F1(\STATE_OUT.serial.aux_3__N_116[0]$n13 ));
  mainTimer_SLICE_100 \mainTimer.SLICE_100 ( 
    .DI1(\mainTimer.clkCont_17__N_20[1] ), 
    .DI0(\mainTimer.clkCont_17__N_20[0] ), 
    .C1(\mainTimer.clkCont_17__N_41[1] ), .A1(TIME_OUT), .B0(TIME_OUT), 
    .A0(\mainTimer.clkCont_17__N_41[0] ), .LSR(\mainTimer.clkCont_17__N_38 ), 
    .CLK(SERCLK_OUT_c), .Q0(\mainTimer.clkCont[0] ), 
    .Q1(\mainTimer.clkCont[1] ), .F0(\mainTimer.clkCont_17__N_20[0] ), 
    .F1(\mainTimer.clkCont_17__N_20[1] ));
  mainTimer_SLICE_101 \mainTimer.SLICE_101 ( 
    .DI1(\mainTimer.clkCont_17__N_20[16] ), 
    .DI0(\mainTimer.clkCont_17__N_20[17] ), 
    .D1(\mainTimer.clkCont_17__N_41[16] ), .B1(TIME_OUT), 
    .C0(\mainTimer.clkCont_17__N_41[17] ), .A0(TIME_OUT), 
    .LSR(\mainTimer.clkCont_17__N_38 ), .CLK(SERCLK_OUT_c), 
    .Q0(\mainTimer.clkCont[17] ), .Q1(\mainTimer.clkCont[16] ), 
    .F0(\mainTimer.clkCont_17__N_20[17] ), 
    .F1(\mainTimer.clkCont_17__N_20[16] ));
  mainTimer_SLICE_103 \mainTimer.SLICE_103 ( 
    .DI1(\mainTimer.clkCont_17__N_20[14] ), 
    .DI0(\mainTimer.clkCont_17__N_20[15] ), .B1(TIME_OUT), 
    .A1(\mainTimer.clkCont_17__N_41[14] ), 
    .D0(\mainTimer.clkCont_17__N_41[15] ), .A0(TIME_OUT), 
    .LSR(\mainTimer.clkCont_17__N_38 ), .CLK(SERCLK_OUT_c), 
    .Q0(\mainTimer.clkCont[15] ), .Q1(\mainTimer.clkCont[14] ), 
    .F0(\mainTimer.clkCont_17__N_20[15] ), 
    .F1(\mainTimer.clkCont_17__N_20[14] ));
  mainTimer_SLICE_105 \mainTimer.SLICE_105 ( 
    .DI1(\mainTimer.clkCont_17__N_20[12] ), 
    .DI0(\mainTimer.clkCont_17__N_20[13] ), .D1(TIME_OUT), 
    .A1(\mainTimer.clkCont_17__N_41[12] ), .C0(TIME_OUT), 
    .B0(\mainTimer.clkCont_17__N_41[13] ), .LSR(\mainTimer.clkCont_17__N_38 ), 
    .CLK(SERCLK_OUT_c), .Q0(\mainTimer.clkCont[13] ), 
    .Q1(\mainTimer.clkCont[12] ), .F0(\mainTimer.clkCont_17__N_20[13] ), 
    .F1(\mainTimer.clkCont_17__N_20[12] ));
  mainTimer_SLICE_107 \mainTimer.SLICE_107 ( 
    .DI1(\mainTimer.clkCont_17__N_20[10] ), 
    .DI0(\mainTimer.clkCont_17__N_20[11] ), .D1(TIME_OUT), 
    .B1(\mainTimer.clkCont_17__N_41[10] ), .C0(TIME_OUT), 
    .A0(\mainTimer.clkCont_17__N_41[11] ), .LSR(\mainTimer.clkCont_17__N_38 ), 
    .CLK(SERCLK_OUT_c), .Q0(\mainTimer.clkCont[11] ), 
    .Q1(\mainTimer.clkCont[10] ), .F0(\mainTimer.clkCont_17__N_20[11] ), 
    .F1(\mainTimer.clkCont_17__N_20[10] ));
  mainTimer_SLICE_109 \mainTimer.SLICE_109 ( 
    .DI1(\mainTimer.clkCont_17__N_20[8] ), 
    .DI0(\mainTimer.clkCont_17__N_20[9] ), .B1(TIME_OUT), 
    .A1(\mainTimer.clkCont_17__N_41[8] ), .D0(\mainTimer.clkCont_17__N_41[9] ), 
    .C0(TIME_OUT), .LSR(\mainTimer.clkCont_17__N_38 ), .CLK(SERCLK_OUT_c), 
    .Q0(\mainTimer.clkCont[9] ), .Q1(\mainTimer.clkCont[8] ), 
    .F0(\mainTimer.clkCont_17__N_20[9] ), .F1(\mainTimer.clkCont_17__N_20[8] ));
  mainTimer_SLICE_111 \mainTimer.SLICE_111 ( 
    .DI1(\mainTimer.clkCont_17__N_20[6] ), 
    .DI0(\mainTimer.clkCont_17__N_20[7] ), 
    .D1(\mainTimer.clkCont_17__N_41[6] ), .B1(TIME_OUT), 
    .D0(\mainTimer.clkCont_17__N_41[7] ), .C0(TIME_OUT), 
    .LSR(\mainTimer.clkCont_17__N_38 ), .CLK(SERCLK_OUT_c), 
    .Q0(\mainTimer.clkCont[7] ), .Q1(\mainTimer.clkCont[6] ), 
    .F0(\mainTimer.clkCont_17__N_20[7] ), .F1(\mainTimer.clkCont_17__N_20[6] ));
  mainTimer_SLICE_113 \mainTimer.SLICE_113 ( 
    .DI1(\mainTimer.clkCont_17__N_20[4] ), 
    .DI0(\mainTimer.clkCont_17__N_20[5] ), .C1(TIME_OUT), 
    .B1(\mainTimer.clkCont_17__N_41[4] ), .D0(TIME_OUT), 
    .A0(\mainTimer.clkCont_17__N_41[5] ), .LSR(\mainTimer.clkCont_17__N_38 ), 
    .CLK(SERCLK_OUT_c), .Q0(\mainTimer.clkCont[5] ), 
    .Q1(\mainTimer.clkCont[4] ), .F0(\mainTimer.clkCont_17__N_20[5] ), 
    .F1(\mainTimer.clkCont_17__N_20[4] ));
  mainTimer_SLICE_115 \mainTimer.SLICE_115 ( 
    .DI1(\mainTimer.clkCont_17__N_20[2] ), 
    .DI0(\mainTimer.clkCont_17__N_20[3] ), .C1(TIME_OUT), 
    .B1(\mainTimer.clkCont_17__N_41[2] ), .B0(TIME_OUT), 
    .A0(\mainTimer.clkCont_17__N_41[3] ), .LSR(\mainTimer.clkCont_17__N_38 ), 
    .CLK(SERCLK_OUT_c), .Q0(\mainTimer.clkCont[3] ), 
    .Q1(\mainTimer.clkCont[2] ), .F0(\mainTimer.clkCont_17__N_20[3] ), 
    .F1(\mainTimer.clkCont_17__N_20[2] ));
  SLICE_119 SLICE_119( .D1(Sreg_c_0), .C1(n4), .B1(n7), .A1(TIMER_EN_N_11), 
    .D0(KEY_STATUS_c_1), .B0(KEY_STATUS_c_0), .F0(TIMER_EN_N_11), 
    .F1(\Snext[1] ));
  SLICE_120 SLICE_120( .D1(KEY_STATUS_c_0), .C1(SENSOR2_IN_c), 
    .B1(SENSOR1_IN_c), .A1(KEY_STATUS_c_1), .D0(Sreg_c_1), .C0(\Snext[1] ), 
    .B0(n62), .A0(Sreg_c_0), .F0(n7), .F1(n62));
  SLICE_121 SLICE_121( .D1(TIMER_EN), .C1(TIMER_EN_N_14), .B1(n662), 
    .A1(n1536), .D0(TIME_OUT), .B0(KEY_STATUS_c_1), .A0(KEY_STATUS_c_0), 
    .F0(TIMER_EN_N_14), .F1(TIMER_EN));
  mainTimer_SLICE_122 \mainTimer.SLICE_122 ( .C0(TIMER_EN), 
    .F0(\mainTimer.clkCont_17__N_38 ));
  Keyboard_SLICE_123 \Keyboard.SLICE_123 ( .D1(\Keyboard.actualKey_3_1 ), 
    .C1(\Keyboard.n422 ), .B1(KB_IN_c_1), .A1(DEBUG_KEY_c_1), 
    .D0(\Keyboard.actualKey_3_0 ), .C0(KB_IN_c_0), .B0(\Keyboard.n422 ), 
    .A0(DEBUG_KEY_c_1), .F0(\Keyboard.n77 ), .F1(\Keyboard.n83 ));
  Keyboard_SLICE_124 \Keyboard.SLICE_124 ( .D1(\Keyboard.n83 ), 
    .C1(\Keyboard.n8 ), .B1(\Keyboard.n7 ), .A1(\Keyboard.n77 ), .D0(n245), 
    .C0(\Keyboard.n262[0] ), .B0(\Keyboard.n270[0] ), 
    .A0(\Keyboard.valid_1__N_257[0] ), .F0(\Keyboard.n8 ), 
    .F1(\Keyboard.n2020 ));
  Keyboard_SLICE_126 \Keyboard.SLICE_126 ( .D1(KB_IN_c_1), 
    .C1(\Keyboard.n422 ), .B1(\Keyboard.actualKey_1_1 ), .A1(DEBUG_KEY_c_1), 
    .D0(KB_RECV_c), .B0(DEBUG_KEY_c_0), .F0(\Keyboard.n422 ), 
    .F1(\Keyboard.n262[0] ));
  Keyboard_SLICE_127 \Keyboard.SLICE_127 ( .DI1(\Keyboard.n42[1] ), 
    .D1(n4_adj_260), .C1(actualKey_0_0), .B1(DEBUG_KEY_c_1), .A1(KB_IN_c_0), 
    .D0(DEBUG_KEY_c_1), .C0(\Keyboard.actualKey_2_0 ), .B0(KB_IN_c_0), 
    .A0(n4_adj_260), .LSR(\Keyboard.n2020 ), .CLK(KB_RECV_c), 
    .Q1(KEY_STATUS_c_1), .F0(\Keyboard.n270[0] ), .F1(\Keyboard.n42[1] ));
  SLICE_128 SLICE_128( .D1(DEBUG_KEY_c_1), .C1(n4_adj_260), .B1(KB_IN_c_1), 
    .A1(\Keyboard.actualKey_2_1 ), .D0(KB_RECV_c), .B0(DEBUG_KEY_c_0), 
    .F0(n4_adj_260), .F1(\Keyboard.n71 ));
  Keyboard_SLICE_130 \Keyboard.SLICE_130 ( .C1(\Keyboard.n53 ), 
    .B1(\Keyboard.n71 ), .D0(DEBUG_KEY_c_1), .C0(KB_IN_c_0), 
    .B0(\Keyboard.n422 ), .A0(\Keyboard.actualKey_1_0 ), .F0(\Keyboard.n53 ), 
    .F1(\Keyboard.n7 ));
  Keyboard_SLICE_133 \Keyboard.SLICE_133 ( .D1(\Keyboard.n62 ), 
    .C1(\Keyboard.n50 ), .B1(\Keyboard.n58 ), .A1(\Keyboard.n49 ), 
    .D0(\Keyboard.counter[10] ), .C0(\Keyboard.counter[18] ), 
    .B0(\Keyboard.counter[19] ), .A0(\Keyboard.counter[28] ), 
    .F0(\Keyboard.n50 ), .F1(\Keyboard.valid_1__N_257[0] ));
  Keyboard_SLICE_135 \Keyboard.SLICE_135 ( .D1(\Keyboard.n50 ), 
    .C1(\Keyboard.n49 ), .B1(\Keyboard.n58 ), .A1(\Keyboard.n62 ), 
    .D0(\Keyboard.counter[8] ), .C0(\Keyboard.counter[25] ), 
    .B0(DEBUG_KEY_c_0), .A0(\Keyboard.counter[27] ), .F0(\Keyboard.n49 ), 
    .F1(\Keyboard.n445 ));
  Keyboard_SLICE_137 \Keyboard.SLICE_137 ( .D1(\Keyboard.n55 ), 
    .C1(\Keyboard.n53_adj_259 ), .B1(\Keyboard.n56 ), .A1(\Keyboard.n54 ), 
    .D0(\Keyboard.counter[15] ), .C0(\Keyboard.counter[20] ), 
    .B0(\Keyboard.counter[5] ), .A0(\Keyboard.counter[29] ), 
    .F0(\Keyboard.n53_adj_259 ), .F1(\Keyboard.n62 ));
  Keyboard_SLICE_138 \Keyboard.SLICE_138 ( 
    .DI1(\Keyboard.valid_1__N_257[0]$n7 ), .D1(\Keyboard.n62 ), 
    .C1(\Keyboard.n49 ), .B1(\Keyboard.n58 ), .A1(\Keyboard.n50 ), 
    .D0(\Keyboard.counter[23] ), .C0(\Keyboard.counter[4] ), 
    .B0(\Keyboard.counter[31] ), .A0(\Keyboard.counter[6] ), .CLK(KB_RECV_c), 
    .Q1(KEY_STATUS_c_0), .F0(\Keyboard.n56 ), 
    .F1(\Keyboard.valid_1__N_257[0]$n7 ));
  Keyboard_SLICE_139 \Keyboard.SLICE_139 ( .D1(\Keyboard.counter[30] ), 
    .C1(\Keyboard.n52 ), .B1(\Keyboard.n38 ), .A1(\Keyboard.counter[7] ), 
    .D0(\Keyboard.counter[16] ), .C0(\Keyboard.counter[2] ), 
    .B0(\Keyboard.counter[26] ), .A0(\Keyboard.counter[11] ), 
    .F0(\Keyboard.n52 ), .F1(\Keyboard.n58 ));
  Keyboard_SLICE_140 \Keyboard.SLICE_140 ( .D1(\Keyboard.counter[12] ), 
    .C1(\Keyboard.counter[3] ), .B1(\Keyboard.counter[13] ), 
    .A1(\Keyboard.counter[21] ), .D0(\Keyboard.counter[9] ), 
    .C0(\Keyboard.counter[17] ), .F0(\Keyboard.n38 ), .F1(\Keyboard.n55 ));
  SLICE_141 SLICE_141( .D1(\Snext_1__N_2[0] ), .C1(n375), .B1(\Snext[0] ), 
    .A1(TIMER_EN_N_11), .D0(TIME_OUT), .C0(n62), .B0(Sreg_c_1), .A0(Sreg_c_0), 
    .F0(n375), .F1(\Snext[0] ));
  SLICE_143 SLICE_143( .D1(Sreg_c_0), .C1(n1539), .B1(Sreg_c_1), .A1(TIME_OUT), 
    .D0(KEY_STATUS_c_1), .B0(SENSOR1_IN_c), .A0(KEY_STATUS_c_0), .F0(n1539), 
    .F1(\Snext_1__N_2[0] ));
  SLICE_145 SLICE_145( .C1(Sreg_c_1), .A1(TIME_OUT), .D0(TIME_OUT), 
    .C0(Sreg_c_0), .B0(Sreg_c_1), .A0(TIMER_EN_N_11), .F0(n1536), .F1(n4));
  STATE_OUT_serial_SLICE_147 \STATE_OUT.serial.SLICE_147 ( 
    .D1(\STATE_OUT.serial.n52 ), .C1(\STATE_OUT.serial.n38 ), 
    .B1(\STATE_OUT.counter[0] ), .A1(\STATE_OUT.serial.counter[14] ), 
    .B0(\STATE_OUT.serial.counter[25] ), .A0(\STATE_OUT.serial.counter[6] ), 
    .F0(\STATE_OUT.serial.n38 ), .F1(\STATE_OUT.serial.n58 ));
  STATE_OUT_serial_SLICE_149 \STATE_OUT.serial.SLICE_149 ( 
    .D1(\STATE_OUT.serial.counter[27] ), .C1(\STATE_OUT.serial.counter[4] ), 
    .B1(\STATE_OUT.serial.counter[23] ), .A1(\STATE_OUT.serial.counter[9] ), 
    .D0(\STATE_OUT.serial.counter[26] ), .C0(\STATE_OUT.serial.counter[17] ), 
    .B0(\STATE_OUT.serial.counter[20] ), .A0(\STATE_OUT.serial.counter[30] ), 
    .F0(\STATE_OUT.serial.n56 ), .F1(\STATE_OUT.serial.n50 ));
  STATE_OUT_serial_SLICE_150 \STATE_OUT.serial.SLICE_150 ( 
    .D1(\STATE_OUT.serial.n54 ), .C1(\STATE_OUT.serial.n53 ), 
    .B1(\STATE_OUT.serial.n55 ), .A1(\STATE_OUT.serial.n56 ), 
    .D0(\STATE_OUT.serial.counter[13] ), .C0(\STATE_OUT.serial.counter[18] ), 
    .B0(\STATE_OUT.serial.counter[11] ), .A0(\STATE_OUT.serial.counter[22] ), 
    .F0(\STATE_OUT.serial.n53 ), .F1(\STATE_OUT.serial.n62 ));
  STATE_OUT_serial_SLICE_152 \STATE_OUT.serial.SLICE_152 ( 
    .C1(\STATE_OUT.serial.n63 ), .B1(\STATE_OUT.serial.aux[3] ), 
    .A1(SENSOR2_IN_c), .D0(\STATE_OUT.serial.n62 ), 
    .C0(\STATE_OUT.serial.n58 ), .B0(\STATE_OUT.serial.n50 ), 
    .A0(\STATE_OUT.serial.n49 ), .F0(\STATE_OUT.serial.n63 ), 
    .F1(\STATE_OUT.serial.aux_3__N_116[3] ));
  STATE_OUT_serial_SLICE_153 \STATE_OUT.serial.SLICE_153 ( 
    .D1(\STATE_OUT.serial.aux_3__N_116[3] ), 
    .C1(\STATE_OUT.serial.aux_3__N_116[2] ), 
    .B1(\STATE_OUT.serial.counter_31__N_183[0] ), 
    .A1(\STATE_OUT.serial.counter_31__N_183[1] ), .D0(SENSOR1_IN_c), 
    .B0(\STATE_OUT.serial.aux[2] ), .A0(\STATE_OUT.serial.n63 ), 
    .F0(\STATE_OUT.serial.aux_3__N_116[2] ), .F1(\STATE_OUT.serial.n1872 ));
  mainTimer_SLICE_155 \mainTimer.SLICE_155 ( .D1(\mainTimer.clkCont[2] ), 
    .C1(\mainTimer.n1378 ), .B1(\mainTimer.clkCont[11] ), .A1(\mainTimer.n12 ), 
    .D0(\mainTimer.clkCont[13] ), .C0(\mainTimer.clkCont[0] ), 
    .A0(\mainTimer.clkCont[12] ), .F0(\mainTimer.n1378 ), .F1(\mainTimer.n17 ));
  mainTimer_SLICE_157 \mainTimer.SLICE_157 ( .DI1(\mainTimer.n2018 ), 
    .D1(\mainTimer.clkCont[1] ), .C1(\mainTimer.clkCont[9] ), 
    .B1(\mainTimer.clkCont[7] ), .A1(\mainTimer.n6 ), 
    .D0(\mainTimer.clkCont[14] ), .C0(\mainTimer.clkCont[17] ), 
    .B0(\mainTimer.clkCont[10] ), .A0(TIME_OUT), 
    .LSR(\mainTimer.clkCont_17__N_38 ), .CLK(SERCLK_OUT_c), .Q1(TIME_OUT), 
    .F0(\mainTimer.n18 ), .F1(\mainTimer.n2018 ));
  mainTimer_SLICE_158 \mainTimer.SLICE_158 ( .D1(\mainTimer.n18 ), 
    .C1(\mainTimer.n19 ), .B1(\mainTimer.n17 ), .A1(\mainTimer.clkCont[4] ), 
    .D0(\mainTimer.clkCont[6] ), .C0(\mainTimer.clkCont[8] ), 
    .B0(\mainTimer.clkCont[5] ), .A0(\mainTimer.clkCont[16] ), 
    .F0(\mainTimer.n19 ), .F1(\mainTimer.n6 ));
  STATE_OUT_serial_SLICE_159 \STATE_OUT.serial.SLICE_159 ( 
    .D0(\STATE_OUT.serial.n63 ), .C0(Sreg_c_0), .B0(\STATE_OUT.serial.aux[0] ), 
    .A0(Sreg_c_1), .F0(\STATE_OUT.serial.aux_3__N_116[0] ));
  STATE_OUT_serial_SLICE_160 \STATE_OUT.serial.SLICE_160 ( 
    .DI1(\STATE_OUT.serial.status_out_N_190 ), 
    .D1(\STATE_OUT.serial.aux_3__N_116[0] ), 
    .C1(\STATE_OUT.serial.aux_3__N_116[1] ), 
    .B1(\STATE_OUT.serial.counter_31__N_183[1] ), 
    .A1(\STATE_OUT.serial.n1872 ), .D0(\STATE_OUT.serial.n63 ), .C0(Sreg_c_0), 
    .B0(\STATE_OUT.serial.aux[1] ), .A0(Sreg_c_1), 
    .LSR(\STATE_OUT.serial.counter_31__N_185 ), .CLK(SERCLK_OUT_c), 
    .Q1(STATUS_OUT_c), .F0(\STATE_OUT.serial.aux_3__N_116[1] ), 
    .F1(\STATE_OUT.serial.status_out_N_190 ));
  STATE_OUT_SLICE_161 \STATE_OUT.SLICE_161 ( .D0(\STATE_OUT.cont[1] ), 
    .C0(\STATE_OUT.cont[2] ), .B0(\STATE_OUT.cont[3] ), 
    .A0(\STATE_OUT.cont[0] ), .F0(\STATE_OUT.n14 ));
  STATE_OUT_SLICE_162 \STATE_OUT.SLICE_162 ( .DI1(\STATE_OUT.n603 ), 
    .C1(\STATE_OUT.n14 ), .B1(\STATE_OUT.waiting ), .C0(\STATE_OUT.waiting ), 
    .A0(\STATE_OUT.cont[0] ), .LSR(\STATE_OUT.state_send_N_67 ), 
    .CLK(SERCLK_OUT_c), .Q1(\STATE_OUT.waiting ), .F0(\STATE_OUT.n780 ), 
    .F1(\STATE_OUT.n603 ));
  SLICE_163 SLICE_163( .F0(VCC_net));
  Keyboard_SLICE_167 \Keyboard.SLICE_167 ( .D1(actualKey_0_1), .C1(n4_adj_260), 
    .B1(KB_IN_c_1), .A1(DEBUG_KEY_c_1), .D0(\Keyboard.counter[24] ), 
    .C0(\Keyboard.counter[22] ), .B0(\Keyboard.counter[14] ), 
    .A0(DEBUG_KEY_c_1), .F0(\Keyboard.n54 ), .F1(n245));
  SLICE_169 SLICE_169( .D1(Sreg_c_0), .B1(Sreg_c_1), .C0(Sreg_c_0), 
    .A0(Sreg_c_1), .F0(SIREN_OUT_c), .F1(n662));
  SLICE_171 SLICE_171( .F0(GND_net));
  STATE_OUT_SLICE_174 \STATE_OUT.SLICE_174 ( .DI1(\STATE_OUT.n449 ), 
    .D1(\STATE_OUT.init ), .C1(STATUS_SEND_c), .B1(\STATE_OUT.n14 ), 
    .A1(\STATE_OUT.waiting ), .C0(\STATE_OUT.counter[0] ), 
    .A0(\STATE_OUT.init ), .CLK(SERCLK_OUT_c), .Q1(\STATE_OUT.init ), 
    .F0(\STATE_OUT.counter_31__N_121[0] ), .F1(\STATE_OUT.n449 ));
  STATE_OUT_SLICE_175 \STATE_OUT.SLICE_175 ( .D0(\STATE_OUT.init ), 
    .B0(\STATE_OUT.counter[3] ), .F0(\STATE_OUT.counter_31__N_121[3] ));
  STATE_OUT_SLICE_176 \STATE_OUT.SLICE_176 ( .D1(\STATE_OUT.counter[2] ), 
    .C1(\STATE_OUT.init ), .D0(\STATE_OUT.init ), .A0(\STATE_OUT.counter[1] ), 
    .F0(\STATE_OUT.counter_31__N_121[1] ), 
    .F1(\STATE_OUT.counter_31__N_121[2] ));
  STATE_OUT_serial_SLICE_178 \STATE_OUT.serial.SLICE_178 ( 
    .D1(\STATE_OUT.serial.counter[12] ), .C1(\STATE_OUT.serial.counter[8] ), 
    .B1(\STATE_OUT.serial.counter[5] ), .A1(\STATE_OUT.serial.counter[31] ), 
    .B0(\STATE_OUT.serial.counter[31] ), .A0(\STATE_OUT.init ), 
    .F0(\STATE_OUT.serial.counter_31__N_121[31] ), .F1(\STATE_OUT.serial.n52 ));
  STATE_OUT_serial_SLICE_179 \STATE_OUT.serial.SLICE_179 ( 
    .D1(\STATE_OUT.init ), .B1(\STATE_OUT.serial.counter[13] ), 
    .D0(\STATE_OUT.serial.counter[14] ), .C0(\STATE_OUT.init ), 
    .F0(\STATE_OUT.serial.counter_31__N_121[14] ), 
    .F1(\STATE_OUT.serial.counter_31__N_121[13] ));
  STATE_OUT_serial_SLICE_181 \STATE_OUT.serial.SLICE_181 ( 
    .D1(\STATE_OUT.serial.counter[24] ), .C1(\STATE_OUT.serial.counter[16] ), 
    .B1(\STATE_OUT.serial.counter[7] ), .A1(\STATE_OUT.serial.counter[10] ), 
    .C0(\STATE_OUT.init ), .A0(\STATE_OUT.serial.counter[16] ), 
    .F0(\STATE_OUT.serial.counter_31__N_121[16] ), .F1(\STATE_OUT.serial.n54 ));
  STATE_OUT_serial_SLICE_182 \STATE_OUT.serial.SLICE_182 ( 
    .C1(\STATE_OUT.init ), .B1(\STATE_OUT.serial.counter[18] ), 
    .C0(\STATE_OUT.serial.counter[15] ), .B0(\STATE_OUT.init ), 
    .F0(\STATE_OUT.serial.counter_31__N_121[15] ), 
    .F1(\STATE_OUT.serial.counter_31__N_121[18] ));
  STATE_OUT_serial_SLICE_184 \STATE_OUT.serial.SLICE_184 ( 
    .C1(\STATE_OUT.serial.counter[20] ), .B1(\STATE_OUT.init ), 
    .C0(\STATE_OUT.init ), .A0(\STATE_OUT.serial.counter[17] ), 
    .F0(\STATE_OUT.serial.counter_31__N_121[17] ), 
    .F1(\STATE_OUT.serial.counter_31__N_121[20] ));
  STATE_OUT_serial_SLICE_185 \STATE_OUT.serial.SLICE_185 ( 
    .DI1(\STATE_OUT.init.sig_000.FeedThruLUT ), .C1(\STATE_OUT.init ), 
    .B0(STATUS_SEND_c), .CE(\STATE_OUT.serial.n435 ), .CLK(SERCLK_OUT_c), 
    .Q1(STATUS_SEND_c), .F0(\STATE_OUT.state_send_N_67 ), 
    .F1(\STATE_OUT.init.sig_000.FeedThruLUT ));
  STATE_OUT_serial_SLICE_187 \STATE_OUT.serial.SLICE_187 ( 
    .C1(\STATE_OUT.init ), .B1(\STATE_OUT.serial.counter[22] ), 
    .D0(\STATE_OUT.init ), .B0(\STATE_OUT.serial.counter[19] ), 
    .F0(\STATE_OUT.serial.counter_31__N_121[19] ), 
    .F1(\STATE_OUT.serial.counter_31__N_121[22] ));
  STATE_OUT_serial_SLICE_189 \STATE_OUT.serial.SLICE_189 ( 
    .D1(\STATE_OUT.serial.counter[15] ), .C1(\STATE_OUT.serial.counter[21] ), 
    .B1(\STATE_OUT.serial.counter[28] ), .A1(\STATE_OUT.serial.counter[19] ), 
    .D0(\STATE_OUT.init ), .B0(\STATE_OUT.serial.counter[21] ), 
    .F0(\STATE_OUT.serial.counter_31__N_121[21] ), .F1(\STATE_OUT.serial.n55 ));
  STATE_OUT_serial_SLICE_194 \STATE_OUT.serial.SLICE_194 ( 
    .C1(\STATE_OUT.init ), .B1(\STATE_OUT.serial.counter[29] ), 
    .D0(\STATE_OUT.serial.counter[29] ), .C0(\STATE_OUT.counter[2] ), 
    .B0(\STATE_OUT.counter[3] ), .A0(\STATE_OUT.counter[1] ), 
    .F0(\STATE_OUT.serial.n49 ), .F1(\STATE_OUT.serial.counter_31__N_121[29] ));
  STATE_OUT_serial_SLICE_195 \STATE_OUT.serial.SLICE_195 ( 
    .D1(\STATE_OUT.serial.n63 ), .C1(\STATE_OUT.init ), .B0(\STATE_OUT.init ), 
    .A0(\STATE_OUT.serial.n63 ), .F0(\STATE_OUT.serial.counter_31__N_185 ), 
    .F1(\STATE_OUT.serial.n435 ));
  STATE_OUT_serial_SLICE_198 \STATE_OUT.serial.SLICE_198 ( 
    .D1(\STATE_OUT.init ), .A1(\STATE_OUT.serial.counter[27] ), 
    .C0(\STATE_OUT.serial.counter[30] ), .A0(\STATE_OUT.init ), 
    .F0(\STATE_OUT.serial.counter_31__N_121[30] ), 
    .F1(\STATE_OUT.serial.counter_31__N_121[27] ));
  STATE_OUT_serial_SLICE_200 \STATE_OUT.serial.SLICE_200 ( 
    .D1(\STATE_OUT.init ), .A1(\STATE_OUT.serial.counter[11] ), 
    .C0(\STATE_OUT.serial.counter[28] ), .A0(\STATE_OUT.init ), 
    .F0(\STATE_OUT.serial.counter_31__N_121[28] ), 
    .F1(\STATE_OUT.serial.counter_31__N_121[11] ));
  STATE_OUT_serial_SLICE_202 \STATE_OUT.serial.SLICE_202 ( 
    .B1(\STATE_OUT.serial.counter[25] ), .A1(\STATE_OUT.init ), 
    .D0(\STATE_OUT.init ), .B0(\STATE_OUT.serial.counter[12] ), 
    .F0(\STATE_OUT.serial.counter_31__N_121[12] ), 
    .F1(\STATE_OUT.serial.counter_31__N_121[25] ));
  STATE_OUT_serial_SLICE_204 \STATE_OUT.serial.SLICE_204 ( 
    .D1(\STATE_OUT.init ), .C1(\STATE_OUT.serial.counter[9] ), 
    .C0(\STATE_OUT.init ), .B0(\STATE_OUT.serial.counter[26] ), 
    .F0(\STATE_OUT.serial.counter_31__N_121[26] ), 
    .F1(\STATE_OUT.serial.counter_31__N_121[9] ));
  STATE_OUT_serial_SLICE_206 \STATE_OUT.serial.SLICE_206 ( 
    .D1(\STATE_OUT.init ), .C1(\STATE_OUT.serial.counter[7] ), 
    .C0(\STATE_OUT.serial.counter[10] ), .A0(\STATE_OUT.init ), 
    .F0(\STATE_OUT.serial.counter_31__N_121[10] ), 
    .F1(\STATE_OUT.serial.counter_31__N_121[7] ));
  STATE_OUT_serial_SLICE_208 \STATE_OUT.serial.SLICE_208 ( 
    .D1(\STATE_OUT.init ), .B1(\STATE_OUT.serial.counter[5] ), 
    .C0(\STATE_OUT.init ), .A0(\STATE_OUT.serial.counter[8] ), 
    .F0(\STATE_OUT.serial.counter_31__N_121[8] ), 
    .F1(\STATE_OUT.serial.counter_31__N_121[5] ));
  STATE_OUT_serial_SLICE_210 \STATE_OUT.serial.SLICE_210 ( 
    .D1(\STATE_OUT.serial.counter[4] ), .A1(\STATE_OUT.init ), 
    .D0(\STATE_OUT.init ), .C0(\STATE_OUT.serial.counter[6] ), 
    .F0(\STATE_OUT.serial.counter_31__N_121[6] ), 
    .F1(\STATE_OUT.serial.counter_31__N_121[4] ));
  STATE_OUT_serial_SLICE_212 \STATE_OUT.serial.SLICE_212 ( 
    .D1(\STATE_OUT.serial.counter[24] ), .C1(\STATE_OUT.init ), 
    .D0(\STATE_OUT.init ), .B0(\STATE_OUT.serial.counter[23] ), 
    .F0(\STATE_OUT.serial.counter_31__N_121[23] ), 
    .F1(\STATE_OUT.serial.counter_31__N_121[24] ));
  mainTimer_SLICE_217 \mainTimer.SLICE_217 ( .C0(\mainTimer.clkCont[15] ), 
    .A0(\mainTimer.clkCont[3] ), .F0(\mainTimer.n12 ));
  OSCInst1 OSCInst1( .CLKLFPU(VCC_net), .CLKLFEN(VCC_net), 
    .CLKLF(SERCLK_OUT_c));
  STATUS_OUT STATUS_OUT_I( .PADDO(STATUS_OUT_c), .STATUS_OUT(STATUS_OUT));
  SIREN_OUT SIREN_OUT_I( .PADDO(SIREN_OUT_c), .SIREN_OUT(SIREN_OUT));
  STATUS_SEND STATUS_SEND_I( .PADDO(STATUS_SEND_c), .STATUS_SEND(STATUS_SEND));
  SERCLK_OUT SERCLK_OUT_I( .PADDO(SERCLK_OUT_c), .SERCLK_OUT(SERCLK_OUT));
  RESET_OUT RESET_OUT_I( .PADDO(GND_net), .RESET_OUT(RESET_OUT));
  Sreg_1_ \Sreg[1]_I ( .PADDO(Sreg_c_1), .Sreg1(Sreg[1]));
  Sreg_0_ \Sreg[0]_I ( .PADDO(Sreg_c_0), .Sreg0(Sreg[0]));
  KEY_STATUS_1_ \KEY_STATUS[1]_I ( .PADDO(KEY_STATUS_c_1), 
    .KEYSTATUS1(KEY_STATUS[1]));
  KEY_STATUS_0_ \KEY_STATUS[0]_I ( .PADDO(KEY_STATUS_c_0), 
    .KEYSTATUS0(KEY_STATUS[0]));
  DEBUG_KEY_1_ \DEBUG_KEY[1]_I ( .PADDO(DEBUG_KEY_c_1), 
    .DEBUGKEY1(DEBUG_KEY[1]));
  DEBUG_KEY_0_ \DEBUG_KEY[0]_I ( .PADDO(DEBUG_KEY_c_0), 
    .DEBUGKEY0(DEBUG_KEY[0]));
  SENSOR1_IN SENSOR1_IN_I( .PADDI(SENSOR1_IN_c), .SENSOR1_IN(SENSOR1_IN));
  SENSOR2_IN SENSOR2_IN_I( .PADDI(SENSOR2_IN_c), .SENSOR2_IN(SENSOR2_IN));
  KB_IN_1_ \KB_IN[1]_I ( .PADDI(KB_IN_c_1), .KBIN1(KB_IN[1]));
  KB_IN_0_ \KB_IN[0]_I ( .PADDI(KB_IN_c_0), .KBIN0(KB_IN[0]));
  KB_RECV KB_RECV_I( .PADDI(KB_RECV_c), .KB_RECV(KB_RECV));
endmodule

module Keyboard_SLICE_0 ( input DI1, DI0, D1, C1, D0, C0, LSR, CLK, CIN0, CIN1, 
    output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  fa2 \Keyboard/counter_144_add_4_23 ( .A0(GNDI), .B0(GNDI), .C0(C0), .D0(D0), 
    .A1(GNDI), .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \Keyboard/counter_144__i22 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \Keyboard/counter_144__i23 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module fa2 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI0, CI1, output S0, S1, 
    CO0, CO1 );

  FA2 inst1( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .CI0(CI0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .CI1(CI1), .CO0(CO0), .CO1(CO1), .S0(S0), .S1(S1));
  defparam inst1.INIT0 = "0xc33c";
  defparam inst1.INIT1 = "0xc33c";
endmodule

module gnd ( output PWR0 );

  VLO INST1( .Z(PWR0));
endmodule

module ffsre2 ( input D0, SP, CK, LSR, output Q );

  FD1P3XZ INST01( .D(D0), .SP(SP), .CK(CK), .SR(LSR), .Q(Q));
  defparam INST01.REGSET = "RESET";
  defparam INST01.SRMODE = "CE_OVER_LSR";
endmodule

module vcc ( output PWR1 );

  VHI INST1( .Z(PWR1));
endmodule

module Keyboard_SLICE_1 ( input DI1, DI0, D1, C1, D0, C0, LSR, CLK, CIN0, CIN1, 
    output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  fa2 \Keyboard/counter_144_add_4_21 ( .A0(GNDI), .B0(GNDI), .C0(C0), .D0(D0), 
    .A1(GNDI), .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \Keyboard/counter_144__i20 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \Keyboard/counter_144__i21 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module Keyboard_SLICE_2 ( input DI1, DI0, D1, C1, D0, C0, LSR, CLK, CIN0, CIN1, 
    output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  fa2 \Keyboard/counter_144_add_4_5 ( .A0(GNDI), .B0(GNDI), .C0(C0), .D0(D0), 
    .A1(GNDI), .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \Keyboard/counter_144__i4 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \Keyboard/counter_144__i5 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module Keyboard_SLICE_3 ( input DI1, DI0, D1, C1, D0, C0, LSR, CLK, CIN0, CIN1, 
    output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  fa2 \Keyboard/counter_144_add_4_3 ( .A0(GNDI), .B0(GNDI), .C0(C0), .D0(D0), 
    .A1(GNDI), .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \Keyboard/counter_144__i2 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \Keyboard/counter_144__i3 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module Keyboard_SLICE_4 ( input DI1, D1, C1, B1, LSR, CLK, CIN1, output Q1, F1, 
    COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, LSR_dly;

  fa2 \Keyboard/counter_144_add_4_1 ( .A0(GNDI), .B0(GNDI), .C0(GNDI), 
    .D0(VCCI), .A1(GNDI), .B1(B1), .C1(C1), .D1(D1), .CI0(VCCI), .CI1(CIN1), 
    .S0(), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \Keyboard/counter_144__i1 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module Keyboard_SLICE_5 ( input DI1, DI0, D1, C1, D0, C0, LSR, CLK, CIN0, CIN1, 
    output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  fa2 \Keyboard/counter_144_add_4_19 ( .A0(GNDI), .B0(GNDI), .C0(C0), .D0(D0), 
    .A1(GNDI), .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \Keyboard/counter_144__i18 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \Keyboard/counter_144__i19 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module Keyboard_SLICE_6 ( input DI1, DI0, D1, C1, D0, C0, LSR, CLK, CIN0, CIN1, 
    output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  fa2 \Keyboard/counter_144_add_4_17 ( .A0(GNDI), .B0(GNDI), .C0(C0), .D0(D0), 
    .A1(GNDI), .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \Keyboard/counter_144__i16 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \Keyboard/counter_144__i17 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module Keyboard_SLICE_7 ( input DI1, DI0, D1, C1, D0, C0, LSR, CLK, CIN0, CIN1, 
    output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  fa2 \Keyboard/counter_144_add_4_15 ( .A0(GNDI), .B0(GNDI), .C0(C0), .D0(D0), 
    .A1(GNDI), .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \Keyboard/counter_144__i14 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \Keyboard/counter_144__i15 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module Keyboard_SLICE_8 ( input DI1, DI0, D1, C1, D0, C0, LSR, CLK, CIN0, CIN1, 
    output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  fa2 \Keyboard/counter_144_add_4_13 ( .A0(GNDI), .B0(GNDI), .C0(C0), .D0(D0), 
    .A1(GNDI), .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \Keyboard/counter_144__i12 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \Keyboard/counter_144__i13 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module Keyboard_SLICE_9 ( input DI0, D1, D0, C0, LSR, CLK, CIN0, CIN1, output 
    Q0, F0, COUT0 );
  wire   GNDI, VCCI, DI0_dly, CLK_dly, LSR_dly;

  fa2 \Keyboard/counter_144_add_4_33 ( .A0(GNDI), .B0(GNDI), .C0(C0), .D0(D0), 
    .A1(GNDI), .B1(GNDI), .C1(GNDI), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(), .CO0(COUT0), .CO1());
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \Keyboard/counter_144__i32 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module Keyboard_SLICE_10 ( input DI1, DI0, D1, C1, D0, C0, LSR, CLK, CIN0, 
    CIN1, output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  fa2 \Keyboard/counter_144_add_4_11 ( .A0(GNDI), .B0(GNDI), .C0(C0), .D0(D0), 
    .A1(GNDI), .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \Keyboard/counter_144__i10 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \Keyboard/counter_144__i11 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module Keyboard_SLICE_11 ( input DI1, DI0, D1, C1, D0, C0, LSR, CLK, CIN0, 
    CIN1, output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  fa2 \Keyboard/counter_144_add_4_31 ( .A0(GNDI), .B0(GNDI), .C0(C0), .D0(D0), 
    .A1(GNDI), .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \Keyboard/counter_144__i30 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \Keyboard/counter_144__i31 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module Keyboard_SLICE_12 ( input DI1, DI0, D1, C1, D0, C0, LSR, CLK, CIN0, 
    CIN1, output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  fa2 \Keyboard/counter_144_add_4_29 ( .A0(GNDI), .B0(GNDI), .C0(C0), .D0(D0), 
    .A1(GNDI), .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \Keyboard/counter_144__i28 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \Keyboard/counter_144__i29 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module Keyboard_SLICE_13 ( input DI1, DI0, D1, C1, D0, C0, LSR, CLK, CIN0, 
    CIN1, output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  fa2 \Keyboard/counter_144_add_4_27 ( .A0(GNDI), .B0(GNDI), .C0(C0), .D0(D0), 
    .A1(GNDI), .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \Keyboard/counter_144__i26 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \Keyboard/counter_144__i27 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module Keyboard_SLICE_14 ( input DI1, DI0, D1, C1, D0, C0, LSR, CLK, CIN0, 
    CIN1, output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  fa2 \Keyboard/counter_144_add_4_9 ( .A0(GNDI), .B0(GNDI), .C0(C0), .D0(D0), 
    .A1(GNDI), .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \Keyboard/counter_144__i8 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \Keyboard/counter_144__i9 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module Keyboard_SLICE_15 ( input DI1, DI0, D1, C1, D0, C0, LSR, CLK, CIN0, 
    CIN1, output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  fa2 \Keyboard/counter_144_add_4_7 ( .A0(GNDI), .B0(GNDI), .C0(C0), .D0(D0), 
    .A1(GNDI), .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \Keyboard/counter_144__i6 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \Keyboard/counter_144__i7 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module Keyboard_SLICE_16 ( input DI1, DI0, D1, C1, D0, C0, LSR, CLK, CIN0, 
    CIN1, output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  fa2 \Keyboard/counter_144_add_4_25 ( .A0(GNDI), .B0(GNDI), .C0(C0), .D0(D0), 
    .A1(GNDI), .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \Keyboard/counter_144__i24 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \Keyboard/counter_144__i25 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module STATE_OUT_serial_SLICE_17 ( input D1, C1, B1, D0, C0, B0, CIN0, CIN1, 
    output F0, F1, COUT1, COUT0 );
  wire   GNDI;

  fa2 \STATE_OUT/serial/sub_11_add_2_add_5_23 ( .A0(GNDI), .B0(B0), .C0(C0), 
    .D0(D0), .A1(GNDI), .B1(B1), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), 
    .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module STATE_OUT_serial_SLICE_18 ( input D1, C1, B1, D0, C0, B0, CIN0, CIN1, 
    output F0, F1, COUT1, COUT0 );
  wire   GNDI;

  fa2 \STATE_OUT/serial/sub_11_add_2_add_5_21 ( .A0(GNDI), .B0(B0), .C0(C0), 
    .D0(D0), .A1(GNDI), .B1(B1), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), 
    .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module STATE_OUT_serial_SLICE_19 ( input D1, C1, B1, D0, C0, B0, CIN0, CIN1, 
    output F0, F1, COUT1, COUT0 );
  wire   GNDI;

  fa2 \STATE_OUT/serial/sub_11_add_2_add_5_19 ( .A0(GNDI), .B0(B0), .C0(C0), 
    .D0(D0), .A1(GNDI), .B1(B1), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), 
    .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module STATE_OUT_serial_SLICE_20 ( input D1, C1, B1, D0, C0, B0, CIN0, CIN1, 
    output F0, F1, COUT1, COUT0 );
  wire   GNDI;

  fa2 \STATE_OUT/serial/sub_11_add_2_add_5_17 ( .A0(GNDI), .B0(B0), .C0(C0), 
    .D0(D0), .A1(GNDI), .B1(B1), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), 
    .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module STATE_OUT_serial_SLICE_21 ( input D1, C1, B1, D0, C0, B0, CIN0, CIN1, 
    output F0, F1, COUT1, COUT0 );
  wire   GNDI;

  fa2 \STATE_OUT/serial/sub_11_add_2_add_5_15 ( .A0(GNDI), .B0(B0), .C0(C0), 
    .D0(D0), .A1(GNDI), .B1(B1), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), 
    .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module STATE_OUT_serial_SLICE_22 ( input D1, D0, C0, B0, CIN0, CIN1, output F0, 
    COUT0 );
  wire   GNDI;

  fa2 \STATE_OUT/serial/sub_11_add_2_add_5_33 ( .A0(GNDI), .B0(B0), .C0(C0), 
    .D0(D0), .A1(GNDI), .B1(GNDI), .C1(GNDI), .D1(D1), .CI0(CIN0), .CI1(CIN1), 
    .S0(F0), .S1(), .CO0(COUT0), .CO1());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
  endspecify

endmodule

module STATE_OUT_serial_SLICE_23 ( input D1, C1, B1, D0, C0, B0, CIN0, CIN1, 
    output F0, F1, COUT1, COUT0 );
  wire   GNDI;

  fa2 \STATE_OUT/serial/sub_11_add_2_add_5_31 ( .A0(GNDI), .B0(B0), .C0(C0), 
    .D0(D0), .A1(GNDI), .B1(B1), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), 
    .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module STATE_OUT_serial_SLICE_24 ( input D1, C1, B1, D0, C0, B0, CIN0, CIN1, 
    output F0, F1, COUT1, COUT0 );
  wire   GNDI;

  fa2 \STATE_OUT/serial/sub_11_add_2_add_5_29 ( .A0(GNDI), .B0(B0), .C0(C0), 
    .D0(D0), .A1(GNDI), .B1(B1), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), 
    .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module STATE_OUT_serial_SLICE_25 ( input D1, C1, B1, D0, C0, B0, CIN0, CIN1, 
    output F0, F1, COUT1, COUT0 );
  wire   GNDI;

  fa2 \STATE_OUT/serial/sub_11_add_2_add_5_13 ( .A0(GNDI), .B0(B0), .C0(C0), 
    .D0(D0), .A1(GNDI), .B1(B1), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), 
    .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module STATE_OUT_serial_SLICE_26 ( input D1, C1, B1, D0, C0, B0, CIN0, CIN1, 
    output F0, F1, COUT1, COUT0 );
  wire   GNDI;

  fa2 \STATE_OUT/serial/sub_11_add_2_add_5_27 ( .A0(GNDI), .B0(B0), .C0(C0), 
    .D0(D0), .A1(GNDI), .B1(B1), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), 
    .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module STATE_OUT_serial_SLICE_27 ( input D1, C1, B1, D0, C0, B0, CIN0, CIN1, 
    output F0, F1, COUT1, COUT0 );
  wire   GNDI;

  fa2 \STATE_OUT/serial/sub_11_add_2_add_5_11 ( .A0(GNDI), .B0(B0), .C0(C0), 
    .D0(D0), .A1(GNDI), .B1(B1), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), 
    .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module STATE_OUT_serial_SLICE_28 ( input D1, C1, B1, D0, C0, B0, CIN0, CIN1, 
    output F0, F1, COUT1, COUT0 );
  wire   GNDI;

  fa2 \STATE_OUT/serial/sub_11_add_2_add_5_9 ( .A0(GNDI), .B0(B0), .C0(C0), 
    .D0(D0), .A1(GNDI), .B1(B1), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), 
    .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module STATE_OUT_serial_SLICE_29 ( input D1, C1, B1, D0, C0, B0, CIN0, CIN1, 
    output F0, F1, COUT1, COUT0 );
  wire   GNDI;

  fa2 \STATE_OUT/serial/sub_11_add_2_add_5_7 ( .A0(GNDI), .B0(B0), .C0(C0), 
    .D0(D0), .A1(GNDI), .B1(B1), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), 
    .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module STATE_OUT_serial_SLICE_30 ( input D1, C1, B1, D0, C0, B0, CIN0, CIN1, 
    output F0, F1, COUT1, COUT0 );
  wire   GNDI;

  fa2 \STATE_OUT/serial/sub_11_add_2_add_5_5 ( .A0(GNDI), .B0(B0), .C0(C0), 
    .D0(D0), .A1(GNDI), .B1(B1), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), 
    .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module STATE_OUT_serial_SLICE_31 ( input D1, C1, B1, D0, C0, B0, CIN0, CIN1, 
    output F0, F1, COUT1, COUT0 );
  wire   GNDI;

  fa2 \STATE_OUT/serial/sub_11_add_2_add_5_25 ( .A0(GNDI), .B0(B0), .C0(C0), 
    .D0(D0), .A1(GNDI), .B1(B1), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), 
    .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module STATE_OUT_serial_SLICE_32 ( input D1, C1, B1, D0, C0, B0, CIN0, CIN1, 
    output F0, F1, COUT1, COUT0 );
  wire   GNDI;

  fa2 \STATE_OUT/serial/sub_11_add_2_add_5_3 ( .A0(GNDI), .B0(B0), .C0(C0), 
    .D0(D0), .A1(GNDI), .B1(B1), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), 
    .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module STATE_OUT_serial_SLICE_33 ( input D1, C1, B1, CIN1, output F1, COUT1, 
    COUT0 );
  wire   GNDI, VCCI;

  fa2 \STATE_OUT/serial/sub_11_add_2_add_5_1 ( .A0(GNDI), .B0(GNDI), .C0(GNDI), 
    .D0(VCCI), .A1(GNDI), .B1(B1), .C1(C1), .D1(D1), .CI0(VCCI), .CI1(CIN1), 
    .S0(), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module mainTimer_SLICE_34 ( input D1, B1, D0, B0, CIN0, CIN1, output F0, F1, 
    COUT1, COUT0 );
  wire   GNDI;

  fa2 \mainTimer/add_7_add_5_17 ( .A0(GNDI), .B0(B0), .C0(GNDI), .D0(D0), 
    .A1(GNDI), .B1(B1), .C1(GNDI), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module mainTimer_SLICE_35 ( input D1, B1, D0, B0, CIN0, CIN1, output F0, F1, 
    COUT1, COUT0 );
  wire   GNDI;

  fa2 \mainTimer/add_7_add_5_15 ( .A0(GNDI), .B0(B0), .C0(GNDI), .D0(D0), 
    .A1(GNDI), .B1(B1), .C1(GNDI), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module mainTimer_SLICE_36 ( input D1, B1, D0, B0, CIN0, CIN1, output F0, F1, 
    COUT1, COUT0 );
  wire   GNDI;

  fa2 \mainTimer/add_7_add_5_5 ( .A0(GNDI), .B0(B0), .C0(GNDI), .D0(D0), 
    .A1(GNDI), .B1(B1), .C1(GNDI), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module mainTimer_SLICE_37 ( input D1, B1, D0, B0, CIN0, CIN1, output F0, F1, 
    COUT1, COUT0 );
  wire   GNDI;

  fa2 \mainTimer/add_7_add_5_13 ( .A0(GNDI), .B0(B0), .C0(GNDI), .D0(D0), 
    .A1(GNDI), .B1(B1), .C1(GNDI), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module mainTimer_SLICE_38 ( input D1, B1, D0, B0, CIN0, CIN1, output F0, F1, 
    COUT1, COUT0 );
  wire   GNDI;

  fa2 \mainTimer/add_7_add_5_9 ( .A0(GNDI), .B0(B0), .C0(GNDI), .D0(D0), 
    .A1(GNDI), .B1(B1), .C1(GNDI), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module mainTimer_SLICE_39 ( input D1, C1, B1, CIN1, output F1, COUT1, COUT0 );
  wire   GNDI, VCCI;

  fa2 \mainTimer/add_7_add_5_1 ( .A0(GNDI), .B0(GNDI), .C0(GNDI), .D0(VCCI), 
    .A1(GNDI), .B1(B1), .C1(C1), .D1(D1), .CI0(VCCI), .CI1(CIN1), .S0(), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module mainTimer_SLICE_40 ( input D1, B1, D0, B0, CIN0, CIN1, output F0, F1, 
    COUT1, COUT0 );
  wire   GNDI;

  fa2 \mainTimer/add_7_add_5_7 ( .A0(GNDI), .B0(B0), .C0(GNDI), .D0(D0), 
    .A1(GNDI), .B1(B1), .C1(GNDI), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module mainTimer_SLICE_41 ( input D1, B1, D0, B0, CIN0, CIN1, output F0, F1, 
    COUT1, COUT0 );
  wire   GNDI;

  fa2 \mainTimer/add_7_add_5_3 ( .A0(GNDI), .B0(B0), .C0(GNDI), .D0(D0), 
    .A1(GNDI), .B1(B1), .C1(GNDI), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module mainTimer_SLICE_42 ( input D1, B1, D0, B0, CIN0, CIN1, output F0, F1, 
    COUT1, COUT0 );
  wire   GNDI;

  fa2 \mainTimer/add_7_add_5_11 ( .A0(GNDI), .B0(B0), .C0(GNDI), .D0(D0), 
    .A1(GNDI), .B1(B1), .C1(GNDI), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module mainTimer_SLICE_43 ( input D1, D0, B0, CIN0, CIN1, output F0, COUT0 );
  wire   GNDI;

  fa2 \mainTimer/add_7_add_5_19 ( .A0(GNDI), .B0(B0), .C0(GNDI), .D0(D0), 
    .A1(GNDI), .B1(GNDI), .C1(GNDI), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(), .CO0(COUT0), .CO1());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_44 ( input DI1, DI0, D1, C1, B1, A1, D0, C0, B0, A0, CLK, output 
    Q0, Q1, F0, F1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  lut4 i45_3_lut_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40001 SLICE_44_K0( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  ffsre2 \Keyboard/i196 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \Keyboard/i199 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module lut4 ( input A, B, C, D, output Z );

  LUT4 #("0xEF40") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40001 ( input A, B, C, D, output Z );

  LUT4 #("0xF0B8") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module Keyboard_SLICE_45 ( input DI1, DI0, D1, C1, B1, A1, D0, C0, B0, A0, CLK, 
    output Q0, Q1, F0, F1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  lut40002 \Keyboard.SLICE_45_K1 ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40003 \Keyboard.SLICE_45_K0 ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  ffsre2 \Keyboard/i205 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \Keyboard/i202 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module lut40002 ( input A, B, C, D, output Z );

  LUT4 #("0xF2D0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40003 ( input A, B, C, D, output Z );

  LUT4 #("0xE2F0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module Keyboard_SLICE_47 ( input DI1, DI0, D1, C1, B1, A1, D0, C0, B0, A0, CLK, 
    output Q0, Q1, F0, F1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  lut40004 \Keyboard.SLICE_47_K1 ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40005 \Keyboard.SLICE_47_K0 ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  ffsre2 \Keyboard/i211 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \Keyboard/i208 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module lut40004 ( input A, B, C, D, output Z );

  LUT4 #("0xF870") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40005 ( input A, B, C, D, output Z );

  LUT4 #("0xACCC") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module Keyboard_SLICE_49 ( input DI1, DI0, D1, C1, B1, A1, D0, C0, B0, A0, CLK, 
    output Q0, Q1, F0, F1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  lut40006 \Keyboard.SLICE_49_K1 ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40005 \Keyboard.SLICE_49_K0 ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  ffsre2 \Keyboard/i217 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \Keyboard/i214 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module lut40006 ( input A, B, C, D, output Z );

  LUT4 #("0xDF80") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_54 ( input DI1, DI0, D1, C1, B1, A1, D0, C0, B0, A0, CLK, output 
    Q0, Q1, F0, F1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  lut40007 SLICE_54_K1( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40008 SLICE_54_K0( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  ffsre2 Sreg_i2( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 Sreg_i1( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module lut40007 ( input A, B, C, D, output Z );

  LUT4 #("0x88F8") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40008 ( input A, B, C, D, output Z );

  LUT4 #("0xB8AA") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module STATE_OUT_SLICE_56 ( input DI1, DI0, D1, C1, B1, C0, A0, LSR, CLK, 
    output Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  lut40009 \STATE_OUT/i686_2_lut_3_lut ( .A(GNDI), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40010 \STATE_OUT/i678_2_lut ( .A(A0), .B(GNDI), .C(C0), .D(GNDI), .Z(F0));
  ffsre20011 \STATE_OUT/cont_143__i1 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre20011 \STATE_OUT/cont_143__i0 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module lut40009 ( input A, B, C, D, output Z );

  LUT4 #("0x3CF0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40010 ( input A, B, C, D, output Z );

  LUT4 #("0x5A5A") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module ffsre20011 ( input D0, SP, CK, LSR, output Q );

  FD1P3XZ INST01( .D(D0), .SP(SP), .CK(CK), .SR(LSR), .Q(Q));
  defparam INST01.REGSET = "RESET";
  defparam INST01.SRMODE = "ASYNC";
endmodule

module STATE_OUT_SLICE_57 ( input DI1, DI0, D1, C1, B1, A1, D0, C0, B0, A0, 
    LSR, CLK, output Q0, Q1, F0, F1 );
  wire   VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  lut40012 \STATE_OUT/i693_2_lut_3_lut_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40013 \STATE_OUT/i700_3_lut_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));
  ffsre20011 \STATE_OUT/cont_143__i2 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre20011 \STATE_OUT/cont_143__i3 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module lut40012 ( input A, B, C, D, output Z );

  LUT4 #("0x7F80") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40013 ( input A, B, C, D, output Z );

  LUT4 #("0x6CCC") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module STATE_OUT_serial_SLICE_61 ( input DI1, DI0, D1, C1, B1, A1, D0, C0, B0, 
    A0, CLK, output Q0, Q1, F0, F1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  lut40014 \STATE_OUT/serial/counter_31__I_36_i2_3_lut_4_lut ( .A(A1), .B(B1), 
    .C(C1), .D(D1), .Z(F1));
  lut40015 \STATE_OUT/serial/counter_31__I_36_i1_3_lut_4_lut ( .A(A0), .B(B0), 
    .C(C0), .D(D0), .Z(F0));
  ffsre2 \STATE_OUT/serial/counter_i1 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \STATE_OUT/serial/counter_i0 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module lut40014 ( input A, B, C, D, output Z );

  LUT4 #("0xF0E4") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40015 ( input A, B, C, D, output Z );

  LUT4 #("0xCCCA") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module STATE_OUT_serial_SLICE_63 ( input DI1, DI0, D1, C1, B1, A1, D0, C0, B0, 
    A0, CLK, output Q0, Q1, F0, F1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  lut40016 \STATE_OUT/serial/counter_31__I_36_i31_3_lut_4_lut ( .A(A1), .B(B1), 
    .C(C1), .D(D1), .Z(F1));
  lut40017 \STATE_OUT/serial/counter_31__I_36_i32_3_lut_4_lut ( .A(A0), .B(B0), 
    .C(C0), .D(D0), .Z(F0));
  ffsre2 \STATE_OUT/serial/counter_i30 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \STATE_OUT/serial/counter_i31 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module lut40016 ( input A, B, C, D, output Z );

  LUT4 #("0xCCCA") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40017 ( input A, B, C, D, output Z );

  LUT4 #("0xF0E4") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module STATE_OUT_serial_SLICE_65 ( input DI1, DI0, D1, C1, B1, A1, D0, C0, B0, 
    A0, CLK, output Q0, Q1, F0, F1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  lut40018 \STATE_OUT/serial/counter_31__I_36_i29_3_lut_4_lut ( .A(A1), .B(B1), 
    .C(C1), .D(D1), .Z(F1));
  lut40019 \STATE_OUT/serial/counter_31__I_36_i30_3_lut_4_lut ( .A(A0), .B(B0), 
    .C(C0), .D(D0), .Z(F0));
  ffsre2 \STATE_OUT/serial/counter_i28 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \STATE_OUT/serial/counter_i29 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module lut40018 ( input A, B, C, D, output Z );

  LUT4 #("0xAAAC") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40019 ( input A, B, C, D, output Z );

  LUT4 #("0xFE10") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module STATE_OUT_serial_SLICE_67 ( input DI1, DI0, D1, C1, B1, A1, D0, C0, B0, 
    A0, CLK, output Q0, Q1, F0, F1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  lut40020 \STATE_OUT/serial/counter_31__I_36_i27_3_lut_4_lut ( .A(A1), .B(B1), 
    .C(C1), .D(D1), .Z(F1));
  lut40021 \STATE_OUT/serial/counter_31__I_36_i28_3_lut_4_lut ( .A(A0), .B(B0), 
    .C(C0), .D(D0), .Z(F0));
  ffsre2 \STATE_OUT/serial/counter_i26 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \STATE_OUT/serial/counter_i27 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module lut40020 ( input A, B, C, D, output Z );

  LUT4 #("0xCCD8") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40021 ( input A, B, C, D, output Z );

  LUT4 #("0xABA8") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module STATE_OUT_serial_SLICE_69 ( input DI1, DI0, D1, C1, B1, A1, D0, C0, B0, 
    A0, CLK, output Q0, Q1, F0, F1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  lut40018 \STATE_OUT/serial/counter_31__I_36_i25_3_lut_4_lut ( .A(A1), .B(B1), 
    .C(C1), .D(D1), .Z(F1));
  lut40022 \STATE_OUT/serial/counter_31__I_36_i26_3_lut_4_lut ( .A(A0), .B(B0), 
    .C(C0), .D(D0), .Z(F0));
  ffsre2 \STATE_OUT/serial/counter_i24 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \STATE_OUT/serial/counter_i25 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module lut40022 ( input A, B, C, D, output Z );

  LUT4 #("0xFE02") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module STATE_OUT_serial_SLICE_71 ( input DI1, DI0, D1, C1, B1, A1, D0, C0, B0, 
    A0, CLK, output Q0, Q1, F0, F1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  lut40023 \STATE_OUT/serial/counter_31__I_36_i23_3_lut_4_lut ( .A(A1), .B(B1), 
    .C(C1), .D(D1), .Z(F1));
  lut40024 \STATE_OUT/serial/counter_31__I_36_i24_3_lut_4_lut ( .A(A0), .B(B0), 
    .C(C0), .D(D0), .Z(F0));
  ffsre2 \STATE_OUT/serial/counter_i22 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \STATE_OUT/serial/counter_i23 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module lut40023 ( input A, B, C, D, output Z );

  LUT4 #("0xAAAC") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40024 ( input A, B, C, D, output Z );

  LUT4 #("0xF1E0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module STATE_OUT_serial_SLICE_73 ( input DI1, DI0, D1, C1, B1, A1, D0, C0, B0, 
    A0, CLK, output Q0, Q1, F0, F1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  lut40016 \STATE_OUT/serial/counter_31__I_36_i21_3_lut_4_lut ( .A(A1), .B(B1), 
    .C(C1), .D(D1), .Z(F1));
  lut40017 \STATE_OUT/serial/counter_31__I_36_i22_3_lut_4_lut ( .A(A0), .B(B0), 
    .C(C0), .D(D0), .Z(F0));
  ffsre2 \STATE_OUT/serial/counter_i20 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \STATE_OUT/serial/counter_i21 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module STATE_OUT_serial_SLICE_75 ( input DI1, DI0, D1, C1, B1, A1, D0, C0, B0, 
    A0, CLK, output Q0, Q1, F0, F1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  lut40025 \STATE_OUT/serial/counter_31__I_36_i19_3_lut_4_lut ( .A(A1), .B(B1), 
    .C(C1), .D(D1), .Z(F1));
  lut40026 \STATE_OUT/serial/counter_31__I_36_i20_3_lut_4_lut ( .A(A0), .B(B0), 
    .C(C0), .D(D0), .Z(F0));
  ffsre2 \STATE_OUT/serial/counter_i18 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \STATE_OUT/serial/counter_i19 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module lut40025 ( input A, B, C, D, output Z );

  LUT4 #("0xFE02") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40026 ( input A, B, C, D, output Z );

  LUT4 #("0xFE10") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module STATE_OUT_serial_SLICE_77 ( input DI1, DI0, D1, C1, B1, A1, D0, C0, B0, 
    A0, CLK, output Q0, Q1, F0, F1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  lut40027 \STATE_OUT/serial/counter_31__I_36_i17_3_lut_4_lut ( .A(A1), .B(B1), 
    .C(C1), .D(D1), .Z(F1));
  lut40026 \STATE_OUT/serial/counter_31__I_36_i18_3_lut_4_lut ( .A(A0), .B(B0), 
    .C(C0), .D(D0), .Z(F0));
  ffsre2 \STATE_OUT/serial/counter_i16 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \STATE_OUT/serial/counter_i17 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module lut40027 ( input A, B, C, D, output Z );

  LUT4 #("0xABA8") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module STATE_OUT_serial_SLICE_79 ( input DI1, DI0, D1, C1, B1, A1, D0, C0, B0, 
    A0, CLK, output Q0, Q1, F0, F1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  lut40028 \STATE_OUT/serial/counter_31__I_36_i15_3_lut_4_lut ( .A(A1), .B(B1), 
    .C(C1), .D(D1), .Z(F1));
  lut40017 \STATE_OUT/serial/counter_31__I_36_i16_3_lut_4_lut ( .A(A0), .B(B0), 
    .C(C0), .D(D0), .Z(F0));
  ffsre2 \STATE_OUT/serial/counter_i14 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \STATE_OUT/serial/counter_i15 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module lut40028 ( input A, B, C, D, output Z );

  LUT4 #("0xFE10") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module STATE_OUT_serial_SLICE_81 ( input DI1, DI0, D1, C1, B1, A1, D0, C0, B0, 
    A0, CLK, output Q0, Q1, F0, F1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  lut40027 \STATE_OUT/serial/counter_31__I_36_i13_3_lut_4_lut ( .A(A1), .B(B1), 
    .C(C1), .D(D1), .Z(F1));
  lut40029 \STATE_OUT/serial/counter_31__I_36_i14_3_lut_4_lut ( .A(A0), .B(B0), 
    .C(C0), .D(D0), .Z(F0));
  ffsre2 \STATE_OUT/serial/counter_i12 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \STATE_OUT/serial/counter_i13 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module lut40029 ( input A, B, C, D, output Z );

  LUT4 #("0xCCD8") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module STATE_OUT_serial_SLICE_83 ( input DI1, DI0, D1, C1, B1, A1, D0, C0, B0, 
    A0, CLK, output Q0, Q1, F0, F1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  lut40023 \STATE_OUT/serial/counter_31__I_36_i11_3_lut_4_lut ( .A(A1), .B(B1), 
    .C(C1), .D(D1), .Z(F1));
  lut40017 \STATE_OUT/serial/counter_31__I_36_i12_3_lut_4_lut ( .A(A0), .B(B0), 
    .C(C0), .D(D0), .Z(F0));
  ffsre2 \STATE_OUT/serial/counter_i10 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \STATE_OUT/serial/counter_i11 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module STATE_OUT_serial_SLICE_85 ( input DI1, DI0, D1, C1, B1, A1, D0, C0, B0, 
    A0, CLK, output Q0, Q1, F0, F1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  lut40023 \STATE_OUT/serial/counter_31__I_36_i9_3_lut_4_lut ( .A(A1), .B(B1), 
    .C(C1), .D(D1), .Z(F1));
  lut40030 \STATE_OUT/serial/counter_31__I_36_i10_3_lut_4_lut ( .A(A0), .B(B0), 
    .C(C0), .D(D0), .Z(F0));
  ffsre2 \STATE_OUT/serial/counter_i8 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \STATE_OUT/serial/counter_i9 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module lut40030 ( input A, B, C, D, output Z );

  LUT4 #("0xAAAC") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module STATE_OUT_serial_SLICE_87 ( input DI1, DI0, D1, C1, B1, A1, D0, C0, B0, 
    A0, CLK, output Q0, Q1, F0, F1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  lut40027 \STATE_OUT/serial/counter_31__I_36_i7_3_lut_4_lut ( .A(A1), .B(B1), 
    .C(C1), .D(D1), .Z(F1));
  lut40017 \STATE_OUT/serial/counter_31__I_36_i8_3_lut_4_lut ( .A(A0), .B(B0), 
    .C(C0), .D(D0), .Z(F0));
  ffsre2 \STATE_OUT/serial/counter_i6 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \STATE_OUT/serial/counter_i7 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module STATE_OUT_serial_SLICE_89 ( input DI1, DI0, D1, C1, B1, A1, D0, C0, B0, 
    A0, CLK, output Q0, Q1, F0, F1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  lut40031 \STATE_OUT/serial/counter_31__I_36_i5_3_lut_4_lut ( .A(A1), .B(B1), 
    .C(C1), .D(D1), .Z(F1));
  lut40032 \STATE_OUT/serial/counter_31__I_36_i6_3_lut_4_lut ( .A(A0), .B(B0), 
    .C(C0), .D(D0), .Z(F0));
  ffsre2 \STATE_OUT/serial/counter_i4 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \STATE_OUT/serial/counter_i5 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module lut40031 ( input A, B, C, D, output Z );

  LUT4 #("0xABA8") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40032 ( input A, B, C, D, output Z );

  LUT4 #("0xCCD8") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module STATE_OUT_serial_SLICE_91 ( input DI1, DI0, D1, C1, A1, D0, C0, A0, CLK, 
    output Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  lut40033 \STATE_OUT/serial/i1_2_lut_3_lut ( .A(A1), .B(GNDI), .C(C1), .D(D1), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40034 \STATE_OUT/serial/i1_2_lut_3_lut_adj_39 ( .A(A0), .B(GNDI), .C(C0), 
    .D(D0), .Z(F0));
  ffsre2 \STATE_OUT/serial/counter_i2 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \STATE_OUT/serial/counter_i3 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module lut40033 ( input A, B, C, D, output Z );

  LUT4 #("0xAAA0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40034 ( input A, B, C, D, output Z );

  LUT4 #("0xF0A0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module STATE_OUT_serial_SLICE_94 ( input DI1, DI0, D1, C1, A1, D0, B0, A0, CLK, 
    output Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  lut40035 \STATE_OUT.serial.SLICE_94_K1 ( .A(A1), .B(GNDI), .C(C1), .D(D1), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40036 \STATE_OUT.serial.SLICE_94_K0 ( .A(A0), .B(B0), .C(GNDI), .D(D0), 
    .Z(F0));
  ffsre2 \STATE_OUT/serial/aux_i2 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \STATE_OUT/serial/aux_i3 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module lut40035 ( input A, B, C, D, output Z );

  LUT4 #("0xFA0A") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40036 ( input A, B, C, D, output Z );

  LUT4 #("0xEE22") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module STATE_OUT_serial_SLICE_96 ( input DI1, DI0, D1, C1, B1, A1, D0, C0, B0, 
    A0, CLK, output Q0, Q1, F0, F1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  lut40037 \STATE_OUT.serial.SLICE_96_K1 ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40038 \STATE_OUT.serial.SLICE_96_K0 ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));
  ffsre2 \STATE_OUT/serial/aux_i0 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \STATE_OUT/serial/aux_i1 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module lut40037 ( input A, B, C, D, output Z );

  LUT4 #("0xF5E4") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40038 ( input A, B, C, D, output Z );

  LUT4 #("0xEC20") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module mainTimer_SLICE_100 ( input DI1, DI0, C1, A1, B0, A0, LSR, CLK, output 
    Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  lut40039 \mainTimer/i466_2_lut ( .A(A1), .B(GNDI), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40040 \mainTimer/i447_2_lut ( .A(A0), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));
  ffsre20011 \mainTimer/clkCont_i1 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre20011 \mainTimer/clkCont_i0 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module lut40039 ( input A, B, C, D, output Z );

  LUT4 #("0x5050") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40040 ( input A, B, C, D, output Z );

  LUT4 #("0x2222") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module mainTimer_SLICE_101 ( input DI1, DI0, D1, B1, C0, A0, LSR, CLK, output 
    Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  lut40041 \mainTimer/i470_2_lut ( .A(GNDI), .B(B1), .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40042 \mainTimer/i471_2_lut ( .A(A0), .B(GNDI), .C(C0), .D(GNDI), .Z(F0));
  ffsre20011 \mainTimer/clkCont_i16 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre20011 \mainTimer/clkCont_i17 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module lut40041 ( input A, B, C, D, output Z );

  LUT4 #("0x3300") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40042 ( input A, B, C, D, output Z );

  LUT4 #("0x5050") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module mainTimer_SLICE_103 ( input DI1, DI0, B1, A1, D0, A0, LSR, CLK, output 
    Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  lut40043 \mainTimer/i451_2_lut ( .A(A1), .B(B1), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40044 \mainTimer/i452_2_lut ( .A(A0), .B(GNDI), .C(GNDI), .D(D0), .Z(F0));
  ffsre20011 \mainTimer/clkCont_i14 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre20011 \mainTimer/clkCont_i15 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module lut40043 ( input A, B, C, D, output Z );

  LUT4 #("0x2222") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40044 ( input A, B, C, D, output Z );

  LUT4 #("0x5500") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module mainTimer_SLICE_105 ( input DI1, DI0, D1, A1, C0, B0, LSR, CLK, output 
    Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  lut40045 \mainTimer/i455_2_lut ( .A(A1), .B(GNDI), .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40046 \mainTimer/i469_2_lut ( .A(GNDI), .B(B0), .C(C0), .D(GNDI), .Z(F0));
  ffsre20011 \mainTimer/clkCont_i12 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre20011 \mainTimer/clkCont_i13 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module lut40045 ( input A, B, C, D, output Z );

  LUT4 #("0x00AA") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40046 ( input A, B, C, D, output Z );

  LUT4 #("0x0C0C") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module mainTimer_SLICE_107 ( input DI1, DI0, D1, B1, C0, A0, LSR, CLK, output 
    Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  lut40047 \mainTimer/i453_2_lut ( .A(GNDI), .B(B1), .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40048 \mainTimer/i454_2_lut ( .A(A0), .B(GNDI), .C(C0), .D(GNDI), .Z(F0));
  ffsre20011 \mainTimer/clkCont_i10 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre20011 \mainTimer/clkCont_i11 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module lut40047 ( input A, B, C, D, output Z );

  LUT4 #("0x00CC") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40048 ( input A, B, C, D, output Z );

  LUT4 #("0x0A0A") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module mainTimer_SLICE_109 ( input DI1, DI0, B1, A1, D0, C0, LSR, CLK, output 
    Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  lut40043 \mainTimer/i443_2_lut ( .A(A1), .B(B1), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40049 \mainTimer/i463_2_lut ( .A(GNDI), .B(GNDI), .C(C0), .D(D0), .Z(F0));
  ffsre20011 \mainTimer/clkCont_i8 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre20011 \mainTimer/clkCont_i9 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module lut40049 ( input A, B, C, D, output Z );

  LUT4 #("0x0F00") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module mainTimer_SLICE_111 ( input DI1, DI0, D1, B1, D0, C0, LSR, CLK, output 
    Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  lut40041 \mainTimer/i464_2_lut ( .A(GNDI), .B(B1), .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40049 \mainTimer/i445_2_lut ( .A(GNDI), .B(GNDI), .C(C0), .D(D0), .Z(F0));
  ffsre20011 \mainTimer/clkCont_i6 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre20011 \mainTimer/clkCont_i7 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module mainTimer_SLICE_113 ( input DI1, DI0, C1, B1, D0, A0, LSR, CLK, output 
    Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  lut40050 \mainTimer/i465_2_lut ( .A(GNDI), .B(B1), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40051 \mainTimer/i456_2_lut ( .A(A0), .B(GNDI), .C(GNDI), .D(D0), .Z(F0));
  ffsre20011 \mainTimer/clkCont_i4 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre20011 \mainTimer/clkCont_i5 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module lut40050 ( input A, B, C, D, output Z );

  LUT4 #("0x0C0C") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40051 ( input A, B, C, D, output Z );

  LUT4 #("0x00AA") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module mainTimer_SLICE_115 ( input DI1, DI0, C1, B1, B0, A0, LSR, CLK, output 
    Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  lut40050 \mainTimer/i444_2_lut ( .A(GNDI), .B(B1), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40040 \mainTimer/i474_2_lut ( .A(A0), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));
  ffsre20011 \mainTimer/clkCont_i2 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre20011 \mainTimer/clkCont_i3 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module SLICE_119 ( input D1, C1, B1, A1, D0, B0, output F0, F1 );
  wire   GNDI;

  lut40007 i1_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40052 KEY_STATUS_1__I_0_2_i3_2_lut( .A(GNDI), .B(B0), .C(GNDI), .D(D0), 
    .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40052 ( input A, B, C, D, output Z );

  LUT4 #("0xFFCC") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_120 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40053 i37_4_lut_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40054 i1_4_lut_adj_46( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40053 ( input A, B, C, D, output Z );

  LUT4 #("0xA8AA") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40054 ( input A, B, C, D, output Z );

  LUT4 #("0xF0F8") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_121 ( input D1, C1, B1, A1, D0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40055 i366_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40056 i3_4_lut_3_lut( .A(A0), .B(B0), .C(GNDI), .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40055 ( input A, B, C, D, output Z );

  LUT4 #("0xBF80") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40056 ( input A, B, C, D, output Z );

  LUT4 #("0xFFDD") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module mainTimer_SLICE_122 ( input C0, output F0 );
  wire   GNDI;

  lut40057 \mainTimer/EN_I_0_1_lut ( .A(GNDI), .B(GNDI), .C(C0), .D(GNDI), 
    .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (C0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40057 ( input A, B, C, D, output Z );

  LUT4 #("0x0F0F") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module Keyboard_SLICE_123 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, 
    F1 );

  lut40058 \Keyboard/i101_3_lut_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40059 \Keyboard/i93_3_lut_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40058 ( input A, B, C, D, output Z );

  LUT4 #("0xDF80") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40059 ( input A, B, C, D, output Z );

  LUT4 #("0xF780") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module Keyboard_SLICE_124 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, 
    F1 );

  lut40060 \Keyboard/i5_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40061 \Keyboard/i2_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40060 ( input A, B, C, D, output Z );

  LUT4 #("0xFFFE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40061 ( input A, B, C, D, output Z );

  LUT4 #("0xBFFF") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module Keyboard_SLICE_126 ( input D1, C1, B1, A1, D0, B0, output F0, F1 );
  wire   GNDI;

  lut40062 \Keyboard/i69_3_lut_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40063 \Keyboard/i1_2_lut ( .A(GNDI), .B(B0), .C(GNDI), .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40062 ( input A, B, C, D, output Z );

  LUT4 #("0xDC8C") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40063 ( input A, B, C, D, output Z );

  LUT4 #("0xCC00") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module Keyboard_SLICE_127 ( input DI1, D1, C1, B1, A1, D0, C0, B0, A0, LSR, 
    CLK, output Q1, F0, F1 );
  wire   VCCI, DI1_dly, CLK_dly, LSR_dly;

  lut40064 \Keyboard/i69_1_lut_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40065 \Keyboard/i77_3_lut_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  ffsre20066 \Keyboard/valid_i0_i2 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module lut40064 ( input A, B, C, D, output Z );

  LUT4 #("0x1D0F") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40065 ( input A, B, C, D, output Z );

  LUT4 #("0xD8F0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module ffsre20066 ( input D0, SP, CK, LSR, output Q );

  FD1P3XZ INST01( .D(D0), .SP(SP), .CK(CK), .SR(LSR), .Q(Q));
  defparam INST01.REGSET = "SET";
  defparam INST01.SRMODE = "CE_OVER_LSR";
endmodule

module SLICE_128 ( input D1, C1, B1, A1, D0, B0, output F0, F1 );
  wire   GNDI;

  lut40067 \Keyboard/i85_3_lut_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40068 EnabledDecoder_161_i4_2_lut( .A(GNDI), .B(B0), .C(GNDI), .D(D0), 
    .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40067 ( input A, B, C, D, output Z );

  LUT4 #("0xCAAA") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40068 ( input A, B, C, D, output Z );

  LUT4 #("0x3300") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module Keyboard_SLICE_130 ( input C1, B1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40069 \Keyboard/i1_2_lut_adj_44 ( .A(GNDI), .B(B1), .C(C1), .D(GNDI), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40070 \Keyboard/i61_3_lut_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40069 ( input A, B, C, D, output Z );

  LUT4 #("0xFCFC") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40070 ( input A, B, C, D, output Z );

  LUT4 #("0xAAE2") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module Keyboard_SLICE_133 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, 
    F1 );

  lut40071 \Keyboard/i31_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40072 \Keyboard/i18_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40071 ( input A, B, C, D, output Z );

  LUT4 #("0xFFFE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40072 ( input A, B, C, D, output Z );

  LUT4 #("0xFFFE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module Keyboard_SLICE_135 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, 
    F1 );

  lut40073 \Keyboard.i356_1_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40074 \Keyboard/i17_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40073 ( input A, B, C, D, output Z );

  LUT4 #("0x0001") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40074 ( input A, B, C, D, output Z );

  LUT4 #("0xFFFB") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module Keyboard_SLICE_137 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, 
    F1 );

  lut40075 \Keyboard/i30_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40076 \Keyboard/i21_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40075 ( input A, B, C, D, output Z );

  LUT4 #("0xFFFE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40076 ( input A, B, C, D, output Z );

  LUT4 #("0xFFFE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module Keyboard_SLICE_138 ( input DI1, D1, C1, B1, A1, D0, C0, B0, A0, CLK, 
    output Q1, F0, F1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly;

  lut40077 \Keyboard.SLICE_138_K1 ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40078 \Keyboard/i24_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  ffsre2 \Keyboard/valid_i0_i1 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
  endspecify

endmodule

module lut40077 ( input A, B, C, D, output Z );

  LUT4 #("0xFFFE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40078 ( input A, B, C, D, output Z );

  LUT4 #("0xFFFE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module Keyboard_SLICE_139 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, 
    F1 );

  lut40079 \Keyboard/i26_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40080 \Keyboard/i20_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40079 ( input A, B, C, D, output Z );

  LUT4 #("0xFFFE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40080 ( input A, B, C, D, output Z );

  LUT4 #("0xFFFE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module Keyboard_SLICE_140 ( input D1, C1, B1, A1, D0, C0, output F0, F1 );
  wire   GNDI;

  lut40081 \Keyboard/i23_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40082 \Keyboard/i6_2_lut ( .A(GNDI), .B(GNDI), .C(C0), .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40081 ( input A, B, C, D, output Z );

  LUT4 #("0xFFFE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40082 ( input A, B, C, D, output Z );

  LUT4 #("0xFFF0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_141 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40083 i364_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40084 Mux_39_i3_4_lut_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40083 ( input A, B, C, D, output Z );

  LUT4 #("0xFD08") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40084 ( input A, B, C, D, output Z );

  LUT4 #("0x6420") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_143 ( input D1, C1, B1, A1, D0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40085 Sreg_1__I_0_3_Mux_0_i3_4_lut_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40086 i1170_3_lut_3_lut( .A(A0), .B(B0), .C(GNDI), .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40085 ( input A, B, C, D, output Z );

  LUT4 #("0x30BB") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40086 ( input A, B, C, D, output Z );

  LUT4 #("0xDD88") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_145 ( input C1, A1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40087 i1_2_lut_adj_45( .A(A1), .B(GNDI), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40088 i1173_3_lut_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40087 ( input A, B, C, D, output Z );

  LUT4 #("0xA0A0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40088 ( input A, B, C, D, output Z );

  LUT4 #("0x0008") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module STATE_OUT_serial_SLICE_147 ( input D1, C1, B1, A1, B0, A0, output F0, 
    F1 );
  wire   GNDI;

  lut40089 \STATE_OUT/serial/i26_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40090 \STATE_OUT/serial/i6_2_lut ( .A(A0), .B(B0), .C(GNDI), .D(GNDI), 
    .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40089 ( input A, B, C, D, output Z );

  LUT4 #("0xFFFE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40090 ( input A, B, C, D, output Z );

  LUT4 #("0xEEEE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module STATE_OUT_serial_SLICE_149 ( input D1, C1, B1, A1, D0, C0, B0, A0, 
    output F0, F1 );

  lut40091 \STATE_OUT/serial/i18_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40092 \STATE_OUT/serial/i24_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40091 ( input A, B, C, D, output Z );

  LUT4 #("0xFFFE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40092 ( input A, B, C, D, output Z );

  LUT4 #("0xFFFE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module STATE_OUT_serial_SLICE_150 ( input D1, C1, B1, A1, D0, C0, B0, A0, 
    output F0, F1 );

  lut40093 \STATE_OUT/serial/i30_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40094 \STATE_OUT/serial/i21_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40093 ( input A, B, C, D, output Z );

  LUT4 #("0xFFFE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40094 ( input A, B, C, D, output Z );

  LUT4 #("0xFFFE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module STATE_OUT_serial_SLICE_152 ( input C1, B1, A1, D0, C0, B0, A0, output 
    F0, F1 );
  wire   GNDI;

  lut40095 \STATE_OUT/serial/aux_3__I_0_i4_3_lut ( .A(A1), .B(B1), .C(C1), 
    .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40096 \STATE_OUT/serial/i31_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40095 ( input A, B, C, D, output Z );

  LUT4 #("0xCACA") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40096 ( input A, B, C, D, output Z );

  LUT4 #("0xFFFE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module STATE_OUT_serial_SLICE_153 ( input D1, C1, B1, A1, D0, B0, A0, output 
    F0, F1 );
  wire   GNDI;

  lut40097 \STATE_OUT/serial/counter_31__N_183[0]_bdd_4_lut ( .A(A1), .B(B1), 
    .C(C1), .D(D1), .Z(F1));
  lut40098 \STATE_OUT/serial/aux_3__I_0_i3_3_lut ( .A(A0), .B(B0), .C(GNDI), 
    .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40097 ( input A, B, C, D, output Z );

  LUT4 #("0xEC64") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40098 ( input A, B, C, D, output Z );

  LUT4 #("0xDD88") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module mainTimer_SLICE_155 ( input D1, C1, B1, A1, D0, C0, A0, output F0, F1 );
  wire   GNDI;

  lut40099 \mainTimer/i6_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40100 \mainTimer/i1052_3_lut ( .A(A0), .B(GNDI), .C(C0), .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40099 ( input A, B, C, D, output Z );

  LUT4 #("0xBFFF") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40100 ( input A, B, C, D, output Z );

  LUT4 #("0xA000") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module mainTimer_SLICE_157 ( input DI1, D1, C1, B1, A1, D0, C0, B0, A0, LSR, 
    CLK, output Q1, F0, F1 );
  wire   VCCI, DI1_dly, CLK_dly, LSR_dly;

  lut40101 \mainTimer/i4_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40102 \mainTimer/i7_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  ffsre20011 \mainTimer/state ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module lut40101 ( input A, B, C, D, output Z );

  LUT4 #("0x8000") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40102 ( input A, B, C, D, output Z );

  LUT4 #("0xFFFE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module mainTimer_SLICE_158 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, 
    F1 );

  lut40103 \mainTimer/i1_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40104 \mainTimer/i8_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40103 ( input A, B, C, D, output Z );

  LUT4 #("0x0002") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40104 ( input A, B, C, D, output Z );

  LUT4 #("0xFFFE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module STATE_OUT_serial_SLICE_159 ( input D0, C0, B0, A0, output F0 );

  lut40105 \STATE_OUT/serial/aux_3__I_0_i1_4_lut ( .A(A0), .B(B0), .C(C0), 
    .D(D0), .Z(F0));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40105 ( input A, B, C, D, output Z );

  LUT4 #("0xCCFA") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module STATE_OUT_serial_SLICE_160 ( input DI1, D1, C1, B1, A1, D0, C0, B0, A0, 
    LSR, CLK, output Q1, F0, F1 );
  wire   VCCI, DI1_dly, CLK_dly, LSR_dly;

  lut40106 \STATE_OUT/serial/n1872_bdd_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40107 \STATE_OUT/serial/aux_3__I_0_i2_3_lut_4_lut ( .A(A0), .B(B0), 
    .C(C0), .D(D0), .Z(F0));
  ffsre2 \STATE_OUT/serial/status_out ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module lut40106 ( input A, B, C, D, output Z );

  LUT4 #("0xB9A8") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40107 ( input A, B, C, D, output Z );

  LUT4 #("0xCCA0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module STATE_OUT_SLICE_161 ( input D0, C0, B0, A0, output F0 );

  lut40108 \STATE_OUT/i3_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40108 ( input A, B, C, D, output Z );

  LUT4 #("0xFEFF") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module STATE_OUT_SLICE_162 ( input DI1, C1, B1, C0, A0, LSR, CLK, output Q1, 
    F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, LSR_dly;

  lut40109 \STATE_OUT/i1_2_lut ( .A(GNDI), .B(B1), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40110 \STATE_OUT/i680_2_lut ( .A(A0), .B(GNDI), .C(C0), .D(GNDI), .Z(F0));
  ffsre20111 \STATE_OUT/waiting_c ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module lut40109 ( input A, B, C, D, output Z );

  LUT4 #("0xC0C0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40110 ( input A, B, C, D, output Z );

  LUT4 #("0xA0A0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module ffsre20111 ( input D0, SP, CK, LSR, output Q );

  FD1P3XZ INST01( .D(D0), .SP(SP), .CK(CK), .SR(LSR), .Q(Q));
  defparam INST01.REGSET = "SET";
  defparam INST01.SRMODE = "ASYNC";
endmodule

module SLICE_163 ( output F0 );
  wire   GNDI;

  lut40112 i2( .A(GNDI), .B(GNDI), .C(GNDI), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
  endspecify

endmodule

module lut40112 ( input A, B, C, D, output Z );

  LUT4 #("0xFFFF") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module Keyboard_SLICE_167 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, 
    F1 );

  lut4 i53_3_lut_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40113 \Keyboard/i22_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40113 ( input A, B, C, D, output Z );

  LUT4 #("0xFFFD") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_169 ( input D1, B1, C0, A0, output F0, F1 );
  wire   GNDI;

  lut40114 i1_2_lut_adj_47( .A(GNDI), .B(B1), .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40110 i1_2_lut( .A(A0), .B(GNDI), .C(C0), .D(GNDI), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40114 ( input A, B, C, D, output Z );

  LUT4 #("0x00CC") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_171 ( output F0 );
  wire   GNDI;

  lut40115 i1( .A(GNDI), .B(GNDI), .C(GNDI), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
  endspecify

endmodule

module lut40115 ( input A, B, C, D, output Z );

  LUT4 #("0x0000") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module STATE_OUT_SLICE_174 ( input DI1, D1, C1, B1, A1, C0, A0, CLK, output Q1, 
    F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly;

  lut40116 \STATE_OUT/serial/i636_4_lut_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40117 \STATE_OUT/i1_2_lut_adj_40 ( .A(A0), .B(GNDI), .C(C0), .D(GNDI), 
    .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \STATE_OUT/init_c ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
  endspecify

endmodule

module lut40116 ( input A, B, C, D, output Z );

  LUT4 #("0xAF20") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40117 ( input A, B, C, D, output Z );

  LUT4 #("0x5050") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module STATE_OUT_SLICE_175 ( input D0, B0, output F0 );
  wire   GNDI;

  lut40118 \STATE_OUT/i1_2_lut_adj_41 ( .A(GNDI), .B(B0), .C(GNDI), .D(D0), 
    .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40118 ( input A, B, C, D, output Z );

  LUT4 #("0x00CC") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module STATE_OUT_SLICE_176 ( input D1, C1, D0, A0, output F0, F1 );
  wire   GNDI;

  lut40119 \STATE_OUT/i1_2_lut_adj_43 ( .A(GNDI), .B(GNDI), .C(C1), .D(D1), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40120 \STATE_OUT/i1_2_lut_adj_42 ( .A(A0), .B(GNDI), .C(GNDI), .D(D0), 
    .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40119 ( input A, B, C, D, output Z );

  LUT4 #("0xFFF0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40120 ( input A, B, C, D, output Z );

  LUT4 #("0x00AA") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module STATE_OUT_serial_SLICE_178 ( input D1, C1, B1, A1, B0, A0, output F0, 
    F1 );
  wire   GNDI;

  lut40121 \STATE_OUT/serial/i20_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40122 \STATE_OUT/serial/i476_2_lut ( .A(A0), .B(B0), .C(GNDI), .D(GNDI), 
    .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40121 ( input A, B, C, D, output Z );

  LUT4 #("0xFFFE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40122 ( input A, B, C, D, output Z );

  LUT4 #("0x4444") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module STATE_OUT_serial_SLICE_179 ( input D1, B1, D0, C0, output F0, F1 );
  wire   GNDI;

  lut40047 \STATE_OUT/serial/i494_2_lut ( .A(GNDI), .B(B1), .C(GNDI), .D(D1), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40049 \STATE_OUT/serial/i493_2_lut ( .A(GNDI), .B(GNDI), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module STATE_OUT_serial_SLICE_181 ( input D1, C1, B1, A1, C0, A0, output F0, 
    F1 );
  wire   GNDI;

  lut40123 \STATE_OUT/serial/i22_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40048 \STATE_OUT/serial/i491_2_lut ( .A(A0), .B(GNDI), .C(C0), .D(GNDI), 
    .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40123 ( input A, B, C, D, output Z );

  LUT4 #("0xFFFE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module STATE_OUT_serial_SLICE_182 ( input C1, B1, C0, B0, output F0, F1 );
  wire   GNDI;

  lut40050 \STATE_OUT/serial/i489_2_lut ( .A(GNDI), .B(B1), .C(C1), .D(GNDI), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40124 \STATE_OUT/serial/i492_2_lut ( .A(GNDI), .B(B0), .C(C0), .D(GNDI), 
    .Z(F0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40124 ( input A, B, C, D, output Z );

  LUT4 #("0x3030") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module STATE_OUT_serial_SLICE_184 ( input C1, B1, C0, A0, output F0, F1 );
  wire   GNDI;

  lut40125 \STATE_OUT/serial/i487_2_lut ( .A(GNDI), .B(B1), .C(C1), .D(GNDI), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40048 \STATE_OUT/serial/i490_2_lut ( .A(A0), .B(GNDI), .C(C0), .D(GNDI), 
    .Z(F0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40125 ( input A, B, C, D, output Z );

  LUT4 #("0x3030") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module STATE_OUT_serial_SLICE_185 ( input DI1, C1, B0, CE, CLK, output Q1, F0, 
    F1 );
  wire   GNDI, DI1_dly, CLK_dly, CE_dly;

  lut40126 \STATE_OUT.serial.SLICE_185_K1 ( .A(GNDI), .B(GNDI), .C(C1), 
    .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40127 \STATE_OUT/serial/i634_1_lut ( .A(GNDI), .B(B0), .C(GNDI), .D(GNDI), 
    .Z(F0));
  ffsre2 \STATE_OUT/serial/status_send ( .D0(DI1_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module lut40126 ( input A, B, C, D, output Z );

  LUT4 #("0xF0F0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40127 ( input A, B, C, D, output Z );

  LUT4 #("0x3333") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module STATE_OUT_serial_SLICE_187 ( input C1, B1, D0, B0, output F0, F1 );
  wire   GNDI;

  lut40050 \STATE_OUT/serial/i485_2_lut ( .A(GNDI), .B(B1), .C(C1), .D(GNDI), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40128 \STATE_OUT/serial/i488_2_lut ( .A(GNDI), .B(B0), .C(GNDI), .D(D0), 
    .Z(F0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40128 ( input A, B, C, D, output Z );

  LUT4 #("0x00CC") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module STATE_OUT_serial_SLICE_189 ( input D1, C1, B1, A1, D0, B0, output F0, 
    F1 );
  wire   GNDI;

  lut40129 \STATE_OUT/serial/i23_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40128 \STATE_OUT/serial/i486_2_lut ( .A(GNDI), .B(B0), .C(GNDI), .D(D0), 
    .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40129 ( input A, B, C, D, output Z );

  LUT4 #("0xFFFE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module STATE_OUT_serial_SLICE_194 ( input C1, B1, D0, C0, B0, A0, output F0, 
    F1 );
  wire   GNDI;

  lut40050 \STATE_OUT/serial/i478_2_lut ( .A(GNDI), .B(B1), .C(C1), .D(GNDI), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40130 \STATE_OUT/serial/i17_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40130 ( input A, B, C, D, output Z );

  LUT4 #("0xFFFE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module STATE_OUT_serial_SLICE_195 ( input D1, C1, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40131 \STATE_OUT/serial/i1_2_lut ( .A(GNDI), .B(GNDI), .C(C1), .D(D1), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40132 \STATE_OUT/serial/i1309_2_lut ( .A(A0), .B(B0), .C(GNDI), .D(GNDI), 
    .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40131 ( input A, B, C, D, output Z );

  LUT4 #("0xF0FF") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40132 ( input A, B, C, D, output Z );

  LUT4 #("0x1111") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module STATE_OUT_serial_SLICE_198 ( input D1, A1, C0, A0, output F0, F1 );
  wire   GNDI;

  lut40045 \STATE_OUT/serial/i480_2_lut ( .A(A1), .B(GNDI), .C(GNDI), .D(D1), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40042 \STATE_OUT/serial/i477_2_lut ( .A(A0), .B(GNDI), .C(C0), .D(GNDI), 
    .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module STATE_OUT_serial_SLICE_200 ( input D1, A1, C0, A0, output F0, F1 );
  wire   GNDI;

  lut40045 \STATE_OUT/serial/i496_2_lut ( .A(A1), .B(GNDI), .C(GNDI), .D(D1), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40042 \STATE_OUT/serial/i479_2_lut ( .A(A0), .B(GNDI), .C(C0), .D(GNDI), 
    .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module STATE_OUT_serial_SLICE_202 ( input B1, A1, D0, B0, output F0, F1 );
  wire   GNDI;

  lut40133 \STATE_OUT/serial/i482_2_lut ( .A(A1), .B(B1), .C(GNDI), .D(GNDI), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40128 \STATE_OUT/serial/i495_2_lut ( .A(GNDI), .B(B0), .C(GNDI), .D(D0), 
    .Z(F0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40133 ( input A, B, C, D, output Z );

  LUT4 #("0x4444") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module STATE_OUT_serial_SLICE_204 ( input D1, C1, C0, B0, output F0, F1 );
  wire   GNDI;

  lut40134 \STATE_OUT/serial/i498_2_lut ( .A(GNDI), .B(GNDI), .C(C1), .D(D1), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40046 \STATE_OUT/serial/i481_2_lut ( .A(GNDI), .B(B0), .C(C0), .D(GNDI), 
    .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40134 ( input A, B, C, D, output Z );

  LUT4 #("0x00F0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module STATE_OUT_serial_SLICE_206 ( input D1, C1, C0, A0, output F0, F1 );
  wire   GNDI;

  lut40134 \STATE_OUT/serial/i500_2_lut ( .A(GNDI), .B(GNDI), .C(C1), .D(D1), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40042 \STATE_OUT/serial/i497_2_lut ( .A(A0), .B(GNDI), .C(C0), .D(GNDI), 
    .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module STATE_OUT_serial_SLICE_208 ( input D1, B1, C0, A0, output F0, F1 );
  wire   GNDI;

  lut40047 \STATE_OUT/serial/i502_2_lut ( .A(GNDI), .B(B1), .C(GNDI), .D(D1), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40048 \STATE_OUT/serial/i499_2_lut ( .A(A0), .B(GNDI), .C(C0), .D(GNDI), 
    .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module STATE_OUT_serial_SLICE_210 ( input D1, A1, D0, C0, output F0, F1 );
  wire   GNDI;

  lut40135 \STATE_OUT/serial/i503_2_lut ( .A(A1), .B(GNDI), .C(GNDI), .D(D1), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40136 \STATE_OUT/serial/i501_2_lut ( .A(GNDI), .B(GNDI), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40135 ( input A, B, C, D, output Z );

  LUT4 #("0x5500") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40136 ( input A, B, C, D, output Z );

  LUT4 #("0x00F0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module STATE_OUT_serial_SLICE_212 ( input D1, C1, D0, B0, output F0, F1 );
  wire   GNDI;

  lut40137 \STATE_OUT/serial/i483_2_lut ( .A(GNDI), .B(GNDI), .C(C1), .D(D1), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40128 \STATE_OUT/serial/i484_2_lut ( .A(GNDI), .B(B0), .C(GNDI), .D(D0), 
    .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40137 ( input A, B, C, D, output Z );

  LUT4 #("0x0F00") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module mainTimer_SLICE_217 ( input C0, A0, output F0 );
  wire   GNDI;

  lut40138 \mainTimer/i1_2_lut ( .A(A0), .B(GNDI), .C(C0), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40138 ( input A, B, C, D, output Z );

  LUT4 #("0xFAFA") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module OSCInst1 ( input CLKLFPU, CLKLFEN, output CLKLF );
  wire   GNDI;

  LSOSC_CORE_B OSCInst1( .CLKLFPU(CLKLFPU), .CLKLFEN(CLKLFEN), .TRIM9(GNDI), 
    .TRIM8(GNDI), .TRIM7(GNDI), .TRIM6(GNDI), .TRIM5(GNDI), .TRIM4(GNDI), 
    .TRIM3(GNDI), .TRIM2(GNDI), .TRIM1(GNDI), .TRIM0(GNDI), .CLKLF(CLKLF));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
  endspecify

endmodule

module LSOSC_CORE_B ( input CLKLFPU, CLKLFEN, TRIM9, TRIM8, TRIM7, TRIM6, 
    TRIM5, TRIM4, TRIM3, TRIM2, TRIM1, TRIM0, output CLKLF );

  LSOSC_CORE INST10( .CLKLFPU(CLKLFPU), .CLKLFEN(CLKLFEN), .TRIM9(TRIM9), 
    .TRIM8(TRIM8), .TRIM7(TRIM7), .TRIM6(TRIM6), .TRIM5(TRIM5), .TRIM4(TRIM4), 
    .TRIM3(TRIM3), .TRIM2(TRIM2), .TRIM1(TRIM1), .TRIM0(TRIM0), .CLKLF(CLKLF));
  defparam INST10.FABRIC_TRIME = "DISABLE";
endmodule

module STATUS_OUT ( input PADDO, output STATUS_OUT );
  wire   VCCI;

  BB_B_B \STATUS_OUT_pad.bb_inst ( .T_N(VCCI), .I(PADDO), .O(), .B(STATUS_OUT));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (PADDO => STATUS_OUT) = (0:0:0,0:0:0);
  endspecify

endmodule

module BB_B_B ( input T_N, I, output O, inout B );

  BB_B INST10( .T_N(T_N), .I(I), .O(O), .B(B));
endmodule

module SIREN_OUT ( input PADDO, output SIREN_OUT );
  wire   VCCI;

  BB_B_B \SIREN_OUT_pad.bb_inst ( .T_N(VCCI), .I(PADDO), .O(), .B(SIREN_OUT));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (PADDO => SIREN_OUT) = (0:0:0,0:0:0);
  endspecify

endmodule

module STATUS_SEND ( input PADDO, output STATUS_SEND );
  wire   VCCI;

  BB_B_B \STATUS_SEND_pad.bb_inst ( .T_N(VCCI), .I(PADDO), .O(), 
    .B(STATUS_SEND));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (PADDO => STATUS_SEND) = (0:0:0,0:0:0);
  endspecify

endmodule

module SERCLK_OUT ( input PADDO, output SERCLK_OUT );
  wire   VCCI;

  BB_B_B \SERCLK_OUT_pad.bb_inst ( .T_N(VCCI), .I(PADDO), .O(), .B(SERCLK_OUT));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (PADDO => SERCLK_OUT) = (0:0:0,0:0:0);
  endspecify

endmodule

module RESET_OUT ( input PADDO, output RESET_OUT );
  wire   VCCI;

  BB_B_B \RESET_OUT_pad.bb_inst ( .T_N(VCCI), .I(PADDO), .O(), .B(RESET_OUT));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (PADDO => RESET_OUT) = (0:0:0,0:0:0);
  endspecify

endmodule

module Sreg_1_ ( input PADDO, output Sreg1 );
  wire   VCCI;

  BB_B_B \Sreg_pad[1].bb_inst ( .T_N(VCCI), .I(PADDO), .O(), .B(Sreg1));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (PADDO => Sreg1) = (0:0:0,0:0:0);
  endspecify

endmodule

module Sreg_0_ ( input PADDO, output Sreg0 );
  wire   VCCI;

  BB_B_B \Sreg_pad[0].bb_inst ( .T_N(VCCI), .I(PADDO), .O(), .B(Sreg0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (PADDO => Sreg0) = (0:0:0,0:0:0);
  endspecify

endmodule

module KEY_STATUS_1_ ( input PADDO, output KEYSTATUS1 );
  wire   VCCI;

  BB_B_B \KEY_STATUS_pad[1].bb_inst ( .T_N(VCCI), .I(PADDO), .O(), 
    .B(KEYSTATUS1));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (PADDO => KEYSTATUS1) = (0:0:0,0:0:0);
  endspecify

endmodule

module KEY_STATUS_0_ ( input PADDO, output KEYSTATUS0 );
  wire   VCCI;

  BB_B_B \KEY_STATUS_pad[0].bb_inst ( .T_N(VCCI), .I(PADDO), .O(), 
    .B(KEYSTATUS0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (PADDO => KEYSTATUS0) = (0:0:0,0:0:0);
  endspecify

endmodule

module DEBUG_KEY_1_ ( input PADDO, output DEBUGKEY1 );
  wire   VCCI;

  BB_B_B \DEBUG_KEY_pad[1].bb_inst ( .T_N(VCCI), .I(PADDO), .O(), 
    .B(DEBUGKEY1));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (PADDO => DEBUGKEY1) = (0:0:0,0:0:0);
  endspecify

endmodule

module DEBUG_KEY_0_ ( input PADDO, output DEBUGKEY0 );
  wire   VCCI;

  BB_B_B \DEBUG_KEY_pad[0].bb_inst ( .T_N(VCCI), .I(PADDO), .O(), 
    .B(DEBUGKEY0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (PADDO => DEBUGKEY0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SENSOR1_IN ( output PADDI, input SENSOR1_IN );
  wire   GNDI;

  BB_B_B \SENSOR1_IN_pad.bb_inst ( .T_N(GNDI), .I(GNDI), .O(PADDI), 
    .B(SENSOR1_IN));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (SENSOR1_IN => PADDI) = (0:0:0,0:0:0);
  endspecify

endmodule

module SENSOR2_IN ( output PADDI, input SENSOR2_IN );
  wire   GNDI;

  BB_B_B \SENSOR2_IN_pad.bb_inst ( .T_N(GNDI), .I(GNDI), .O(PADDI), 
    .B(SENSOR2_IN));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (SENSOR2_IN => PADDI) = (0:0:0,0:0:0);
  endspecify

endmodule

module KB_IN_1_ ( output PADDI, input KBIN1 );
  wire   GNDI;

  BB_B_B \KB_IN_pad[1].bb_inst ( .T_N(GNDI), .I(GNDI), .O(PADDI), .B(KBIN1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (KBIN1 => PADDI) = (0:0:0,0:0:0);
  endspecify

endmodule

module KB_IN_0_ ( output PADDI, input KBIN0 );
  wire   GNDI;

  BB_B_B \KB_IN_pad[0].bb_inst ( .T_N(GNDI), .I(GNDI), .O(PADDI), .B(KBIN0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (KBIN0 => PADDI) = (0:0:0,0:0:0);
  endspecify

endmodule

module KB_RECV ( output PADDI, input KB_RECV );
  wire   GNDI;

  BB_B_B \KB_RECV_pad.bb_inst ( .T_N(GNDI), .I(GNDI), .O(PADDI), .B(KB_RECV));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (KB_RECV => PADDI) = (0:0:0,0:0:0);
  endspecify

endmodule

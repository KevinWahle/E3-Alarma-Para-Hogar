
// Verilog netlist produced by program backanno, Version Radiant Software (64-bit) 3.0.0.24.1

// backanno -o ModuloAlarmaTP2_impl_1_vo.vo -sp High-Performance_1.2V -w -neg -gui ModuloAlarmaTP2_impl_1.udb 
// Netlist created on Wed Nov 17 23:54:13 2021
// Netlist written on Wed Nov 17 23:54:17 2021
// Design is for device iCE40UP5K
// Design is for package SG48
// Design is for performance grade High-Performance_1.2V

`timescale 1 ns / 1 ps

module MainModule ( STATUS_OUT, SIREN_OUT, STATUS_SEND, SERCLK_OUT, Sreg, 
                    KEY_STATUS, DEBUG_KEY, SENSOR1_IN, SENSOR2_IN, KB_IN, 
                    KB_RECV );
  input  SENSOR1_IN, SENSOR2_IN;
  input  [1:0] KB_IN;
  input  KB_RECV;
  output STATUS_OUT, SIREN_OUT, STATUS_SEND, SERCLK_OUT;
  output [1:0] Sreg;
  output [1:0] KEY_STATUS;
  output [1:0] DEBUG_KEY;
  wire   \Keyboard.n133[30] , \Keyboard.n133[29] , \Keyboard.n2326 , 
         \Keyboard.counter[30] , \Keyboard.n827 , \Keyboard.counter[29] , 
         \Keyboard.n351 , KB_RECV_c, \Keyboard.n829 , \Keyboard.n133[10] , 
         \Keyboard.n133[9] , \Keyboard.n2296 , \Keyboard.counter[10] , 
         \Keyboard.n807 , \Keyboard.counter[9] , \Keyboard.n809 , 
         \Keyboard.n133[8] , \Keyboard.n133[7] , \Keyboard.n2293 , 
         \Keyboard.counter[8] , \Keyboard.n805 , \Keyboard.counter[7] , 
         \Keyboard.n133[28] , \Keyboard.n133[27] , \Keyboard.n2323 , 
         \Keyboard.counter[28] , \Keyboard.n825 , \Keyboard.counter[27] , 
         \Keyboard.n133[6] , \Keyboard.n133[5] , \Keyboard.n2290 , 
         \Keyboard.counter[6] , \Keyboard.n803 , \Keyboard.counter[5] , 
         \Keyboard.n133[26] , \Keyboard.n133[25] , \Keyboard.n2320 , 
         \Keyboard.counter[26] , \Keyboard.n823 , \Keyboard.counter[25] , 
         \Keyboard.n133[4] , \Keyboard.n133[3] , \Keyboard.n2287 , 
         \Keyboard.counter[4] , \Keyboard.n801 , \Keyboard.counter[3] , 
         \Keyboard.n133[24] , \Keyboard.n133[23] , \Keyboard.n2317 , 
         \Keyboard.counter[24] , \Keyboard.n821 , \Keyboard.counter[23] , 
         \Keyboard.n133[2] , \Keyboard.n133[1] , \Keyboard.n2284 , 
         \Keyboard.counter[2] , \Keyboard.n799 , DEBUG_KEY_c_1, 
         \Keyboard.n133[0] , \Keyboard.n2248 , DEBUG_KEY_c_0, VCC_net, 
         \Keyboard.n133[22] , \Keyboard.n133[21] , \Keyboard.n2314 , 
         \Keyboard.counter[22] , \Keyboard.n819 , \Keyboard.counter[21] , 
         \Keyboard.n133[20] , \Keyboard.n133[19] , \Keyboard.n2311 , 
         \Keyboard.counter[20] , \Keyboard.n817 , \Keyboard.counter[19] , 
         \Keyboard.n133[18] , \Keyboard.n133[17] , \Keyboard.n2308 , 
         \Keyboard.counter[18] , \Keyboard.n815 , \Keyboard.counter[17] , 
         \Keyboard.n133[16] , \Keyboard.n133[15] , \Keyboard.n2305 , 
         \Keyboard.counter[16] , \Keyboard.n813 , \Keyboard.counter[15] , 
         \Keyboard.n133[14] , \Keyboard.n133[13] , \Keyboard.n2302 , 
         \Keyboard.counter[14] , \Keyboard.n811 , \Keyboard.counter[13] , 
         \Keyboard.n133[12] , \Keyboard.n133[11] , \Keyboard.n2299 , 
         \Keyboard.counter[12] , \Keyboard.counter[11] , \Keyboard.n133[31] , 
         \Keyboard.n2329 , \Keyboard.counter[31] , \STATE_OUT.serial.n2236 , 
         \STATE_OUT.serial.counter_31__N_120[26] , \STATE_OUT.serial.n790 , 
         \STATE_OUT.serial.counter_31__N_120[25] , 
         \STATE_OUT.serial.counter_31__N_152[25] , 
         \STATE_OUT.serial.counter_31__N_152[26] , \STATE_OUT.serial.n792 , 
         \STATE_OUT.serial.n2233 , \STATE_OUT.serial.counter_31__N_120[24] , 
         \STATE_OUT.serial.n788 , \STATE_OUT.serial.counter_31__N_120[23] , 
         \STATE_OUT.serial.counter_31__N_152[23] , 
         \STATE_OUT.serial.counter_31__N_152[24] , \STATE_OUT.serial.n2203 , 
         \STATE_OUT.serial.counter_31__N_120[4] , \STATE_OUT.serial.n768 , 
         \STATE_OUT.counter_31__N_120[3] , 
         \STATE_OUT.serial.counter_31__N_152[3] , 
         \STATE_OUT.serial.counter_31__N_152[4] , \STATE_OUT.serial.n770 , 
         \STATE_OUT.serial.n2200 , \STATE_OUT.counter_31__N_120[2] , 
         \STATE_OUT.serial.n766 , \STATE_OUT.counter_31__N_120[1] , 
         \STATE_OUT.serial.counter_31__N_182[1] , 
         \STATE_OUT.serial.counter_31__N_152[2] , \STATE_OUT.serial.n2230 , 
         \STATE_OUT.serial.counter_31__N_120[22] , \STATE_OUT.serial.n786 , 
         \STATE_OUT.serial.counter_31__N_120[21] , 
         \STATE_OUT.serial.counter_31__N_152[21] , 
         \STATE_OUT.serial.counter_31__N_152[22] , \STATE_OUT.serial.n2194 , 
         \STATE_OUT.counter_31__N_120[0] , 
         \STATE_OUT.serial.counter_31__N_182[0] , \STATE_OUT.serial.n2227 , 
         \STATE_OUT.serial.counter_31__N_120[20] , \STATE_OUT.serial.n784 , 
         \STATE_OUT.serial.counter_31__N_120[19] , 
         \STATE_OUT.serial.counter_31__N_152[19] , 
         \STATE_OUT.serial.counter_31__N_152[20] , \STATE_OUT.serial.n2224 , 
         \STATE_OUT.serial.counter_31__N_120[18] , \STATE_OUT.serial.n782 , 
         \STATE_OUT.serial.counter_31__N_120[17] , 
         \STATE_OUT.serial.counter_31__N_152[17] , 
         \STATE_OUT.serial.counter_31__N_152[18] , \STATE_OUT.serial.n2221 , 
         \STATE_OUT.serial.counter_31__N_120[16] , \STATE_OUT.serial.n780 , 
         \STATE_OUT.serial.counter_31__N_120[15] , 
         \STATE_OUT.serial.counter_31__N_152[15] , 
         \STATE_OUT.serial.counter_31__N_152[16] , \STATE_OUT.serial.n2218 , 
         \STATE_OUT.serial.counter_31__N_120[14] , \STATE_OUT.serial.n778 , 
         \STATE_OUT.serial.counter_31__N_120[13] , 
         \STATE_OUT.serial.counter_31__N_152[13] , 
         \STATE_OUT.serial.counter_31__N_152[14] , \STATE_OUT.serial.n2215 , 
         \STATE_OUT.serial.counter_31__N_120[12] , \STATE_OUT.serial.n776 , 
         \STATE_OUT.serial.counter_31__N_120[11] , 
         \STATE_OUT.serial.counter_31__N_152[11] , 
         \STATE_OUT.serial.counter_31__N_152[12] , \STATE_OUT.serial.n2212 , 
         \STATE_OUT.serial.counter_31__N_120[10] , \STATE_OUT.serial.n774 , 
         \STATE_OUT.serial.counter_31__N_120[9] , 
         \STATE_OUT.serial.counter_31__N_152[9] , 
         \STATE_OUT.serial.counter_31__N_152[10] , \STATE_OUT.serial.n2209 , 
         \STATE_OUT.serial.counter_31__N_120[8] , \STATE_OUT.serial.n772 , 
         \STATE_OUT.serial.counter_31__N_120[7] , 
         \STATE_OUT.serial.counter_31__N_152[7] , 
         \STATE_OUT.serial.counter_31__N_152[8] , \STATE_OUT.serial.n2206 , 
         \STATE_OUT.serial.counter_31__N_120[6] , 
         \STATE_OUT.serial.counter_31__N_120[5] , 
         \STATE_OUT.serial.counter_31__N_152[5] , 
         \STATE_OUT.serial.counter_31__N_152[6] , \STATE_OUT.serial.n2245 , 
         \STATE_OUT.serial.n796 , \STATE_OUT.serial.counter_31__N_120[31] , 
         \STATE_OUT.serial.counter_31__N_152[31] , \STATE_OUT.serial.n2242 , 
         \STATE_OUT.serial.counter_31__N_120[30] , \STATE_OUT.serial.n794 , 
         \STATE_OUT.serial.counter_31__N_120[29] , 
         \STATE_OUT.serial.counter_31__N_152[29] , 
         \STATE_OUT.serial.counter_31__N_152[30] , \STATE_OUT.serial.n2239 , 
         \STATE_OUT.serial.counter_31__N_120[28] , 
         \STATE_OUT.serial.counter_31__N_120[27] , 
         \STATE_OUT.serial.counter_31__N_152[27] , 
         \STATE_OUT.serial.counter_31__N_152[28] , \mainTimer.n2263 , 
         \mainTimer.clkCont[8] , \mainTimer.n753 , \mainTimer.clkCont[7] , 
         \mainTimer.clkCont_17__N_40[7] , \mainTimer.clkCont_17__N_40[8] , 
         \mainTimer.n755 , \mainTimer.n2269 , \mainTimer.clkCont[12] , 
         \mainTimer.n757 , \mainTimer.clkCont[11] , 
         \mainTimer.clkCont_17__N_40[11] , \mainTimer.clkCont_17__N_40[12] , 
         \mainTimer.n759 , \mainTimer.n2260 , \mainTimer.clkCont[6] , 
         \mainTimer.n751 , \mainTimer.clkCont[5] , 
         \mainTimer.clkCont_17__N_40[5] , \mainTimer.clkCont_17__N_40[6] , 
         \mainTimer.n2278 , \mainTimer.n763 , \mainTimer.clkCont[17] , 
         \mainTimer.clkCont_17__N_40[17] , \mainTimer.n2275 , 
         \mainTimer.clkCont[16] , \mainTimer.n761 , \mainTimer.clkCont[15] , 
         \mainTimer.clkCont_17__N_40[15] , \mainTimer.clkCont_17__N_40[16] , 
         \mainTimer.n2272 , \mainTimer.clkCont[14] , \mainTimer.clkCont[13] , 
         \mainTimer.clkCont_17__N_40[13] , \mainTimer.clkCont_17__N_40[14] , 
         \mainTimer.n2257 , \mainTimer.clkCont[4] , \mainTimer.n749 , 
         \mainTimer.clkCont[3] , \mainTimer.clkCont_17__N_40[3] , 
         \mainTimer.clkCont_17__N_40[4] , \mainTimer.n2251 , 
         \mainTimer.clkCont[0] , \mainTimer.clkCont_17__N_40[0] , 
         \mainTimer.n747 , \mainTimer.n2254 , \mainTimer.clkCont[2] , 
         \mainTimer.clkCont[1] , \mainTimer.clkCont_17__N_40[1] , 
         \mainTimer.clkCont_17__N_40[2] , \mainTimer.n2266 , 
         \mainTimer.clkCont[10] , \mainTimer.clkCont[9] , 
         \mainTimer.clkCont_17__N_40[9] , \mainTimer.clkCont_17__N_40[10] , 
         \Keyboard.actualKey_0__1__N_238[1]$n6 , 
         \Keyboard.actualKey_0__1__N_238[0]$n0 , \Keyboard.actualKey[3][1] , 
         KB_IN_c_1, \Keyboard.n35 , \Keyboard.actualKey[3][0] , KB_IN_c_0, 
         \Keyboard.actualKey_0__1__N_232[0]$n2 , 
         \Keyboard.actualKey_0__1__N_232[1]$n1 , \Keyboard.actualKey[0][0] , 
         \Keyboard.n5 , \Keyboard.actualKey[0][1] , 
         \Keyboard.actualKey_0__1__N_234[0] , 
         \Keyboard.actualKey_0__1__N_234[1]$n3 , \Keyboard.actualKey[1][0] , 
         \Keyboard.n5_adj_274 , \Keyboard.actualKey[1][1] , 
         \Keyboard.actualKey_0__1__N_236[0]$n5 , 
         \Keyboard.actualKey_0__1__N_236[1]$n4 , \Keyboard.actualKey[2][0] , 
         \Keyboard.actualKey[2][1] , \Snext[1]$n9 , \Snext[0]$n8 , n7, 
         TIMER_EN_N_11, TIME_OUT, n1194, \Snext_1__N_2[0] , \Snext[0] , n287, 
         SERCLK_OUT_c, Sreg_c_0, Sreg_c_1, \STATE_OUT.n21[1] , 
         \STATE_OUT.n21[0] , \STATE_OUT.cont[1] , \STATE_OUT.waiting , 
         \STATE_OUT.cont[0] , \STATE_OUT.state_send_N_66 , \STATE_OUT.n21[3] , 
         \STATE_OUT.n21[2] , \STATE_OUT.cont[3] , \STATE_OUT.cont[2] , 
         \STATE_OUT.n729 , \STATE_OUT.serial.counter_31__N_83[1] , 
         \STATE_OUT.serial.counter_31__N_83[0] , \STATE_OUT.n63 , 
         \STATE_OUT.init , \STATE_OUT.counter[0] , \STATE_OUT.counter[1] , 
         \STATE_OUT.serial.counter_31__N_83[30] , 
         \STATE_OUT.serial.counter_31__N_83[31] , \STATE_OUT.counter[30] , 
         \STATE_OUT.counter[31] , \STATE_OUT.serial.counter_31__N_83[28] , 
         \STATE_OUT.serial.counter_31__N_83[29] , \STATE_OUT.counter[28] , 
         \STATE_OUT.counter[29] , \STATE_OUT.serial.counter_31__N_83[26] , 
         \STATE_OUT.serial.counter_31__N_83[27] , \STATE_OUT.counter[26] , 
         \STATE_OUT.counter[27] , \STATE_OUT.serial.counter_31__N_83[24] , 
         \STATE_OUT.serial.counter_31__N_83[25] , \STATE_OUT.counter[24] , 
         \STATE_OUT.counter[25] , \STATE_OUT.serial.counter_31__N_83[22] , 
         \STATE_OUT.serial.counter_31__N_83[23] , \STATE_OUT.counter[22] , 
         \STATE_OUT.counter[23] , \STATE_OUT.serial.counter_31__N_83[20] , 
         \STATE_OUT.serial.counter_31__N_83[21] , \STATE_OUT.counter[20] , 
         \STATE_OUT.counter[21] , \STATE_OUT.serial.counter_31__N_83[18] , 
         \STATE_OUT.serial.counter_31__N_83[19] , \STATE_OUT.counter[18] , 
         \STATE_OUT.counter[19] , \STATE_OUT.serial.counter_31__N_83[16] , 
         \STATE_OUT.serial.counter_31__N_83[17] , \STATE_OUT.counter[16] , 
         \STATE_OUT.counter[17] , \STATE_OUT.serial.counter_31__N_83[6] , 
         \STATE_OUT.serial.counter_31__N_83[7] , \STATE_OUT.counter[6] , 
         \STATE_OUT.counter[7] , \STATE_OUT.serial.counter_31__N_83[4] , 
         \STATE_OUT.serial.counter_31__N_83[5] , \STATE_OUT.counter[4] , 
         \STATE_OUT.counter[5] , \STATE_OUT.serial.counter_31__N_83[2] , 
         \STATE_OUT.serial.counter_31__N_83[3] , \STATE_OUT.counter[3] , 
         \STATE_OUT.counter[2] , \STATE_OUT.serial.aux_3__N_115[2]$n11 , 
         \STATE_OUT.serial.aux_3__N_115[3]$n10 , \STATE_OUT.serial.aux[2] , 
         SENSOR1_IN_c, \STATE_OUT.serial.aux[3] , SENSOR2_IN_c, 
         \STATE_OUT.serial.aux_3__N_115[0]$n13 , 
         \STATE_OUT.serial.aux_3__N_115[1]$n12 , \STATE_OUT.serial.aux[0] , 
         \STATE_OUT.serial.aux[1] , \mainTimer.clkCont_17__N_19[16] , 
         \mainTimer.clkCont_17__N_19[17] , \mainTimer.clkCont_17__N_37 , 
         \mainTimer.clkCont_17__N_19[14] , \mainTimer.clkCont_17__N_19[15] , 
         \mainTimer.clkCont_17__N_19[12] , \mainTimer.clkCont_17__N_19[13] , 
         \mainTimer.clkCont_17__N_19[10] , \mainTimer.clkCont_17__N_19[11] , 
         \mainTimer.clkCont_17__N_19[8] , \mainTimer.clkCont_17__N_19[9] , 
         \mainTimer.clkCont_17__N_19[6] , \mainTimer.clkCont_17__N_19[7] , 
         \mainTimer.clkCont_17__N_19[4] , \mainTimer.clkCont_17__N_19[5] , 
         \mainTimer.clkCont_17__N_19[2] , \mainTimer.clkCont_17__N_19[3] , 
         \mainTimer.clkCont_17__N_19[0] , \mainTimer.clkCont_17__N_19[1] , 
         KEY_STATUS_c_1, KEY_STATUS_c_0, \Snext[1] , n62, TIMER_EN, 
         TIMER_EN_N_13, \Keyboard.n51 , \Keyboard.n1992 , \Keyboard.n1359 , 
         \Keyboard.actualKey_0__1__N_238[0] , \Keyboard.n7 , 
         \Keyboard.actualKey_0__1__N_236[1] , \Keyboard.valid_1__N_272[0] , 
         \Keyboard.actualKey_0__1__N_232[1] , 
         \Keyboard.actualKey_0__1__N_232[0] , 
         \Keyboard.actualKey_0__1__N_236[0] , 
         \Keyboard.actualKey_0__1__N_234[1] , \Keyboard.n54 , \Keyboard.n49 , 
         \Keyboard.n60 , \Keyboard.n55 , \Keyboard.n50 , \Keyboard.n52 , 
         \Keyboard.n53 , \Keyboard.n48 , \Keyboard.valid_1__N_272[0]$n7 , 
         \Keyboard.actualKey_0__1__N_238[1] , n1509, n6, n3, \STATE_OUT.n32 , 
         \STATE_OUT.n35 , \STATE_OUT.n31 , \STATE_OUT.n38 , \STATE_OUT.n34 , 
         \STATE_OUT.n4 , \STATE_OUT.n33 , \STATE_OUT.n17 , \STATE_OUT.n18 , 
         \STATE_OUT.serial.counter[8]_2 , \STATE_OUT.serial.counter[14]_2 , 
         \STATE_OUT.serial.counter[11]_2 , \STATE_OUT.serial.counter[15]_2 , 
         \STATE_OUT.serial.n16 , \STATE_OUT.serial.counter[13]_2 , 
         \STATE_OUT.serial.counter[9]_2 , \STATE_OUT.serial.counter[12]_2 , 
         \STATE_OUT.serial.counter[10]_2 , \STATE_OUT.serial.aux_3__N_115[2] , 
         \STATE_OUT.serial.aux_3__N_115[3] , \STATE_OUT.serial.n1844 , 
         \mainTimer.n1357 , \mainTimer.n17 , \mainTimer.n1990 , \mainTimer.n8 , 
         \mainTimer.n7 , \mainTimer.n18 , \mainTimer.n19 , 
         \STATE_OUT.serial.status_out_N_189 , 
         \STATE_OUT.serial.aux_3__N_115[0] , 
         \STATE_OUT.serial.aux_3__N_115[1] , 
         \STATE_OUT.serial.counter_31__N_184 , STATUS_OUT_c, SIREN_OUT_c, 
         \STATE_OUT.n3 , \STATE_OUT.n514 , 
         \STATE_OUT.init.sig_000.FeedThruLUT , STATUS_SEND_c, 
         \STATE_OUT.serial.n341 , \STATE_OUT.n355 , 
         \STATE_OUT.serial.counter_31__N_83[15] , 
         \STATE_OUT.serial.counter_31__N_83[14] , 
         \STATE_OUT.serial.counter_31__N_83[13] , 
         \STATE_OUT.serial.counter_31__N_83[12] , 
         \STATE_OUT.serial.counter_31__N_83[11] , 
         \STATE_OUT.serial.counter_31__N_83[10] , 
         \STATE_OUT.serial.counter_31__N_83[9] , 
         \STATE_OUT.serial.counter_31__N_83[8] ;

  Keyboard_SLICE_0 \Keyboard.SLICE_0 ( .DI1(\Keyboard.n133[30] ), 
    .DI0(\Keyboard.n133[29] ), .D1(\Keyboard.n2326 ), 
    .C1(\Keyboard.counter[30] ), .D0(\Keyboard.n827 ), 
    .C0(\Keyboard.counter[29] ), .LSR(\Keyboard.n351 ), .CLK(KB_RECV_c), 
    .CIN0(\Keyboard.n827 ), .CIN1(\Keyboard.n2326 ), 
    .Q0(\Keyboard.counter[29] ), .Q1(\Keyboard.counter[30] ), 
    .F0(\Keyboard.n133[29] ), .F1(\Keyboard.n133[30] ), 
    .COUT1(\Keyboard.n829 ), .COUT0(\Keyboard.n2326 ));
  Keyboard_SLICE_1 \Keyboard.SLICE_1 ( .DI1(\Keyboard.n133[10] ), 
    .DI0(\Keyboard.n133[9] ), .D1(\Keyboard.n2296 ), 
    .C1(\Keyboard.counter[10] ), .D0(\Keyboard.n807 ), 
    .C0(\Keyboard.counter[9] ), .LSR(\Keyboard.n351 ), .CLK(KB_RECV_c), 
    .CIN0(\Keyboard.n807 ), .CIN1(\Keyboard.n2296 ), 
    .Q0(\Keyboard.counter[9] ), .Q1(\Keyboard.counter[10] ), 
    .F0(\Keyboard.n133[9] ), .F1(\Keyboard.n133[10] ), .COUT1(\Keyboard.n809 ), 
    .COUT0(\Keyboard.n2296 ));
  Keyboard_SLICE_2 \Keyboard.SLICE_2 ( .DI1(\Keyboard.n133[8] ), 
    .DI0(\Keyboard.n133[7] ), .D1(\Keyboard.n2293 ), 
    .C1(\Keyboard.counter[8] ), .D0(\Keyboard.n805 ), 
    .C0(\Keyboard.counter[7] ), .LSR(\Keyboard.n351 ), .CLK(KB_RECV_c), 
    .CIN0(\Keyboard.n805 ), .CIN1(\Keyboard.n2293 ), 
    .Q0(\Keyboard.counter[7] ), .Q1(\Keyboard.counter[8] ), 
    .F0(\Keyboard.n133[7] ), .F1(\Keyboard.n133[8] ), .COUT1(\Keyboard.n807 ), 
    .COUT0(\Keyboard.n2293 ));
  Keyboard_SLICE_3 \Keyboard.SLICE_3 ( .DI1(\Keyboard.n133[28] ), 
    .DI0(\Keyboard.n133[27] ), .D1(\Keyboard.n2323 ), 
    .C1(\Keyboard.counter[28] ), .D0(\Keyboard.n825 ), 
    .C0(\Keyboard.counter[27] ), .LSR(\Keyboard.n351 ), .CLK(KB_RECV_c), 
    .CIN0(\Keyboard.n825 ), .CIN1(\Keyboard.n2323 ), 
    .Q0(\Keyboard.counter[27] ), .Q1(\Keyboard.counter[28] ), 
    .F0(\Keyboard.n133[27] ), .F1(\Keyboard.n133[28] ), 
    .COUT1(\Keyboard.n827 ), .COUT0(\Keyboard.n2323 ));
  Keyboard_SLICE_4 \Keyboard.SLICE_4 ( .DI1(\Keyboard.n133[6] ), 
    .DI0(\Keyboard.n133[5] ), .D1(\Keyboard.n2290 ), 
    .C1(\Keyboard.counter[6] ), .D0(\Keyboard.n803 ), 
    .C0(\Keyboard.counter[5] ), .LSR(\Keyboard.n351 ), .CLK(KB_RECV_c), 
    .CIN0(\Keyboard.n803 ), .CIN1(\Keyboard.n2290 ), 
    .Q0(\Keyboard.counter[5] ), .Q1(\Keyboard.counter[6] ), 
    .F0(\Keyboard.n133[5] ), .F1(\Keyboard.n133[6] ), .COUT1(\Keyboard.n805 ), 
    .COUT0(\Keyboard.n2290 ));
  Keyboard_SLICE_5 \Keyboard.SLICE_5 ( .DI1(\Keyboard.n133[26] ), 
    .DI0(\Keyboard.n133[25] ), .D1(\Keyboard.n2320 ), 
    .C1(\Keyboard.counter[26] ), .D0(\Keyboard.n823 ), 
    .C0(\Keyboard.counter[25] ), .LSR(\Keyboard.n351 ), .CLK(KB_RECV_c), 
    .CIN0(\Keyboard.n823 ), .CIN1(\Keyboard.n2320 ), 
    .Q0(\Keyboard.counter[25] ), .Q1(\Keyboard.counter[26] ), 
    .F0(\Keyboard.n133[25] ), .F1(\Keyboard.n133[26] ), 
    .COUT1(\Keyboard.n825 ), .COUT0(\Keyboard.n2320 ));
  Keyboard_SLICE_6 \Keyboard.SLICE_6 ( .DI1(\Keyboard.n133[4] ), 
    .DI0(\Keyboard.n133[3] ), .D1(\Keyboard.n2287 ), 
    .C1(\Keyboard.counter[4] ), .D0(\Keyboard.n801 ), 
    .C0(\Keyboard.counter[3] ), .LSR(\Keyboard.n351 ), .CLK(KB_RECV_c), 
    .CIN0(\Keyboard.n801 ), .CIN1(\Keyboard.n2287 ), 
    .Q0(\Keyboard.counter[3] ), .Q1(\Keyboard.counter[4] ), 
    .F0(\Keyboard.n133[3] ), .F1(\Keyboard.n133[4] ), .COUT1(\Keyboard.n803 ), 
    .COUT0(\Keyboard.n2287 ));
  Keyboard_SLICE_7 \Keyboard.SLICE_7 ( .DI1(\Keyboard.n133[24] ), 
    .DI0(\Keyboard.n133[23] ), .D1(\Keyboard.n2317 ), 
    .C1(\Keyboard.counter[24] ), .D0(\Keyboard.n821 ), 
    .C0(\Keyboard.counter[23] ), .LSR(\Keyboard.n351 ), .CLK(KB_RECV_c), 
    .CIN0(\Keyboard.n821 ), .CIN1(\Keyboard.n2317 ), 
    .Q0(\Keyboard.counter[23] ), .Q1(\Keyboard.counter[24] ), 
    .F0(\Keyboard.n133[23] ), .F1(\Keyboard.n133[24] ), 
    .COUT1(\Keyboard.n823 ), .COUT0(\Keyboard.n2317 ));
  Keyboard_SLICE_8 \Keyboard.SLICE_8 ( .DI1(\Keyboard.n133[2] ), 
    .DI0(\Keyboard.n133[1] ), .D1(\Keyboard.n2284 ), 
    .C1(\Keyboard.counter[2] ), .D0(\Keyboard.n799 ), .C0(DEBUG_KEY_c_1), 
    .LSR(\Keyboard.n351 ), .CLK(KB_RECV_c), .CIN0(\Keyboard.n799 ), 
    .CIN1(\Keyboard.n2284 ), .Q0(DEBUG_KEY_c_1), .Q1(\Keyboard.counter[2] ), 
    .F0(\Keyboard.n133[1] ), .F1(\Keyboard.n133[2] ), .COUT1(\Keyboard.n801 ), 
    .COUT0(\Keyboard.n2284 ));
  Keyboard_SLICE_9 \Keyboard.SLICE_9 ( .DI1(\Keyboard.n133[0] ), 
    .D1(\Keyboard.n2248 ), .C1(DEBUG_KEY_c_0), .B1(VCC_net), 
    .LSR(\Keyboard.n351 ), .CLK(KB_RECV_c), .CIN1(\Keyboard.n2248 ), 
    .Q1(DEBUG_KEY_c_0), .F1(\Keyboard.n133[0] ), .COUT1(\Keyboard.n799 ), 
    .COUT0(\Keyboard.n2248 ));
  Keyboard_SLICE_10 \Keyboard.SLICE_10 ( .DI1(\Keyboard.n133[22] ), 
    .DI0(\Keyboard.n133[21] ), .D1(\Keyboard.n2314 ), 
    .C1(\Keyboard.counter[22] ), .D0(\Keyboard.n819 ), 
    .C0(\Keyboard.counter[21] ), .LSR(\Keyboard.n351 ), .CLK(KB_RECV_c), 
    .CIN0(\Keyboard.n819 ), .CIN1(\Keyboard.n2314 ), 
    .Q0(\Keyboard.counter[21] ), .Q1(\Keyboard.counter[22] ), 
    .F0(\Keyboard.n133[21] ), .F1(\Keyboard.n133[22] ), 
    .COUT1(\Keyboard.n821 ), .COUT0(\Keyboard.n2314 ));
  Keyboard_SLICE_11 \Keyboard.SLICE_11 ( .DI1(\Keyboard.n133[20] ), 
    .DI0(\Keyboard.n133[19] ), .D1(\Keyboard.n2311 ), 
    .C1(\Keyboard.counter[20] ), .D0(\Keyboard.n817 ), 
    .C0(\Keyboard.counter[19] ), .LSR(\Keyboard.n351 ), .CLK(KB_RECV_c), 
    .CIN0(\Keyboard.n817 ), .CIN1(\Keyboard.n2311 ), 
    .Q0(\Keyboard.counter[19] ), .Q1(\Keyboard.counter[20] ), 
    .F0(\Keyboard.n133[19] ), .F1(\Keyboard.n133[20] ), 
    .COUT1(\Keyboard.n819 ), .COUT0(\Keyboard.n2311 ));
  Keyboard_SLICE_12 \Keyboard.SLICE_12 ( .DI1(\Keyboard.n133[18] ), 
    .DI0(\Keyboard.n133[17] ), .D1(\Keyboard.n2308 ), 
    .C1(\Keyboard.counter[18] ), .D0(\Keyboard.n815 ), 
    .C0(\Keyboard.counter[17] ), .LSR(\Keyboard.n351 ), .CLK(KB_RECV_c), 
    .CIN0(\Keyboard.n815 ), .CIN1(\Keyboard.n2308 ), 
    .Q0(\Keyboard.counter[17] ), .Q1(\Keyboard.counter[18] ), 
    .F0(\Keyboard.n133[17] ), .F1(\Keyboard.n133[18] ), 
    .COUT1(\Keyboard.n817 ), .COUT0(\Keyboard.n2308 ));
  Keyboard_SLICE_13 \Keyboard.SLICE_13 ( .DI1(\Keyboard.n133[16] ), 
    .DI0(\Keyboard.n133[15] ), .D1(\Keyboard.n2305 ), 
    .C1(\Keyboard.counter[16] ), .D0(\Keyboard.n813 ), 
    .C0(\Keyboard.counter[15] ), .LSR(\Keyboard.n351 ), .CLK(KB_RECV_c), 
    .CIN0(\Keyboard.n813 ), .CIN1(\Keyboard.n2305 ), 
    .Q0(\Keyboard.counter[15] ), .Q1(\Keyboard.counter[16] ), 
    .F0(\Keyboard.n133[15] ), .F1(\Keyboard.n133[16] ), 
    .COUT1(\Keyboard.n815 ), .COUT0(\Keyboard.n2305 ));
  Keyboard_SLICE_14 \Keyboard.SLICE_14 ( .DI1(\Keyboard.n133[14] ), 
    .DI0(\Keyboard.n133[13] ), .D1(\Keyboard.n2302 ), 
    .C1(\Keyboard.counter[14] ), .D0(\Keyboard.n811 ), 
    .C0(\Keyboard.counter[13] ), .LSR(\Keyboard.n351 ), .CLK(KB_RECV_c), 
    .CIN0(\Keyboard.n811 ), .CIN1(\Keyboard.n2302 ), 
    .Q0(\Keyboard.counter[13] ), .Q1(\Keyboard.counter[14] ), 
    .F0(\Keyboard.n133[13] ), .F1(\Keyboard.n133[14] ), 
    .COUT1(\Keyboard.n813 ), .COUT0(\Keyboard.n2302 ));
  Keyboard_SLICE_15 \Keyboard.SLICE_15 ( .DI1(\Keyboard.n133[12] ), 
    .DI0(\Keyboard.n133[11] ), .D1(\Keyboard.n2299 ), 
    .C1(\Keyboard.counter[12] ), .D0(\Keyboard.n809 ), 
    .C0(\Keyboard.counter[11] ), .LSR(\Keyboard.n351 ), .CLK(KB_RECV_c), 
    .CIN0(\Keyboard.n809 ), .CIN1(\Keyboard.n2299 ), 
    .Q0(\Keyboard.counter[11] ), .Q1(\Keyboard.counter[12] ), 
    .F0(\Keyboard.n133[11] ), .F1(\Keyboard.n133[12] ), 
    .COUT1(\Keyboard.n811 ), .COUT0(\Keyboard.n2299 ));
  Keyboard_SLICE_16 \Keyboard.SLICE_16 ( .DI0(\Keyboard.n133[31] ), 
    .D1(\Keyboard.n2329 ), .D0(\Keyboard.n829 ), .C0(\Keyboard.counter[31] ), 
    .LSR(\Keyboard.n351 ), .CLK(KB_RECV_c), .CIN0(\Keyboard.n829 ), 
    .CIN1(\Keyboard.n2329 ), .Q0(\Keyboard.counter[31] ), 
    .F0(\Keyboard.n133[31] ), .COUT0(\Keyboard.n2329 ));
  STATE_OUT_serial_SLICE_17 \STATE_OUT.serial.SLICE_17 ( 
    .D1(\STATE_OUT.serial.n2236 ), .C1(VCC_net), 
    .B1(\STATE_OUT.serial.counter_31__N_120[26] ), 
    .D0(\STATE_OUT.serial.n790 ), .C0(VCC_net), 
    .B0(\STATE_OUT.serial.counter_31__N_120[25] ), 
    .CIN0(\STATE_OUT.serial.n790 ), .CIN1(\STATE_OUT.serial.n2236 ), 
    .F0(\STATE_OUT.serial.counter_31__N_152[25] ), 
    .F1(\STATE_OUT.serial.counter_31__N_152[26] ), 
    .COUT1(\STATE_OUT.serial.n792 ), .COUT0(\STATE_OUT.serial.n2236 ));
  STATE_OUT_serial_SLICE_18 \STATE_OUT.serial.SLICE_18 ( 
    .D1(\STATE_OUT.serial.n2233 ), .C1(VCC_net), 
    .B1(\STATE_OUT.serial.counter_31__N_120[24] ), 
    .D0(\STATE_OUT.serial.n788 ), .C0(VCC_net), 
    .B0(\STATE_OUT.serial.counter_31__N_120[23] ), 
    .CIN0(\STATE_OUT.serial.n788 ), .CIN1(\STATE_OUT.serial.n2233 ), 
    .F0(\STATE_OUT.serial.counter_31__N_152[23] ), 
    .F1(\STATE_OUT.serial.counter_31__N_152[24] ), 
    .COUT1(\STATE_OUT.serial.n790 ), .COUT0(\STATE_OUT.serial.n2233 ));
  STATE_OUT_serial_SLICE_19 \STATE_OUT.serial.SLICE_19 ( 
    .D1(\STATE_OUT.serial.n2203 ), .C1(VCC_net), 
    .B1(\STATE_OUT.serial.counter_31__N_120[4] ), .D0(\STATE_OUT.serial.n768 ), 
    .C0(VCC_net), .B0(\STATE_OUT.counter_31__N_120[3] ), 
    .CIN0(\STATE_OUT.serial.n768 ), .CIN1(\STATE_OUT.serial.n2203 ), 
    .F0(\STATE_OUT.serial.counter_31__N_152[3] ), 
    .F1(\STATE_OUT.serial.counter_31__N_152[4] ), 
    .COUT1(\STATE_OUT.serial.n770 ), .COUT0(\STATE_OUT.serial.n2203 ));
  STATE_OUT_serial_SLICE_20 \STATE_OUT.serial.SLICE_20 ( 
    .D1(\STATE_OUT.serial.n2200 ), .C1(VCC_net), 
    .B1(\STATE_OUT.counter_31__N_120[2] ), .D0(\STATE_OUT.serial.n766 ), 
    .C0(VCC_net), .B0(\STATE_OUT.counter_31__N_120[1] ), 
    .CIN0(\STATE_OUT.serial.n766 ), .CIN1(\STATE_OUT.serial.n2200 ), 
    .F0(\STATE_OUT.serial.counter_31__N_182[1] ), 
    .F1(\STATE_OUT.serial.counter_31__N_152[2] ), 
    .COUT1(\STATE_OUT.serial.n768 ), .COUT0(\STATE_OUT.serial.n2200 ));
  STATE_OUT_serial_SLICE_21 \STATE_OUT.serial.SLICE_21 ( 
    .D1(\STATE_OUT.serial.n2230 ), .C1(VCC_net), 
    .B1(\STATE_OUT.serial.counter_31__N_120[22] ), 
    .D0(\STATE_OUT.serial.n786 ), .C0(VCC_net), 
    .B0(\STATE_OUT.serial.counter_31__N_120[21] ), 
    .CIN0(\STATE_OUT.serial.n786 ), .CIN1(\STATE_OUT.serial.n2230 ), 
    .F0(\STATE_OUT.serial.counter_31__N_152[21] ), 
    .F1(\STATE_OUT.serial.counter_31__N_152[22] ), 
    .COUT1(\STATE_OUT.serial.n788 ), .COUT0(\STATE_OUT.serial.n2230 ));
  STATE_OUT_serial_SLICE_22 \STATE_OUT.serial.SLICE_22 ( 
    .D1(\STATE_OUT.serial.n2194 ), .C1(VCC_net), 
    .B1(\STATE_OUT.counter_31__N_120[0] ), .CIN1(\STATE_OUT.serial.n2194 ), 
    .F1(\STATE_OUT.serial.counter_31__N_182[0] ), 
    .COUT1(\STATE_OUT.serial.n766 ), .COUT0(\STATE_OUT.serial.n2194 ));
  STATE_OUT_serial_SLICE_23 \STATE_OUT.serial.SLICE_23 ( 
    .D1(\STATE_OUT.serial.n2227 ), .C1(VCC_net), 
    .B1(\STATE_OUT.serial.counter_31__N_120[20] ), 
    .D0(\STATE_OUT.serial.n784 ), .C0(VCC_net), 
    .B0(\STATE_OUT.serial.counter_31__N_120[19] ), 
    .CIN0(\STATE_OUT.serial.n784 ), .CIN1(\STATE_OUT.serial.n2227 ), 
    .F0(\STATE_OUT.serial.counter_31__N_152[19] ), 
    .F1(\STATE_OUT.serial.counter_31__N_152[20] ), 
    .COUT1(\STATE_OUT.serial.n786 ), .COUT0(\STATE_OUT.serial.n2227 ));
  STATE_OUT_serial_SLICE_24 \STATE_OUT.serial.SLICE_24 ( 
    .D1(\STATE_OUT.serial.n2224 ), .C1(VCC_net), 
    .B1(\STATE_OUT.serial.counter_31__N_120[18] ), 
    .D0(\STATE_OUT.serial.n782 ), .C0(VCC_net), 
    .B0(\STATE_OUT.serial.counter_31__N_120[17] ), 
    .CIN0(\STATE_OUT.serial.n782 ), .CIN1(\STATE_OUT.serial.n2224 ), 
    .F0(\STATE_OUT.serial.counter_31__N_152[17] ), 
    .F1(\STATE_OUT.serial.counter_31__N_152[18] ), 
    .COUT1(\STATE_OUT.serial.n784 ), .COUT0(\STATE_OUT.serial.n2224 ));
  STATE_OUT_serial_SLICE_25 \STATE_OUT.serial.SLICE_25 ( 
    .D1(\STATE_OUT.serial.n2221 ), .C1(VCC_net), 
    .B1(\STATE_OUT.serial.counter_31__N_120[16] ), 
    .D0(\STATE_OUT.serial.n780 ), .C0(VCC_net), 
    .B0(\STATE_OUT.serial.counter_31__N_120[15] ), 
    .CIN0(\STATE_OUT.serial.n780 ), .CIN1(\STATE_OUT.serial.n2221 ), 
    .F0(\STATE_OUT.serial.counter_31__N_152[15] ), 
    .F1(\STATE_OUT.serial.counter_31__N_152[16] ), 
    .COUT1(\STATE_OUT.serial.n782 ), .COUT0(\STATE_OUT.serial.n2221 ));
  STATE_OUT_serial_SLICE_26 \STATE_OUT.serial.SLICE_26 ( 
    .D1(\STATE_OUT.serial.n2218 ), .C1(VCC_net), 
    .B1(\STATE_OUT.serial.counter_31__N_120[14] ), 
    .D0(\STATE_OUT.serial.n778 ), .C0(VCC_net), 
    .B0(\STATE_OUT.serial.counter_31__N_120[13] ), 
    .CIN0(\STATE_OUT.serial.n778 ), .CIN1(\STATE_OUT.serial.n2218 ), 
    .F0(\STATE_OUT.serial.counter_31__N_152[13] ), 
    .F1(\STATE_OUT.serial.counter_31__N_152[14] ), 
    .COUT1(\STATE_OUT.serial.n780 ), .COUT0(\STATE_OUT.serial.n2218 ));
  STATE_OUT_serial_SLICE_27 \STATE_OUT.serial.SLICE_27 ( 
    .D1(\STATE_OUT.serial.n2215 ), .C1(VCC_net), 
    .B1(\STATE_OUT.serial.counter_31__N_120[12] ), 
    .D0(\STATE_OUT.serial.n776 ), .C0(VCC_net), 
    .B0(\STATE_OUT.serial.counter_31__N_120[11] ), 
    .CIN0(\STATE_OUT.serial.n776 ), .CIN1(\STATE_OUT.serial.n2215 ), 
    .F0(\STATE_OUT.serial.counter_31__N_152[11] ), 
    .F1(\STATE_OUT.serial.counter_31__N_152[12] ), 
    .COUT1(\STATE_OUT.serial.n778 ), .COUT0(\STATE_OUT.serial.n2215 ));
  STATE_OUT_serial_SLICE_28 \STATE_OUT.serial.SLICE_28 ( 
    .D1(\STATE_OUT.serial.n2212 ), .C1(VCC_net), 
    .B1(\STATE_OUT.serial.counter_31__N_120[10] ), 
    .D0(\STATE_OUT.serial.n774 ), .C0(VCC_net), 
    .B0(\STATE_OUT.serial.counter_31__N_120[9] ), 
    .CIN0(\STATE_OUT.serial.n774 ), .CIN1(\STATE_OUT.serial.n2212 ), 
    .F0(\STATE_OUT.serial.counter_31__N_152[9] ), 
    .F1(\STATE_OUT.serial.counter_31__N_152[10] ), 
    .COUT1(\STATE_OUT.serial.n776 ), .COUT0(\STATE_OUT.serial.n2212 ));
  STATE_OUT_serial_SLICE_29 \STATE_OUT.serial.SLICE_29 ( 
    .D1(\STATE_OUT.serial.n2209 ), .C1(VCC_net), 
    .B1(\STATE_OUT.serial.counter_31__N_120[8] ), .D0(\STATE_OUT.serial.n772 ), 
    .C0(VCC_net), .B0(\STATE_OUT.serial.counter_31__N_120[7] ), 
    .CIN0(\STATE_OUT.serial.n772 ), .CIN1(\STATE_OUT.serial.n2209 ), 
    .F0(\STATE_OUT.serial.counter_31__N_152[7] ), 
    .F1(\STATE_OUT.serial.counter_31__N_152[8] ), 
    .COUT1(\STATE_OUT.serial.n774 ), .COUT0(\STATE_OUT.serial.n2209 ));
  STATE_OUT_serial_SLICE_30 \STATE_OUT.serial.SLICE_30 ( 
    .D1(\STATE_OUT.serial.n2206 ), .C1(VCC_net), 
    .B1(\STATE_OUT.serial.counter_31__N_120[6] ), .D0(\STATE_OUT.serial.n770 ), 
    .C0(VCC_net), .B0(\STATE_OUT.serial.counter_31__N_120[5] ), 
    .CIN0(\STATE_OUT.serial.n770 ), .CIN1(\STATE_OUT.serial.n2206 ), 
    .F0(\STATE_OUT.serial.counter_31__N_152[5] ), 
    .F1(\STATE_OUT.serial.counter_31__N_152[6] ), 
    .COUT1(\STATE_OUT.serial.n772 ), .COUT0(\STATE_OUT.serial.n2206 ));
  STATE_OUT_serial_SLICE_31 \STATE_OUT.serial.SLICE_31 ( 
    .D1(\STATE_OUT.serial.n2245 ), .D0(\STATE_OUT.serial.n796 ), .C0(VCC_net), 
    .B0(\STATE_OUT.serial.counter_31__N_120[31] ), 
    .CIN0(\STATE_OUT.serial.n796 ), .CIN1(\STATE_OUT.serial.n2245 ), 
    .F0(\STATE_OUT.serial.counter_31__N_152[31] ), 
    .COUT0(\STATE_OUT.serial.n2245 ));
  STATE_OUT_serial_SLICE_32 \STATE_OUT.serial.SLICE_32 ( 
    .D1(\STATE_OUT.serial.n2242 ), .C1(VCC_net), 
    .B1(\STATE_OUT.serial.counter_31__N_120[30] ), 
    .D0(\STATE_OUT.serial.n794 ), .C0(VCC_net), 
    .B0(\STATE_OUT.serial.counter_31__N_120[29] ), 
    .CIN0(\STATE_OUT.serial.n794 ), .CIN1(\STATE_OUT.serial.n2242 ), 
    .F0(\STATE_OUT.serial.counter_31__N_152[29] ), 
    .F1(\STATE_OUT.serial.counter_31__N_152[30] ), 
    .COUT1(\STATE_OUT.serial.n796 ), .COUT0(\STATE_OUT.serial.n2242 ));
  STATE_OUT_serial_SLICE_33 \STATE_OUT.serial.SLICE_33 ( 
    .D1(\STATE_OUT.serial.n2239 ), .C1(VCC_net), 
    .B1(\STATE_OUT.serial.counter_31__N_120[28] ), 
    .D0(\STATE_OUT.serial.n792 ), .C0(VCC_net), 
    .B0(\STATE_OUT.serial.counter_31__N_120[27] ), 
    .CIN0(\STATE_OUT.serial.n792 ), .CIN1(\STATE_OUT.serial.n2239 ), 
    .F0(\STATE_OUT.serial.counter_31__N_152[27] ), 
    .F1(\STATE_OUT.serial.counter_31__N_152[28] ), 
    .COUT1(\STATE_OUT.serial.n794 ), .COUT0(\STATE_OUT.serial.n2239 ));
  mainTimer_SLICE_34 \mainTimer.SLICE_34 ( .D1(\mainTimer.n2263 ), 
    .B1(\mainTimer.clkCont[8] ), .D0(\mainTimer.n753 ), 
    .B0(\mainTimer.clkCont[7] ), .CIN0(\mainTimer.n753 ), 
    .CIN1(\mainTimer.n2263 ), .F0(\mainTimer.clkCont_17__N_40[7] ), 
    .F1(\mainTimer.clkCont_17__N_40[8] ), .COUT1(\mainTimer.n755 ), 
    .COUT0(\mainTimer.n2263 ));
  mainTimer_SLICE_35 \mainTimer.SLICE_35 ( .D1(\mainTimer.n2269 ), 
    .B1(\mainTimer.clkCont[12] ), .D0(\mainTimer.n757 ), 
    .B0(\mainTimer.clkCont[11] ), .CIN0(\mainTimer.n757 ), 
    .CIN1(\mainTimer.n2269 ), .F0(\mainTimer.clkCont_17__N_40[11] ), 
    .F1(\mainTimer.clkCont_17__N_40[12] ), .COUT1(\mainTimer.n759 ), 
    .COUT0(\mainTimer.n2269 ));
  mainTimer_SLICE_36 \mainTimer.SLICE_36 ( .D1(\mainTimer.n2260 ), 
    .B1(\mainTimer.clkCont[6] ), .D0(\mainTimer.n751 ), 
    .B0(\mainTimer.clkCont[5] ), .CIN0(\mainTimer.n751 ), 
    .CIN1(\mainTimer.n2260 ), .F0(\mainTimer.clkCont_17__N_40[5] ), 
    .F1(\mainTimer.clkCont_17__N_40[6] ), .COUT1(\mainTimer.n753 ), 
    .COUT0(\mainTimer.n2260 ));
  mainTimer_SLICE_37 \mainTimer.SLICE_37 ( .D1(\mainTimer.n2278 ), 
    .D0(\mainTimer.n763 ), .B0(\mainTimer.clkCont[17] ), 
    .CIN0(\mainTimer.n763 ), .CIN1(\mainTimer.n2278 ), 
    .F0(\mainTimer.clkCont_17__N_40[17] ), .COUT0(\mainTimer.n2278 ));
  mainTimer_SLICE_38 \mainTimer.SLICE_38 ( .D1(\mainTimer.n2275 ), 
    .B1(\mainTimer.clkCont[16] ), .D0(\mainTimer.n761 ), 
    .B0(\mainTimer.clkCont[15] ), .CIN0(\mainTimer.n761 ), 
    .CIN1(\mainTimer.n2275 ), .F0(\mainTimer.clkCont_17__N_40[15] ), 
    .F1(\mainTimer.clkCont_17__N_40[16] ), .COUT1(\mainTimer.n763 ), 
    .COUT0(\mainTimer.n2275 ));
  mainTimer_SLICE_39 \mainTimer.SLICE_39 ( .D1(\mainTimer.n2272 ), 
    .B1(\mainTimer.clkCont[14] ), .D0(\mainTimer.n759 ), 
    .B0(\mainTimer.clkCont[13] ), .CIN0(\mainTimer.n759 ), 
    .CIN1(\mainTimer.n2272 ), .F0(\mainTimer.clkCont_17__N_40[13] ), 
    .F1(\mainTimer.clkCont_17__N_40[14] ), .COUT1(\mainTimer.n761 ), 
    .COUT0(\mainTimer.n2272 ));
  mainTimer_SLICE_40 \mainTimer.SLICE_40 ( .D1(\mainTimer.n2257 ), 
    .B1(\mainTimer.clkCont[4] ), .D0(\mainTimer.n749 ), 
    .B0(\mainTimer.clkCont[3] ), .CIN0(\mainTimer.n749 ), 
    .CIN1(\mainTimer.n2257 ), .F0(\mainTimer.clkCont_17__N_40[3] ), 
    .F1(\mainTimer.clkCont_17__N_40[4] ), .COUT1(\mainTimer.n751 ), 
    .COUT0(\mainTimer.n2257 ));
  mainTimer_SLICE_41 \mainTimer.SLICE_41 ( .D1(\mainTimer.n2251 ), 
    .C1(VCC_net), .B1(\mainTimer.clkCont[0] ), .CIN1(\mainTimer.n2251 ), 
    .F1(\mainTimer.clkCont_17__N_40[0] ), .COUT1(\mainTimer.n747 ), 
    .COUT0(\mainTimer.n2251 ));
  mainTimer_SLICE_42 \mainTimer.SLICE_42 ( .D1(\mainTimer.n2254 ), 
    .B1(\mainTimer.clkCont[2] ), .D0(\mainTimer.n747 ), 
    .B0(\mainTimer.clkCont[1] ), .CIN0(\mainTimer.n747 ), 
    .CIN1(\mainTimer.n2254 ), .F0(\mainTimer.clkCont_17__N_40[1] ), 
    .F1(\mainTimer.clkCont_17__N_40[2] ), .COUT1(\mainTimer.n749 ), 
    .COUT0(\mainTimer.n2254 ));
  mainTimer_SLICE_43 \mainTimer.SLICE_43 ( .D1(\mainTimer.n2266 ), 
    .B1(\mainTimer.clkCont[10] ), .D0(\mainTimer.n755 ), 
    .B0(\mainTimer.clkCont[9] ), .CIN0(\mainTimer.n755 ), 
    .CIN1(\mainTimer.n2266 ), .F0(\mainTimer.clkCont_17__N_40[9] ), 
    .F1(\mainTimer.clkCont_17__N_40[10] ), .COUT1(\mainTimer.n757 ), 
    .COUT0(\mainTimer.n2266 ));
  Keyboard_SLICE_44 \Keyboard.SLICE_44 ( 
    .DI1(\Keyboard.actualKey_0__1__N_238[1]$n6 ), 
    .DI0(\Keyboard.actualKey_0__1__N_238[0]$n0 ), 
    .D1(\Keyboard.actualKey[3][1] ), .C1(KB_IN_c_1), .B1(DEBUG_KEY_c_0), 
    .A1(\Keyboard.n35 ), .D0(\Keyboard.n35 ), .C0(DEBUG_KEY_c_0), 
    .B0(\Keyboard.actualKey[3][0] ), .A0(KB_IN_c_0), .CLK(KB_RECV_c), 
    .Q0(\Keyboard.actualKey[3][0] ), .Q1(\Keyboard.actualKey[3][1] ), 
    .F0(\Keyboard.actualKey_0__1__N_238[0]$n0 ), 
    .F1(\Keyboard.actualKey_0__1__N_238[1]$n6 ));
  Keyboard_SLICE_45 \Keyboard.SLICE_45 ( 
    .DI1(\Keyboard.actualKey_0__1__N_232[0]$n2 ), 
    .DI0(\Keyboard.actualKey_0__1__N_232[1]$n1 ), 
    .D1(\Keyboard.actualKey[0][0] ), .B1(\Keyboard.n5 ), .A1(KB_IN_c_0), 
    .D0(\Keyboard.actualKey[0][1] ), .C0(\Keyboard.n5 ), .B0(KB_IN_c_1), 
    .CLK(KB_RECV_c), .Q0(\Keyboard.actualKey[0][1] ), 
    .Q1(\Keyboard.actualKey[0][0] ), 
    .F0(\Keyboard.actualKey_0__1__N_232[1]$n1 ), 
    .F1(\Keyboard.actualKey_0__1__N_232[0]$n2 ));
  Keyboard_SLICE_47 \Keyboard.SLICE_47 ( 
    .DI1(\Keyboard.actualKey_0__1__N_234[0] ), 
    .DI0(\Keyboard.actualKey_0__1__N_234[1]$n3 ), .D1(KB_IN_c_0), 
    .C1(\Keyboard.actualKey[1][0] ), .B1(\Keyboard.n5_adj_274 ), 
    .D0(KB_IN_c_1), .C0(\Keyboard.actualKey[1][1] ), 
    .A0(\Keyboard.n5_adj_274 ), .CLK(KB_RECV_c), 
    .Q0(\Keyboard.actualKey[1][1] ), .Q1(\Keyboard.actualKey[1][0] ), 
    .F0(\Keyboard.actualKey_0__1__N_234[1]$n3 ), 
    .F1(\Keyboard.actualKey_0__1__N_234[0] ));
  Keyboard_SLICE_49 \Keyboard.SLICE_49 ( 
    .DI1(\Keyboard.actualKey_0__1__N_236[0]$n5 ), 
    .DI0(\Keyboard.actualKey_0__1__N_236[1]$n4 ), .D1(KB_IN_c_0), 
    .C1(\Keyboard.n35 ), .B1(\Keyboard.actualKey[2][0] ), .A1(DEBUG_KEY_c_0), 
    .D0(KB_IN_c_1), .C0(\Keyboard.n35 ), .B0(\Keyboard.actualKey[2][1] ), 
    .A0(DEBUG_KEY_c_0), .CLK(KB_RECV_c), .Q0(\Keyboard.actualKey[2][1] ), 
    .Q1(\Keyboard.actualKey[2][0] ), 
    .F0(\Keyboard.actualKey_0__1__N_236[1]$n4 ), 
    .F1(\Keyboard.actualKey_0__1__N_236[0]$n5 ));
  SLICE_54 SLICE_54( .DI1(\Snext[1]$n9 ), .DI0(\Snext[0]$n8 ), .D1(n7), 
    .C1(TIMER_EN_N_11), .B1(TIME_OUT), .A1(n1194), .D0(\Snext_1__N_2[0] ), 
    .C0(\Snext[0] ), .B0(n287), .A0(TIMER_EN_N_11), .CLK(SERCLK_OUT_c), 
    .Q0(Sreg_c_0), .Q1(Sreg_c_1), .F0(\Snext[0]$n8 ), .F1(\Snext[1]$n9 ));
  STATE_OUT_SLICE_56 \STATE_OUT.SLICE_56 ( .DI1(\STATE_OUT.n21[1] ), 
    .DI0(\STATE_OUT.n21[0] ), .D1(\STATE_OUT.cont[1] ), 
    .B1(\STATE_OUT.waiting ), .A1(\STATE_OUT.cont[0] ), 
    .B0(\STATE_OUT.cont[0] ), .A0(\STATE_OUT.waiting ), 
    .LSR(\STATE_OUT.state_send_N_66 ), .CLK(SERCLK_OUT_c), 
    .Q0(\STATE_OUT.cont[0] ), .Q1(\STATE_OUT.cont[1] ), 
    .F0(\STATE_OUT.n21[0] ), .F1(\STATE_OUT.n21[1] ));
  STATE_OUT_SLICE_59 \STATE_OUT.SLICE_59 ( .DI1(\STATE_OUT.n21[3] ), 
    .DI0(\STATE_OUT.n21[2] ), .D1(\STATE_OUT.cont[3] ), 
    .B1(\STATE_OUT.cont[2] ), .A1(\STATE_OUT.n729 ), .D0(\STATE_OUT.waiting ), 
    .C0(\STATE_OUT.cont[2] ), .B0(\STATE_OUT.cont[0] ), 
    .A0(\STATE_OUT.cont[1] ), .LSR(\STATE_OUT.state_send_N_66 ), 
    .CLK(SERCLK_OUT_c), .Q0(\STATE_OUT.cont[2] ), .Q1(\STATE_OUT.cont[3] ), 
    .F0(\STATE_OUT.n21[2] ), .F1(\STATE_OUT.n21[3] ));
  STATE_OUT_serial_SLICE_61 \STATE_OUT.serial.SLICE_61 ( 
    .DI1(\STATE_OUT.serial.counter_31__N_83[1] ), 
    .DI0(\STATE_OUT.serial.counter_31__N_83[0] ), 
    .D1(\STATE_OUT.serial.counter_31__N_182[1] ), .B1(\STATE_OUT.n63 ), 
    .A1(\STATE_OUT.init ), .D0(\STATE_OUT.init ), 
    .C0(\STATE_OUT.serial.counter_31__N_182[0] ), .B0(\STATE_OUT.counter[0] ), 
    .A0(\STATE_OUT.n63 ), .CLK(SERCLK_OUT_c), .Q0(\STATE_OUT.counter[0] ), 
    .Q1(\STATE_OUT.counter[1] ), .F0(\STATE_OUT.serial.counter_31__N_83[0] ), 
    .F1(\STATE_OUT.serial.counter_31__N_83[1] ));
  STATE_OUT_serial_SLICE_63 \STATE_OUT.serial.SLICE_63 ( 
    .DI1(\STATE_OUT.serial.counter_31__N_83[30] ), 
    .DI0(\STATE_OUT.serial.counter_31__N_83[31] ), .D1(\STATE_OUT.n63 ), 
    .C1(\STATE_OUT.counter[30] ), .B1(\STATE_OUT.init ), 
    .A1(\STATE_OUT.serial.counter_31__N_152[30] ), 
    .D0(\STATE_OUT.serial.counter_31__N_152[31] ), .C0(\STATE_OUT.n63 ), 
    .B0(\STATE_OUT.counter[31] ), .A0(\STATE_OUT.init ), .CLK(SERCLK_OUT_c), 
    .Q0(\STATE_OUT.counter[31] ), .Q1(\STATE_OUT.counter[30] ), 
    .F0(\STATE_OUT.serial.counter_31__N_83[31] ), 
    .F1(\STATE_OUT.serial.counter_31__N_83[30] ));
  STATE_OUT_serial_SLICE_65 \STATE_OUT.serial.SLICE_65 ( 
    .DI1(\STATE_OUT.serial.counter_31__N_83[28] ), 
    .DI0(\STATE_OUT.serial.counter_31__N_83[29] ), .D1(\STATE_OUT.init ), 
    .C1(\STATE_OUT.n63 ), .B1(\STATE_OUT.counter[28] ), 
    .A1(\STATE_OUT.serial.counter_31__N_152[28] ), .D0(\STATE_OUT.n63 ), 
    .C0(\STATE_OUT.counter[29] ), 
    .B0(\STATE_OUT.serial.counter_31__N_152[29] ), .A0(\STATE_OUT.init ), 
    .CLK(SERCLK_OUT_c), .Q0(\STATE_OUT.counter[29] ), 
    .Q1(\STATE_OUT.counter[28] ), .F0(\STATE_OUT.serial.counter_31__N_83[29] ), 
    .F1(\STATE_OUT.serial.counter_31__N_83[28] ));
  STATE_OUT_serial_SLICE_67 \STATE_OUT.serial.SLICE_67 ( 
    .DI1(\STATE_OUT.serial.counter_31__N_83[26] ), 
    .DI0(\STATE_OUT.serial.counter_31__N_83[27] ), 
    .D1(\STATE_OUT.counter[26] ), .C1(\STATE_OUT.n63 ), 
    .B1(\STATE_OUT.serial.counter_31__N_152[26] ), .A1(\STATE_OUT.init ), 
    .D0(\STATE_OUT.n63 ), .C0(\STATE_OUT.counter[27] ), .B0(\STATE_OUT.init ), 
    .A0(\STATE_OUT.serial.counter_31__N_152[27] ), .CLK(SERCLK_OUT_c), 
    .Q0(\STATE_OUT.counter[27] ), .Q1(\STATE_OUT.counter[26] ), 
    .F0(\STATE_OUT.serial.counter_31__N_83[27] ), 
    .F1(\STATE_OUT.serial.counter_31__N_83[26] ));
  STATE_OUT_serial_SLICE_69 \STATE_OUT.serial.SLICE_69 ( 
    .DI1(\STATE_OUT.serial.counter_31__N_83[24] ), 
    .DI0(\STATE_OUT.serial.counter_31__N_83[25] ), 
    .D1(\STATE_OUT.counter[24] ), 
    .C1(\STATE_OUT.serial.counter_31__N_152[24] ), .B1(\STATE_OUT.n63 ), 
    .A1(\STATE_OUT.init ), .D0(\STATE_OUT.init ), .C0(\STATE_OUT.counter[25] ), 
    .B0(\STATE_OUT.serial.counter_31__N_152[25] ), .A0(\STATE_OUT.n63 ), 
    .CLK(SERCLK_OUT_c), .Q0(\STATE_OUT.counter[25] ), 
    .Q1(\STATE_OUT.counter[24] ), .F0(\STATE_OUT.serial.counter_31__N_83[25] ), 
    .F1(\STATE_OUT.serial.counter_31__N_83[24] ));
  STATE_OUT_serial_SLICE_71 \STATE_OUT.serial.SLICE_71 ( 
    .DI1(\STATE_OUT.serial.counter_31__N_83[22] ), 
    .DI0(\STATE_OUT.serial.counter_31__N_83[23] ), 
    .D1(\STATE_OUT.serial.counter_31__N_152[22] ), 
    .C1(\STATE_OUT.counter[22] ), .B1(\STATE_OUT.n63 ), .A1(\STATE_OUT.init ), 
    .D0(\STATE_OUT.init ), .C0(\STATE_OUT.n63 ), .B0(\STATE_OUT.counter[23] ), 
    .A0(\STATE_OUT.serial.counter_31__N_152[23] ), .CLK(SERCLK_OUT_c), 
    .Q0(\STATE_OUT.counter[23] ), .Q1(\STATE_OUT.counter[22] ), 
    .F0(\STATE_OUT.serial.counter_31__N_83[23] ), 
    .F1(\STATE_OUT.serial.counter_31__N_83[22] ));
  STATE_OUT_serial_SLICE_73 \STATE_OUT.serial.SLICE_73 ( 
    .DI1(\STATE_OUT.serial.counter_31__N_83[20] ), 
    .DI0(\STATE_OUT.serial.counter_31__N_83[21] ), .D1(\STATE_OUT.init ), 
    .C1(\STATE_OUT.counter[20] ), 
    .B1(\STATE_OUT.serial.counter_31__N_152[20] ), .A1(\STATE_OUT.n63 ), 
    .D0(\STATE_OUT.counter[21] ), .C0(\STATE_OUT.init ), .B0(\STATE_OUT.n63 ), 
    .A0(\STATE_OUT.serial.counter_31__N_152[21] ), .CLK(SERCLK_OUT_c), 
    .Q0(\STATE_OUT.counter[21] ), .Q1(\STATE_OUT.counter[20] ), 
    .F0(\STATE_OUT.serial.counter_31__N_83[21] ), 
    .F1(\STATE_OUT.serial.counter_31__N_83[20] ));
  STATE_OUT_serial_SLICE_75 \STATE_OUT.serial.SLICE_75 ( 
    .DI1(\STATE_OUT.serial.counter_31__N_83[18] ), 
    .DI0(\STATE_OUT.serial.counter_31__N_83[19] ), 
    .D1(\STATE_OUT.serial.counter_31__N_152[18] ), 
    .C1(\STATE_OUT.counter[18] ), .B1(\STATE_OUT.init ), .A1(\STATE_OUT.n63 ), 
    .D0(\STATE_OUT.n63 ), .C0(\STATE_OUT.init ), .B0(\STATE_OUT.counter[19] ), 
    .A0(\STATE_OUT.serial.counter_31__N_152[19] ), .CLK(SERCLK_OUT_c), 
    .Q0(\STATE_OUT.counter[19] ), .Q1(\STATE_OUT.counter[18] ), 
    .F0(\STATE_OUT.serial.counter_31__N_83[19] ), 
    .F1(\STATE_OUT.serial.counter_31__N_83[18] ));
  STATE_OUT_serial_SLICE_77 \STATE_OUT.serial.SLICE_77 ( 
    .DI1(\STATE_OUT.serial.counter_31__N_83[16] ), 
    .DI0(\STATE_OUT.serial.counter_31__N_83[17] ), 
    .D1(\STATE_OUT.counter[16] ), .C1(\STATE_OUT.n63 ), .B1(\STATE_OUT.init ), 
    .A1(\STATE_OUT.serial.counter_31__N_152[16] ), .D0(\STATE_OUT.n63 ), 
    .C0(\STATE_OUT.counter[17] ), 
    .B0(\STATE_OUT.serial.counter_31__N_152[17] ), .A0(\STATE_OUT.init ), 
    .CLK(SERCLK_OUT_c), .Q0(\STATE_OUT.counter[17] ), 
    .Q1(\STATE_OUT.counter[16] ), .F0(\STATE_OUT.serial.counter_31__N_83[17] ), 
    .F1(\STATE_OUT.serial.counter_31__N_83[16] ));
  STATE_OUT_serial_SLICE_87 \STATE_OUT.serial.SLICE_87 ( 
    .DI1(\STATE_OUT.serial.counter_31__N_83[6] ), 
    .DI0(\STATE_OUT.serial.counter_31__N_83[7] ), 
    .D1(\STATE_OUT.serial.counter_31__N_152[6] ), .C1(\STATE_OUT.init ), 
    .B1(\STATE_OUT.counter[6] ), .A1(\STATE_OUT.n63 ), .D0(\STATE_OUT.init ), 
    .C0(\STATE_OUT.serial.counter_31__N_152[7] ), .B0(\STATE_OUT.n63 ), 
    .A0(\STATE_OUT.counter[7] ), .CLK(SERCLK_OUT_c), 
    .Q0(\STATE_OUT.counter[7] ), .Q1(\STATE_OUT.counter[6] ), 
    .F0(\STATE_OUT.serial.counter_31__N_83[7] ), 
    .F1(\STATE_OUT.serial.counter_31__N_83[6] ));
  STATE_OUT_serial_SLICE_89 \STATE_OUT.serial.SLICE_89 ( 
    .DI1(\STATE_OUT.serial.counter_31__N_83[4] ), 
    .DI0(\STATE_OUT.serial.counter_31__N_83[5] ), .D1(\STATE_OUT.counter[4] ), 
    .C1(\STATE_OUT.serial.counter_31__N_152[4] ), .B1(\STATE_OUT.init ), 
    .A1(\STATE_OUT.n63 ), .D0(\STATE_OUT.n63 ), 
    .C0(\STATE_OUT.serial.counter_31__N_152[5] ), .B0(\STATE_OUT.counter[5] ), 
    .A0(\STATE_OUT.init ), .CLK(SERCLK_OUT_c), .Q0(\STATE_OUT.counter[5] ), 
    .Q1(\STATE_OUT.counter[4] ), .F0(\STATE_OUT.serial.counter_31__N_83[5] ), 
    .F1(\STATE_OUT.serial.counter_31__N_83[4] ));
  STATE_OUT_serial_SLICE_91 \STATE_OUT.serial.SLICE_91 ( 
    .DI1(\STATE_OUT.serial.counter_31__N_83[2] ), 
    .DI0(\STATE_OUT.serial.counter_31__N_83[3] ), .C1(\STATE_OUT.init ), 
    .B1(\STATE_OUT.serial.counter_31__N_152[2] ), .A1(\STATE_OUT.n63 ), 
    .D0(\STATE_OUT.init ), .C0(\STATE_OUT.serial.counter_31__N_152[3] ), 
    .B0(\STATE_OUT.n63 ), .CLK(SERCLK_OUT_c), .Q0(\STATE_OUT.counter[3] ), 
    .Q1(\STATE_OUT.counter[2] ), .F0(\STATE_OUT.serial.counter_31__N_83[3] ), 
    .F1(\STATE_OUT.serial.counter_31__N_83[2] ));
  STATE_OUT_serial_SLICE_94 \STATE_OUT.serial.SLICE_94 ( 
    .DI1(\STATE_OUT.serial.aux_3__N_115[2]$n11 ), 
    .DI0(\STATE_OUT.serial.aux_3__N_115[3]$n10 ), 
    .D1(\STATE_OUT.serial.aux[2] ), .C1(SENSOR1_IN_c), .A1(\STATE_OUT.n63 ), 
    .D0(\STATE_OUT.n63 ), .B0(\STATE_OUT.serial.aux[3] ), .A0(SENSOR2_IN_c), 
    .CLK(SERCLK_OUT_c), .Q0(\STATE_OUT.serial.aux[3] ), 
    .Q1(\STATE_OUT.serial.aux[2] ), 
    .F0(\STATE_OUT.serial.aux_3__N_115[3]$n10 ), 
    .F1(\STATE_OUT.serial.aux_3__N_115[2]$n11 ));
  STATE_OUT_serial_SLICE_96 \STATE_OUT.serial.SLICE_96 ( 
    .DI1(\STATE_OUT.serial.aux_3__N_115[0]$n13 ), 
    .DI0(\STATE_OUT.serial.aux_3__N_115[1]$n12 ), .D1(Sreg_c_0), 
    .C1(\STATE_OUT.serial.aux[0] ), .B1(Sreg_c_1), .A1(\STATE_OUT.n63 ), 
    .D0(\STATE_OUT.n63 ), .C0(Sreg_c_0), .B0(\STATE_OUT.serial.aux[1] ), 
    .A0(Sreg_c_1), .CLK(SERCLK_OUT_c), .Q0(\STATE_OUT.serial.aux[1] ), 
    .Q1(\STATE_OUT.serial.aux[0] ), 
    .F0(\STATE_OUT.serial.aux_3__N_115[1]$n12 ), 
    .F1(\STATE_OUT.serial.aux_3__N_115[0]$n13 ));
  mainTimer_SLICE_100 \mainTimer.SLICE_100 ( 
    .DI1(\mainTimer.clkCont_17__N_19[16] ), 
    .DI0(\mainTimer.clkCont_17__N_19[17] ), 
    .D1(\mainTimer.clkCont_17__N_40[16] ), .C1(TIME_OUT), 
    .C0(\mainTimer.clkCont_17__N_40[17] ), .B0(TIME_OUT), 
    .LSR(\mainTimer.clkCont_17__N_37 ), .CLK(SERCLK_OUT_c), 
    .Q0(\mainTimer.clkCont[17] ), .Q1(\mainTimer.clkCont[16] ), 
    .F0(\mainTimer.clkCont_17__N_19[17] ), 
    .F1(\mainTimer.clkCont_17__N_19[16] ));
  mainTimer_SLICE_102 \mainTimer.SLICE_102 ( 
    .DI1(\mainTimer.clkCont_17__N_19[14] ), 
    .DI0(\mainTimer.clkCont_17__N_19[15] ), .D1(TIME_OUT), 
    .A1(\mainTimer.clkCont_17__N_40[14] ), .C0(TIME_OUT), 
    .A0(\mainTimer.clkCont_17__N_40[15] ), .LSR(\mainTimer.clkCont_17__N_37 ), 
    .CLK(SERCLK_OUT_c), .Q0(\mainTimer.clkCont[15] ), 
    .Q1(\mainTimer.clkCont[14] ), .F0(\mainTimer.clkCont_17__N_19[15] ), 
    .F1(\mainTimer.clkCont_17__N_19[14] ));
  mainTimer_SLICE_104 \mainTimer.SLICE_104 ( 
    .DI1(\mainTimer.clkCont_17__N_19[12] ), 
    .DI0(\mainTimer.clkCont_17__N_19[13] ), 
    .B1(\mainTimer.clkCont_17__N_40[12] ), .A1(TIME_OUT), 
    .C0(\mainTimer.clkCont_17__N_40[13] ), .B0(TIME_OUT), 
    .LSR(\mainTimer.clkCont_17__N_37 ), .CLK(SERCLK_OUT_c), 
    .Q0(\mainTimer.clkCont[13] ), .Q1(\mainTimer.clkCont[12] ), 
    .F0(\mainTimer.clkCont_17__N_19[13] ), 
    .F1(\mainTimer.clkCont_17__N_19[12] ));
  mainTimer_SLICE_106 \mainTimer.SLICE_106 ( 
    .DI1(\mainTimer.clkCont_17__N_19[10] ), 
    .DI0(\mainTimer.clkCont_17__N_19[11] ), .D1(TIME_OUT), 
    .C1(\mainTimer.clkCont_17__N_40[10] ), 
    .D0(\mainTimer.clkCont_17__N_40[11] ), .A0(TIME_OUT), 
    .LSR(\mainTimer.clkCont_17__N_37 ), .CLK(SERCLK_OUT_c), 
    .Q0(\mainTimer.clkCont[11] ), .Q1(\mainTimer.clkCont[10] ), 
    .F0(\mainTimer.clkCont_17__N_19[11] ), 
    .F1(\mainTimer.clkCont_17__N_19[10] ));
  mainTimer_SLICE_108 \mainTimer.SLICE_108 ( 
    .DI1(\mainTimer.clkCont_17__N_19[8] ), 
    .DI0(\mainTimer.clkCont_17__N_19[9] ), .B1(TIME_OUT), 
    .A1(\mainTimer.clkCont_17__N_40[8] ), .D0(\mainTimer.clkCont_17__N_40[9] ), 
    .A0(TIME_OUT), .LSR(\mainTimer.clkCont_17__N_37 ), .CLK(SERCLK_OUT_c), 
    .Q0(\mainTimer.clkCont[9] ), .Q1(\mainTimer.clkCont[8] ), 
    .F0(\mainTimer.clkCont_17__N_19[9] ), .F1(\mainTimer.clkCont_17__N_19[8] ));
  mainTimer_SLICE_110 \mainTimer.SLICE_110 ( 
    .DI1(\mainTimer.clkCont_17__N_19[6] ), 
    .DI0(\mainTimer.clkCont_17__N_19[7] ), .D1(TIME_OUT), 
    .B1(\mainTimer.clkCont_17__N_40[6] ), .D0(\mainTimer.clkCont_17__N_40[7] ), 
    .C0(TIME_OUT), .LSR(\mainTimer.clkCont_17__N_37 ), .CLK(SERCLK_OUT_c), 
    .Q0(\mainTimer.clkCont[7] ), .Q1(\mainTimer.clkCont[6] ), 
    .F0(\mainTimer.clkCont_17__N_19[7] ), .F1(\mainTimer.clkCont_17__N_19[6] ));
  mainTimer_SLICE_112 \mainTimer.SLICE_112 ( 
    .DI1(\mainTimer.clkCont_17__N_19[4] ), 
    .DI0(\mainTimer.clkCont_17__N_19[5] ), 
    .D1(\mainTimer.clkCont_17__N_40[4] ), .B1(TIME_OUT), 
    .C0(\mainTimer.clkCont_17__N_40[5] ), .A0(TIME_OUT), 
    .LSR(\mainTimer.clkCont_17__N_37 ), .CLK(SERCLK_OUT_c), 
    .Q0(\mainTimer.clkCont[5] ), .Q1(\mainTimer.clkCont[4] ), 
    .F0(\mainTimer.clkCont_17__N_19[5] ), .F1(\mainTimer.clkCont_17__N_19[4] ));
  mainTimer_SLICE_114 \mainTimer.SLICE_114 ( 
    .DI1(\mainTimer.clkCont_17__N_19[2] ), 
    .DI0(\mainTimer.clkCont_17__N_19[3] ), .D1(TIME_OUT), 
    .B1(\mainTimer.clkCont_17__N_40[2] ), .B0(\mainTimer.clkCont_17__N_40[3] ), 
    .A0(TIME_OUT), .LSR(\mainTimer.clkCont_17__N_37 ), .CLK(SERCLK_OUT_c), 
    .Q0(\mainTimer.clkCont[3] ), .Q1(\mainTimer.clkCont[2] ), 
    .F0(\mainTimer.clkCont_17__N_19[3] ), .F1(\mainTimer.clkCont_17__N_19[2] ));
  mainTimer_SLICE_116 \mainTimer.SLICE_116 ( 
    .DI1(\mainTimer.clkCont_17__N_19[0] ), 
    .DI0(\mainTimer.clkCont_17__N_19[1] ), 
    .C1(\mainTimer.clkCont_17__N_40[0] ), .B1(TIME_OUT), 
    .D0(\mainTimer.clkCont_17__N_40[1] ), .A0(TIME_OUT), 
    .LSR(\mainTimer.clkCont_17__N_37 ), .CLK(SERCLK_OUT_c), 
    .Q0(\mainTimer.clkCont[1] ), .Q1(\mainTimer.clkCont[0] ), 
    .F0(\mainTimer.clkCont_17__N_19[1] ), .F1(\mainTimer.clkCont_17__N_19[0] ));
  SLICE_119 SLICE_119( .D1(n7), .C1(n1194), .B1(TIME_OUT), .A1(TIMER_EN_N_11), 
    .B0(KEY_STATUS_c_1), .A0(KEY_STATUS_c_0), .F0(TIMER_EN_N_11), 
    .F1(\Snext[1] ));
  SLICE_120 SLICE_120( .D1(KEY_STATUS_c_1), .C1(SENSOR1_IN_c), 
    .B1(KEY_STATUS_c_0), .A1(SENSOR2_IN_c), .D0(Sreg_c_0), .C0(\Snext[1] ), 
    .B0(n62), .A0(Sreg_c_1), .F0(n7), .F1(n62));
  mainTimer_SLICE_121 \mainTimer.SLICE_121 ( .C1(TIMER_EN), .D0(TIME_OUT), 
    .C0(TIMER_EN_N_13), .B0(TIMER_EN_N_11), .A0(TIMER_EN), .F0(TIMER_EN), 
    .F1(\mainTimer.clkCont_17__N_37 ));
  Keyboard_SLICE_123 \Keyboard.SLICE_123 ( .D1(\Keyboard.counter[25] ), 
    .C1(\Keyboard.n35 ), .B1(\Keyboard.counter[8] ), 
    .A1(\Keyboard.counter[23] ), .C0(\Keyboard.counter[2] ), 
    .A0(DEBUG_KEY_c_1), .F0(\Keyboard.n35 ), .F1(\Keyboard.n51 ));
  Keyboard_SLICE_124 \Keyboard.SLICE_124 ( .DI1(\Keyboard.n1992 ), 
    .D1(\Keyboard.n1359 ), .C1(\Keyboard.actualKey_0__1__N_238[0] ), 
    .B1(\Keyboard.n7 ), .A1(\Keyboard.actualKey_0__1__N_236[1] ), 
    .D0(\Keyboard.n35 ), .C0(KB_IN_c_0), .B0(\Keyboard.actualKey[3][0] ), 
    .A0(DEBUG_KEY_c_0), .LSR(\Keyboard.valid_1__N_272[0] ), .CLK(KB_RECV_c), 
    .Q1(KEY_STATUS_c_1), .F0(\Keyboard.actualKey_0__1__N_238[0] ), 
    .F1(\Keyboard.n1992 ));
  Keyboard_SLICE_125 \Keyboard.SLICE_125 ( .D1(\Keyboard.actualKey[0][1] ), 
    .C1(\Keyboard.n5 ), .A1(KB_IN_c_1), .D0(\Keyboard.counter[2] ), 
    .B0(DEBUG_KEY_c_1), .A0(DEBUG_KEY_c_0), .F0(\Keyboard.n5 ), 
    .F1(\Keyboard.actualKey_0__1__N_232[1] ));
  Keyboard_SLICE_126 \Keyboard.SLICE_126 ( 
    .D1(\Keyboard.actualKey_0__1__N_232[1] ), 
    .C1(\Keyboard.actualKey_0__1__N_232[0] ), 
    .B1(\Keyboard.actualKey_0__1__N_236[0] ), 
    .A1(\Keyboard.actualKey_0__1__N_234[1] ), .D0(\Keyboard.actualKey[0][0] ), 
    .C0(\Keyboard.n5 ), .A0(KB_IN_c_0), 
    .F0(\Keyboard.actualKey_0__1__N_232[0] ), .F1(\Keyboard.n1359 ));
  Keyboard_SLICE_127 \Keyboard.SLICE_127 ( .D0(\Keyboard.counter[29] ), 
    .C0(\Keyboard.counter[20] ), .B0(\Keyboard.counter[12] ), 
    .A0(\Keyboard.counter[18] ), .F0(\Keyboard.n54 ));
  Keyboard_SLICE_128 \Keyboard.SLICE_128 ( .D1(\Keyboard.n49 ), 
    .C1(\Keyboard.n60 ), .B1(\Keyboard.n55 ), .A1(\Keyboard.n50 ), 
    .D0(\Keyboard.n54 ), .C0(\Keyboard.n51 ), .B0(\Keyboard.n52 ), 
    .A0(\Keyboard.n53 ), .F0(\Keyboard.n60 ), .F1(\Keyboard.n351 ));
  Keyboard_SLICE_129 \Keyboard.SLICE_129 ( .D1(\Keyboard.counter[17] ), 
    .C1(\Keyboard.n48 ), .B1(\Keyboard.counter[28] ), 
    .A1(\Keyboard.counter[13] ), .D0(\Keyboard.counter[5] ), 
    .C0(\Keyboard.counter[24] ), .B0(\Keyboard.counter[9] ), 
    .A0(\Keyboard.counter[3] ), .F0(\Keyboard.n48 ), .F1(\Keyboard.n55 ));
  Keyboard_SLICE_131 \Keyboard.SLICE_131 ( 
    .DI1(\Keyboard.valid_1__N_272[0]$n7 ), .D1(\Keyboard.n55 ), 
    .C1(\Keyboard.n50 ), .B1(\Keyboard.n49 ), .A1(\Keyboard.n60 ), 
    .D0(DEBUG_KEY_c_0), .C0(\Keyboard.counter[7] ), 
    .B0(\Keyboard.counter[16] ), .A0(\Keyboard.counter[27] ), .CLK(KB_RECV_c), 
    .Q1(KEY_STATUS_c_0), .F0(\Keyboard.n50 ), 
    .F1(\Keyboard.valid_1__N_272[0]$n7 ));
  Keyboard_SLICE_133 \Keyboard.SLICE_133 ( .D1(\Keyboard.n55 ), 
    .C1(\Keyboard.n49 ), .B1(\Keyboard.n50 ), .A1(\Keyboard.n60 ), 
    .D0(\Keyboard.counter[26] ), .C0(\Keyboard.counter[10] ), 
    .B0(\Keyboard.counter[15] ), .A0(\Keyboard.counter[19] ), 
    .F0(\Keyboard.n49 ), .F1(\Keyboard.valid_1__N_272[0] ));
  Keyboard_SLICE_135 \Keyboard.SLICE_135 ( .C1(\Keyboard.n5_adj_274 ), 
    .B1(\Keyboard.actualKey[1][1] ), .A1(KB_IN_c_1), .D0(DEBUG_KEY_c_1), 
    .B0(\Keyboard.counter[2] ), .A0(DEBUG_KEY_c_0), .F0(\Keyboard.n5_adj_274 ), 
    .F1(\Keyboard.actualKey_0__1__N_234[1] ));
  Keyboard_SLICE_139 \Keyboard.SLICE_139 ( .D1(\Keyboard.n5_adj_274 ), 
    .C1(\Keyboard.actualKey_0__1__N_238[1] ), .B1(KB_IN_c_0), 
    .A1(\Keyboard.actualKey[1][0] ), .D0(KB_IN_c_1), 
    .C0(\Keyboard.actualKey[3][1] ), .B0(\Keyboard.n35 ), .A0(DEBUG_KEY_c_0), 
    .F0(\Keyboard.actualKey_0__1__N_238[1] ), .F1(\Keyboard.n7 ));
  SLICE_141 SLICE_141( .D1(\Snext[0] ), .C1(n287), .B1(TIMER_EN_N_11), 
    .A1(\Snext_1__N_2[0] ), .D0(Sreg_c_0), .C0(TIME_OUT), .B0(n62), 
    .A0(Sreg_c_1), .F0(n287), .F1(\Snext[0] ));
  SLICE_143 SLICE_143( .D1(TIME_OUT), .C1(n1509), .B1(Sreg_c_0), .A1(Sreg_c_1), 
    .D0(SENSOR1_IN_c), .B0(KEY_STATUS_c_0), .A0(KEY_STATUS_c_1), .F0(n1509), 
    .F1(\Snext_1__N_2[0] ));
  SLICE_145 SLICE_145( .B1(KEY_STATUS_c_1), .A1(KEY_STATUS_c_0), 
    .B0(KEY_STATUS_c_0), .A0(KEY_STATUS_c_1), .F0(n6), .F1(n3));
  SLICE_146 SLICE_146( .D1(n3), .C1(n1194), .B1(n6), .A1(TIME_OUT), 
    .D0(Sreg_c_0), .B0(Sreg_c_1), .F0(n1194), .F1(TIMER_EN_N_13));
  STATE_OUT_SLICE_147 \STATE_OUT.SLICE_147 ( .D0(\STATE_OUT.counter[21] ), 
    .C0(\STATE_OUT.counter[19] ), .B0(\STATE_OUT.counter[18] ), 
    .A0(\STATE_OUT.counter[5] ), .F0(\STATE_OUT.n32 ));
  STATE_OUT_SLICE_148 \STATE_OUT.SLICE_148 ( .C1(\STATE_OUT.n35 ), 
    .B1(\STATE_OUT.n31 ), .A1(\STATE_OUT.n32 ), .D0(\STATE_OUT.counter[26] ), 
    .C0(\STATE_OUT.counter[31] ), .B0(\STATE_OUT.counter[17] ), 
    .A0(\STATE_OUT.counter[20] ), .F0(\STATE_OUT.n35 ), .F1(\STATE_OUT.n38 ));
  STATE_OUT_SLICE_149 \STATE_OUT.SLICE_149 ( .D0(\STATE_OUT.counter[27] ), 
    .C0(\STATE_OUT.counter[28] ), .B0(\STATE_OUT.counter[30] ), 
    .A0(\STATE_OUT.counter[7] ), .F0(\STATE_OUT.n34 ));
  STATE_OUT_SLICE_150 \STATE_OUT.SLICE_150 ( .D1(\STATE_OUT.n38 ), 
    .C1(\STATE_OUT.n4 ), .B1(\STATE_OUT.n33 ), .A1(\STATE_OUT.n34 ), 
    .D0(\STATE_OUT.n17 ), .C0(\STATE_OUT.n18 ), .B0(\STATE_OUT.counter[1] ), 
    .A0(\STATE_OUT.counter[3] ), .F0(\STATE_OUT.n4 ), .F1(\STATE_OUT.n63 ));
  STATE_OUT_serial_SLICE_152 \STATE_OUT.serial.SLICE_152 ( 
    .D0(\STATE_OUT.serial.counter[8]_2 ), 
    .C0(\STATE_OUT.serial.counter[14]_2 ), .B0(\STATE_OUT.counter[2] ), 
    .A0(\STATE_OUT.serial.counter[11]_2 ), .F0(\STATE_OUT.n17 ));
  STATE_OUT_serial_SLICE_153 \STATE_OUT.serial.SLICE_153 ( 
    .D1(\STATE_OUT.serial.counter[15]_2 ), .C1(\STATE_OUT.serial.n16 ), 
    .A1(\STATE_OUT.serial.counter[13]_2 ), 
    .D0(\STATE_OUT.serial.counter[9]_2 ), 
    .C0(\STATE_OUT.serial.counter[12]_2 ), .B0(\STATE_OUT.counter[0] ), 
    .A0(\STATE_OUT.serial.counter[10]_2 ), .F0(\STATE_OUT.serial.n16 ), 
    .F1(\STATE_OUT.n18 ));
  STATE_OUT_serial_SLICE_155 \STATE_OUT.serial.SLICE_155 ( 
    .D1(\STATE_OUT.serial.aux_3__N_115[2] ), 
    .C1(\STATE_OUT.serial.aux_3__N_115[3] ), 
    .B1(\STATE_OUT.serial.counter_31__N_182[0] ), 
    .A1(\STATE_OUT.serial.counter_31__N_182[1] ), 
    .D0(\STATE_OUT.serial.aux[3] ), .C0(\STATE_OUT.n63 ), .B0(SENSOR2_IN_c), 
    .F0(\STATE_OUT.serial.aux_3__N_115[3] ), .F1(\STATE_OUT.serial.n1844 ));
  STATE_OUT_serial_SLICE_156 \STATE_OUT.serial.SLICE_156 ( .D0(SENSOR1_IN_c), 
    .B0(\STATE_OUT.serial.aux[2] ), .A0(\STATE_OUT.n63 ), 
    .F0(\STATE_OUT.serial.aux_3__N_115[2] ));
  mainTimer_SLICE_157 \mainTimer.SLICE_157 ( .D1(\mainTimer.clkCont[3] ), 
    .C1(\mainTimer.n1357 ), .B1(\mainTimer.clkCont[14] ), 
    .D0(\mainTimer.clkCont[12] ), .C0(\mainTimer.clkCont[7] ), 
    .B0(\mainTimer.clkCont[0] ), .A0(\mainTimer.clkCont[11] ), 
    .F0(\mainTimer.n1357 ), .F1(\mainTimer.n17 ));
  mainTimer_SLICE_159 \mainTimer.SLICE_159 ( .DI1(\mainTimer.n1990 ), 
    .D1(\mainTimer.n8 ), .C1(\mainTimer.clkCont[9] ), .B1(\mainTimer.n7 ), 
    .A1(\mainTimer.clkCont[13] ), .D0(\mainTimer.clkCont[6] ), 
    .C0(\mainTimer.clkCont[17] ), .B0(TIME_OUT), .A0(\mainTimer.clkCont[16] ), 
    .LSR(\mainTimer.clkCont_17__N_37 ), .CLK(SERCLK_OUT_c), .Q1(TIME_OUT), 
    .F0(\mainTimer.n18 ), .F1(\mainTimer.n1990 ));
  mainTimer_SLICE_160 \mainTimer.SLICE_160 ( .D1(\mainTimer.n17 ), 
    .C1(\mainTimer.n19 ), .B1(\mainTimer.clkCont[1] ), .A1(\mainTimer.n18 ), 
    .D0(\mainTimer.clkCont[10] ), .C0(\mainTimer.clkCont[8] ), 
    .B0(\mainTimer.clkCont[15] ), .A0(\mainTimer.clkCont[5] ), 
    .F0(\mainTimer.n19 ), .F1(\mainTimer.n7 ));
  STATE_OUT_serial_SLICE_161 \STATE_OUT.serial.SLICE_161 ( 
    .DI1(\STATE_OUT.serial.status_out_N_189 ), .D1(\STATE_OUT.serial.n1844 ), 
    .C1(\STATE_OUT.serial.aux_3__N_115[0] ), 
    .B1(\STATE_OUT.serial.aux_3__N_115[1] ), 
    .A1(\STATE_OUT.serial.counter_31__N_182[1] ), .D0(\STATE_OUT.n63 ), 
    .C0(\STATE_OUT.serial.aux[0] ), .B0(Sreg_c_1), .A0(Sreg_c_0), 
    .LSR(\STATE_OUT.serial.counter_31__N_184 ), .CLK(SERCLK_OUT_c), 
    .Q1(STATUS_OUT_c), .F0(\STATE_OUT.serial.aux_3__N_115[0] ), 
    .F1(\STATE_OUT.serial.status_out_N_189 ));
  STATE_OUT_serial_SLICE_162 \STATE_OUT.serial.SLICE_162 ( .D1(Sreg_c_0), 
    .B1(Sreg_c_1), .D0(\STATE_OUT.n63 ), .C0(Sreg_c_0), 
    .B0(\STATE_OUT.serial.aux[1] ), .A0(Sreg_c_1), 
    .F0(\STATE_OUT.serial.aux_3__N_115[1] ), .F1(SIREN_OUT_c));
  Keyboard_SLICE_163 \Keyboard.SLICE_163 ( .D0(\Keyboard.counter[4] ), 
    .C0(\Keyboard.counter[22] ), .B0(\Keyboard.counter[31] ), 
    .A0(\Keyboard.counter[21] ), .F0(\Keyboard.n53 ));
  STATE_OUT_SLICE_167 \STATE_OUT.SLICE_167 ( .D0(\STATE_OUT.cont[2] ), 
    .C0(\STATE_OUT.cont[3] ), .B0(\STATE_OUT.cont[0] ), 
    .A0(\STATE_OUT.cont[1] ), .F0(\STATE_OUT.n3 ));
  STATE_OUT_SLICE_168 \STATE_OUT.SLICE_168 ( .DI1(\STATE_OUT.n514 ), 
    .D1(\STATE_OUT.n3 ), .B1(\STATE_OUT.waiting ), .C0(\STATE_OUT.cont[1] ), 
    .B0(\STATE_OUT.cont[0] ), .A0(\STATE_OUT.waiting ), 
    .LSR(\STATE_OUT.state_send_N_66 ), .CLK(SERCLK_OUT_c), 
    .Q1(\STATE_OUT.waiting ), .F0(\STATE_OUT.n729 ), .F1(\STATE_OUT.n514 ));
  SLICE_169 SLICE_169( .F0(VCC_net));
  Keyboard_SLICE_170 \Keyboard.SLICE_170 ( .D0(\Keyboard.counter[30] ), 
    .C0(\Keyboard.counter[14] ), .B0(\Keyboard.counter[6] ), 
    .A0(\Keyboard.counter[11] ), .F0(\Keyboard.n52 ));
  Keyboard_SLICE_171 \Keyboard.SLICE_171 ( .D1(\Keyboard.n35 ), 
    .C1(\Keyboard.actualKey[2][1] ), .B1(DEBUG_KEY_c_0), .A1(KB_IN_c_1), 
    .D0(\Keyboard.n35 ), .C0(KB_IN_c_0), .B0(DEBUG_KEY_c_0), 
    .A0(\Keyboard.actualKey[2][0] ), .F0(\Keyboard.actualKey_0__1__N_236[0] ), 
    .F1(\Keyboard.actualKey_0__1__N_236[1] ));
  STATE_OUT_SLICE_176 \STATE_OUT.SLICE_176 ( .D0(\STATE_OUT.init ), 
    .C0(\STATE_OUT.counter[0] ), .F0(\STATE_OUT.counter_31__N_120[0] ));
  STATE_OUT_SLICE_177 \STATE_OUT.SLICE_177 ( 
    .DI1(\STATE_OUT.init.sig_000.FeedThruLUT ), .C1(\STATE_OUT.init ), 
    .A0(STATUS_SEND_c), .CE(\STATE_OUT.serial.n341 ), .CLK(SERCLK_OUT_c), 
    .Q1(STATUS_SEND_c), .F0(\STATE_OUT.state_send_N_66 ), 
    .F1(\STATE_OUT.init.sig_000.FeedThruLUT ));
  STATE_OUT_SLICE_178 \STATE_OUT.SLICE_178 ( .D0(\STATE_OUT.counter[22] ), 
    .C0(\STATE_OUT.counter[4] ), .B0(\STATE_OUT.counter[25] ), 
    .A0(\STATE_OUT.counter[29] ), .F0(\STATE_OUT.n31 ));
  STATE_OUT_SLICE_180 \STATE_OUT.SLICE_180 ( .D0(\STATE_OUT.counter[16] ), 
    .C0(\STATE_OUT.counter[23] ), .B0(\STATE_OUT.counter[24] ), 
    .A0(\STATE_OUT.counter[6] ), .F0(\STATE_OUT.n33 ));
  STATE_OUT_SLICE_181 \STATE_OUT.SLICE_181 ( .D1(\STATE_OUT.counter[1] ), 
    .C1(\STATE_OUT.init ), .D0(\STATE_OUT.counter[2] ), .B0(\STATE_OUT.init ), 
    .F0(\STATE_OUT.counter_31__N_120[2] ), 
    .F1(\STATE_OUT.counter_31__N_120[1] ));
  STATE_OUT_SLICE_183 \STATE_OUT.SLICE_183 ( .DI1(\STATE_OUT.n355 ), 
    .D1(STATUS_SEND_c), .C1(\STATE_OUT.init ), .B1(\STATE_OUT.waiting ), 
    .A1(\STATE_OUT.n3 ), .D0(\STATE_OUT.counter[3] ), .B0(\STATE_OUT.init ), 
    .CLK(SERCLK_OUT_c), .Q1(\STATE_OUT.init ), 
    .F0(\STATE_OUT.counter_31__N_120[3] ), .F1(\STATE_OUT.n355 ));
  STATE_OUT_serial_SLICE_184 \STATE_OUT.serial.SLICE_184 ( 
    .B1(\STATE_OUT.init ), .A1(\STATE_OUT.counter[23] ), 
    .C0(\STATE_OUT.counter[28] ), .A0(\STATE_OUT.init ), 
    .F0(\STATE_OUT.serial.counter_31__N_120[28] ), 
    .F1(\STATE_OUT.serial.counter_31__N_120[23] ));
  STATE_OUT_serial_SLICE_186 \STATE_OUT.serial.SLICE_186 ( 
    .B1(\STATE_OUT.init ), .A1(\STATE_OUT.counter[30] ), .C0(\STATE_OUT.init ), 
    .B0(\STATE_OUT.counter[29] ), 
    .F0(\STATE_OUT.serial.counter_31__N_120[29] ), 
    .F1(\STATE_OUT.serial.counter_31__N_120[30] ));
  STATE_OUT_serial_SLICE_187 \STATE_OUT.serial.SLICE_187 ( 
    .C1(\STATE_OUT.n63 ), .B1(\STATE_OUT.init ), .D0(\STATE_OUT.n63 ), 
    .A0(\STATE_OUT.init ), .F0(\STATE_OUT.serial.n341 ), 
    .F1(\STATE_OUT.serial.counter_31__N_184 ));
  STATE_OUT_serial_SLICE_190 \STATE_OUT.serial.SLICE_190 ( 
    .C1(\STATE_OUT.init ), .B1(\STATE_OUT.counter[25] ), .B0(\STATE_OUT.init ), 
    .A0(\STATE_OUT.counter[26] ), 
    .F0(\STATE_OUT.serial.counter_31__N_120[26] ), 
    .F1(\STATE_OUT.serial.counter_31__N_120[25] ));
  STATE_OUT_serial_SLICE_192 \STATE_OUT.serial.SLICE_192 ( 
    .B1(\STATE_OUT.counter[20] ), .A1(\STATE_OUT.init ), 
    .C0(\STATE_OUT.counter[31] ), .B0(\STATE_OUT.init ), 
    .F0(\STATE_OUT.serial.counter_31__N_120[31] ), 
    .F1(\STATE_OUT.serial.counter_31__N_120[20] ));
  STATE_OUT_serial_SLICE_194 \STATE_OUT.serial.SLICE_194 ( 
    .D1(\STATE_OUT.init ), .A1(\STATE_OUT.counter[22] ), 
    .B0(\STATE_OUT.counter[19] ), .A0(\STATE_OUT.init ), 
    .F0(\STATE_OUT.serial.counter_31__N_120[19] ), 
    .F1(\STATE_OUT.serial.counter_31__N_120[22] ));
  STATE_OUT_serial_SLICE_196 \STATE_OUT.serial.SLICE_196 ( 
    .D1(\STATE_OUT.counter[4] ), .B1(\STATE_OUT.init ), 
    .C0(\STATE_OUT.counter[21] ), .A0(\STATE_OUT.init ), 
    .F0(\STATE_OUT.serial.counter_31__N_120[21] ), 
    .F1(\STATE_OUT.serial.counter_31__N_120[4] ));
  STATE_OUT_serial_SLICE_198 \STATE_OUT.serial.SLICE_198 ( 
    .D1(\STATE_OUT.init ), .A1(\STATE_OUT.counter[27] ), 
    .B0(\STATE_OUT.counter[24] ), .A0(\STATE_OUT.init ), 
    .F0(\STATE_OUT.serial.counter_31__N_120[24] ), 
    .F1(\STATE_OUT.serial.counter_31__N_120[27] ));
  STATE_OUT_serial_SLICE_200 \STATE_OUT.serial.SLICE_200 ( 
    .D1(\STATE_OUT.counter[17] ), .B1(\STATE_OUT.init ), 
    .C0(\STATE_OUT.counter[18] ), .A0(\STATE_OUT.init ), 
    .F0(\STATE_OUT.serial.counter_31__N_120[18] ), 
    .F1(\STATE_OUT.serial.counter_31__N_120[17] ));
  STATE_OUT_serial_SLICE_202 \STATE_OUT.serial.SLICE_202 ( 
    .D1(\STATE_OUT.init ), .A1(\STATE_OUT.counter[7] ), .C0(\STATE_OUT.init ), 
    .A0(\STATE_OUT.counter[16] ), 
    .F0(\STATE_OUT.serial.counter_31__N_120[16] ), 
    .F1(\STATE_OUT.serial.counter_31__N_120[7] ));
  STATE_OUT_serial_SLICE_203 \STATE_OUT.serial.SLICE_203 ( 
    .DI1(\STATE_OUT.serial.counter_31__N_83[15] ), .D1(\STATE_OUT.init ), 
    .C1(\STATE_OUT.n63 ), .B1(\STATE_OUT.serial.counter[15]_2 ), 
    .A1(\STATE_OUT.serial.counter_31__N_152[15] ), 
    .C0(\STATE_OUT.serial.counter[15]_2 ), .A0(\STATE_OUT.init ), 
    .CLK(SERCLK_OUT_c), .Q1(\STATE_OUT.serial.counter[15]_2 ), 
    .F0(\STATE_OUT.serial.counter_31__N_120[15] ), 
    .F1(\STATE_OUT.serial.counter_31__N_83[15] ));
  STATE_OUT_serial_SLICE_204 \STATE_OUT.serial.SLICE_204 ( 
    .DI1(\STATE_OUT.serial.counter_31__N_83[14] ), .D1(\STATE_OUT.init ), 
    .C1(\STATE_OUT.serial.counter[14]_2 ), .B1(\STATE_OUT.n63 ), 
    .A1(\STATE_OUT.serial.counter_31__N_152[14] ), 
    .C0(\STATE_OUT.serial.counter[14]_2 ), .A0(\STATE_OUT.init ), 
    .CLK(SERCLK_OUT_c), .Q1(\STATE_OUT.serial.counter[14]_2 ), 
    .F0(\STATE_OUT.serial.counter_31__N_120[14] ), 
    .F1(\STATE_OUT.serial.counter_31__N_83[14] ));
  STATE_OUT_serial_SLICE_205 \STATE_OUT.serial.SLICE_205 ( 
    .DI1(\STATE_OUT.serial.counter_31__N_83[13] ), .D1(\STATE_OUT.n63 ), 
    .C1(\STATE_OUT.init ), .B1(\STATE_OUT.serial.counter_31__N_152[13] ), 
    .A1(\STATE_OUT.serial.counter[13]_2 ), .D0(\STATE_OUT.init ), 
    .B0(\STATE_OUT.serial.counter[13]_2 ), .CLK(SERCLK_OUT_c), 
    .Q1(\STATE_OUT.serial.counter[13]_2 ), 
    .F0(\STATE_OUT.serial.counter_31__N_120[13] ), 
    .F1(\STATE_OUT.serial.counter_31__N_83[13] ));
  STATE_OUT_serial_SLICE_206 \STATE_OUT.serial.SLICE_206 ( 
    .DI1(\STATE_OUT.serial.counter_31__N_83[12] ), .D1(\STATE_OUT.n63 ), 
    .C1(\STATE_OUT.serial.counter_31__N_152[12] ), 
    .B1(\STATE_OUT.serial.counter[12]_2 ), .A1(\STATE_OUT.init ), 
    .D0(\STATE_OUT.init ), .A0(\STATE_OUT.serial.counter[12]_2 ), 
    .CLK(SERCLK_OUT_c), .Q1(\STATE_OUT.serial.counter[12]_2 ), 
    .F0(\STATE_OUT.serial.counter_31__N_120[12] ), 
    .F1(\STATE_OUT.serial.counter_31__N_83[12] ));
  STATE_OUT_serial_SLICE_207 \STATE_OUT.serial.SLICE_207 ( 
    .DI1(\STATE_OUT.serial.counter_31__N_83[11] ), .D1(\STATE_OUT.n63 ), 
    .C1(\STATE_OUT.serial.counter[11]_2 ), .B1(\STATE_OUT.init ), 
    .A1(\STATE_OUT.serial.counter_31__N_152[11] ), 
    .C0(\STATE_OUT.serial.counter[11]_2 ), .A0(\STATE_OUT.init ), 
    .CLK(SERCLK_OUT_c), .Q1(\STATE_OUT.serial.counter[11]_2 ), 
    .F0(\STATE_OUT.serial.counter_31__N_120[11] ), 
    .F1(\STATE_OUT.serial.counter_31__N_83[11] ));
  STATE_OUT_serial_SLICE_208 \STATE_OUT.serial.SLICE_208 ( 
    .DI1(\STATE_OUT.serial.counter_31__N_83[10] ), .D1(\STATE_OUT.n63 ), 
    .C1(\STATE_OUT.init ), .B1(\STATE_OUT.serial.counter_31__N_152[10] ), 
    .A1(\STATE_OUT.serial.counter[10]_2 ), .D0(\STATE_OUT.init ), 
    .B0(\STATE_OUT.serial.counter[10]_2 ), .CLK(SERCLK_OUT_c), 
    .Q1(\STATE_OUT.serial.counter[10]_2 ), 
    .F0(\STATE_OUT.serial.counter_31__N_120[10] ), 
    .F1(\STATE_OUT.serial.counter_31__N_83[10] ));
  STATE_OUT_serial_SLICE_209 \STATE_OUT.serial.SLICE_209 ( 
    .DI1(\STATE_OUT.serial.counter_31__N_83[9] ), 
    .D1(\STATE_OUT.serial.counter_31__N_152[9] ), 
    .C1(\STATE_OUT.serial.counter[9]_2 ), .B1(\STATE_OUT.n63 ), 
    .A1(\STATE_OUT.init ), .D0(\STATE_OUT.serial.counter[9]_2 ), 
    .B0(\STATE_OUT.init ), .CLK(SERCLK_OUT_c), 
    .Q1(\STATE_OUT.serial.counter[9]_2 ), 
    .F0(\STATE_OUT.serial.counter_31__N_120[9] ), 
    .F1(\STATE_OUT.serial.counter_31__N_83[9] ));
  STATE_OUT_serial_SLICE_210 \STATE_OUT.serial.SLICE_210 ( 
    .DI1(\STATE_OUT.serial.counter_31__N_83[8] ), .D1(\STATE_OUT.init ), 
    .C1(\STATE_OUT.serial.counter[8]_2 ), .B1(\STATE_OUT.n63 ), 
    .A1(\STATE_OUT.serial.counter_31__N_152[8] ), 
    .D0(\STATE_OUT.serial.counter[8]_2 ), .C0(\STATE_OUT.init ), 
    .CLK(SERCLK_OUT_c), .Q1(\STATE_OUT.serial.counter[8]_2 ), 
    .F0(\STATE_OUT.serial.counter_31__N_120[8] ), 
    .F1(\STATE_OUT.serial.counter_31__N_83[8] ));
  STATE_OUT_serial_SLICE_212 \STATE_OUT.serial.SLICE_212 ( 
    .C1(\STATE_OUT.counter[5] ), .B1(\STATE_OUT.init ), 
    .D0(\STATE_OUT.counter[6] ), .A0(\STATE_OUT.init ), 
    .F0(\STATE_OUT.serial.counter_31__N_120[6] ), 
    .F1(\STATE_OUT.serial.counter_31__N_120[5] ));
  mainTimer_SLICE_216 \mainTimer.SLICE_216 ( .B0(\mainTimer.clkCont[2] ), 
    .A0(\mainTimer.clkCont[4] ), .F0(\mainTimer.n8 ));
  OSCInst1 OSCInst1( .CLKLFPU(VCC_net), .CLKLFEN(VCC_net), 
    .CLKLF(SERCLK_OUT_c));
  STATUS_OUT STATUS_OUT_I( .PADDO(STATUS_OUT_c), .STATUS_OUT(STATUS_OUT));
  SIREN_OUT SIREN_OUT_I( .PADDO(SIREN_OUT_c), .SIREN_OUT(SIREN_OUT));
  STATUS_SEND STATUS_SEND_I( .PADDO(STATUS_SEND_c), .STATUS_SEND(STATUS_SEND));
  SERCLK_OUT SERCLK_OUT_I( .PADDO(SERCLK_OUT_c), .SERCLK_OUT(SERCLK_OUT));
  Sreg_1_ \Sreg[1]_I ( .PADDO(Sreg_c_1), .Sreg1(Sreg[1]));
  Sreg_0_ \Sreg[0]_I ( .PADDO(Sreg_c_0), .Sreg0(Sreg[0]));
  KEY_STATUS_1_ \KEY_STATUS[1]_I ( .PADDO(KEY_STATUS_c_1), 
    .KEYSTATUS1(KEY_STATUS[1]));
  KEY_STATUS_0_ \KEY_STATUS[0]_I ( .PADDO(KEY_STATUS_c_0), 
    .KEYSTATUS0(KEY_STATUS[0]));
  DEBUG_KEY_1_ \DEBUG_KEY[1]_I ( .PADDO(DEBUG_KEY_c_1), 
    .DEBUGKEY1(DEBUG_KEY[1]));
  DEBUG_KEY_0_ \DEBUG_KEY[0]_I ( .PADDO(DEBUG_KEY_c_0), 
    .DEBUGKEY0(DEBUG_KEY[0]));
  SENSOR1_IN SENSOR1_IN_I( .PADDI(SENSOR1_IN_c), .SENSOR1_IN(SENSOR1_IN));
  SENSOR2_IN SENSOR2_IN_I( .PADDI(SENSOR2_IN_c), .SENSOR2_IN(SENSOR2_IN));
  KB_IN_1_ \KB_IN[1]_I ( .PADDI(KB_IN_c_1), .KBIN1(KB_IN[1]));
  KB_IN_0_ \KB_IN[0]_I ( .PADDI(KB_IN_c_0), .KBIN0(KB_IN[0]));
  KB_RECV KB_RECV_I( .PADDI(KB_RECV_c), .KB_RECV(KB_RECV));
endmodule

module Keyboard_SLICE_0 ( input DI1, DI0, D1, C1, D0, C0, LSR, CLK, CIN0, CIN1, 
    output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  fa2 \Keyboard/counter_121_add_4_31 ( .A0(GNDI), .B0(GNDI), .C0(C0), .D0(D0), 
    .A1(GNDI), .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \Keyboard/counter_121__i30 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \Keyboard/counter_121__i31 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module fa2 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI0, CI1, output S0, S1, 
    CO0, CO1 );

  FA2 inst1( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .CI0(CI0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .CI1(CI1), .CO0(CO0), .CO1(CO1), .S0(S0), .S1(S1));
  defparam inst1.INIT0 = "0xc33c";
  defparam inst1.INIT1 = "0xc33c";
endmodule

module gnd ( output PWR0 );

  VLO INST1( .Z(PWR0));
endmodule

module ffsre2 ( input D0, SP, CK, LSR, output Q );

  FD1P3XZ INST01( .D(D0), .SP(SP), .CK(CK), .SR(LSR), .Q(Q));
  defparam INST01.REGSET = "RESET";
  defparam INST01.SRMODE = "CE_OVER_LSR";
endmodule

module vcc ( output PWR1 );

  VHI INST1( .Z(PWR1));
endmodule

module Keyboard_SLICE_1 ( input DI1, DI0, D1, C1, D0, C0, LSR, CLK, CIN0, CIN1, 
    output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  fa2 \Keyboard/counter_121_add_4_11 ( .A0(GNDI), .B0(GNDI), .C0(C0), .D0(D0), 
    .A1(GNDI), .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \Keyboard/counter_121__i10 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \Keyboard/counter_121__i11 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module Keyboard_SLICE_2 ( input DI1, DI0, D1, C1, D0, C0, LSR, CLK, CIN0, CIN1, 
    output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  fa2 \Keyboard/counter_121_add_4_9 ( .A0(GNDI), .B0(GNDI), .C0(C0), .D0(D0), 
    .A1(GNDI), .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \Keyboard/counter_121__i8 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \Keyboard/counter_121__i9 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module Keyboard_SLICE_3 ( input DI1, DI0, D1, C1, D0, C0, LSR, CLK, CIN0, CIN1, 
    output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  fa2 \Keyboard/counter_121_add_4_29 ( .A0(GNDI), .B0(GNDI), .C0(C0), .D0(D0), 
    .A1(GNDI), .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \Keyboard/counter_121__i28 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \Keyboard/counter_121__i29 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module Keyboard_SLICE_4 ( input DI1, DI0, D1, C1, D0, C0, LSR, CLK, CIN0, CIN1, 
    output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  fa2 \Keyboard/counter_121_add_4_7 ( .A0(GNDI), .B0(GNDI), .C0(C0), .D0(D0), 
    .A1(GNDI), .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \Keyboard/counter_121__i6 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \Keyboard/counter_121__i7 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module Keyboard_SLICE_5 ( input DI1, DI0, D1, C1, D0, C0, LSR, CLK, CIN0, CIN1, 
    output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  fa2 \Keyboard/counter_121_add_4_27 ( .A0(GNDI), .B0(GNDI), .C0(C0), .D0(D0), 
    .A1(GNDI), .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \Keyboard/counter_121__i26 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \Keyboard/counter_121__i27 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module Keyboard_SLICE_6 ( input DI1, DI0, D1, C1, D0, C0, LSR, CLK, CIN0, CIN1, 
    output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  fa2 \Keyboard/counter_121_add_4_5 ( .A0(GNDI), .B0(GNDI), .C0(C0), .D0(D0), 
    .A1(GNDI), .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \Keyboard/counter_121__i4 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \Keyboard/counter_121__i5 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module Keyboard_SLICE_7 ( input DI1, DI0, D1, C1, D0, C0, LSR, CLK, CIN0, CIN1, 
    output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  fa2 \Keyboard/counter_121_add_4_25 ( .A0(GNDI), .B0(GNDI), .C0(C0), .D0(D0), 
    .A1(GNDI), .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \Keyboard/counter_121__i24 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \Keyboard/counter_121__i25 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module Keyboard_SLICE_8 ( input DI1, DI0, D1, C1, D0, C0, LSR, CLK, CIN0, CIN1, 
    output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  fa2 \Keyboard/counter_121_add_4_3 ( .A0(GNDI), .B0(GNDI), .C0(C0), .D0(D0), 
    .A1(GNDI), .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \Keyboard/counter_121__i2 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \Keyboard/counter_121__i3 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module Keyboard_SLICE_9 ( input DI1, D1, C1, B1, LSR, CLK, CIN1, output Q1, F1, 
    COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, LSR_dly;

  fa2 \Keyboard/counter_121_add_4_1 ( .A0(GNDI), .B0(GNDI), .C0(GNDI), 
    .D0(VCCI), .A1(GNDI), .B1(B1), .C1(C1), .D1(D1), .CI0(VCCI), .CI1(CIN1), 
    .S0(), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \Keyboard/counter_121__i1 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module Keyboard_SLICE_10 ( input DI1, DI0, D1, C1, D0, C0, LSR, CLK, CIN0, 
    CIN1, output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  fa2 \Keyboard/counter_121_add_4_23 ( .A0(GNDI), .B0(GNDI), .C0(C0), .D0(D0), 
    .A1(GNDI), .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \Keyboard/counter_121__i22 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \Keyboard/counter_121__i23 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module Keyboard_SLICE_11 ( input DI1, DI0, D1, C1, D0, C0, LSR, CLK, CIN0, 
    CIN1, output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  fa2 \Keyboard/counter_121_add_4_21 ( .A0(GNDI), .B0(GNDI), .C0(C0), .D0(D0), 
    .A1(GNDI), .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \Keyboard/counter_121__i20 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \Keyboard/counter_121__i21 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module Keyboard_SLICE_12 ( input DI1, DI0, D1, C1, D0, C0, LSR, CLK, CIN0, 
    CIN1, output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  fa2 \Keyboard/counter_121_add_4_19 ( .A0(GNDI), .B0(GNDI), .C0(C0), .D0(D0), 
    .A1(GNDI), .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \Keyboard/counter_121__i18 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \Keyboard/counter_121__i19 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module Keyboard_SLICE_13 ( input DI1, DI0, D1, C1, D0, C0, LSR, CLK, CIN0, 
    CIN1, output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  fa2 \Keyboard/counter_121_add_4_17 ( .A0(GNDI), .B0(GNDI), .C0(C0), .D0(D0), 
    .A1(GNDI), .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \Keyboard/counter_121__i16 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \Keyboard/counter_121__i17 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module Keyboard_SLICE_14 ( input DI1, DI0, D1, C1, D0, C0, LSR, CLK, CIN0, 
    CIN1, output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  fa2 \Keyboard/counter_121_add_4_15 ( .A0(GNDI), .B0(GNDI), .C0(C0), .D0(D0), 
    .A1(GNDI), .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \Keyboard/counter_121__i14 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \Keyboard/counter_121__i15 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module Keyboard_SLICE_15 ( input DI1, DI0, D1, C1, D0, C0, LSR, CLK, CIN0, 
    CIN1, output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  fa2 \Keyboard/counter_121_add_4_13 ( .A0(GNDI), .B0(GNDI), .C0(C0), .D0(D0), 
    .A1(GNDI), .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \Keyboard/counter_121__i12 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \Keyboard/counter_121__i13 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module Keyboard_SLICE_16 ( input DI0, D1, D0, C0, LSR, CLK, CIN0, CIN1, 
    output Q0, F0, COUT0 );
  wire   GNDI, VCCI, DI0_dly, CLK_dly, LSR_dly;

  fa2 \Keyboard/counter_121_add_4_33 ( .A0(GNDI), .B0(GNDI), .C0(C0), .D0(D0), 
    .A1(GNDI), .B1(GNDI), .C1(GNDI), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(), .CO0(COUT0), .CO1());
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \Keyboard/counter_121__i32 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module STATE_OUT_serial_SLICE_17 ( input D1, C1, B1, D0, C0, B0, CIN0, CIN1, 
    output F0, F1, COUT1, COUT0 );
  wire   GNDI;

  fa2 \STATE_OUT/serial/sub_11_add_2_add_5_27 ( .A0(GNDI), .B0(B0), .C0(C0), 
    .D0(D0), .A1(GNDI), .B1(B1), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), 
    .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module STATE_OUT_serial_SLICE_18 ( input D1, C1, B1, D0, C0, B0, CIN0, CIN1, 
    output F0, F1, COUT1, COUT0 );
  wire   GNDI;

  fa2 \STATE_OUT/serial/sub_11_add_2_add_5_25 ( .A0(GNDI), .B0(B0), .C0(C0), 
    .D0(D0), .A1(GNDI), .B1(B1), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), 
    .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module STATE_OUT_serial_SLICE_19 ( input D1, C1, B1, D0, C0, B0, CIN0, CIN1, 
    output F0, F1, COUT1, COUT0 );
  wire   GNDI;

  fa2 \STATE_OUT/serial/sub_11_add_2_add_5_5 ( .A0(GNDI), .B0(B0), .C0(C0), 
    .D0(D0), .A1(GNDI), .B1(B1), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), 
    .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module STATE_OUT_serial_SLICE_20 ( input D1, C1, B1, D0, C0, B0, CIN0, CIN1, 
    output F0, F1, COUT1, COUT0 );
  wire   GNDI;

  fa2 \STATE_OUT/serial/sub_11_add_2_add_5_3 ( .A0(GNDI), .B0(B0), .C0(C0), 
    .D0(D0), .A1(GNDI), .B1(B1), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), 
    .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module STATE_OUT_serial_SLICE_21 ( input D1, C1, B1, D0, C0, B0, CIN0, CIN1, 
    output F0, F1, COUT1, COUT0 );
  wire   GNDI;

  fa2 \STATE_OUT/serial/sub_11_add_2_add_5_23 ( .A0(GNDI), .B0(B0), .C0(C0), 
    .D0(D0), .A1(GNDI), .B1(B1), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), 
    .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module STATE_OUT_serial_SLICE_22 ( input D1, C1, B1, CIN1, output F1, COUT1, 
    COUT0 );
  wire   GNDI, VCCI;

  fa2 \STATE_OUT/serial/sub_11_add_2_add_5_1 ( .A0(GNDI), .B0(GNDI), .C0(GNDI), 
    .D0(VCCI), .A1(GNDI), .B1(B1), .C1(C1), .D1(D1), .CI0(VCCI), .CI1(CIN1), 
    .S0(), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module STATE_OUT_serial_SLICE_23 ( input D1, C1, B1, D0, C0, B0, CIN0, CIN1, 
    output F0, F1, COUT1, COUT0 );
  wire   GNDI;

  fa2 \STATE_OUT/serial/sub_11_add_2_add_5_21 ( .A0(GNDI), .B0(B0), .C0(C0), 
    .D0(D0), .A1(GNDI), .B1(B1), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), 
    .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module STATE_OUT_serial_SLICE_24 ( input D1, C1, B1, D0, C0, B0, CIN0, CIN1, 
    output F0, F1, COUT1, COUT0 );
  wire   GNDI;

  fa2 \STATE_OUT/serial/sub_11_add_2_add_5_19 ( .A0(GNDI), .B0(B0), .C0(C0), 
    .D0(D0), .A1(GNDI), .B1(B1), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), 
    .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module STATE_OUT_serial_SLICE_25 ( input D1, C1, B1, D0, C0, B0, CIN0, CIN1, 
    output F0, F1, COUT1, COUT0 );
  wire   GNDI;

  fa2 \STATE_OUT/serial/sub_11_add_2_add_5_17 ( .A0(GNDI), .B0(B0), .C0(C0), 
    .D0(D0), .A1(GNDI), .B1(B1), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), 
    .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module STATE_OUT_serial_SLICE_26 ( input D1, C1, B1, D0, C0, B0, CIN0, CIN1, 
    output F0, F1, COUT1, COUT0 );
  wire   GNDI;

  fa2 \STATE_OUT/serial/sub_11_add_2_add_5_15 ( .A0(GNDI), .B0(B0), .C0(C0), 
    .D0(D0), .A1(GNDI), .B1(B1), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), 
    .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module STATE_OUT_serial_SLICE_27 ( input D1, C1, B1, D0, C0, B0, CIN0, CIN1, 
    output F0, F1, COUT1, COUT0 );
  wire   GNDI;

  fa2 \STATE_OUT/serial/sub_11_add_2_add_5_13 ( .A0(GNDI), .B0(B0), .C0(C0), 
    .D0(D0), .A1(GNDI), .B1(B1), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), 
    .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module STATE_OUT_serial_SLICE_28 ( input D1, C1, B1, D0, C0, B0, CIN0, CIN1, 
    output F0, F1, COUT1, COUT0 );
  wire   GNDI;

  fa2 \STATE_OUT/serial/sub_11_add_2_add_5_11 ( .A0(GNDI), .B0(B0), .C0(C0), 
    .D0(D0), .A1(GNDI), .B1(B1), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), 
    .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module STATE_OUT_serial_SLICE_29 ( input D1, C1, B1, D0, C0, B0, CIN0, CIN1, 
    output F0, F1, COUT1, COUT0 );
  wire   GNDI;

  fa2 \STATE_OUT/serial/sub_11_add_2_add_5_9 ( .A0(GNDI), .B0(B0), .C0(C0), 
    .D0(D0), .A1(GNDI), .B1(B1), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), 
    .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module STATE_OUT_serial_SLICE_30 ( input D1, C1, B1, D0, C0, B0, CIN0, CIN1, 
    output F0, F1, COUT1, COUT0 );
  wire   GNDI;

  fa2 \STATE_OUT/serial/sub_11_add_2_add_5_7 ( .A0(GNDI), .B0(B0), .C0(C0), 
    .D0(D0), .A1(GNDI), .B1(B1), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), 
    .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module STATE_OUT_serial_SLICE_31 ( input D1, D0, C0, B0, CIN0, CIN1, output F0, 
    COUT0 );
  wire   GNDI;

  fa2 \STATE_OUT/serial/sub_11_add_2_add_5_33 ( .A0(GNDI), .B0(B0), .C0(C0), 
    .D0(D0), .A1(GNDI), .B1(GNDI), .C1(GNDI), .D1(D1), .CI0(CIN0), .CI1(CIN1), 
    .S0(F0), .S1(), .CO0(COUT0), .CO1());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
  endspecify

endmodule

module STATE_OUT_serial_SLICE_32 ( input D1, C1, B1, D0, C0, B0, CIN0, CIN1, 
    output F0, F1, COUT1, COUT0 );
  wire   GNDI;

  fa2 \STATE_OUT/serial/sub_11_add_2_add_5_31 ( .A0(GNDI), .B0(B0), .C0(C0), 
    .D0(D0), .A1(GNDI), .B1(B1), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), 
    .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module STATE_OUT_serial_SLICE_33 ( input D1, C1, B1, D0, C0, B0, CIN0, CIN1, 
    output F0, F1, COUT1, COUT0 );
  wire   GNDI;

  fa2 \STATE_OUT/serial/sub_11_add_2_add_5_29 ( .A0(GNDI), .B0(B0), .C0(C0), 
    .D0(D0), .A1(GNDI), .B1(B1), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), 
    .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module mainTimer_SLICE_34 ( input D1, B1, D0, B0, CIN0, CIN1, output F0, F1, 
    COUT1, COUT0 );
  wire   GNDI;

  fa2 \mainTimer/add_7_add_5_9 ( .A0(GNDI), .B0(B0), .C0(GNDI), .D0(D0), 
    .A1(GNDI), .B1(B1), .C1(GNDI), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module mainTimer_SLICE_35 ( input D1, B1, D0, B0, CIN0, CIN1, output F0, F1, 
    COUT1, COUT0 );
  wire   GNDI;

  fa2 \mainTimer/add_7_add_5_13 ( .A0(GNDI), .B0(B0), .C0(GNDI), .D0(D0), 
    .A1(GNDI), .B1(B1), .C1(GNDI), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module mainTimer_SLICE_36 ( input D1, B1, D0, B0, CIN0, CIN1, output F0, F1, 
    COUT1, COUT0 );
  wire   GNDI;

  fa2 \mainTimer/add_7_add_5_7 ( .A0(GNDI), .B0(B0), .C0(GNDI), .D0(D0), 
    .A1(GNDI), .B1(B1), .C1(GNDI), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module mainTimer_SLICE_37 ( input D1, D0, B0, CIN0, CIN1, output F0, COUT0 );
  wire   GNDI;

  fa2 \mainTimer/add_7_add_5_19 ( .A0(GNDI), .B0(B0), .C0(GNDI), .D0(D0), 
    .A1(GNDI), .B1(GNDI), .C1(GNDI), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(), .CO0(COUT0), .CO1());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
  endspecify

endmodule

module mainTimer_SLICE_38 ( input D1, B1, D0, B0, CIN0, CIN1, output F0, F1, 
    COUT1, COUT0 );
  wire   GNDI;

  fa2 \mainTimer/add_7_add_5_17 ( .A0(GNDI), .B0(B0), .C0(GNDI), .D0(D0), 
    .A1(GNDI), .B1(B1), .C1(GNDI), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module mainTimer_SLICE_39 ( input D1, B1, D0, B0, CIN0, CIN1, output F0, F1, 
    COUT1, COUT0 );
  wire   GNDI;

  fa2 \mainTimer/add_7_add_5_15 ( .A0(GNDI), .B0(B0), .C0(GNDI), .D0(D0), 
    .A1(GNDI), .B1(B1), .C1(GNDI), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module mainTimer_SLICE_40 ( input D1, B1, D0, B0, CIN0, CIN1, output F0, F1, 
    COUT1, COUT0 );
  wire   GNDI;

  fa2 \mainTimer/add_7_add_5_5 ( .A0(GNDI), .B0(B0), .C0(GNDI), .D0(D0), 
    .A1(GNDI), .B1(B1), .C1(GNDI), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module mainTimer_SLICE_41 ( input D1, C1, B1, CIN1, output F1, COUT1, COUT0 );
  wire   GNDI, VCCI;

  fa2 \mainTimer/add_7_add_5_1 ( .A0(GNDI), .B0(GNDI), .C0(GNDI), .D0(VCCI), 
    .A1(GNDI), .B1(B1), .C1(C1), .D1(D1), .CI0(VCCI), .CI1(CIN1), .S0(), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module mainTimer_SLICE_42 ( input D1, B1, D0, B0, CIN0, CIN1, output F0, F1, 
    COUT1, COUT0 );
  wire   GNDI;

  fa2 \mainTimer/add_7_add_5_3 ( .A0(GNDI), .B0(B0), .C0(GNDI), .D0(D0), 
    .A1(GNDI), .B1(B1), .C1(GNDI), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module mainTimer_SLICE_43 ( input D1, B1, D0, B0, CIN0, CIN1, output F0, F1, 
    COUT1, COUT0 );
  wire   GNDI;

  fa2 \mainTimer/add_7_add_5_11 ( .A0(GNDI), .B0(B0), .C0(GNDI), .D0(D0), 
    .A1(GNDI), .B1(B1), .C1(GNDI), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module Keyboard_SLICE_44 ( input DI1, DI0, D1, C1, B1, A1, D0, C0, B0, A0, CLK, 
    output Q0, Q1, F0, F1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  lut4 \Keyboard.SLICE_44_K1 ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40001 \Keyboard.SLICE_44_K0 ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  ffsre2 \Keyboard/actualKey[3]__i2 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \Keyboard/actualKey[3]__i1 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module lut4 ( input A, B, C, D, output Z );

  LUT4 #("0xFB40") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40001 ( input A, B, C, D, output Z );

  LUT4 #("0xCCAC") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module Keyboard_SLICE_45 ( input DI1, DI0, D1, B1, A1, D0, C0, B0, CLK, 
    output Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  lut40002 \Keyboard.SLICE_45_K1 ( .A(A1), .B(B1), .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40003 \Keyboard.SLICE_45_K0 ( .A(GNDI), .B(B0), .C(C0), .D(D0), .Z(F0));
  ffsre2 \Keyboard/actualKey[3]__i7 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \Keyboard/actualKey[3]__i8 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module lut40002 ( input A, B, C, D, output Z );

  LUT4 #("0xEE22") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40003 ( input A, B, C, D, output Z );

  LUT4 #("0xFC0C") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module Keyboard_SLICE_47 ( input DI1, DI0, D1, C1, B1, D0, C0, A0, CLK, 
    output Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  lut40004 \Keyboard/mux_7_i1_3_lut ( .A(GNDI), .B(B1), .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40005 \Keyboard.SLICE_47_K0 ( .A(A0), .B(GNDI), .C(C0), .D(D0), .Z(F0));
  ffsre2 \Keyboard/actualKey[3]__i5 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \Keyboard/actualKey[3]__i6 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module lut40004 ( input A, B, C, D, output Z );

  LUT4 #("0xF3C0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40005 ( input A, B, C, D, output Z );

  LUT4 #("0xF5A0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module Keyboard_SLICE_49 ( input DI1, DI0, D1, C1, B1, A1, D0, C0, B0, A0, CLK, 
    output Q0, Q1, F0, F1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  lut40006 \Keyboard.SLICE_49_K1 ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40007 \Keyboard.SLICE_49_K0 ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  ffsre2 \Keyboard/actualKey[3]__i3 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \Keyboard/actualKey[3]__i4 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module lut40006 ( input A, B, C, D, output Z );

  LUT4 #("0xCDC8") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40007 ( input A, B, C, D, output Z );

  LUT4 #("0xCDC8") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_54 ( input DI1, DI0, D1, C1, B1, A1, D0, C0, B0, A0, CLK, output 
    Q0, Q1, F0, F1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  lut40008 SLICE_54_K1( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40009 SLICE_54_K0( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  ffsre2 Sreg_i2( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 Sreg_i1( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module lut40008 ( input A, B, C, D, output Z );

  LUT4 #("0xF888") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40009 ( input A, B, C, D, output Z );

  LUT4 #("0xFD20") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module STATE_OUT_SLICE_56 ( input DI1, DI0, D1, B1, A1, B0, A0, LSR, CLK, 
    output Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  lut40010 \STATE_OUT/i636_2_lut_3_lut ( .A(A1), .B(B1), .C(GNDI), .D(D1), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40011 \STATE_OUT/i628_2_lut ( .A(A0), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));
  ffsre20012 \STATE_OUT/cont_119__i1 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre20012 \STATE_OUT/cont_119__i0 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module lut40010 ( input A, B, C, D, output Z );

  LUT4 #("0x7788") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40011 ( input A, B, C, D, output Z );

  LUT4 #("0x6666") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module ffsre20012 ( input D0, SP, CK, LSR, output Q );

  FD1P3XZ INST01( .D(D0), .SP(SP), .CK(CK), .SR(LSR), .Q(Q));
  defparam INST01.REGSET = "RESET";
  defparam INST01.SRMODE = "ASYNC";
endmodule

module STATE_OUT_SLICE_59 ( input DI1, DI0, D1, B1, A1, D0, C0, B0, A0, LSR, 
    CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  lut40013 \STATE_OUT/i650_3_lut ( .A(A1), .B(B1), .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40014 \STATE_OUT/i643_2_lut_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));
  ffsre20012 \STATE_OUT/cont_119__i3 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre20012 \STATE_OUT/cont_119__i2 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module lut40013 ( input A, B, C, D, output Z );

  LUT4 #("0x7788") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40014 ( input A, B, C, D, output Z );

  LUT4 #("0x78F0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module STATE_OUT_serial_SLICE_61 ( input DI1, DI0, D1, B1, A1, D0, C0, B0, A0, 
    CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  lut40015 \STATE_OUT/serial/i1_2_lut_3_lut ( .A(A1), .B(B1), .C(GNDI), .D(D1), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40016 \STATE_OUT/serial/counter_31__I_36_i1_3_lut_4_lut ( .A(A0), .B(B0), 
    .C(C0), .D(D0), .Z(F0));
  ffsre2 \STATE_OUT/serial/counter_i1 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \STATE_OUT/serial/counter_i0 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module lut40015 ( input A, B, C, D, output Z );

  LUT4 #("0xEE00") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40016 ( input A, B, C, D, output Z );

  LUT4 #("0xF0E4") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module STATE_OUT_serial_SLICE_63 ( input DI1, DI0, D1, C1, B1, A1, D0, C0, B0, 
    A0, CLK, output Q0, Q1, F0, F1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  lut40017 \STATE_OUT/serial/counter_31__I_36_i31_3_lut_4_lut ( .A(A1), .B(B1), 
    .C(C1), .D(D1), .Z(F1));
  lut40018 \STATE_OUT/serial/counter_31__I_36_i32_3_lut_4_lut ( .A(A0), .B(B0), 
    .C(C0), .D(D0), .Z(F0));
  ffsre2 \STATE_OUT/serial/counter_i30 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \STATE_OUT/serial/counter_i31 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module lut40017 ( input A, B, C, D, output Z );

  LUT4 #("0xAAB8") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40018 ( input A, B, C, D, output Z );

  LUT4 #("0xFE04") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module STATE_OUT_serial_SLICE_65 ( input DI1, DI0, D1, C1, B1, A1, D0, C0, B0, 
    A0, CLK, output Q0, Q1, F0, F1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  lut40019 \STATE_OUT/serial/counter_31__I_36_i29_3_lut_4_lut ( .A(A1), .B(B1), 
    .C(C1), .D(D1), .Z(F1));
  lut40020 \STATE_OUT/serial/counter_31__I_36_i30_3_lut_4_lut ( .A(A0), .B(B0), 
    .C(C0), .D(D0), .Z(F0));
  ffsre2 \STATE_OUT/serial/counter_i28 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \STATE_OUT/serial/counter_i29 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module lut40019 ( input A, B, C, D, output Z );

  LUT4 #("0xAAAC") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40020 ( input A, B, C, D, output Z );

  LUT4 #("0xCCD8") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module STATE_OUT_serial_SLICE_67 ( input DI1, DI0, D1, C1, B1, A1, D0, C0, B0, 
    A0, CLK, output Q0, Q1, F0, F1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  lut40021 \STATE_OUT/serial/counter_31__I_36_i27_3_lut_4_lut ( .A(A1), .B(B1), 
    .C(C1), .D(D1), .Z(F1));
  lut40022 \STATE_OUT/serial/counter_31__I_36_i28_3_lut_4_lut ( .A(A0), .B(B0), 
    .C(C0), .D(D0), .Z(F0));
  ffsre2 \STATE_OUT/serial/counter_i26 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \STATE_OUT/serial/counter_i27 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module lut40021 ( input A, B, C, D, output Z );

  LUT4 #("0xCDC8") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40022 ( input A, B, C, D, output Z );

  LUT4 #("0xAAB8") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module STATE_OUT_serial_SLICE_69 ( input DI1, DI0, D1, C1, B1, A1, D0, C0, B0, 
    A0, CLK, output Q0, Q1, F0, F1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  lut40023 \STATE_OUT/serial/counter_31__I_36_i25_3_lut_4_lut ( .A(A1), .B(B1), 
    .C(C1), .D(D1), .Z(F1));
  lut40024 \STATE_OUT/serial/counter_31__I_36_i26_3_lut_4_lut ( .A(A0), .B(B0), 
    .C(C0), .D(D0), .Z(F0));
  ffsre2 \STATE_OUT/serial/counter_i24 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \STATE_OUT/serial/counter_i25 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module lut40023 ( input A, B, C, D, output Z );

  LUT4 #("0xF1E0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40024 ( input A, B, C, D, output Z );

  LUT4 #("0xCCD8") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module STATE_OUT_serial_SLICE_71 ( input DI1, DI0, D1, C1, B1, A1, D0, C0, B0, 
    A0, CLK, output Q0, Q1, F0, F1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  lut40025 \STATE_OUT/serial/counter_31__I_36_i23_3_lut_4_lut ( .A(A1), .B(B1), 
    .C(C1), .D(D1), .Z(F1));
  lut40026 \STATE_OUT/serial/counter_31__I_36_i24_3_lut_4_lut ( .A(A0), .B(B0), 
    .C(C0), .D(D0), .Z(F0));
  ffsre2 \STATE_OUT/serial/counter_i22 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \STATE_OUT/serial/counter_i23 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module lut40025 ( input A, B, C, D, output Z );

  LUT4 #("0xFE10") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40026 ( input A, B, C, D, output Z );

  LUT4 #("0xAAAC") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module STATE_OUT_serial_SLICE_73 ( input DI1, DI0, D1, C1, B1, A1, D0, C0, B0, 
    A0, CLK, output Q0, Q1, F0, F1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  lut40027 \STATE_OUT/serial/counter_31__I_36_i21_3_lut_4_lut ( .A(A1), .B(B1), 
    .C(C1), .D(D1), .Z(F1));
  lut40028 \STATE_OUT/serial/counter_31__I_36_i22_3_lut_4_lut ( .A(A0), .B(B0), 
    .C(C0), .D(D0), .Z(F0));
  ffsre2 \STATE_OUT/serial/counter_i20 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \STATE_OUT/serial/counter_i21 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module lut40027 ( input A, B, C, D, output Z );

  LUT4 #("0xCCD8") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40028 ( input A, B, C, D, output Z );

  LUT4 #("0xABA8") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module STATE_OUT_serial_SLICE_75 ( input DI1, DI0, D1, C1, B1, A1, D0, C0, B0, 
    A0, CLK, output Q0, Q1, F0, F1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  lut40029 \STATE_OUT/serial/counter_31__I_36_i19_3_lut_4_lut ( .A(A1), .B(B1), 
    .C(C1), .D(D1), .Z(F1));
  lut40030 \STATE_OUT/serial/counter_31__I_36_i20_3_lut_4_lut ( .A(A0), .B(B0), 
    .C(C0), .D(D0), .Z(F0));
  ffsre2 \STATE_OUT/serial/counter_i18 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \STATE_OUT/serial/counter_i19 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module lut40029 ( input A, B, C, D, output Z );

  LUT4 #("0xFE10") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40030 ( input A, B, C, D, output Z );

  LUT4 #("0xAAAC") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module STATE_OUT_serial_SLICE_77 ( input DI1, DI0, D1, C1, B1, A1, D0, C0, B0, 
    A0, CLK, output Q0, Q1, F0, F1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  lut40031 \STATE_OUT/serial/counter_31__I_36_i17_3_lut_4_lut ( .A(A1), .B(B1), 
    .C(C1), .D(D1), .Z(F1));
  lut40020 \STATE_OUT/serial/counter_31__I_36_i18_3_lut_4_lut ( .A(A0), .B(B0), 
    .C(C0), .D(D0), .Z(F0));
  ffsre2 \STATE_OUT/serial/counter_i16 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \STATE_OUT/serial/counter_i17 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module lut40031 ( input A, B, C, D, output Z );

  LUT4 #("0xABA8") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module STATE_OUT_serial_SLICE_87 ( input DI1, DI0, D1, C1, B1, A1, D0, C0, B0, 
    A0, CLK, output Q0, Q1, F0, F1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  lut40032 \STATE_OUT/serial/counter_31__I_36_i7_3_lut_4_lut ( .A(A1), .B(B1), 
    .C(C1), .D(D1), .Z(F1));
  lut40033 \STATE_OUT/serial/counter_31__I_36_i8_3_lut_4_lut ( .A(A0), .B(B0), 
    .C(C0), .D(D0), .Z(F0));
  ffsre2 \STATE_OUT/serial/counter_i6 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \STATE_OUT/serial/counter_i7 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module lut40032 ( input A, B, C, D, output Z );

  LUT4 #("0xFE04") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40033 ( input A, B, C, D, output Z );

  LUT4 #("0xF0E2") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module STATE_OUT_serial_SLICE_89 ( input DI1, DI0, D1, C1, B1, A1, D0, C0, B0, 
    A0, CLK, output Q0, Q1, F0, F1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  lut40034 \STATE_OUT/serial/counter_31__I_36_i5_3_lut_4_lut ( .A(A1), .B(B1), 
    .C(C1), .D(D1), .Z(F1));
  lut40035 \STATE_OUT/serial/counter_31__I_36_i6_3_lut_4_lut ( .A(A0), .B(B0), 
    .C(C0), .D(D0), .Z(F0));
  ffsre2 \STATE_OUT/serial/counter_i4 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \STATE_OUT/serial/counter_i5 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module lut40034 ( input A, B, C, D, output Z );

  LUT4 #("0xF1E0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40035 ( input A, B, C, D, output Z );

  LUT4 #("0xF0E4") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module STATE_OUT_serial_SLICE_91 ( input DI1, DI0, C1, B1, A1, D0, C0, B0, CLK, 
    output Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  lut40036 \STATE_OUT/serial/i1_2_lut_3_lut_adj_39 ( .A(A1), .B(B1), .C(C1), 
    .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40037 \STATE_OUT/serial/i1_2_lut_3_lut_adj_40 ( .A(GNDI), .B(B0), .C(C0), 
    .D(D0), .Z(F0));
  ffsre2 \STATE_OUT/serial/counter_i2 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \STATE_OUT/serial/counter_i3 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module lut40036 ( input A, B, C, D, output Z );

  LUT4 #("0xC8C8") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40037 ( input A, B, C, D, output Z );

  LUT4 #("0xF0C0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module STATE_OUT_serial_SLICE_94 ( input DI1, DI0, D1, C1, A1, D0, B0, A0, CLK, 
    output Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  lut40038 \STATE_OUT.serial.SLICE_94_K1 ( .A(A1), .B(GNDI), .C(C1), .D(D1), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40039 \STATE_OUT.serial.SLICE_94_K0 ( .A(A0), .B(B0), .C(GNDI), .D(D0), 
    .Z(F0));
  ffsre2 \STATE_OUT/serial/aux_i2 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \STATE_OUT/serial/aux_i3 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module lut40038 ( input A, B, C, D, output Z );

  LUT4 #("0xFA50") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40039 ( input A, B, C, D, output Z );

  LUT4 #("0xCCAA") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module STATE_OUT_serial_SLICE_96 ( input DI1, DI0, D1, C1, B1, A1, D0, C0, B0, 
    A0, CLK, output Q0, Q1, F0, F1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  lut40040 \STATE_OUT.serial.SLICE_96_K1 ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40041 \STATE_OUT.serial.SLICE_96_K0 ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));
  ffsre2 \STATE_OUT/serial/aux_i0 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \STATE_OUT/serial/aux_i1 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module lut40040 ( input A, B, C, D, output Z );

  LUT4 #("0xF5E4") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40041 ( input A, B, C, D, output Z );

  LUT4 #("0xCCA0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module mainTimer_SLICE_100 ( input DI1, DI0, D1, C1, C0, B0, LSR, CLK, output 
    Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  lut40042 \mainTimer/i361_2_lut ( .A(GNDI), .B(GNDI), .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40043 \mainTimer/i379_2_lut ( .A(GNDI), .B(B0), .C(C0), .D(GNDI), .Z(F0));
  ffsre20012 \mainTimer/clkCont_i16 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre20012 \mainTimer/clkCont_i17 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module lut40042 ( input A, B, C, D, output Z );

  LUT4 #("0x0F00") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40043 ( input A, B, C, D, output Z );

  LUT4 #("0x3030") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module mainTimer_SLICE_102 ( input DI1, DI0, D1, A1, C0, A0, LSR, CLK, output 
    Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  lut40044 \mainTimer/i387_2_lut ( .A(A1), .B(GNDI), .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40045 \mainTimer/i378_2_lut ( .A(A0), .B(GNDI), .C(C0), .D(GNDI), .Z(F0));
  ffsre20012 \mainTimer/clkCont_i14 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre20012 \mainTimer/clkCont_i15 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module lut40044 ( input A, B, C, D, output Z );

  LUT4 #("0x00AA") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40045 ( input A, B, C, D, output Z );

  LUT4 #("0x0A0A") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module mainTimer_SLICE_104 ( input DI1, DI0, B1, A1, C0, B0, LSR, CLK, output 
    Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  lut40046 \mainTimer/i363_2_lut ( .A(A1), .B(B1), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40043 \mainTimer/i367_2_lut ( .A(GNDI), .B(B0), .C(C0), .D(GNDI), .Z(F0));
  ffsre20012 \mainTimer/clkCont_i12 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre20012 \mainTimer/clkCont_i13 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module lut40046 ( input A, B, C, D, output Z );

  LUT4 #("0x4444") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module mainTimer_SLICE_106 ( input DI1, DI0, D1, C1, D0, A0, LSR, CLK, output 
    Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  lut40047 \mainTimer/i356_2_lut ( .A(GNDI), .B(GNDI), .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40048 \mainTimer/i354_2_lut ( .A(A0), .B(GNDI), .C(GNDI), .D(D0), .Z(F0));
  ffsre20012 \mainTimer/clkCont_i10 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre20012 \mainTimer/clkCont_i11 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module lut40047 ( input A, B, C, D, output Z );

  LUT4 #("0x00F0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40048 ( input A, B, C, D, output Z );

  LUT4 #("0x5500") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module mainTimer_SLICE_108 ( input DI1, DI0, B1, A1, D0, A0, LSR, CLK, output 
    Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  lut40049 \mainTimer/i375_2_lut ( .A(A1), .B(B1), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40048 \mainTimer/i376_2_lut ( .A(A0), .B(GNDI), .C(GNDI), .D(D0), .Z(F0));
  ffsre20012 \mainTimer/clkCont_i8 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre20012 \mainTimer/clkCont_i9 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module lut40049 ( input A, B, C, D, output Z );

  LUT4 #("0x2222") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module mainTimer_SLICE_110 ( input DI1, DI0, D1, B1, D0, C0, LSR, CLK, output 
    Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  lut40050 \mainTimer/i369_2_lut ( .A(GNDI), .B(B1), .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40051 \mainTimer/i374_2_lut ( .A(GNDI), .B(GNDI), .C(C0), .D(D0), .Z(F0));
  ffsre20012 \mainTimer/clkCont_i6 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre20012 \mainTimer/clkCont_i7 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module lut40050 ( input A, B, C, D, output Z );

  LUT4 #("0x00CC") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40051 ( input A, B, C, D, output Z );

  LUT4 #("0x0F00") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module mainTimer_SLICE_112 ( input DI1, DI0, D1, B1, C0, A0, LSR, CLK, output 
    Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  lut40052 \mainTimer/i381_2_lut ( .A(GNDI), .B(B1), .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40053 \mainTimer/i380_2_lut ( .A(A0), .B(GNDI), .C(C0), .D(GNDI), .Z(F0));
  ffsre20012 \mainTimer/clkCont_i4 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre20012 \mainTimer/clkCont_i5 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module lut40052 ( input A, B, C, D, output Z );

  LUT4 #("0x3300") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40053 ( input A, B, C, D, output Z );

  LUT4 #("0x5050") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module mainTimer_SLICE_114 ( input DI1, DI0, D1, B1, B0, A0, LSR, CLK, output 
    Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  lut40050 \mainTimer/i355_2_lut ( .A(GNDI), .B(B1), .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40054 \mainTimer/i382_2_lut ( .A(A0), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));
  ffsre20012 \mainTimer/clkCont_i2 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre20012 \mainTimer/clkCont_i3 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module lut40054 ( input A, B, C, D, output Z );

  LUT4 #("0x4444") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module mainTimer_SLICE_116 ( input DI1, DI0, C1, B1, D0, A0, LSR, CLK, output 
    Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  lut40055 \mainTimer/i358_2_lut ( .A(GNDI), .B(B1), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40048 \mainTimer/i360_2_lut ( .A(A0), .B(GNDI), .C(GNDI), .D(D0), .Z(F0));
  ffsre20012 \mainTimer/clkCont_i0 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre20012 \mainTimer/clkCont_i1 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module lut40055 ( input A, B, C, D, output Z );

  LUT4 #("0x3030") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_119 ( input D1, C1, B1, A1, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40056 i1_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40057 KEY_STATUS_1__I_0_2_i3_2_lut( .A(A0), .B(B0), .C(GNDI), .D(GNDI), 
    .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40056 ( input A, B, C, D, output Z );

  LUT4 #("0xEAC0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40057 ( input A, B, C, D, output Z );

  LUT4 #("0xEEEE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_120 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40058 i37_4_lut_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40059 i1_4_lut_adj_45( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40058 ( input A, B, C, D, output Z );

  LUT4 #("0xFB00") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40059 ( input A, B, C, D, output Z );

  LUT4 #("0xF4F0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module mainTimer_SLICE_121 ( input C1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40060 \mainTimer/EN_I_0_1_lut ( .A(GNDI), .B(GNDI), .C(C1), .D(GNDI), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40061 i282_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40060 ( input A, B, C, D, output Z );

  LUT4 #("0x0F0F") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40061 ( input A, B, C, D, output Z );

  LUT4 #("0x0ACA") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module Keyboard_SLICE_123 ( input D1, C1, B1, A1, C0, A0, output F0, F1 );
  wire   GNDI;

  lut40062 \Keyboard/i20_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40063 \Keyboard/i3_2_lut ( .A(A0), .B(GNDI), .C(C0), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40062 ( input A, B, C, D, output Z );

  LUT4 #("0xFFFE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40063 ( input A, B, C, D, output Z );

  LUT4 #("0xF5F5") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module Keyboard_SLICE_124 ( input DI1, D1, C1, B1, A1, D0, C0, B0, A0, LSR, 
    CLK, output Q1, F0, F1 );
  wire   VCCI, DI1_dly, CLK_dly, LSR_dly;

  lut40064 \Keyboard/i4_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40065 \Keyboard/mux_5_i1_3_lut_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));
  ffsre20066 \Keyboard/valid_i0_i2 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module lut40064 ( input A, B, C, D, output Z );

  LUT4 #("0xFEFF") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40065 ( input A, B, C, D, output Z );

  LUT4 #("0xCCE4") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module ffsre20066 ( input D0, SP, CK, LSR, output Q );

  FD1P3XZ INST01( .D(D0), .SP(SP), .CK(CK), .SR(LSR), .Q(Q));
  defparam INST01.REGSET = "SET";
  defparam INST01.SRMODE = "CE_OVER_LSR";
endmodule

module Keyboard_SLICE_125 ( input D1, C1, A1, D0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40067 \Keyboard/mux_8_i2_3_lut ( .A(A1), .B(GNDI), .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40068 \Keyboard/equal_72_i5_2_lut_3_lut ( .A(A0), .B(B0), .C(GNDI), 
    .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40067 ( input A, B, C, D, output Z );

  LUT4 #("0xFA0A") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40068 ( input A, B, C, D, output Z );

  LUT4 #("0xFFEE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module Keyboard_SLICE_126 ( input D1, C1, B1, A1, D0, C0, A0, output F0, F1 );
  wire   GNDI;

  lut40069 \Keyboard/i1043_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40070 \Keyboard/mux_8_i1_3_lut ( .A(A0), .B(GNDI), .C(C0), .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40069 ( input A, B, C, D, output Z );

  LUT4 #("0x8000") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40070 ( input A, B, C, D, output Z );

  LUT4 #("0xFA0A") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module Keyboard_SLICE_127 ( input D0, C0, B0, A0, output F0 );

  lut40071 \Keyboard/i23_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40071 ( input A, B, C, D, output Z );

  LUT4 #("0xFFFE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module Keyboard_SLICE_128 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, 
    F1 );

  lut40072 \Keyboard.i272_1_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40073 \Keyboard/i29_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40072 ( input A, B, C, D, output Z );

  LUT4 #("0x0001") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40073 ( input A, B, C, D, output Z );

  LUT4 #("0xFFFE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module Keyboard_SLICE_129 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, 
    F1 );

  lut40074 \Keyboard/i24_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40075 \Keyboard/i17_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40074 ( input A, B, C, D, output Z );

  LUT4 #("0xFFFE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40075 ( input A, B, C, D, output Z );

  LUT4 #("0xFFFE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module Keyboard_SLICE_131 ( input DI1, D1, C1, B1, A1, D0, C0, B0, A0, CLK, 
    output Q1, F0, F1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly;

  lut40076 \Keyboard.SLICE_131_K1 ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40077 \Keyboard/i19_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  ffsre2 \Keyboard/valid_i0_i1 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
  endspecify

endmodule

module lut40076 ( input A, B, C, D, output Z );

  LUT4 #("0xFFFE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40077 ( input A, B, C, D, output Z );

  LUT4 #("0xFEFF") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module Keyboard_SLICE_133 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, 
    F1 );

  lut40078 \Keyboard/i30_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40079 \Keyboard/i18_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40078 ( input A, B, C, D, output Z );

  LUT4 #("0xFFFE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40079 ( input A, B, C, D, output Z );

  LUT4 #("0xFFFE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module Keyboard_SLICE_135 ( input C1, B1, A1, D0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40080 \Keyboard/mux_7_i2_3_lut ( .A(A1), .B(B1), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40081 \Keyboard/equal_71_i5_2_lut_3_lut ( .A(A0), .B(B0), .C(GNDI), 
    .D(D0), .Z(F0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40080 ( input A, B, C, D, output Z );

  LUT4 #("0xCACA") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40081 ( input A, B, C, D, output Z );

  LUT4 #("0xFFDD") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module Keyboard_SLICE_139 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, 
    F1 );

  lut40082 \Keyboard/i2_2_lut_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40083 \Keyboard/mux_5_i2_3_lut_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40082 ( input A, B, C, D, output Z );

  LUT4 #("0xFAFC") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40083 ( input A, B, C, D, output Z );

  LUT4 #("0xF2D0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_141 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40084 i280_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40085 Mux_39_i3_4_lut_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40084 ( input A, B, C, D, output Z );

  LUT4 #("0xAEA2") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40085 ( input A, B, C, D, output Z );

  LUT4 #("0x44A0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_143 ( input D1, C1, B1, A1, D0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40086 Sreg_1__I_0_3_Mux_0_i3_4_lut_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40087 i1154_3_lut_3_lut( .A(A0), .B(B0), .C(GNDI), .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40086 ( input A, B, C, D, output Z );

  LUT4 #("0x7351") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40087 ( input A, B, C, D, output Z );

  LUT4 #("0xEE22") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_145 ( input B1, A1, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40088 KEY_STATUS_1__I_0_3_i3_2_lut( .A(A1), .B(B1), .C(GNDI), .D(GNDI), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40089 i2_2_lut_2_lut( .A(A0), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40088 ( input A, B, C, D, output Z );

  LUT4 #("0xBBBB") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40089 ( input A, B, C, D, output Z );

  LUT4 #("0x9999") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_146 ( input D1, C1, B1, A1, D0, B0, output F0, F1 );
  wire   GNDI;

  lut40090 i1_4_lut_adj_46( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40091 i1_2_lut( .A(GNDI), .B(B0), .C(GNDI), .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40090 ( input A, B, C, D, output Z );

  LUT4 #("0xE0F0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40091 ( input A, B, C, D, output Z );

  LUT4 #("0x00CC") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module STATE_OUT_SLICE_147 ( input D0, C0, B0, A0, output F0 );

  lut40092 \STATE_OUT/i12_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40092 ( input A, B, C, D, output Z );

  LUT4 #("0xFFFE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module STATE_OUT_SLICE_148 ( input C1, B1, A1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40093 \STATE_OUT/i18_3_lut ( .A(A1), .B(B1), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40094 \STATE_OUT/i15_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40093 ( input A, B, C, D, output Z );

  LUT4 #("0xFEFE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40094 ( input A, B, C, D, output Z );

  LUT4 #("0xFFFE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module STATE_OUT_SLICE_149 ( input D0, C0, B0, A0, output F0 );

  lut40095 \STATE_OUT/i14_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40095 ( input A, B, C, D, output Z );

  LUT4 #("0xFFFE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module STATE_OUT_SLICE_150 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, 
    F1 );

  lut40096 \STATE_OUT/i2_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40097 \STATE_OUT/i1_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40096 ( input A, B, C, D, output Z );

  LUT4 #("0xFFFE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40097 ( input A, B, C, D, output Z );

  LUT4 #("0xFFFE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module STATE_OUT_serial_SLICE_152 ( input D0, C0, B0, A0, output F0 );

  lut40098 \STATE_OUT/serial/i7_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40098 ( input A, B, C, D, output Z );

  LUT4 #("0xFFFE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module STATE_OUT_serial_SLICE_153 ( input D1, C1, A1, D0, C0, B0, A0, output 
    F0, F1 );
  wire   GNDI;

  lut40099 \STATE_OUT/serial/i8_3_lut ( .A(A1), .B(GNDI), .C(C1), .D(D1), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40100 \STATE_OUT/serial/i6_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40099 ( input A, B, C, D, output Z );

  LUT4 #("0xFFFA") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40100 ( input A, B, C, D, output Z );

  LUT4 #("0xFFFE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module STATE_OUT_serial_SLICE_155 ( input D1, C1, B1, A1, D0, C0, B0, output 
    F0, F1 );
  wire   GNDI;

  lut40101 \STATE_OUT/serial/counter_31__N_182[0]_bdd_4_lut ( .A(A1), .B(B1), 
    .C(C1), .D(D1), .Z(F1));
  lut40003 \STATE_OUT/serial/aux_3__I_0_i4_3_lut ( .A(GNDI), .B(B0), .C(C0), 
    .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40101 ( input A, B, C, D, output Z );

  LUT4 #("0xE6C4") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module STATE_OUT_serial_SLICE_156 ( input D0, B0, A0, output F0 );
  wire   GNDI;

  lut40102 \STATE_OUT/serial/aux_3__I_0_i3_3_lut ( .A(A0), .B(B0), .C(GNDI), 
    .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40102 ( input A, B, C, D, output Z );

  LUT4 #("0xDD88") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module mainTimer_SLICE_157 ( input D1, C1, B1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40103 \mainTimer/i6_3_lut ( .A(GNDI), .B(B1), .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40104 \mainTimer/i1041_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40103 ( input A, B, C, D, output Z );

  LUT4 #("0xFFCF") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40104 ( input A, B, C, D, output Z );

  LUT4 #("0x8000") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module mainTimer_SLICE_159 ( input DI1, D1, C1, B1, A1, D0, C0, B0, A0, LSR, 
    CLK, output Q1, F0, F1 );
  wire   VCCI, DI1_dly, CLK_dly, LSR_dly;

  lut40105 \mainTimer/i5_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40092 \mainTimer/i7_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  ffsre20012 \mainTimer/state ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module lut40105 ( input A, B, C, D, output Z );

  LUT4 #("0x8000") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module mainTimer_SLICE_160 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, 
    F1 );

  lut40106 \mainTimer/i1_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40107 \mainTimer/i8_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40106 ( input A, B, C, D, output Z );

  LUT4 #("0x0004") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40107 ( input A, B, C, D, output Z );

  LUT4 #("0xFFFE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module STATE_OUT_serial_SLICE_161 ( input DI1, D1, C1, B1, A1, D0, C0, B0, A0, 
    LSR, CLK, output Q1, F0, F1 );
  wire   VCCI, DI1_dly, CLK_dly, LSR_dly;

  lut40108 \STATE_OUT/serial/n1844_bdd_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40109 \STATE_OUT/serial/aux_3__I_0_i1_4_lut ( .A(A0), .B(B0), .C(C0), 
    .D(D0), .Z(F0));
  ffsre2 \STATE_OUT/serial/status_out ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module lut40108 ( input A, B, C, D, output Z );

  LUT4 #("0xEE50") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40109 ( input A, B, C, D, output Z );

  LUT4 #("0xF0EE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module STATE_OUT_serial_SLICE_162 ( input D1, B1, D0, C0, B0, A0, output F0, 
    F1 );
  wire   GNDI;

  lut40110 i372_2_lut( .A(GNDI), .B(B1), .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40041 \STATE_OUT/serial/aux_3__I_0_i2_3_lut_4_lut ( .A(A0), .B(B0), 
    .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40110 ( input A, B, C, D, output Z );

  LUT4 #("0xCC00") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module Keyboard_SLICE_163 ( input D0, C0, B0, A0, output F0 );

  lut40111 \Keyboard/i22_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40111 ( input A, B, C, D, output Z );

  LUT4 #("0xFFFE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module STATE_OUT_SLICE_167 ( input D0, C0, B0, A0, output F0 );

  lut40112 \STATE_OUT/i3_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40112 ( input A, B, C, D, output Z );

  LUT4 #("0xFFFD") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module STATE_OUT_SLICE_168 ( input DI1, D1, B1, C0, B0, A0, LSR, CLK, output 
    Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, LSR_dly;

  lut40113 \STATE_OUT/i1_2_lut_adj_41 ( .A(GNDI), .B(B1), .C(GNDI), .D(D1), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40114 \STATE_OUT/i639_2_lut_3_lut ( .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(F0));
  ffsre20115 \STATE_OUT/waiting_c ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module lut40113 ( input A, B, C, D, output Z );

  LUT4 #("0xCC00") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40114 ( input A, B, C, D, output Z );

  LUT4 #("0x8080") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module ffsre20115 ( input D0, SP, CK, LSR, output Q );

  FD1P3XZ INST01( .D(D0), .SP(SP), .CK(CK), .SR(LSR), .Q(Q));
  defparam INST01.REGSET = "SET";
  defparam INST01.SRMODE = "ASYNC";
endmodule

module SLICE_169 ( output F0 );
  wire   GNDI;

  lut40116 i2( .A(GNDI), .B(GNDI), .C(GNDI), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
  endspecify

endmodule

module lut40116 ( input A, B, C, D, output Z );

  LUT4 #("0xFFFF") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module Keyboard_SLICE_170 ( input D0, C0, B0, A0, output F0 );

  lut40107 \Keyboard/i21_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module Keyboard_SLICE_171 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, 
    F1 );

  lut40117 \Keyboard/mux_6_i2_3_lut_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40118 \Keyboard/mux_6_i1_3_lut_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40117 ( input A, B, C, D, output Z );

  LUT4 #("0xF0E2") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40118 ( input A, B, C, D, output Z );

  LUT4 #("0xAAB8") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module STATE_OUT_SLICE_176 ( input D0, C0, output F0 );
  wire   GNDI;

  lut40119 \STATE_OUT/i1_2_lut ( .A(GNDI), .B(GNDI), .C(C0), .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40119 ( input A, B, C, D, output Z );

  LUT4 #("0x00F0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module STATE_OUT_SLICE_177 ( input DI1, C1, A0, CE, CLK, output Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, CE_dly;

  lut40120 \STATE_OUT.SLICE_177_K1 ( .A(GNDI), .B(GNDI), .C(C1), .D(GNDI), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40121 \STATE_OUT/state_send_I_0_1_lut ( .A(A0), .B(GNDI), .C(GNDI), 
    .D(GNDI), .Z(F0));
  ffsre2 \STATE_OUT/serial/status_send ( .D0(DI1_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module lut40120 ( input A, B, C, D, output Z );

  LUT4 #("0xF0F0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40121 ( input A, B, C, D, output Z );

  LUT4 #("0x5555") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module STATE_OUT_SLICE_178 ( input D0, C0, B0, A0, output F0 );

  lut40122 \STATE_OUT/i11_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40122 ( input A, B, C, D, output Z );

  LUT4 #("0xFFFE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module STATE_OUT_SLICE_180 ( input D0, C0, B0, A0, output F0 );

  lut40123 \STATE_OUT/i13_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40123 ( input A, B, C, D, output Z );

  LUT4 #("0xFFFE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module STATE_OUT_SLICE_181 ( input D1, C1, D0, B0, output F0, F1 );
  wire   GNDI;

  lut40124 \STATE_OUT/i1_2_lut_adj_43 ( .A(GNDI), .B(GNDI), .C(C1), .D(D1), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40125 \STATE_OUT/i1_2_lut_adj_42 ( .A(GNDI), .B(B0), .C(GNDI), .D(D0), 
    .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40124 ( input A, B, C, D, output Z );

  LUT4 #("0x0F00") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40125 ( input A, B, C, D, output Z );

  LUT4 #("0xFFCC") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module STATE_OUT_SLICE_183 ( input DI1, D1, C1, B1, A1, D0, B0, CLK, output Q1, 
    F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly;

  lut40126 \STATE_OUT/serial/i578_4_lut_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40127 \STATE_OUT/i1_2_lut_adj_44 ( .A(GNDI), .B(B0), .C(GNDI), .D(D0), 
    .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \STATE_OUT/init_c ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
  endspecify

endmodule

module lut40126 ( input A, B, C, D, output Z );

  LUT4 #("0xC4F0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40127 ( input A, B, C, D, output Z );

  LUT4 #("0x3300") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module STATE_OUT_serial_SLICE_184 ( input B1, A1, C0, A0, output F0, F1 );
  wire   GNDI;

  lut40049 \STATE_OUT/serial/i407_2_lut ( .A(A1), .B(B1), .C(GNDI), .D(GNDI), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40053 \STATE_OUT/serial/i402_2_lut ( .A(A0), .B(GNDI), .C(C0), .D(GNDI), 
    .Z(F0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module STATE_OUT_serial_SLICE_186 ( input B1, A1, C0, B0, output F0, F1 );
  wire   GNDI;

  lut40049 \STATE_OUT/serial/i400_2_lut ( .A(A1), .B(B1), .C(GNDI), .D(GNDI), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40128 \STATE_OUT/serial/i401_2_lut ( .A(GNDI), .B(B0), .C(C0), .D(GNDI), 
    .Z(F0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40128 ( input A, B, C, D, output Z );

  LUT4 #("0x0C0C") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module STATE_OUT_serial_SLICE_187 ( input C1, B1, D0, A0, output F0, F1 );
  wire   GNDI;

  lut40129 \STATE_OUT/serial/i1291_2_lut ( .A(GNDI), .B(B1), .C(C1), .D(GNDI), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40130 \STATE_OUT/serial/i1_2_lut ( .A(A0), .B(GNDI), .C(GNDI), .D(D0), 
    .Z(F0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40129 ( input A, B, C, D, output Z );

  LUT4 #("0x0303") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40130 ( input A, B, C, D, output Z );

  LUT4 #("0xAAFF") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module STATE_OUT_serial_SLICE_190 ( input C1, B1, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40131 \STATE_OUT/serial/i405_2_lut ( .A(GNDI), .B(B1), .C(C1), .D(GNDI), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40132 \STATE_OUT/serial/i404_2_lut ( .A(A0), .B(B0), .C(GNDI), .D(GNDI), 
    .Z(F0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40131 ( input A, B, C, D, output Z );

  LUT4 #("0x0C0C") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40132 ( input A, B, C, D, output Z );

  LUT4 #("0x2222") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module STATE_OUT_serial_SLICE_192 ( input B1, A1, C0, B0, output F0, F1 );
  wire   GNDI;

  lut40046 \STATE_OUT/serial/i410_2_lut ( .A(A1), .B(B1), .C(GNDI), .D(GNDI), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40043 \STATE_OUT/serial/i399_2_lut ( .A(GNDI), .B(B0), .C(C0), .D(GNDI), 
    .Z(F0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module STATE_OUT_serial_SLICE_194 ( input D1, A1, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40044 \STATE_OUT/serial/i408_2_lut ( .A(A1), .B(GNDI), .C(GNDI), .D(D1), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40054 \STATE_OUT/serial/i411_2_lut ( .A(A0), .B(B0), .C(GNDI), .D(GNDI), 
    .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module STATE_OUT_serial_SLICE_196 ( input D1, B1, C0, A0, output F0, F1 );
  wire   GNDI;

  lut40052 \STATE_OUT/serial/i426_2_lut ( .A(GNDI), .B(B1), .C(GNDI), .D(D1), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40053 \STATE_OUT/serial/i409_2_lut ( .A(A0), .B(GNDI), .C(C0), .D(GNDI), 
    .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module STATE_OUT_serial_SLICE_198 ( input D1, A1, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40044 \STATE_OUT/serial/i403_2_lut ( .A(A1), .B(GNDI), .C(GNDI), .D(D1), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40054 \STATE_OUT/serial/i406_2_lut ( .A(A0), .B(B0), .C(GNDI), .D(GNDI), 
    .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module STATE_OUT_serial_SLICE_200 ( input D1, B1, C0, A0, output F0, F1 );
  wire   GNDI;

  lut40052 \STATE_OUT/serial/i413_2_lut ( .A(GNDI), .B(B1), .C(GNDI), .D(D1), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40053 \STATE_OUT/serial/i412_2_lut ( .A(A0), .B(GNDI), .C(C0), .D(GNDI), 
    .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module STATE_OUT_serial_SLICE_202 ( input D1, A1, C0, A0, output F0, F1 );
  wire   GNDI;

  lut40044 \STATE_OUT/serial/i423_2_lut ( .A(A1), .B(GNDI), .C(GNDI), .D(D1), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40045 \STATE_OUT/serial/i414_2_lut ( .A(A0), .B(GNDI), .C(C0), .D(GNDI), 
    .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module STATE_OUT_serial_SLICE_203 ( input DI1, D1, C1, B1, A1, C0, A0, CLK, 
    output Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly;

  lut40019 \STATE_OUT/serial/counter_31__I_36_i16_3_lut_4_lut ( .A(A1), .B(B1), 
    .C(C1), .D(D1), .Z(F1));
  lut40053 \STATE_OUT/serial/i415_2_lut ( .A(A0), .B(GNDI), .C(C0), .D(GNDI), 
    .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \STATE_OUT/serial/counter_i15 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
  endspecify

endmodule

module STATE_OUT_serial_SLICE_204 ( input DI1, D1, C1, B1, A1, C0, A0, CLK, 
    output Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly;

  lut40133 \STATE_OUT/serial/counter_31__I_36_i15_3_lut_4_lut ( .A(A1), .B(B1), 
    .C(C1), .D(D1), .Z(F1));
  lut40053 \STATE_OUT/serial/i416_2_lut ( .A(A0), .B(GNDI), .C(C0), .D(GNDI), 
    .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \STATE_OUT/serial/counter_i14 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
  endspecify

endmodule

module lut40133 ( input A, B, C, D, output Z );

  LUT4 #("0xAAB8") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module STATE_OUT_serial_SLICE_205 ( input DI1, D1, C1, B1, A1, D0, B0, CLK, 
    output Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly;

  lut40134 \STATE_OUT/serial/counter_31__I_36_i14_3_lut_4_lut ( .A(A1), .B(B1), 
    .C(C1), .D(D1), .Z(F1));
  lut40091 \STATE_OUT/serial/i417_2_lut ( .A(GNDI), .B(B0), .C(GNDI), .D(D0), 
    .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \STATE_OUT/serial/counter_i13 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
  endspecify

endmodule

module lut40134 ( input A, B, C, D, output Z );

  LUT4 #("0xCCCA") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module STATE_OUT_serial_SLICE_206 ( input DI1, D1, C1, B1, A1, D0, A0, CLK, 
    output Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly;

  lut40135 \STATE_OUT/serial/counter_31__I_36_i13_3_lut_4_lut ( .A(A1), .B(B1), 
    .C(C1), .D(D1), .Z(F1));
  lut40136 \STATE_OUT/serial/i418_2_lut ( .A(A0), .B(GNDI), .C(GNDI), .D(D0), 
    .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \STATE_OUT/serial/counter_i12 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
  endspecify

endmodule

module lut40135 ( input A, B, C, D, output Z );

  LUT4 #("0xF0E4") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40136 ( input A, B, C, D, output Z );

  LUT4 #("0x00AA") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module STATE_OUT_serial_SLICE_207 ( input DI1, D1, C1, B1, A1, C0, A0, CLK, 
    output Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly;

  lut40017 \STATE_OUT/serial/counter_31__I_36_i12_3_lut_4_lut ( .A(A1), .B(B1), 
    .C(C1), .D(D1), .Z(F1));
  lut40053 \STATE_OUT/serial/i419_2_lut ( .A(A0), .B(GNDI), .C(C0), .D(GNDI), 
    .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \STATE_OUT/serial/counter_i11 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
  endspecify

endmodule

module STATE_OUT_serial_SLICE_208 ( input DI1, D1, C1, B1, A1, D0, B0, CLK, 
    output Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly;

  lut40134 \STATE_OUT/serial/counter_31__I_36_i11_3_lut_4_lut ( .A(A1), .B(B1), 
    .C(C1), .D(D1), .Z(F1));
  lut40091 \STATE_OUT/serial/i420_2_lut ( .A(GNDI), .B(B0), .C(GNDI), .D(D0), 
    .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \STATE_OUT/serial/counter_i10 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
  endspecify

endmodule

module STATE_OUT_serial_SLICE_209 ( input DI1, D1, C1, B1, A1, D0, B0, CLK, 
    output Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly;

  lut40025 \STATE_OUT/serial/counter_31__I_36_i10_3_lut_4_lut ( .A(A1), .B(B1), 
    .C(C1), .D(D1), .Z(F1));
  lut40137 \STATE_OUT/serial/i421_2_lut ( .A(GNDI), .B(B0), .C(GNDI), .D(D0), 
    .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \STATE_OUT/serial/counter_i9 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
  endspecify

endmodule

module lut40137 ( input A, B, C, D, output Z );

  LUT4 #("0x3300") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module STATE_OUT_serial_SLICE_210 ( input DI1, D1, C1, B1, A1, D0, C0, CLK, 
    output Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly;

  lut40133 \STATE_OUT/serial/counter_31__I_36_i9_3_lut_4_lut ( .A(A1), .B(B1), 
    .C(C1), .D(D1), .Z(F1));
  lut40051 \STATE_OUT/serial/i422_2_lut ( .A(GNDI), .B(GNDI), .C(C0), .D(D0), 
    .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \STATE_OUT/serial/counter_i8 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
  endspecify

endmodule

module STATE_OUT_serial_SLICE_212 ( input C1, B1, D0, A0, output F0, F1 );
  wire   GNDI;

  lut40055 \STATE_OUT/serial/i425_2_lut ( .A(GNDI), .B(B1), .C(C1), .D(GNDI), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40048 \STATE_OUT/serial/i424_2_lut ( .A(A0), .B(GNDI), .C(GNDI), .D(D0), 
    .Z(F0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module mainTimer_SLICE_216 ( input B0, A0, output F0 );
  wire   GNDI;

  lut40138 \mainTimer/i2_2_lut ( .A(A0), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40138 ( input A, B, C, D, output Z );

  LUT4 #("0x8888") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module OSCInst1 ( input CLKLFPU, CLKLFEN, output CLKLF );
  wire   GNDI;

  LSOSC_CORE_B OSCInst1( .CLKLFPU(CLKLFPU), .CLKLFEN(CLKLFEN), .TRIM9(GNDI), 
    .TRIM8(GNDI), .TRIM7(GNDI), .TRIM6(GNDI), .TRIM5(GNDI), .TRIM4(GNDI), 
    .TRIM3(GNDI), .TRIM2(GNDI), .TRIM1(GNDI), .TRIM0(GNDI), .CLKLF(CLKLF));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
  endspecify

endmodule

module LSOSC_CORE_B ( input CLKLFPU, CLKLFEN, TRIM9, TRIM8, TRIM7, TRIM6, 
    TRIM5, TRIM4, TRIM3, TRIM2, TRIM1, TRIM0, output CLKLF );

  LSOSC_CORE INST10( .CLKLFPU(CLKLFPU), .CLKLFEN(CLKLFEN), .TRIM9(TRIM9), 
    .TRIM8(TRIM8), .TRIM7(TRIM7), .TRIM6(TRIM6), .TRIM5(TRIM5), .TRIM4(TRIM4), 
    .TRIM3(TRIM3), .TRIM2(TRIM2), .TRIM1(TRIM1), .TRIM0(TRIM0), .CLKLF(CLKLF));
  defparam INST10.FABRIC_TRIME = "DISABLE";
endmodule

module STATUS_OUT ( input PADDO, output STATUS_OUT );
  wire   VCCI;

  BB_B_B \STATUS_OUT_pad.bb_inst ( .T_N(VCCI), .I(PADDO), .O(), .B(STATUS_OUT));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (PADDO => STATUS_OUT) = (0:0:0,0:0:0);
  endspecify

endmodule

module BB_B_B ( input T_N, I, output O, inout B );

  BB_B INST10( .T_N(T_N), .I(I), .O(O), .B(B));
endmodule

module SIREN_OUT ( input PADDO, output SIREN_OUT );
  wire   VCCI;

  BB_B_B \SIREN_OUT_pad.bb_inst ( .T_N(VCCI), .I(PADDO), .O(), .B(SIREN_OUT));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (PADDO => SIREN_OUT) = (0:0:0,0:0:0);
  endspecify

endmodule

module STATUS_SEND ( input PADDO, output STATUS_SEND );
  wire   VCCI;

  BB_B_B \STATUS_SEND_pad.bb_inst ( .T_N(VCCI), .I(PADDO), .O(), 
    .B(STATUS_SEND));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (PADDO => STATUS_SEND) = (0:0:0,0:0:0);
  endspecify

endmodule

module SERCLK_OUT ( input PADDO, output SERCLK_OUT );
  wire   VCCI;

  BB_B_B \SERCLK_OUT_pad.bb_inst ( .T_N(VCCI), .I(PADDO), .O(), .B(SERCLK_OUT));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (PADDO => SERCLK_OUT) = (0:0:0,0:0:0);
  endspecify

endmodule

module Sreg_1_ ( input PADDO, output Sreg1 );
  wire   VCCI;

  BB_B_B \Sreg_pad[1].bb_inst ( .T_N(VCCI), .I(PADDO), .O(), .B(Sreg1));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (PADDO => Sreg1) = (0:0:0,0:0:0);
  endspecify

endmodule

module Sreg_0_ ( input PADDO, output Sreg0 );
  wire   VCCI;

  BB_B_B \Sreg_pad[0].bb_inst ( .T_N(VCCI), .I(PADDO), .O(), .B(Sreg0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (PADDO => Sreg0) = (0:0:0,0:0:0);
  endspecify

endmodule

module KEY_STATUS_1_ ( input PADDO, output KEYSTATUS1 );
  wire   VCCI;

  BB_B_B \KEY_STATUS_pad[1].bb_inst ( .T_N(VCCI), .I(PADDO), .O(), 
    .B(KEYSTATUS1));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (PADDO => KEYSTATUS1) = (0:0:0,0:0:0);
  endspecify

endmodule

module KEY_STATUS_0_ ( input PADDO, output KEYSTATUS0 );
  wire   VCCI;

  BB_B_B \KEY_STATUS_pad[0].bb_inst ( .T_N(VCCI), .I(PADDO), .O(), 
    .B(KEYSTATUS0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (PADDO => KEYSTATUS0) = (0:0:0,0:0:0);
  endspecify

endmodule

module DEBUG_KEY_1_ ( input PADDO, output DEBUGKEY1 );
  wire   VCCI;

  BB_B_B \DEBUG_KEY_pad[1].bb_inst ( .T_N(VCCI), .I(PADDO), .O(), 
    .B(DEBUGKEY1));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (PADDO => DEBUGKEY1) = (0:0:0,0:0:0);
  endspecify

endmodule

module DEBUG_KEY_0_ ( input PADDO, output DEBUGKEY0 );
  wire   VCCI;

  BB_B_B \DEBUG_KEY_pad[0].bb_inst ( .T_N(VCCI), .I(PADDO), .O(), 
    .B(DEBUGKEY0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (PADDO => DEBUGKEY0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SENSOR1_IN ( output PADDI, input SENSOR1_IN );
  wire   GNDI;

  BB_B_B \SENSOR1_IN_pad.bb_inst ( .T_N(GNDI), .I(GNDI), .O(PADDI), 
    .B(SENSOR1_IN));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (SENSOR1_IN => PADDI) = (0:0:0,0:0:0);
  endspecify

endmodule

module SENSOR2_IN ( output PADDI, input SENSOR2_IN );
  wire   GNDI;

  BB_B_B \SENSOR2_IN_pad.bb_inst ( .T_N(GNDI), .I(GNDI), .O(PADDI), 
    .B(SENSOR2_IN));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (SENSOR2_IN => PADDI) = (0:0:0,0:0:0);
  endspecify

endmodule

module KB_IN_1_ ( output PADDI, input KBIN1 );
  wire   GNDI;

  BB_B_B \KB_IN_pad[1].bb_inst ( .T_N(GNDI), .I(GNDI), .O(PADDI), .B(KBIN1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (KBIN1 => PADDI) = (0:0:0,0:0:0);
  endspecify

endmodule

module KB_IN_0_ ( output PADDI, input KBIN0 );
  wire   GNDI;

  BB_B_B \KB_IN_pad[0].bb_inst ( .T_N(GNDI), .I(GNDI), .O(PADDI), .B(KBIN0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (KBIN0 => PADDI) = (0:0:0,0:0:0);
  endspecify

endmodule

module KB_RECV ( output PADDI, input KB_RECV );
  wire   GNDI;

  BB_B_B \KB_RECV_pad.bb_inst ( .T_N(GNDI), .I(GNDI), .O(PADDI), .B(KB_RECV));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (KB_RECV => PADDI) = (0:0:0,0:0:0);
  endspecify

endmodule


// Verilog netlist produced by program backanno, Version Radiant Software (64-bit) 3.0.0.24.1

// backanno -o ModuloAlarmaTP2_impl_1_vo.vo -sp High-Performance_1.2V -w -neg -gui ModuloAlarmaTP2_impl_1.udb 
// Netlist created on Sun Nov 14 22:16:08 2021
// Netlist written on Sun Nov 14 22:16:14 2021
// Design is for device iCE40UP5K
// Design is for package SG48
// Design is for performance grade High-Performance_1.2V

`timescale 1 ns / 1 ps

module MainModule ( STATUS_OUT, SIREN_OUT, STATUS_SEND, SERCLK_OUT, RESET_OUT, 
                    SENSOR1_IN, SENSOR2_IN, KB_IN, KB_RECV, CTRL_IN, CTRL_RECV, 
                    CTRL_CLK );
  input  SENSOR1_IN, SENSOR2_IN;
  input  [1:0] KB_IN;
  input  KB_RECV, CTRL_IN, CTRL_RECV, CTRL_CLK;
  output STATUS_OUT, SIREN_OUT, STATUS_SEND, SERCLK_OUT, RESET_OUT;
  wire   \STATE_OUT.serial.n2689 , \STATE_OUT.serial.n1107 , VCC_net, 
         \STATE_OUT.counter_31__N_126[31] , \STATE_OUT.counter_31__N_158[31] , 
         \STATE_OUT.serial.n2686 , \STATE_OUT.counter_31__N_126[30] , 
         \STATE_OUT.serial.n1105 , \STATE_OUT.counter_31__N_126[29] , 
         \STATE_OUT.counter_31__N_158[29] , \STATE_OUT.counter_31__N_158[30] , 
         \STATE_OUT.serial.n2683 , \STATE_OUT.counter_31__N_126[28] , 
         \STATE_OUT.serial.n1103 , \STATE_OUT.counter_31__N_126[27] , 
         \STATE_OUT.counter_31__N_158[27] , \STATE_OUT.counter_31__N_158[28] , 
         \STATE_OUT.serial.n2680 , \STATE_OUT.counter_31__N_126[26] , 
         \STATE_OUT.serial.n1101 , \STATE_OUT.counter_31__N_126[25] , 
         \STATE_OUT.counter_31__N_158[25] , \STATE_OUT.counter_31__N_158[26] , 
         \STATE_OUT.serial.n2677 , \STATE_OUT.counter_31__N_126[24] , 
         \STATE_OUT.serial.n1099 , \STATE_OUT.counter_31__N_126[23] , 
         \STATE_OUT.counter_31__N_158[23] , \STATE_OUT.counter_31__N_158[24] , 
         \STATE_OUT.serial.n2674 , \STATE_OUT.counter_31__N_126[22] , 
         \STATE_OUT.serial.n1097 , \STATE_OUT.counter_31__N_126[21] , 
         \STATE_OUT.counter_31__N_158[21] , \STATE_OUT.counter_31__N_158[22] , 
         \STATE_OUT.serial.n2671 , \STATE_OUT.counter_31__N_126[20] , 
         \STATE_OUT.serial.n1095 , \STATE_OUT.counter_31__N_126[19] , 
         \STATE_OUT.counter_31__N_158[19] , \STATE_OUT.counter_31__N_158[20] , 
         \STATE_OUT.serial.n2668 , \STATE_OUT.counter_31__N_126[18] , 
         \STATE_OUT.serial.n1093 , \STATE_OUT.counter_31__N_126[17] , 
         \STATE_OUT.counter_31__N_158[17] , \STATE_OUT.counter_31__N_158[18] , 
         \STATE_OUT.serial.n2665 , \STATE_OUT.counter_31__N_126[16] , 
         \STATE_OUT.serial.n1091 , \STATE_OUT.counter_31__N_126[15] , 
         \STATE_OUT.counter_31__N_158[15] , \STATE_OUT.counter_31__N_158[16] , 
         \STATE_OUT.serial.n2662 , \STATE_OUT.counter_31__N_126[14] , 
         \STATE_OUT.serial.n1089 , \STATE_OUT.counter_31__N_126[13] , 
         \STATE_OUT.counter_31__N_158[13] , \STATE_OUT.counter_31__N_158[14] , 
         \STATE_OUT.serial.n2647 , \STATE_OUT.counter_31__N_126[4] , 
         \STATE_OUT.serial.n1079 , \STATE_OUT.counter_31__N_126[3] , 
         \STATE_OUT.counter_31__N_158[3] , \STATE_OUT.counter_31__N_158[4] , 
         \STATE_OUT.serial.n1081 , \STATE_OUT.serial.n2653 , 
         \STATE_OUT.counter_31__N_126[8] , \STATE_OUT.serial.n1083 , 
         \STATE_OUT.counter_31__N_126[7] , \STATE_OUT.counter_31__N_158[7] , 
         \STATE_OUT.counter_31__N_158[8] , \STATE_OUT.serial.n1085 , 
         \STATE_OUT.serial.n2638 , \STATE_OUT.counter_31__N_126[0] , 
         \STATE_OUT.counter_31__N_188[0] , \STATE_OUT.serial.n1077 , 
         \STATE_OUT.serial.n2644 , \STATE_OUT.counter_31__N_126[2] , 
         \STATE_OUT.counter_31__N_126[1] , \STATE_OUT.counter_31__N_188[1] , 
         \STATE_OUT.counter_31__N_158[2] , \STATE_OUT.serial.n2659 , 
         \STATE_OUT.counter_31__N_126[12] , \STATE_OUT.serial.n1087 , 
         \STATE_OUT.counter_31__N_126[11] , \STATE_OUT.counter_31__N_158[11] , 
         \STATE_OUT.counter_31__N_158[12] , \STATE_OUT.serial.n2650 , 
         \STATE_OUT.counter_31__N_126[6] , \STATE_OUT.counter_31__N_126[5] , 
         \STATE_OUT.counter_31__N_158[5] , \STATE_OUT.counter_31__N_158[6] , 
         \STATE_OUT.serial.n2656 , \STATE_OUT.counter_31__N_126[10] , 
         \STATE_OUT.counter_31__N_126[9] , \STATE_OUT.counter_31__N_158[9] , 
         \STATE_OUT.counter_31__N_158[10] , \mainTimer.n2545 , 
         \mainTimer.clkCont[0] , \mainTimer.clkCont_17__N_41[0] , 
         \mainTimer.n1110 , \mainTimer.n2635 , \mainTimer.n1126 , 
         \mainTimer.clkCont[17] , \mainTimer.clkCont_17__N_41[17] , 
         \mainTimer.n2626 , \mainTimer.clkCont[16] , \mainTimer.n1124 , 
         \mainTimer.clkCont[15] , \mainTimer.clkCont_17__N_41[15] , 
         \mainTimer.clkCont_17__N_41[16] , \mainTimer.n2617 , 
         \mainTimer.clkCont[14] , \mainTimer.n1122 , \mainTimer.clkCont[13] , 
         \mainTimer.clkCont_17__N_41[13] , \mainTimer.clkCont_17__N_41[14] , 
         \mainTimer.n2608 , \mainTimer.clkCont[12] , \mainTimer.n1120 , 
         \mainTimer.clkCont[11] , \mainTimer.clkCont_17__N_41[11] , 
         \mainTimer.clkCont_17__N_41[12] , \mainTimer.n2599 , 
         \mainTimer.clkCont[10] , \mainTimer.n1118 , \mainTimer.clkCont[9] , 
         \mainTimer.clkCont_17__N_41[9] , \mainTimer.clkCont_17__N_41[10] , 
         \mainTimer.n2590 , \mainTimer.clkCont[8] , \mainTimer.n1116 , 
         \mainTimer.clkCont[7] , \mainTimer.clkCont_17__N_41[7] , 
         \mainTimer.clkCont_17__N_41[8] , \mainTimer.n2581 , 
         \mainTimer.clkCont[6] , \mainTimer.n1114 , \mainTimer.clkCont[5] , 
         \mainTimer.clkCont_17__N_41[5] , \mainTimer.clkCont_17__N_41[6] , 
         \mainTimer.n2572 , \mainTimer.clkCont[4] , \mainTimer.n1112 , 
         \mainTimer.clkCont[3] , \mainTimer.clkCont_17__N_41[3] , 
         \mainTimer.clkCont_17__N_41[4] , \mainTimer.n2563 , 
         \mainTimer.clkCont[2] , \mainTimer.clkCont[1] , 
         \mainTimer.clkCont_17__N_41[1] , \mainTimer.clkCont_17__N_41[2] , 
         \STATE_OUT.n21[0] , \STATE_OUT.n21[1] , \STATE_OUT.cont[0] , 
         \STATE_OUT.waiting , \STATE_OUT.cont[1] , \STATE_OUT.state_send_N_72 , 
         SERCLK_OUT_c, \STATE_OUT.n21[3] , \STATE_OUT.n21[2] , 
         \STATE_OUT.cont[2] , \STATE_OUT.n1050 , \STATE_OUT.cont[3] , 
         \STATE_OUT.counter_31__N_89[1] , \STATE_OUT.counter_31__N_89[0] , 
         \STATE_OUT.n1488 , \STATE_OUT.counter[0] , \STATE_OUT.counter[1] , 
         \STATE_OUT.serial.aux_3__N_121[0]$n3 , 
         \STATE_OUT.serial.aux_3__N_121[2]$n1 , \STATE_OUT.serial.aux[0] , 
         \state[0] , \state[1] , n63, SENSOR1_IN_c, \STATE_OUT.serial.aux[2] , 
         \STATE_OUT.counter[2] , \STATE_OUT.counter_31__N_89[3] , 
         \STATE_OUT.counter_31__N_89[2] , \STATE_OUT.init , 
         \STATE_OUT.counter[3] , \STATE_OUT.counter_31__N_89[6] , 
         \STATE_OUT.counter_31__N_89[4] , \STATE_OUT.serial.counter[4] , 
         \STATE_OUT.serial.counter[6] , \STATE_OUT.counter_31__N_89[7] , 
         \STATE_OUT.counter_31__N_89[5] , \STATE_OUT.counter[5] , 
         \STATE_OUT.counter[7] , \STATE_OUT.counter_31__N_89[9] , 
         \STATE_OUT.counter_31__N_89[8] , \STATE_OUT.serial.counter[8] , 
         \STATE_OUT.serial.counter[9] , \STATE_OUT.counter_31__N_89[11] , 
         \STATE_OUT.counter_31__N_89[10] , \STATE_OUT.serial.counter[10] , 
         \STATE_OUT.serial.counter[11] , \STATE_OUT.counter_31__N_89[13] , 
         \STATE_OUT.counter_31__N_89[12] , \STATE_OUT.serial.counter[12] , 
         \STATE_OUT.serial.counter[13] , \STATE_OUT.counter_31__N_89[15] , 
         \STATE_OUT.counter_31__N_89[14] , \STATE_OUT.serial.counter[14] , 
         \STATE_OUT.serial.counter[15] , \STATE_OUT.counter_31__N_89[17] , 
         \STATE_OUT.counter_31__N_89[16] , \STATE_OUT.serial.counter[16] , 
         \STATE_OUT.serial.counter[17] , \STATE_OUT.counter_31__N_89[19] , 
         \STATE_OUT.counter_31__N_89[18] , \STATE_OUT.serial.counter[18] , 
         \STATE_OUT.serial.counter[19] , \STATE_OUT.counter_31__N_89[21] , 
         \STATE_OUT.counter_31__N_89[20] , \STATE_OUT.serial.counter[20] , 
         \STATE_OUT.serial.counter[21] , \STATE_OUT.counter_31__N_89[23] , 
         \STATE_OUT.counter_31__N_89[22] , \STATE_OUT.serial.counter[22] , 
         \STATE_OUT.serial.counter[23] , \STATE_OUT.counter_31__N_89[25] , 
         \STATE_OUT.counter_31__N_89[24] , \STATE_OUT.serial.counter[24] , 
         \STATE_OUT.serial.counter[25] , \STATE_OUT.counter_31__N_89[27] , 
         \STATE_OUT.counter_31__N_89[26] , \STATE_OUT.serial.counter[26] , 
         \STATE_OUT.serial.counter[27] , \STATE_OUT.counter_31__N_89[29] , 
         \STATE_OUT.counter_31__N_89[28] , \STATE_OUT.serial.counter[28] , 
         \STATE_OUT.serial.counter[29] , \STATE_OUT.counter_31__N_89[31] , 
         \STATE_OUT.counter_31__N_89[30] , \STATE_OUT.serial.counter[30] , 
         \STATE_OUT.serial.counter[31] , \mainTimer.TIMER_EN , 
         \mainTimer.TIME_OUT , SENSOR2_IN_c, \mainTimer.n1849 , 
         \mainTimer.n24 , \mainTimer.n20 , \mainTimer.n1664 , 
         \mainTimer.n1662 , \mainTimer.n22 , \mainTimer.n15 , \STATE_OUT.n34 , 
         \STATE_OUT.n4 , \STATE_OUT.n33 , \STATE_OUT.n38 , \STATE_OUT.n15 , 
         \STATE_OUT.n16 , \STATE_OUT.serial.aux_3__N_121[3] , 
         \STATE_OUT.serial.aux_3__N_121[2] , \STATE_OUT.serial.aux[3] , 
         \STATE_OUT.serial.n2204 , \STATE_OUT.serial.aux_3__N_121[3]$n2 , 
         \STATE_OUT.serial.n32 , \STATE_OUT.serial.n31 , 
         \STATE_OUT.serial.n35 , \STATE_OUT.serial.n10 , \aux[1] , 
         \aux_3__N_121[1] , \STATE_OUT.serial.n1646 , \STATE_OUT.serial.n302 , 
         \STATE_OUT.n866 , \aux_3__N_121[1]$n0 , SIREN_OUT_c, \STATE_OUT.n632 , 
         GND_net, \STATE_OUT.n314 , STATUS_SEND_c, 
         \STATE_OUT.init.sig_000.FeedThruLUT , 
         \STATE_OUT.serial.status_out_N_195 , 
         \STATE_OUT.serial.aux_3__N_121[0] , STATUS_OUT_c;

  STATE_OUT_serial_SLICE_0 \STATE_OUT.serial.SLICE_0 ( 
    .D1(\STATE_OUT.serial.n2689 ), .D0(\STATE_OUT.serial.n1107 ), .C0(VCC_net), 
    .B0(\STATE_OUT.counter_31__N_126[31] ), .CIN0(\STATE_OUT.serial.n1107 ), 
    .CIN1(\STATE_OUT.serial.n2689 ), .F0(\STATE_OUT.counter_31__N_158[31] ), 
    .COUT0(\STATE_OUT.serial.n2689 ));
  STATE_OUT_serial_SLICE_1 \STATE_OUT.serial.SLICE_1 ( 
    .D1(\STATE_OUT.serial.n2686 ), .C1(VCC_net), 
    .B1(\STATE_OUT.counter_31__N_126[30] ), .D0(\STATE_OUT.serial.n1105 ), 
    .C0(VCC_net), .B0(\STATE_OUT.counter_31__N_126[29] ), 
    .CIN0(\STATE_OUT.serial.n1105 ), .CIN1(\STATE_OUT.serial.n2686 ), 
    .F0(\STATE_OUT.counter_31__N_158[29] ), 
    .F1(\STATE_OUT.counter_31__N_158[30] ), .COUT1(\STATE_OUT.serial.n1107 ), 
    .COUT0(\STATE_OUT.serial.n2686 ));
  STATE_OUT_serial_SLICE_2 \STATE_OUT.serial.SLICE_2 ( 
    .D1(\STATE_OUT.serial.n2683 ), .C1(VCC_net), 
    .B1(\STATE_OUT.counter_31__N_126[28] ), .D0(\STATE_OUT.serial.n1103 ), 
    .C0(VCC_net), .B0(\STATE_OUT.counter_31__N_126[27] ), 
    .CIN0(\STATE_OUT.serial.n1103 ), .CIN1(\STATE_OUT.serial.n2683 ), 
    .F0(\STATE_OUT.counter_31__N_158[27] ), 
    .F1(\STATE_OUT.counter_31__N_158[28] ), .COUT1(\STATE_OUT.serial.n1105 ), 
    .COUT0(\STATE_OUT.serial.n2683 ));
  STATE_OUT_serial_SLICE_3 \STATE_OUT.serial.SLICE_3 ( 
    .D1(\STATE_OUT.serial.n2680 ), .C1(VCC_net), 
    .B1(\STATE_OUT.counter_31__N_126[26] ), .D0(\STATE_OUT.serial.n1101 ), 
    .C0(VCC_net), .B0(\STATE_OUT.counter_31__N_126[25] ), 
    .CIN0(\STATE_OUT.serial.n1101 ), .CIN1(\STATE_OUT.serial.n2680 ), 
    .F0(\STATE_OUT.counter_31__N_158[25] ), 
    .F1(\STATE_OUT.counter_31__N_158[26] ), .COUT1(\STATE_OUT.serial.n1103 ), 
    .COUT0(\STATE_OUT.serial.n2680 ));
  STATE_OUT_serial_SLICE_4 \STATE_OUT.serial.SLICE_4 ( 
    .D1(\STATE_OUT.serial.n2677 ), .C1(VCC_net), 
    .B1(\STATE_OUT.counter_31__N_126[24] ), .D0(\STATE_OUT.serial.n1099 ), 
    .C0(VCC_net), .B0(\STATE_OUT.counter_31__N_126[23] ), 
    .CIN0(\STATE_OUT.serial.n1099 ), .CIN1(\STATE_OUT.serial.n2677 ), 
    .F0(\STATE_OUT.counter_31__N_158[23] ), 
    .F1(\STATE_OUT.counter_31__N_158[24] ), .COUT1(\STATE_OUT.serial.n1101 ), 
    .COUT0(\STATE_OUT.serial.n2677 ));
  STATE_OUT_serial_SLICE_5 \STATE_OUT.serial.SLICE_5 ( 
    .D1(\STATE_OUT.serial.n2674 ), .C1(VCC_net), 
    .B1(\STATE_OUT.counter_31__N_126[22] ), .D0(\STATE_OUT.serial.n1097 ), 
    .C0(VCC_net), .B0(\STATE_OUT.counter_31__N_126[21] ), 
    .CIN0(\STATE_OUT.serial.n1097 ), .CIN1(\STATE_OUT.serial.n2674 ), 
    .F0(\STATE_OUT.counter_31__N_158[21] ), 
    .F1(\STATE_OUT.counter_31__N_158[22] ), .COUT1(\STATE_OUT.serial.n1099 ), 
    .COUT0(\STATE_OUT.serial.n2674 ));
  STATE_OUT_serial_SLICE_6 \STATE_OUT.serial.SLICE_6 ( 
    .D1(\STATE_OUT.serial.n2671 ), .C1(VCC_net), 
    .B1(\STATE_OUT.counter_31__N_126[20] ), .D0(\STATE_OUT.serial.n1095 ), 
    .C0(VCC_net), .B0(\STATE_OUT.counter_31__N_126[19] ), 
    .CIN0(\STATE_OUT.serial.n1095 ), .CIN1(\STATE_OUT.serial.n2671 ), 
    .F0(\STATE_OUT.counter_31__N_158[19] ), 
    .F1(\STATE_OUT.counter_31__N_158[20] ), .COUT1(\STATE_OUT.serial.n1097 ), 
    .COUT0(\STATE_OUT.serial.n2671 ));
  STATE_OUT_serial_SLICE_7 \STATE_OUT.serial.SLICE_7 ( 
    .D1(\STATE_OUT.serial.n2668 ), .C1(VCC_net), 
    .B1(\STATE_OUT.counter_31__N_126[18] ), .D0(\STATE_OUT.serial.n1093 ), 
    .C0(VCC_net), .B0(\STATE_OUT.counter_31__N_126[17] ), 
    .CIN0(\STATE_OUT.serial.n1093 ), .CIN1(\STATE_OUT.serial.n2668 ), 
    .F0(\STATE_OUT.counter_31__N_158[17] ), 
    .F1(\STATE_OUT.counter_31__N_158[18] ), .COUT1(\STATE_OUT.serial.n1095 ), 
    .COUT0(\STATE_OUT.serial.n2668 ));
  STATE_OUT_serial_SLICE_8 \STATE_OUT.serial.SLICE_8 ( 
    .D1(\STATE_OUT.serial.n2665 ), .C1(VCC_net), 
    .B1(\STATE_OUT.counter_31__N_126[16] ), .D0(\STATE_OUT.serial.n1091 ), 
    .C0(VCC_net), .B0(\STATE_OUT.counter_31__N_126[15] ), 
    .CIN0(\STATE_OUT.serial.n1091 ), .CIN1(\STATE_OUT.serial.n2665 ), 
    .F0(\STATE_OUT.counter_31__N_158[15] ), 
    .F1(\STATE_OUT.counter_31__N_158[16] ), .COUT1(\STATE_OUT.serial.n1093 ), 
    .COUT0(\STATE_OUT.serial.n2665 ));
  STATE_OUT_serial_SLICE_9 \STATE_OUT.serial.SLICE_9 ( 
    .D1(\STATE_OUT.serial.n2662 ), .C1(VCC_net), 
    .B1(\STATE_OUT.counter_31__N_126[14] ), .D0(\STATE_OUT.serial.n1089 ), 
    .C0(VCC_net), .B0(\STATE_OUT.counter_31__N_126[13] ), 
    .CIN0(\STATE_OUT.serial.n1089 ), .CIN1(\STATE_OUT.serial.n2662 ), 
    .F0(\STATE_OUT.counter_31__N_158[13] ), 
    .F1(\STATE_OUT.counter_31__N_158[14] ), .COUT1(\STATE_OUT.serial.n1091 ), 
    .COUT0(\STATE_OUT.serial.n2662 ));
  STATE_OUT_serial_SLICE_10 \STATE_OUT.serial.SLICE_10 ( 
    .D1(\STATE_OUT.serial.n2647 ), .C1(VCC_net), 
    .B1(\STATE_OUT.counter_31__N_126[4] ), .D0(\STATE_OUT.serial.n1079 ), 
    .C0(VCC_net), .B0(\STATE_OUT.counter_31__N_126[3] ), 
    .CIN0(\STATE_OUT.serial.n1079 ), .CIN1(\STATE_OUT.serial.n2647 ), 
    .F0(\STATE_OUT.counter_31__N_158[3] ), 
    .F1(\STATE_OUT.counter_31__N_158[4] ), .COUT1(\STATE_OUT.serial.n1081 ), 
    .COUT0(\STATE_OUT.serial.n2647 ));
  STATE_OUT_serial_SLICE_11 \STATE_OUT.serial.SLICE_11 ( 
    .D1(\STATE_OUT.serial.n2653 ), .C1(VCC_net), 
    .B1(\STATE_OUT.counter_31__N_126[8] ), .D0(\STATE_OUT.serial.n1083 ), 
    .C0(VCC_net), .B0(\STATE_OUT.counter_31__N_126[7] ), 
    .CIN0(\STATE_OUT.serial.n1083 ), .CIN1(\STATE_OUT.serial.n2653 ), 
    .F0(\STATE_OUT.counter_31__N_158[7] ), 
    .F1(\STATE_OUT.counter_31__N_158[8] ), .COUT1(\STATE_OUT.serial.n1085 ), 
    .COUT0(\STATE_OUT.serial.n2653 ));
  STATE_OUT_serial_SLICE_12 \STATE_OUT.serial.SLICE_12 ( 
    .D1(\STATE_OUT.serial.n2638 ), .C1(VCC_net), 
    .B1(\STATE_OUT.counter_31__N_126[0] ), .CIN1(\STATE_OUT.serial.n2638 ), 
    .F1(\STATE_OUT.counter_31__N_188[0] ), .COUT1(\STATE_OUT.serial.n1077 ), 
    .COUT0(\STATE_OUT.serial.n2638 ));
  STATE_OUT_serial_SLICE_13 \STATE_OUT.serial.SLICE_13 ( 
    .D1(\STATE_OUT.serial.n2644 ), .C1(VCC_net), 
    .B1(\STATE_OUT.counter_31__N_126[2] ), .D0(\STATE_OUT.serial.n1077 ), 
    .C0(VCC_net), .B0(\STATE_OUT.counter_31__N_126[1] ), 
    .CIN0(\STATE_OUT.serial.n1077 ), .CIN1(\STATE_OUT.serial.n2644 ), 
    .F0(\STATE_OUT.counter_31__N_188[1] ), 
    .F1(\STATE_OUT.counter_31__N_158[2] ), .COUT1(\STATE_OUT.serial.n1079 ), 
    .COUT0(\STATE_OUT.serial.n2644 ));
  STATE_OUT_serial_SLICE_14 \STATE_OUT.serial.SLICE_14 ( 
    .D1(\STATE_OUT.serial.n2659 ), .C1(VCC_net), 
    .B1(\STATE_OUT.counter_31__N_126[12] ), .D0(\STATE_OUT.serial.n1087 ), 
    .C0(VCC_net), .B0(\STATE_OUT.counter_31__N_126[11] ), 
    .CIN0(\STATE_OUT.serial.n1087 ), .CIN1(\STATE_OUT.serial.n2659 ), 
    .F0(\STATE_OUT.counter_31__N_158[11] ), 
    .F1(\STATE_OUT.counter_31__N_158[12] ), .COUT1(\STATE_OUT.serial.n1089 ), 
    .COUT0(\STATE_OUT.serial.n2659 ));
  STATE_OUT_serial_SLICE_15 \STATE_OUT.serial.SLICE_15 ( 
    .D1(\STATE_OUT.serial.n2650 ), .C1(VCC_net), 
    .B1(\STATE_OUT.counter_31__N_126[6] ), .D0(\STATE_OUT.serial.n1081 ), 
    .C0(VCC_net), .B0(\STATE_OUT.counter_31__N_126[5] ), 
    .CIN0(\STATE_OUT.serial.n1081 ), .CIN1(\STATE_OUT.serial.n2650 ), 
    .F0(\STATE_OUT.counter_31__N_158[5] ), 
    .F1(\STATE_OUT.counter_31__N_158[6] ), .COUT1(\STATE_OUT.serial.n1083 ), 
    .COUT0(\STATE_OUT.serial.n2650 ));
  STATE_OUT_serial_SLICE_16 \STATE_OUT.serial.SLICE_16 ( 
    .D1(\STATE_OUT.serial.n2656 ), .C1(VCC_net), 
    .B1(\STATE_OUT.counter_31__N_126[10] ), .D0(\STATE_OUT.serial.n1085 ), 
    .C0(VCC_net), .B0(\STATE_OUT.counter_31__N_126[9] ), 
    .CIN0(\STATE_OUT.serial.n1085 ), .CIN1(\STATE_OUT.serial.n2656 ), 
    .F0(\STATE_OUT.counter_31__N_158[9] ), 
    .F1(\STATE_OUT.counter_31__N_158[10] ), .COUT1(\STATE_OUT.serial.n1087 ), 
    .COUT0(\STATE_OUT.serial.n2656 ));
  mainTimer_SLICE_17 \mainTimer.SLICE_17 ( .D1(\mainTimer.n2545 ), 
    .C1(VCC_net), .B1(\mainTimer.clkCont[0] ), .CIN1(\mainTimer.n2545 ), 
    .F1(\mainTimer.clkCont_17__N_41[0] ), .COUT1(\mainTimer.n1110 ), 
    .COUT0(\mainTimer.n2545 ));
  mainTimer_SLICE_18 \mainTimer.SLICE_18 ( .D1(\mainTimer.n2635 ), 
    .D0(\mainTimer.n1126 ), .B0(\mainTimer.clkCont[17] ), 
    .CIN0(\mainTimer.n1126 ), .CIN1(\mainTimer.n2635 ), 
    .F0(\mainTimer.clkCont_17__N_41[17] ), .COUT0(\mainTimer.n2635 ));
  mainTimer_SLICE_19 \mainTimer.SLICE_19 ( .D1(\mainTimer.n2626 ), 
    .B1(\mainTimer.clkCont[16] ), .D0(\mainTimer.n1124 ), 
    .B0(\mainTimer.clkCont[15] ), .CIN0(\mainTimer.n1124 ), 
    .CIN1(\mainTimer.n2626 ), .F0(\mainTimer.clkCont_17__N_41[15] ), 
    .F1(\mainTimer.clkCont_17__N_41[16] ), .COUT1(\mainTimer.n1126 ), 
    .COUT0(\mainTimer.n2626 ));
  mainTimer_SLICE_20 \mainTimer.SLICE_20 ( .D1(\mainTimer.n2617 ), 
    .B1(\mainTimer.clkCont[14] ), .D0(\mainTimer.n1122 ), 
    .B0(\mainTimer.clkCont[13] ), .CIN0(\mainTimer.n1122 ), 
    .CIN1(\mainTimer.n2617 ), .F0(\mainTimer.clkCont_17__N_41[13] ), 
    .F1(\mainTimer.clkCont_17__N_41[14] ), .COUT1(\mainTimer.n1124 ), 
    .COUT0(\mainTimer.n2617 ));
  mainTimer_SLICE_21 \mainTimer.SLICE_21 ( .D1(\mainTimer.n2608 ), 
    .B1(\mainTimer.clkCont[12] ), .D0(\mainTimer.n1120 ), 
    .B0(\mainTimer.clkCont[11] ), .CIN0(\mainTimer.n1120 ), 
    .CIN1(\mainTimer.n2608 ), .F0(\mainTimer.clkCont_17__N_41[11] ), 
    .F1(\mainTimer.clkCont_17__N_41[12] ), .COUT1(\mainTimer.n1122 ), 
    .COUT0(\mainTimer.n2608 ));
  mainTimer_SLICE_22 \mainTimer.SLICE_22 ( .D1(\mainTimer.n2599 ), 
    .B1(\mainTimer.clkCont[10] ), .D0(\mainTimer.n1118 ), 
    .B0(\mainTimer.clkCont[9] ), .CIN0(\mainTimer.n1118 ), 
    .CIN1(\mainTimer.n2599 ), .F0(\mainTimer.clkCont_17__N_41[9] ), 
    .F1(\mainTimer.clkCont_17__N_41[10] ), .COUT1(\mainTimer.n1120 ), 
    .COUT0(\mainTimer.n2599 ));
  mainTimer_SLICE_23 \mainTimer.SLICE_23 ( .D1(\mainTimer.n2590 ), 
    .B1(\mainTimer.clkCont[8] ), .D0(\mainTimer.n1116 ), 
    .B0(\mainTimer.clkCont[7] ), .CIN0(\mainTimer.n1116 ), 
    .CIN1(\mainTimer.n2590 ), .F0(\mainTimer.clkCont_17__N_41[7] ), 
    .F1(\mainTimer.clkCont_17__N_41[8] ), .COUT1(\mainTimer.n1118 ), 
    .COUT0(\mainTimer.n2590 ));
  mainTimer_SLICE_24 \mainTimer.SLICE_24 ( .D1(\mainTimer.n2581 ), 
    .B1(\mainTimer.clkCont[6] ), .D0(\mainTimer.n1114 ), 
    .B0(\mainTimer.clkCont[5] ), .CIN0(\mainTimer.n1114 ), 
    .CIN1(\mainTimer.n2581 ), .F0(\mainTimer.clkCont_17__N_41[5] ), 
    .F1(\mainTimer.clkCont_17__N_41[6] ), .COUT1(\mainTimer.n1116 ), 
    .COUT0(\mainTimer.n2581 ));
  mainTimer_SLICE_25 \mainTimer.SLICE_25 ( .D1(\mainTimer.n2572 ), 
    .B1(\mainTimer.clkCont[4] ), .D0(\mainTimer.n1112 ), 
    .B0(\mainTimer.clkCont[3] ), .CIN0(\mainTimer.n1112 ), 
    .CIN1(\mainTimer.n2572 ), .F0(\mainTimer.clkCont_17__N_41[3] ), 
    .F1(\mainTimer.clkCont_17__N_41[4] ), .COUT1(\mainTimer.n1114 ), 
    .COUT0(\mainTimer.n2572 ));
  mainTimer_SLICE_26 \mainTimer.SLICE_26 ( .D1(\mainTimer.n2563 ), 
    .B1(\mainTimer.clkCont[2] ), .D0(\mainTimer.n1110 ), 
    .B0(\mainTimer.clkCont[1] ), .CIN0(\mainTimer.n1110 ), 
    .CIN1(\mainTimer.n2563 ), .F0(\mainTimer.clkCont_17__N_41[1] ), 
    .F1(\mainTimer.clkCont_17__N_41[2] ), .COUT1(\mainTimer.n1112 ), 
    .COUT0(\mainTimer.n2563 ));
  STATE_OUT_SLICE_29 \STATE_OUT.SLICE_29 ( .DI1(\STATE_OUT.n21[0] ), 
    .DI0(\STATE_OUT.n21[1] ), .D1(\STATE_OUT.cont[0] ), 
    .B1(\STATE_OUT.waiting ), .C0(\STATE_OUT.cont[0] ), 
    .B0(\STATE_OUT.cont[1] ), .A0(\STATE_OUT.waiting ), 
    .LSR(\STATE_OUT.state_send_N_72 ), .CLK(SERCLK_OUT_c), 
    .Q0(\STATE_OUT.cont[1] ), .Q1(\STATE_OUT.cont[0] ), 
    .F0(\STATE_OUT.n21[1] ), .F1(\STATE_OUT.n21[0] ));
  STATE_OUT_SLICE_30 \STATE_OUT.SLICE_30 ( .DI1(\STATE_OUT.n21[3] ), 
    .DI0(\STATE_OUT.n21[2] ), .D1(\STATE_OUT.cont[2] ), .C1(\STATE_OUT.n1050 ), 
    .B1(\STATE_OUT.cont[3] ), .A1(\STATE_OUT.cont[1] ), 
    .D0(\STATE_OUT.waiting ), .C0(\STATE_OUT.cont[0] ), 
    .B0(\STATE_OUT.cont[1] ), .A0(\STATE_OUT.cont[2] ), 
    .LSR(\STATE_OUT.state_send_N_72 ), .CLK(SERCLK_OUT_c), 
    .Q0(\STATE_OUT.cont[2] ), .Q1(\STATE_OUT.cont[3] ), 
    .F0(\STATE_OUT.n21[2] ), .F1(\STATE_OUT.n21[3] ));
  STATE_OUT_SLICE_32 \STATE_OUT.SLICE_32 ( 
    .DI1(\STATE_OUT.counter_31__N_89[1] ), 
    .DI0(\STATE_OUT.counter_31__N_89[0] ), 
    .D1(\STATE_OUT.counter_31__N_126[2] ), .C1(\STATE_OUT.n1488 ), 
    .B1(\STATE_OUT.counter_31__N_188[1] ), 
    .A1(\STATE_OUT.counter_31__N_126[1] ), .D0(\STATE_OUT.n1488 ), 
    .C0(\STATE_OUT.counter_31__N_126[0] ), 
    .B0(\STATE_OUT.counter_31__N_188[0] ), 
    .A0(\STATE_OUT.counter_31__N_126[2] ), .CLK(SERCLK_OUT_c), 
    .Q0(\STATE_OUT.counter[0] ), .Q1(\STATE_OUT.counter[1] ), 
    .F0(\STATE_OUT.counter_31__N_89[0] ), .F1(\STATE_OUT.counter_31__N_89[1] ));
  STATE_OUT_serial_SLICE_35 \STATE_OUT.serial.SLICE_35 ( 
    .DI1(\STATE_OUT.serial.aux_3__N_121[0]$n3 ), 
    .DI0(\STATE_OUT.serial.aux_3__N_121[2]$n1 ), 
    .D1(\STATE_OUT.serial.aux[0] ), .C1(\state[0] ), .B1(\state[1] ), .A1(n63), 
    .D0(\STATE_OUT.n1488 ), .C0(SENSOR1_IN_c), .B0(\STATE_OUT.serial.aux[2] ), 
    .A0(\STATE_OUT.counter[2] ), .CLK(SERCLK_OUT_c), 
    .Q0(\STATE_OUT.serial.aux[2] ), .Q1(\STATE_OUT.serial.aux[0] ), 
    .F0(\STATE_OUT.serial.aux_3__N_121[2]$n1 ), 
    .F1(\STATE_OUT.serial.aux_3__N_121[0]$n3 ));
  STATE_OUT_SLICE_38 \STATE_OUT.SLICE_38 ( 
    .DI1(\STATE_OUT.counter_31__N_89[3] ), 
    .DI0(\STATE_OUT.counter_31__N_89[2] ), .D1(\STATE_OUT.counter[2] ), 
    .C1(\STATE_OUT.n1488 ), .B1(\STATE_OUT.counter_31__N_158[3] ), 
    .A1(\STATE_OUT.init ), .D0(\STATE_OUT.init ), .C0(\STATE_OUT.counter[2] ), 
    .B0(\STATE_OUT.n1488 ), .A0(\STATE_OUT.counter_31__N_158[2] ), 
    .CLK(SERCLK_OUT_c), .Q0(\STATE_OUT.counter[2] ), 
    .Q1(\STATE_OUT.counter[3] ), .F0(\STATE_OUT.counter_31__N_89[2] ), 
    .F1(\STATE_OUT.counter_31__N_89[3] ));
  STATE_OUT_SLICE_40 \STATE_OUT.SLICE_40 ( 
    .DI1(\STATE_OUT.counter_31__N_89[6] ), 
    .DI0(\STATE_OUT.counter_31__N_89[4] ), .D1(\STATE_OUT.n1488 ), 
    .C1(\STATE_OUT.counter_31__N_158[6] ), 
    .B1(\STATE_OUT.counter_31__N_126[6] ), 
    .A1(\STATE_OUT.counter_31__N_126[2] ), 
    .D0(\STATE_OUT.counter_31__N_126[2] ), 
    .C0(\STATE_OUT.counter_31__N_126[4] ), 
    .B0(\STATE_OUT.counter_31__N_158[4] ), .A0(\STATE_OUT.n1488 ), 
    .CLK(SERCLK_OUT_c), .Q0(\STATE_OUT.serial.counter[4] ), 
    .Q1(\STATE_OUT.serial.counter[6] ), .F0(\STATE_OUT.counter_31__N_89[4] ), 
    .F1(\STATE_OUT.counter_31__N_89[6] ));
  STATE_OUT_SLICE_41 \STATE_OUT.SLICE_41 ( 
    .DI1(\STATE_OUT.counter_31__N_89[7] ), 
    .DI0(\STATE_OUT.counter_31__N_89[5] ), 
    .D1(\STATE_OUT.counter_31__N_126[7] ), .C1(\STATE_OUT.n1488 ), 
    .B1(\STATE_OUT.counter_31__N_126[2] ), 
    .A1(\STATE_OUT.counter_31__N_158[7] ), 
    .D0(\STATE_OUT.counter_31__N_158[5] ), 
    .C0(\STATE_OUT.counter_31__N_126[2] ), .B0(\STATE_OUT.n1488 ), 
    .A0(\STATE_OUT.counter_31__N_126[5] ), .CLK(SERCLK_OUT_c), 
    .Q0(\STATE_OUT.counter[5] ), .Q1(\STATE_OUT.counter[7] ), 
    .F0(\STATE_OUT.counter_31__N_89[5] ), .F1(\STATE_OUT.counter_31__N_89[7] ));
  STATE_OUT_SLICE_44 \STATE_OUT.SLICE_44 ( 
    .DI1(\STATE_OUT.counter_31__N_89[9] ), 
    .DI0(\STATE_OUT.counter_31__N_89[8] ), .D1(\STATE_OUT.n1488 ), 
    .C1(\STATE_OUT.counter_31__N_158[9] ), 
    .B1(\STATE_OUT.counter_31__N_126[9] ), 
    .A1(\STATE_OUT.counter_31__N_126[2] ), 
    .D0(\STATE_OUT.counter_31__N_126[2] ), 
    .C0(\STATE_OUT.counter_31__N_158[8] ), 
    .B0(\STATE_OUT.counter_31__N_126[8] ), .A0(\STATE_OUT.n1488 ), 
    .CLK(SERCLK_OUT_c), .Q0(\STATE_OUT.serial.counter[8] ), 
    .Q1(\STATE_OUT.serial.counter[9] ), .F0(\STATE_OUT.counter_31__N_89[8] ), 
    .F1(\STATE_OUT.counter_31__N_89[9] ));
  STATE_OUT_SLICE_46 \STATE_OUT.SLICE_46 ( 
    .DI1(\STATE_OUT.counter_31__N_89[11] ), 
    .DI0(\STATE_OUT.counter_31__N_89[10] ), .D1(\STATE_OUT.n1488 ), 
    .C1(\STATE_OUT.counter_31__N_158[11] ), 
    .B1(\STATE_OUT.counter_31__N_126[11] ), 
    .A1(\STATE_OUT.counter_31__N_126[2] ), 
    .D0(\STATE_OUT.counter_31__N_126[2] ), 
    .C0(\STATE_OUT.counter_31__N_158[10] ), 
    .B0(\STATE_OUT.counter_31__N_126[10] ), .A0(\STATE_OUT.n1488 ), 
    .CLK(SERCLK_OUT_c), .Q0(\STATE_OUT.serial.counter[10] ), 
    .Q1(\STATE_OUT.serial.counter[11] ), .F0(\STATE_OUT.counter_31__N_89[10] ), 
    .F1(\STATE_OUT.counter_31__N_89[11] ));
  STATE_OUT_SLICE_48 \STATE_OUT.SLICE_48 ( 
    .DI1(\STATE_OUT.counter_31__N_89[13] ), 
    .DI0(\STATE_OUT.counter_31__N_89[12] ), .D1(\STATE_OUT.n1488 ), 
    .C1(\STATE_OUT.counter_31__N_126[13] ), 
    .B1(\STATE_OUT.counter_31__N_126[2] ), 
    .A1(\STATE_OUT.counter_31__N_158[13] ), 
    .D0(\STATE_OUT.counter_31__N_126[12] ), 
    .C0(\STATE_OUT.counter_31__N_126[2] ), 
    .B0(\STATE_OUT.counter_31__N_158[12] ), .A0(\STATE_OUT.n1488 ), 
    .CLK(SERCLK_OUT_c), .Q0(\STATE_OUT.serial.counter[12] ), 
    .Q1(\STATE_OUT.serial.counter[13] ), .F0(\STATE_OUT.counter_31__N_89[12] ), 
    .F1(\STATE_OUT.counter_31__N_89[13] ));
  STATE_OUT_SLICE_50 \STATE_OUT.SLICE_50 ( 
    .DI1(\STATE_OUT.counter_31__N_89[15] ), 
    .DI0(\STATE_OUT.counter_31__N_89[14] ), .D1(\STATE_OUT.n1488 ), 
    .C1(\STATE_OUT.counter_31__N_126[15] ), 
    .B1(\STATE_OUT.counter_31__N_126[2] ), 
    .A1(\STATE_OUT.counter_31__N_158[15] ), 
    .D0(\STATE_OUT.counter_31__N_126[14] ), .C0(\STATE_OUT.n1488 ), 
    .B0(\STATE_OUT.counter_31__N_158[14] ), 
    .A0(\STATE_OUT.counter_31__N_126[2] ), .CLK(SERCLK_OUT_c), 
    .Q0(\STATE_OUT.serial.counter[14] ), .Q1(\STATE_OUT.serial.counter[15] ), 
    .F0(\STATE_OUT.counter_31__N_89[14] ), 
    .F1(\STATE_OUT.counter_31__N_89[15] ));
  STATE_OUT_SLICE_52 \STATE_OUT.SLICE_52 ( 
    .DI1(\STATE_OUT.counter_31__N_89[17] ), 
    .DI0(\STATE_OUT.counter_31__N_89[16] ), .D1(\STATE_OUT.n1488 ), 
    .C1(\STATE_OUT.counter_31__N_126[17] ), 
    .B1(\STATE_OUT.counter_31__N_126[2] ), 
    .A1(\STATE_OUT.counter_31__N_158[17] ), 
    .D0(\STATE_OUT.counter_31__N_126[16] ), .C0(\STATE_OUT.n1488 ), 
    .B0(\STATE_OUT.counter_31__N_158[16] ), 
    .A0(\STATE_OUT.counter_31__N_126[2] ), .CLK(SERCLK_OUT_c), 
    .Q0(\STATE_OUT.serial.counter[16] ), .Q1(\STATE_OUT.serial.counter[17] ), 
    .F0(\STATE_OUT.counter_31__N_89[16] ), 
    .F1(\STATE_OUT.counter_31__N_89[17] ));
  STATE_OUT_SLICE_54 \STATE_OUT.SLICE_54 ( 
    .DI1(\STATE_OUT.counter_31__N_89[19] ), 
    .DI0(\STATE_OUT.counter_31__N_89[18] ), 
    .D1(\STATE_OUT.counter_31__N_158[19] ), .C1(\STATE_OUT.n1488 ), 
    .B1(\STATE_OUT.counter_31__N_126[2] ), 
    .A1(\STATE_OUT.counter_31__N_126[19] ), .D0(\STATE_OUT.n1488 ), 
    .C0(\STATE_OUT.counter_31__N_158[18] ), 
    .B0(\STATE_OUT.counter_31__N_126[18] ), 
    .A0(\STATE_OUT.counter_31__N_126[2] ), .CLK(SERCLK_OUT_c), 
    .Q0(\STATE_OUT.serial.counter[18] ), .Q1(\STATE_OUT.serial.counter[19] ), 
    .F0(\STATE_OUT.counter_31__N_89[18] ), 
    .F1(\STATE_OUT.counter_31__N_89[19] ));
  STATE_OUT_SLICE_56 \STATE_OUT.SLICE_56 ( 
    .DI1(\STATE_OUT.counter_31__N_89[21] ), 
    .DI0(\STATE_OUT.counter_31__N_89[20] ), 
    .D1(\STATE_OUT.counter_31__N_126[2] ), 
    .C1(\STATE_OUT.counter_31__N_126[21] ), 
    .B1(\STATE_OUT.counter_31__N_158[21] ), .A1(\STATE_OUT.n1488 ), 
    .D0(\STATE_OUT.n1488 ), .C0(\STATE_OUT.counter_31__N_126[20] ), 
    .B0(\STATE_OUT.counter_31__N_158[20] ), 
    .A0(\STATE_OUT.counter_31__N_126[2] ), .CLK(SERCLK_OUT_c), 
    .Q0(\STATE_OUT.serial.counter[20] ), .Q1(\STATE_OUT.serial.counter[21] ), 
    .F0(\STATE_OUT.counter_31__N_89[20] ), 
    .F1(\STATE_OUT.counter_31__N_89[21] ));
  STATE_OUT_SLICE_58 \STATE_OUT.SLICE_58 ( 
    .DI1(\STATE_OUT.counter_31__N_89[23] ), 
    .DI0(\STATE_OUT.counter_31__N_89[22] ), 
    .D1(\STATE_OUT.counter_31__N_158[23] ), 
    .C1(\STATE_OUT.counter_31__N_126[23] ), 
    .B1(\STATE_OUT.counter_31__N_126[2] ), .A1(\STATE_OUT.n1488 ), 
    .D0(\STATE_OUT.counter_31__N_158[22] ), 
    .C0(\STATE_OUT.counter_31__N_126[22] ), .B0(\STATE_OUT.n1488 ), 
    .A0(\STATE_OUT.counter_31__N_126[2] ), .CLK(SERCLK_OUT_c), 
    .Q0(\STATE_OUT.serial.counter[22] ), .Q1(\STATE_OUT.serial.counter[23] ), 
    .F0(\STATE_OUT.counter_31__N_89[22] ), 
    .F1(\STATE_OUT.counter_31__N_89[23] ));
  STATE_OUT_SLICE_60 \STATE_OUT.SLICE_60 ( 
    .DI1(\STATE_OUT.counter_31__N_89[25] ), 
    .DI0(\STATE_OUT.counter_31__N_89[24] ), 
    .D1(\STATE_OUT.counter_31__N_126[2] ), .C1(\STATE_OUT.n1488 ), 
    .B1(\STATE_OUT.counter_31__N_126[25] ), 
    .A1(\STATE_OUT.counter_31__N_158[25] ), .D0(\STATE_OUT.n1488 ), 
    .C0(\STATE_OUT.counter_31__N_126[2] ), 
    .B0(\STATE_OUT.counter_31__N_158[24] ), 
    .A0(\STATE_OUT.counter_31__N_126[24] ), .CLK(SERCLK_OUT_c), 
    .Q0(\STATE_OUT.serial.counter[24] ), .Q1(\STATE_OUT.serial.counter[25] ), 
    .F0(\STATE_OUT.counter_31__N_89[24] ), 
    .F1(\STATE_OUT.counter_31__N_89[25] ));
  STATE_OUT_SLICE_62 \STATE_OUT.SLICE_62 ( 
    .DI1(\STATE_OUT.counter_31__N_89[27] ), 
    .DI0(\STATE_OUT.counter_31__N_89[26] ), 
    .D1(\STATE_OUT.counter_31__N_158[27] ), 
    .C1(\STATE_OUT.counter_31__N_126[27] ), 
    .B1(\STATE_OUT.counter_31__N_126[2] ), .A1(\STATE_OUT.n1488 ), 
    .D0(\STATE_OUT.counter_31__N_126[26] ), 
    .C0(\STATE_OUT.counter_31__N_126[2] ), .B0(\STATE_OUT.n1488 ), 
    .A0(\STATE_OUT.counter_31__N_158[26] ), .CLK(SERCLK_OUT_c), 
    .Q0(\STATE_OUT.serial.counter[26] ), .Q1(\STATE_OUT.serial.counter[27] ), 
    .F0(\STATE_OUT.counter_31__N_89[26] ), 
    .F1(\STATE_OUT.counter_31__N_89[27] ));
  STATE_OUT_SLICE_64 \STATE_OUT.SLICE_64 ( 
    .DI1(\STATE_OUT.counter_31__N_89[29] ), 
    .DI0(\STATE_OUT.counter_31__N_89[28] ), 
    .D1(\STATE_OUT.counter_31__N_158[29] ), 
    .C1(\STATE_OUT.counter_31__N_126[2] ), 
    .B1(\STATE_OUT.counter_31__N_126[29] ), .A1(\STATE_OUT.n1488 ), 
    .D0(\STATE_OUT.n1488 ), .C0(\STATE_OUT.counter_31__N_158[28] ), 
    .B0(\STATE_OUT.counter_31__N_126[2] ), 
    .A0(\STATE_OUT.counter_31__N_126[28] ), .CLK(SERCLK_OUT_c), 
    .Q0(\STATE_OUT.serial.counter[28] ), .Q1(\STATE_OUT.serial.counter[29] ), 
    .F0(\STATE_OUT.counter_31__N_89[28] ), 
    .F1(\STATE_OUT.counter_31__N_89[29] ));
  STATE_OUT_SLICE_66 \STATE_OUT.SLICE_66 ( 
    .DI1(\STATE_OUT.counter_31__N_89[31] ), 
    .DI0(\STATE_OUT.counter_31__N_89[30] ), 
    .D1(\STATE_OUT.counter_31__N_126[31] ), .C1(\STATE_OUT.n1488 ), 
    .B1(\STATE_OUT.counter_31__N_158[31] ), 
    .A1(\STATE_OUT.counter_31__N_126[2] ), 
    .D0(\STATE_OUT.counter_31__N_126[2] ), 
    .C0(\STATE_OUT.counter_31__N_126[30] ), .B0(\STATE_OUT.n1488 ), 
    .A0(\STATE_OUT.counter_31__N_158[30] ), .CLK(SERCLK_OUT_c), 
    .Q0(\STATE_OUT.serial.counter[30] ), .Q1(\STATE_OUT.serial.counter[31] ), 
    .F0(\STATE_OUT.counter_31__N_89[30] ), 
    .F1(\STATE_OUT.counter_31__N_89[31] ));
  SLICE_71 SLICE_71( .D1(\mainTimer.TIMER_EN ), .C1(\state[1] ), 
    .B1(\state[0] ), .A1(\mainTimer.TIME_OUT ), .D0(SENSOR2_IN_c), 
    .C0(\state[0] ), .B0(SENSOR1_IN_c), .A0(\state[1] ), .F0(\state[1] ), 
    .F1(\mainTimer.TIMER_EN ));
  mainTimer_SLICE_72 \mainTimer.SLICE_72 ( .D1(\state[0] ), 
    .C1(\mainTimer.n1849 ), .B1(\state[1] ), .A1(\mainTimer.TIME_OUT ), 
    .D0(SENSOR2_IN_c), .B0(SENSOR1_IN_c), .F0(\mainTimer.n1849 ), 
    .F1(\state[0] ));
  mainTimer_SLICE_73 \mainTimer.SLICE_73 ( .D0(\mainTimer.TIMER_EN ), 
    .C0(\mainTimer.TIME_OUT ), .B0(\mainTimer.clkCont_17__N_41[0] ), 
    .A0(\mainTimer.clkCont[0] ), .F0(\mainTimer.clkCont[0] ));
  mainTimer_SLICE_74 \mainTimer.SLICE_74 ( .D1(\mainTimer.n24 ), 
    .C1(\mainTimer.n20 ), .B1(\mainTimer.clkCont[0] ), 
    .A1(\mainTimer.TIME_OUT ), .D0(\mainTimer.clkCont[13] ), 
    .C0(\mainTimer.n1664 ), .B0(\mainTimer.clkCont[12] ), 
    .A0(\mainTimer.n1662 ), .F0(\mainTimer.n20 ), .F1(\mainTimer.TIME_OUT ));
  mainTimer_SLICE_76 \mainTimer.SLICE_76 ( .D1(\mainTimer.clkCont[16] ), 
    .C1(\mainTimer.clkCont[17] ), .B1(\mainTimer.clkCont[5] ), 
    .A1(\mainTimer.clkCont[15] ), .D0(\mainTimer.TIMER_EN ), 
    .C0(\mainTimer.clkCont_17__N_41[17] ), .B0(\mainTimer.TIME_OUT ), 
    .A0(\mainTimer.clkCont[17] ), .F0(\mainTimer.clkCont[17] ), 
    .F1(\mainTimer.n1664 ));
  mainTimer_SLICE_77 \mainTimer.SLICE_77 ( .D1(\mainTimer.TIMER_EN ), 
    .C1(\mainTimer.clkCont_17__N_41[1] ), .B1(\mainTimer.TIME_OUT ), 
    .A1(\mainTimer.clkCont[1] ), .D0(\mainTimer.TIMER_EN ), 
    .C0(\mainTimer.clkCont[2] ), .B0(\mainTimer.clkCont_17__N_41[2] ), 
    .A0(\mainTimer.TIME_OUT ), .F0(\mainTimer.clkCont[2] ), 
    .F1(\mainTimer.clkCont[1] ));
  mainTimer_SLICE_78 \mainTimer.SLICE_78 ( .D1(\mainTimer.clkCont[9] ), 
    .C1(\mainTimer.clkCont[11] ), .B1(\mainTimer.clkCont[2] ), 
    .A1(\mainTimer.TIMER_EN ), .D0(\mainTimer.TIMER_EN ), 
    .C0(\mainTimer.clkCont[11] ), .B0(\mainTimer.TIME_OUT ), 
    .A0(\mainTimer.clkCont_17__N_41[11] ), .F0(\mainTimer.clkCont[11] ), 
    .F1(\mainTimer.n22 ));
  mainTimer_SLICE_80 \mainTimer.SLICE_80 ( .D1(\mainTimer.n15 ), 
    .C1(\mainTimer.clkCont[10] ), .B1(\mainTimer.n22 ), 
    .A1(\mainTimer.clkCont[1] ), .D0(\mainTimer.TIMER_EN ), 
    .C0(\mainTimer.clkCont_17__N_41[10] ), .B0(\mainTimer.TIME_OUT ), 
    .A0(\mainTimer.clkCont[10] ), .F0(\mainTimer.clkCont[10] ), 
    .F1(\mainTimer.n24 ));
  mainTimer_SLICE_81 \mainTimer.SLICE_81 ( .D1(\mainTimer.TIMER_EN ), 
    .C1(\mainTimer.clkCont[5] ), .B1(\mainTimer.TIME_OUT ), 
    .A1(\mainTimer.clkCont_17__N_41[5] ), .D0(\mainTimer.TIMER_EN ), 
    .C0(\mainTimer.clkCont_17__N_41[4] ), .B0(\mainTimer.TIME_OUT ), 
    .A0(\mainTimer.clkCont[4] ), .F0(\mainTimer.clkCont[4] ), 
    .F1(\mainTimer.clkCont[5] ));
  mainTimer_SLICE_82 \mainTimer.SLICE_82 ( .D1(\mainTimer.clkCont[4] ), 
    .C1(\mainTimer.clkCont[7] ), .D0(\mainTimer.TIMER_EN ), 
    .C0(\mainTimer.TIME_OUT ), .B0(\mainTimer.clkCont_17__N_41[7] ), 
    .A0(\mainTimer.clkCont[7] ), .F0(\mainTimer.clkCont[7] ), 
    .F1(\mainTimer.n15 ));
  mainTimer_SLICE_83 \mainTimer.SLICE_83 ( .D1(\mainTimer.clkCont[14] ), 
    .C1(\mainTimer.clkCont[3] ), .B1(\mainTimer.clkCont[8] ), 
    .A1(\mainTimer.clkCont[6] ), .D0(\mainTimer.TIMER_EN ), 
    .C0(\mainTimer.clkCont[3] ), .B0(\mainTimer.TIME_OUT ), 
    .A0(\mainTimer.clkCont_17__N_41[3] ), .F0(\mainTimer.clkCont[3] ), 
    .F1(\mainTimer.n1662 ));
  mainTimer_SLICE_88 \mainTimer.SLICE_88 ( .D1(\mainTimer.TIMER_EN ), 
    .C1(\mainTimer.clkCont_17__N_41[15] ), .B1(\mainTimer.TIME_OUT ), 
    .A1(\mainTimer.clkCont[15] ), .D0(\mainTimer.TIME_OUT ), 
    .C0(\mainTimer.clkCont_17__N_41[13] ), .B0(\mainTimer.TIMER_EN ), 
    .A0(\mainTimer.clkCont[13] ), .F0(\mainTimer.clkCont[13] ), 
    .F1(\mainTimer.clkCont[15] ));
  STATE_OUT_SLICE_89 \STATE_OUT.SLICE_89 ( .D1(\STATE_OUT.n34 ), 
    .C1(\STATE_OUT.n4 ), .B1(\STATE_OUT.n33 ), .A1(\STATE_OUT.n38 ), 
    .D0(\STATE_OUT.n15 ), .C0(\STATE_OUT.n16 ), .B0(\STATE_OUT.counter[1] ), 
    .A0(\STATE_OUT.counter[3] ), .F0(\STATE_OUT.n4 ), .F1(\STATE_OUT.n1488 ));
  STATE_OUT_serial_SLICE_90 \STATE_OUT.serial.SLICE_90 ( 
    .D0(\STATE_OUT.serial.counter[14] ), .C0(\STATE_OUT.serial.counter[11] ), 
    .B0(\STATE_OUT.serial.counter[12] ), .A0(\STATE_OUT.serial.counter[8] ), 
    .F0(\STATE_OUT.n15 ));
  STATE_OUT_serial_SLICE_92 \STATE_OUT.serial.SLICE_92 ( 
    .D1(\STATE_OUT.counter_31__N_188[0] ), 
    .C1(\STATE_OUT.serial.aux_3__N_121[3] ), 
    .B1(\STATE_OUT.serial.aux_3__N_121[2] ), 
    .A1(\STATE_OUT.counter_31__N_188[1] ), .D0(\STATE_OUT.counter[2] ), 
    .C0(\STATE_OUT.n1488 ), .B0(\STATE_OUT.serial.aux[3] ), .A0(SENSOR2_IN_c), 
    .F0(\STATE_OUT.serial.aux_3__N_121[3] ), .F1(\STATE_OUT.serial.n2204 ));
  STATE_OUT_serial_SLICE_94 \STATE_OUT.serial.SLICE_94 ( 
    .DI1(\STATE_OUT.serial.aux_3__N_121[3]$n2 ), .D1(\STATE_OUT.counter[2] ), 
    .C1(SENSOR2_IN_c), .B1(\STATE_OUT.serial.aux[3] ), .A1(\STATE_OUT.n1488 ), 
    .D0(\STATE_OUT.n1488 ), .C0(SENSOR1_IN_c), .B0(\STATE_OUT.serial.aux[2] ), 
    .A0(\STATE_OUT.counter[2] ), .CLK(SERCLK_OUT_c), 
    .Q1(\STATE_OUT.serial.aux[3] ), .F0(\STATE_OUT.serial.aux_3__N_121[2] ), 
    .F1(\STATE_OUT.serial.aux_3__N_121[3]$n2 ));
  STATE_OUT_serial_SLICE_95 \STATE_OUT.serial.SLICE_95 ( 
    .D0(\STATE_OUT.counter[7] ), .C0(\STATE_OUT.serial.counter[21] ), 
    .B0(\STATE_OUT.serial.counter[6] ), .A0(\STATE_OUT.serial.counter[30] ), 
    .F0(\STATE_OUT.serial.n32 ));
  STATE_OUT_serial_SLICE_96 \STATE_OUT.serial.SLICE_96 ( 
    .D1(\STATE_OUT.serial.n31 ), .C1(\STATE_OUT.serial.n35 ), 
    .B1(\STATE_OUT.serial.n32 ), .D0(\STATE_OUT.serial.counter[25] ), 
    .C0(\STATE_OUT.serial.counter[27] ), .B0(\STATE_OUT.serial.counter[31] ), 
    .A0(\STATE_OUT.serial.counter[23] ), .F0(\STATE_OUT.serial.n35 ), 
    .F1(\STATE_OUT.n38 ));
  STATE_OUT_serial_SLICE_97 \STATE_OUT.serial.SLICE_97 ( 
    .D1(\STATE_OUT.serial.counter[13] ), .C1(\STATE_OUT.serial.n10 ), 
    .B1(\STATE_OUT.serial.counter[15] ), .A1(\STATE_OUT.serial.counter[10] ), 
    .C0(\STATE_OUT.counter[0] ), .B0(\STATE_OUT.serial.counter[9] ), 
    .F0(\STATE_OUT.serial.n10 ), .F1(\STATE_OUT.n16 ));
  STATE_OUT_serial_SLICE_99 \STATE_OUT.serial.SLICE_99 ( .D1(\state[0] ), 
    .C1(n63), .B1(\state[1] ), .A1(\aux[1] ), .C0(\STATE_OUT.n1488 ), 
    .B0(\STATE_OUT.counter[2] ), .F0(n63), .F1(\aux_3__N_121[1] ));
  STATE_OUT_serial_SLICE_101 \STATE_OUT.serial.SLICE_101 ( 
    .D1(\STATE_OUT.init ), .B1(\STATE_OUT.n1488 ), .A1(\STATE_OUT.counter[2] ), 
    .D0(\STATE_OUT.counter[2] ), .C0(\STATE_OUT.init ), .A0(\STATE_OUT.n1488 ), 
    .F0(\STATE_OUT.serial.n1646 ), .F1(\STATE_OUT.serial.n302 ));
  STATE_OUT_SLICE_103 \STATE_OUT.SLICE_103 ( .B0(\STATE_OUT.counter[2] ), 
    .A0(\STATE_OUT.init ), .F0(\STATE_OUT.counter_31__N_126[2] ));
  STATE_OUT_serial_SLICE_104 \STATE_OUT.serial.SLICE_104 ( 
    .D1(\STATE_OUT.serial.counter[29] ), .B1(\STATE_OUT.init ), 
    .C0(\STATE_OUT.serial.counter[31] ), .A0(\STATE_OUT.init ), 
    .F0(\STATE_OUT.counter_31__N_126[31] ), 
    .F1(\STATE_OUT.counter_31__N_126[29] ));
  STATE_OUT_SLICE_105 \STATE_OUT.SLICE_105 ( .D0(\STATE_OUT.cont[0] ), 
    .C0(\STATE_OUT.cont[2] ), .B0(\STATE_OUT.cont[1] ), 
    .A0(\STATE_OUT.cont[3] ), .F0(\STATE_OUT.n866 ));
  mainTimer_SLICE_108 \mainTimer.SLICE_108 ( .D1(\mainTimer.clkCont[14] ), 
    .C1(\mainTimer.TIME_OUT ), .B1(\mainTimer.TIMER_EN ), 
    .A1(\mainTimer.clkCont_17__N_41[14] ), .D0(\mainTimer.TIME_OUT ), 
    .C0(\mainTimer.clkCont_17__N_41[16] ), .B0(\mainTimer.TIMER_EN ), 
    .A0(\mainTimer.clkCont[16] ), .F0(\mainTimer.clkCont[16] ), 
    .F1(\mainTimer.clkCont[14] ));
  mainTimer_SLICE_110 \mainTimer.SLICE_110 ( .D1(\mainTimer.clkCont[9] ), 
    .C1(\mainTimer.TIMER_EN ), .B1(\mainTimer.clkCont_17__N_41[9] ), 
    .A1(\mainTimer.TIME_OUT ), .D0(\mainTimer.TIMER_EN ), 
    .C0(\mainTimer.TIME_OUT ), .B0(\mainTimer.clkCont_17__N_41[12] ), 
    .A0(\mainTimer.clkCont[12] ), .F0(\mainTimer.clkCont[12] ), 
    .F1(\mainTimer.clkCont[9] ));
  mainTimer_SLICE_115 \mainTimer.SLICE_115 ( .D1(\mainTimer.TIME_OUT ), 
    .C1(\mainTimer.clkCont[6] ), .B1(\mainTimer.TIMER_EN ), 
    .A1(\mainTimer.clkCont_17__N_41[6] ), .D0(\mainTimer.TIMER_EN ), 
    .C0(\mainTimer.clkCont_17__N_41[8] ), .B0(\mainTimer.TIME_OUT ), 
    .A0(\mainTimer.clkCont[8] ), .F0(\mainTimer.clkCont[8] ), 
    .F1(\mainTimer.clkCont[6] ));
  SLICE_118 SLICE_118( .DI1(\aux_3__N_121[1]$n0 ), .D1(\aux[1] ), .C1(n63), 
    .B1(\state[1] ), .A1(\state[0] ), .C0(SIREN_OUT_c), .B0(\state[0] ), 
    .A0(\state[1] ), .CLK(SERCLK_OUT_c), .Q1(\aux[1] ), .F0(SIREN_OUT_c), 
    .F1(\aux_3__N_121[1]$n0 ));
  STATE_OUT_serial_SLICE_120 \STATE_OUT.serial.SLICE_120 ( 
    .D0(\STATE_OUT.serial.counter[22] ), .C0(\STATE_OUT.serial.counter[19] ), 
    .B0(\STATE_OUT.serial.counter[16] ), .A0(\STATE_OUT.counter[5] ), 
    .F0(\STATE_OUT.serial.n31 ));
  STATE_OUT_SLICE_121 \STATE_OUT.SLICE_121 ( .DI1(\STATE_OUT.n632 ), 
    .D1(\STATE_OUT.waiting ), .A1(\STATE_OUT.n866 ), .C0(\STATE_OUT.waiting ), 
    .A0(\STATE_OUT.cont[0] ), .LSR(\STATE_OUT.state_send_N_72 ), 
    .CLK(SERCLK_OUT_c), .Q1(\STATE_OUT.waiting ), .F0(\STATE_OUT.n1050 ), 
    .F1(\STATE_OUT.n632 ));
  STATE_OUT_serial_SLICE_122 \STATE_OUT.serial.SLICE_122 ( 
    .D1(\STATE_OUT.serial.counter[12] ), .B1(\STATE_OUT.init ), 
    .B0(\STATE_OUT.serial.counter[30] ), .A0(\STATE_OUT.init ), 
    .F0(\STATE_OUT.counter_31__N_126[30] ), 
    .F1(\STATE_OUT.counter_31__N_126[12] ));
  SLICE_123 SLICE_123( .F0(VCC_net));
  SLICE_124 SLICE_124( .F0(GND_net));
  STATE_OUT_SLICE_125 \STATE_OUT.SLICE_125 ( .C1(\STATE_OUT.init ), 
    .B1(\STATE_OUT.counter[5] ), .D0(\STATE_OUT.init ), 
    .B0(\STATE_OUT.counter[7] ), .F0(\STATE_OUT.counter_31__N_126[7] ), 
    .F1(\STATE_OUT.counter_31__N_126[5] ));
  STATE_OUT_SLICE_127 \STATE_OUT.SLICE_127 ( .DI1(\STATE_OUT.n314 ), 
    .D1(\STATE_OUT.init ), .C1(\STATE_OUT.n866 ), .B1(\STATE_OUT.waiting ), 
    .A1(STATUS_SEND_c), .C0(\STATE_OUT.init ), .A0(\STATE_OUT.counter[1] ), 
    .CLK(SERCLK_OUT_c), .Q1(\STATE_OUT.init ), 
    .F0(\STATE_OUT.counter_31__N_126[1] ), .F1(\STATE_OUT.n314 ));
  STATE_OUT_SLICE_128 \STATE_OUT.SLICE_128 ( .C1(\STATE_OUT.init ), 
    .B1(\STATE_OUT.counter[0] ), .D0(\STATE_OUT.init ), 
    .A0(\STATE_OUT.counter[3] ), .F0(\STATE_OUT.counter_31__N_126[3] ), 
    .F1(\STATE_OUT.counter_31__N_126[0] ));
  STATE_OUT_SLICE_129 \STATE_OUT.SLICE_129 ( 
    .DI1(\STATE_OUT.init.sig_000.FeedThruLUT ), .C1(\STATE_OUT.init ), 
    .D0(STATUS_SEND_c), .CE(\STATE_OUT.serial.n302 ), .CLK(SERCLK_OUT_c), 
    .Q1(STATUS_SEND_c), .F0(\STATE_OUT.state_send_N_72 ), 
    .F1(\STATE_OUT.init.sig_000.FeedThruLUT ));
  STATE_OUT_serial_SLICE_132 \STATE_OUT.serial.SLICE_132 ( 
    .D1(\STATE_OUT.serial.counter[10] ), .C1(\STATE_OUT.init ), 
    .B0(\STATE_OUT.init ), .A0(\STATE_OUT.serial.counter[11] ), 
    .F0(\STATE_OUT.counter_31__N_126[11] ), 
    .F1(\STATE_OUT.counter_31__N_126[10] ));
  STATE_OUT_serial_SLICE_134 \STATE_OUT.serial.SLICE_134 ( 
    .B1(\STATE_OUT.serial.counter[8] ), .A1(\STATE_OUT.init ), 
    .D0(\STATE_OUT.serial.counter[9] ), .B0(\STATE_OUT.init ), 
    .F0(\STATE_OUT.counter_31__N_126[9] ), 
    .F1(\STATE_OUT.counter_31__N_126[8] ));
  STATE_OUT_serial_SLICE_136 \STATE_OUT.serial.SLICE_136 ( 
    .D1(\STATE_OUT.serial.counter[4] ), .A1(\STATE_OUT.init ), 
    .B0(\STATE_OUT.init ), .A0(\STATE_OUT.serial.counter[6] ), 
    .F0(\STATE_OUT.counter_31__N_126[6] ), 
    .F1(\STATE_OUT.counter_31__N_126[4] ));
  STATE_OUT_serial_SLICE_138 \STATE_OUT.serial.SLICE_138 ( 
    .C1(\STATE_OUT.serial.counter[13] ), .A1(\STATE_OUT.init ), 
    .D0(\STATE_OUT.init ), .B0(\STATE_OUT.serial.counter[14] ), 
    .F0(\STATE_OUT.counter_31__N_126[14] ), 
    .F1(\STATE_OUT.counter_31__N_126[13] ));
  STATE_OUT_serial_SLICE_140 \STATE_OUT.serial.SLICE_140 ( 
    .C1(\STATE_OUT.serial.counter[15] ), .B1(\STATE_OUT.init ), 
    .B0(\STATE_OUT.serial.counter[16] ), .A0(\STATE_OUT.init ), 
    .F0(\STATE_OUT.counter_31__N_126[16] ), 
    .F1(\STATE_OUT.counter_31__N_126[15] ));
  STATE_OUT_serial_SLICE_142 \STATE_OUT.serial.SLICE_142 ( 
    .D1(\STATE_OUT.init ), .B1(\STATE_OUT.serial.counter[17] ), 
    .C0(\STATE_OUT.serial.counter[18] ), .A0(\STATE_OUT.init ), 
    .F0(\STATE_OUT.counter_31__N_126[18] ), 
    .F1(\STATE_OUT.counter_31__N_126[17] ));
  STATE_OUT_serial_SLICE_144 \STATE_OUT.serial.SLICE_144 ( 
    .D1(\STATE_OUT.init ), .B1(\STATE_OUT.serial.counter[19] ), 
    .B0(\STATE_OUT.serial.counter[20] ), .A0(\STATE_OUT.init ), 
    .F0(\STATE_OUT.counter_31__N_126[20] ), 
    .F1(\STATE_OUT.counter_31__N_126[19] ));
  STATE_OUT_serial_SLICE_146 \STATE_OUT.serial.SLICE_146 ( 
    .D1(\STATE_OUT.init ), .B1(\STATE_OUT.serial.counter[21] ), 
    .C0(\STATE_OUT.init ), .B0(\STATE_OUT.serial.counter[22] ), 
    .F0(\STATE_OUT.counter_31__N_126[22] ), 
    .F1(\STATE_OUT.counter_31__N_126[21] ));
  STATE_OUT_serial_SLICE_148 \STATE_OUT.serial.SLICE_148 ( 
    .D1(\STATE_OUT.serial.counter[29] ), .C1(\STATE_OUT.serial.counter[17] ), 
    .B1(\STATE_OUT.serial.counter[20] ), .A1(\STATE_OUT.serial.counter[24] ), 
    .C0(\STATE_OUT.init ), .B0(\STATE_OUT.serial.counter[24] ), 
    .F0(\STATE_OUT.counter_31__N_126[24] ), .F1(\STATE_OUT.n33 ));
  STATE_OUT_serial_SLICE_149 \STATE_OUT.serial.SLICE_149 ( 
    .C1(\STATE_OUT.serial.counter[25] ), .B1(\STATE_OUT.init ), 
    .D0(\STATE_OUT.serial.counter[23] ), .C0(\STATE_OUT.init ), 
    .F0(\STATE_OUT.counter_31__N_126[23] ), 
    .F1(\STATE_OUT.counter_31__N_126[25] ));
  STATE_OUT_serial_SLICE_150 \STATE_OUT.serial.SLICE_150 ( 
    .D1(\STATE_OUT.serial.counter[18] ), .C1(\STATE_OUT.serial.counter[4] ), 
    .B1(\STATE_OUT.serial.counter[28] ), .A1(\STATE_OUT.serial.counter[26] ), 
    .C0(\STATE_OUT.init ), .B0(\STATE_OUT.serial.counter[26] ), 
    .F0(\STATE_OUT.counter_31__N_126[26] ), .F1(\STATE_OUT.n34 ));
  STATE_OUT_serial_SLICE_152 \STATE_OUT.serial.SLICE_152 ( 
    .C1(\STATE_OUT.serial.counter[27] ), .B1(\STATE_OUT.init ), 
    .C0(\STATE_OUT.serial.counter[28] ), .A0(\STATE_OUT.init ), 
    .F0(\STATE_OUT.counter_31__N_126[28] ), 
    .F1(\STATE_OUT.counter_31__N_126[27] ));
  STATE_OUT_serial_SLICE_156 \STATE_OUT.serial.SLICE_156 ( 
    .DI1(\STATE_OUT.serial.status_out_N_195 ), 
    .D1(\STATE_OUT.counter_31__N_188[1] ), 
    .C1(\STATE_OUT.serial.aux_3__N_121[0] ), .B1(\STATE_OUT.serial.n2204 ), 
    .A1(\aux_3__N_121[1] ), .D0(\state[0] ), .C0(n63), 
    .B0(\STATE_OUT.serial.aux[0] ), .A0(\state[1] ), 
    .LSR(\STATE_OUT.serial.n1646 ), .CLK(SERCLK_OUT_c), .Q1(STATUS_OUT_c), 
    .F0(\STATE_OUT.serial.aux_3__N_121[0] ), 
    .F1(\STATE_OUT.serial.status_out_N_195 ));
  OSCInst1 OSCInst1( .CLKLFPU(VCC_net), .CLKLFEN(VCC_net), 
    .CLKLF(SERCLK_OUT_c));
  STATUS_OUT STATUS_OUT_I( .PADDO(STATUS_OUT_c), .STATUS_OUT(STATUS_OUT));
  SIREN_OUT SIREN_OUT_I( .PADDO(SIREN_OUT_c), .SIREN_OUT(SIREN_OUT));
  STATUS_SEND STATUS_SEND_I( .PADDO(STATUS_SEND_c), .STATUS_SEND(STATUS_SEND));
  SERCLK_OUT SERCLK_OUT_I( .PADDO(SERCLK_OUT_c), .SERCLK_OUT(SERCLK_OUT));
  RESET_OUT RESET_OUT_I( .PADDO(GND_net), .RESET_OUT(RESET_OUT));
  SENSOR1_IN SENSOR1_IN_I( .PADDI(SENSOR1_IN_c), .SENSOR1_IN(SENSOR1_IN));
  SENSOR2_IN SENSOR2_IN_I( .PADDI(SENSOR2_IN_c), .SENSOR2_IN(SENSOR2_IN));
endmodule

module STATE_OUT_serial_SLICE_0 ( input D1, D0, C0, B0, CIN0, CIN1, output F0, 
    COUT0 );
  wire   GNDI;

  fa2 \STATE_OUT/serial/sub_11_add_2_add_5_33 ( .A0(GNDI), .B0(B0), .C0(C0), 
    .D0(D0), .A1(GNDI), .B1(GNDI), .C1(GNDI), .D1(D1), .CI0(CIN0), .CI1(CIN1), 
    .S0(F0), .S1(), .CO0(COUT0), .CO1());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
  endspecify

endmodule

module fa2 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI0, CI1, output S0, S1, 
    CO0, CO1 );

  FA2 inst1( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .CI0(CI0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .CI1(CI1), .CO0(CO0), .CO1(CO1), .S0(S0), .S1(S1));
  defparam inst1.INIT0 = "0xc33c";
  defparam inst1.INIT1 = "0xc33c";
endmodule

module gnd ( output PWR0 );

  VLO INST1( .Z(PWR0));
endmodule

module STATE_OUT_serial_SLICE_1 ( input D1, C1, B1, D0, C0, B0, CIN0, CIN1, 
    output F0, F1, COUT1, COUT0 );
  wire   GNDI;

  fa2 \STATE_OUT/serial/sub_11_add_2_add_5_31 ( .A0(GNDI), .B0(B0), .C0(C0), 
    .D0(D0), .A1(GNDI), .B1(B1), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), 
    .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module STATE_OUT_serial_SLICE_2 ( input D1, C1, B1, D0, C0, B0, CIN0, CIN1, 
    output F0, F1, COUT1, COUT0 );
  wire   GNDI;

  fa2 \STATE_OUT/serial/sub_11_add_2_add_5_29 ( .A0(GNDI), .B0(B0), .C0(C0), 
    .D0(D0), .A1(GNDI), .B1(B1), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), 
    .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module STATE_OUT_serial_SLICE_3 ( input D1, C1, B1, D0, C0, B0, CIN0, CIN1, 
    output F0, F1, COUT1, COUT0 );
  wire   GNDI;

  fa2 \STATE_OUT/serial/sub_11_add_2_add_5_27 ( .A0(GNDI), .B0(B0), .C0(C0), 
    .D0(D0), .A1(GNDI), .B1(B1), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), 
    .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module STATE_OUT_serial_SLICE_4 ( input D1, C1, B1, D0, C0, B0, CIN0, CIN1, 
    output F0, F1, COUT1, COUT0 );
  wire   GNDI;

  fa2 \STATE_OUT/serial/sub_11_add_2_add_5_25 ( .A0(GNDI), .B0(B0), .C0(C0), 
    .D0(D0), .A1(GNDI), .B1(B1), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), 
    .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module STATE_OUT_serial_SLICE_5 ( input D1, C1, B1, D0, C0, B0, CIN0, CIN1, 
    output F0, F1, COUT1, COUT0 );
  wire   GNDI;

  fa2 \STATE_OUT/serial/sub_11_add_2_add_5_23 ( .A0(GNDI), .B0(B0), .C0(C0), 
    .D0(D0), .A1(GNDI), .B1(B1), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), 
    .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module STATE_OUT_serial_SLICE_6 ( input D1, C1, B1, D0, C0, B0, CIN0, CIN1, 
    output F0, F1, COUT1, COUT0 );
  wire   GNDI;

  fa2 \STATE_OUT/serial/sub_11_add_2_add_5_21 ( .A0(GNDI), .B0(B0), .C0(C0), 
    .D0(D0), .A1(GNDI), .B1(B1), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), 
    .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module STATE_OUT_serial_SLICE_7 ( input D1, C1, B1, D0, C0, B0, CIN0, CIN1, 
    output F0, F1, COUT1, COUT0 );
  wire   GNDI;

  fa2 \STATE_OUT/serial/sub_11_add_2_add_5_19 ( .A0(GNDI), .B0(B0), .C0(C0), 
    .D0(D0), .A1(GNDI), .B1(B1), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), 
    .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module STATE_OUT_serial_SLICE_8 ( input D1, C1, B1, D0, C0, B0, CIN0, CIN1, 
    output F0, F1, COUT1, COUT0 );
  wire   GNDI;

  fa2 \STATE_OUT/serial/sub_11_add_2_add_5_17 ( .A0(GNDI), .B0(B0), .C0(C0), 
    .D0(D0), .A1(GNDI), .B1(B1), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), 
    .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module STATE_OUT_serial_SLICE_9 ( input D1, C1, B1, D0, C0, B0, CIN0, CIN1, 
    output F0, F1, COUT1, COUT0 );
  wire   GNDI;

  fa2 \STATE_OUT/serial/sub_11_add_2_add_5_15 ( .A0(GNDI), .B0(B0), .C0(C0), 
    .D0(D0), .A1(GNDI), .B1(B1), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), 
    .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module STATE_OUT_serial_SLICE_10 ( input D1, C1, B1, D0, C0, B0, CIN0, CIN1, 
    output F0, F1, COUT1, COUT0 );
  wire   GNDI;

  fa2 \STATE_OUT/serial/sub_11_add_2_add_5_5 ( .A0(GNDI), .B0(B0), .C0(C0), 
    .D0(D0), .A1(GNDI), .B1(B1), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), 
    .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module STATE_OUT_serial_SLICE_11 ( input D1, C1, B1, D0, C0, B0, CIN0, CIN1, 
    output F0, F1, COUT1, COUT0 );
  wire   GNDI;

  fa2 \STATE_OUT/serial/sub_11_add_2_add_5_9 ( .A0(GNDI), .B0(B0), .C0(C0), 
    .D0(D0), .A1(GNDI), .B1(B1), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), 
    .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module STATE_OUT_serial_SLICE_12 ( input D1, C1, B1, CIN1, output F1, COUT1, 
    COUT0 );
  wire   GNDI, VCCI;

  fa2 \STATE_OUT/serial/sub_11_add_2_add_5_1 ( .A0(GNDI), .B0(GNDI), .C0(GNDI), 
    .D0(VCCI), .A1(GNDI), .B1(B1), .C1(C1), .D1(D1), .CI0(VCCI), .CI1(CIN1), 
    .S0(), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module vcc ( output PWR1 );

  VHI INST1( .Z(PWR1));
endmodule

module STATE_OUT_serial_SLICE_13 ( input D1, C1, B1, D0, C0, B0, CIN0, CIN1, 
    output F0, F1, COUT1, COUT0 );
  wire   GNDI;

  fa2 \STATE_OUT/serial/sub_11_add_2_add_5_3 ( .A0(GNDI), .B0(B0), .C0(C0), 
    .D0(D0), .A1(GNDI), .B1(B1), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), 
    .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module STATE_OUT_serial_SLICE_14 ( input D1, C1, B1, D0, C0, B0, CIN0, CIN1, 
    output F0, F1, COUT1, COUT0 );
  wire   GNDI;

  fa2 \STATE_OUT/serial/sub_11_add_2_add_5_13 ( .A0(GNDI), .B0(B0), .C0(C0), 
    .D0(D0), .A1(GNDI), .B1(B1), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), 
    .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module STATE_OUT_serial_SLICE_15 ( input D1, C1, B1, D0, C0, B0, CIN0, CIN1, 
    output F0, F1, COUT1, COUT0 );
  wire   GNDI;

  fa2 \STATE_OUT/serial/sub_11_add_2_add_5_7 ( .A0(GNDI), .B0(B0), .C0(C0), 
    .D0(D0), .A1(GNDI), .B1(B1), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), 
    .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module STATE_OUT_serial_SLICE_16 ( input D1, C1, B1, D0, C0, B0, CIN0, CIN1, 
    output F0, F1, COUT1, COUT0 );
  wire   GNDI;

  fa2 \STATE_OUT/serial/sub_11_add_2_add_5_11 ( .A0(GNDI), .B0(B0), .C0(C0), 
    .D0(D0), .A1(GNDI), .B1(B1), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), 
    .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module mainTimer_SLICE_17 ( input D1, C1, B1, CIN1, output F1, COUT1, COUT0 );
  wire   GNDI, VCCI;

  fa2 \mainTimer/add_120_add_5_1 ( .A0(GNDI), .B0(GNDI), .C0(GNDI), .D0(VCCI), 
    .A1(GNDI), .B1(B1), .C1(C1), .D1(D1), .CI0(VCCI), .CI1(CIN1), .S0(), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module mainTimer_SLICE_18 ( input D1, D0, B0, CIN0, CIN1, output F0, COUT0 );
  wire   GNDI;

  fa2 \mainTimer/add_120_add_5_19 ( .A0(GNDI), .B0(B0), .C0(GNDI), .D0(D0), 
    .A1(GNDI), .B1(GNDI), .C1(GNDI), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(), .CO0(COUT0), .CO1());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
  endspecify

endmodule

module mainTimer_SLICE_19 ( input D1, B1, D0, B0, CIN0, CIN1, output F0, F1, 
    COUT1, COUT0 );
  wire   GNDI;

  fa2 \mainTimer/add_120_add_5_17 ( .A0(GNDI), .B0(B0), .C0(GNDI), .D0(D0), 
    .A1(GNDI), .B1(B1), .C1(GNDI), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module mainTimer_SLICE_20 ( input D1, B1, D0, B0, CIN0, CIN1, output F0, F1, 
    COUT1, COUT0 );
  wire   GNDI;

  fa2 \mainTimer/add_120_add_5_15 ( .A0(GNDI), .B0(B0), .C0(GNDI), .D0(D0), 
    .A1(GNDI), .B1(B1), .C1(GNDI), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module mainTimer_SLICE_21 ( input D1, B1, D0, B0, CIN0, CIN1, output F0, F1, 
    COUT1, COUT0 );
  wire   GNDI;

  fa2 \mainTimer/add_120_add_5_13 ( .A0(GNDI), .B0(B0), .C0(GNDI), .D0(D0), 
    .A1(GNDI), .B1(B1), .C1(GNDI), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module mainTimer_SLICE_22 ( input D1, B1, D0, B0, CIN0, CIN1, output F0, F1, 
    COUT1, COUT0 );
  wire   GNDI;

  fa2 \mainTimer/add_120_add_5_11 ( .A0(GNDI), .B0(B0), .C0(GNDI), .D0(D0), 
    .A1(GNDI), .B1(B1), .C1(GNDI), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module mainTimer_SLICE_23 ( input D1, B1, D0, B0, CIN0, CIN1, output F0, F1, 
    COUT1, COUT0 );
  wire   GNDI;

  fa2 \mainTimer/add_120_add_5_9 ( .A0(GNDI), .B0(B0), .C0(GNDI), .D0(D0), 
    .A1(GNDI), .B1(B1), .C1(GNDI), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module mainTimer_SLICE_24 ( input D1, B1, D0, B0, CIN0, CIN1, output F0, F1, 
    COUT1, COUT0 );
  wire   GNDI;

  fa2 \mainTimer/add_120_add_5_7 ( .A0(GNDI), .B0(B0), .C0(GNDI), .D0(D0), 
    .A1(GNDI), .B1(B1), .C1(GNDI), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module mainTimer_SLICE_25 ( input D1, B1, D0, B0, CIN0, CIN1, output F0, F1, 
    COUT1, COUT0 );
  wire   GNDI;

  fa2 \mainTimer/add_120_add_5_5 ( .A0(GNDI), .B0(B0), .C0(GNDI), .D0(D0), 
    .A1(GNDI), .B1(B1), .C1(GNDI), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module mainTimer_SLICE_26 ( input D1, B1, D0, B0, CIN0, CIN1, output F0, F1, 
    COUT1, COUT0 );
  wire   GNDI;

  fa2 \mainTimer/add_120_add_5_3 ( .A0(GNDI), .B0(B0), .C0(GNDI), .D0(D0), 
    .A1(GNDI), .B1(B1), .C1(GNDI), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module STATE_OUT_SLICE_29 ( input DI1, DI0, D1, B1, C0, B0, A0, LSR, CLK, 
    output Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  lut4 \STATE_OUT/i867_2_lut ( .A(GNDI), .B(B1), .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40001 \STATE_OUT/i875_2_lut_3_lut ( .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(F0));
  ffsre2 \STATE_OUT/cont_105__i0 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \STATE_OUT/cont_105__i1 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module lut4 ( input A, B, C, D, output Z );

  LUT4 #("0x33CC") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40001 ( input A, B, C, D, output Z );

  LUT4 #("0x6C6C") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module ffsre2 ( input D0, SP, CK, LSR, output Q );

  FD1P3XZ INST01( .D(D0), .SP(SP), .CK(CK), .SR(LSR), .Q(Q));
  defparam INST01.REGSET = "RESET";
  defparam INST01.SRMODE = "ASYNC";
endmodule

module STATE_OUT_SLICE_30 ( input DI1, DI0, D1, C1, B1, A1, D0, C0, B0, A0, 
    LSR, CLK, output Q0, Q1, F0, F1 );
  wire   VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  lut40002 \STATE_OUT/i889_3_lut_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40003 \STATE_OUT/i882_2_lut_3_lut_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));
  ffsre2 \STATE_OUT/cont_105__i3 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \STATE_OUT/cont_105__i2 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module lut40002 ( input A, B, C, D, output Z );

  LUT4 #("0x6CCC") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40003 ( input A, B, C, D, output Z );

  LUT4 #("0x6AAA") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module STATE_OUT_SLICE_32 ( input DI1, DI0, D1, C1, B1, A1, D0, C0, B0, A0, 
    CLK, output Q0, Q1, F0, F1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  lut40004 \STATE_OUT/counter_31__I_38_i2_3_lut_4_lut ( .A(A1), .B(B1), .C(C1), 
    .D(D1), .Z(F1));
  lut40005 \STATE_OUT/counter_31__I_38_i1_3_lut_4_lut ( .A(A0), .B(B0), .C(C0), 
    .D(D0), .Z(F0));
  ffsre20006 \STATE_OUT/serial/counter_i1 ( .D0(DI1_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre20006 \STATE_OUT/serial/counter_i0 ( .D0(DI0_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module lut40004 ( input A, B, C, D, output Z );

  LUT4 #("0xCCCA") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40005 ( input A, B, C, D, output Z );

  LUT4 #("0xCCD8") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module ffsre20006 ( input D0, SP, CK, LSR, output Q );

  FD1P3XZ INST01( .D(D0), .SP(SP), .CK(CK), .SR(LSR), .Q(Q));
  defparam INST01.REGSET = "RESET";
  defparam INST01.SRMODE = "CE_OVER_LSR";
endmodule

module STATE_OUT_serial_SLICE_35 ( input DI1, DI0, D1, C1, B1, A1, D0, C0, B0, 
    A0, CLK, output Q0, Q1, F0, F1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  lut40007 \STATE_OUT.serial.SLICE_35_K1 ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40008 \STATE_OUT.serial.SLICE_35_K0 ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));
  ffsre20006 \STATE_OUT/serial/aux_i0 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre20006 \STATE_OUT/serial/aux_i2 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module lut40007 ( input A, B, C, D, output Z );

  LUT4 #("0xFE54") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40008 ( input A, B, C, D, output Z );

  LUT4 #("0xCCD8") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module STATE_OUT_SLICE_38 ( input DI1, DI0, D1, C1, B1, A1, D0, C0, B0, A0, 
    CLK, output Q0, Q1, F0, F1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  lut40009 \STATE_OUT/i1_2_lut_3_lut_4_lut_adj_52 ( .A(A1), .B(B1), .C(C1), 
    .D(D1), .Z(F1));
  lut40010 \STATE_OUT/i1_2_lut_3_lut_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));
  ffsre20006 \STATE_OUT/serial/counter_i3 ( .D0(DI1_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre20006 \STATE_OUT/serial/counter_i2 ( .D0(DI0_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module lut40009 ( input A, B, C, D, output Z );

  LUT4 #("0xCCC8") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40010 ( input A, B, C, D, output Z );

  LUT4 #("0xAAA8") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module STATE_OUT_SLICE_40 ( input DI1, DI0, D1, C1, B1, A1, D0, C0, B0, A0, 
    CLK, output Q0, Q1, F0, F1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  lut40011 \STATE_OUT/counter_31__I_38_i7_3_lut_4_lut ( .A(A1), .B(B1), .C(C1), 
    .D(D1), .Z(F1));
  lut40012 \STATE_OUT/counter_31__I_38_i5_3_lut_4_lut ( .A(A0), .B(B0), .C(C0), 
    .D(D0), .Z(F0));
  ffsre20006 \STATE_OUT/serial/counter_i6 ( .D0(DI1_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre20006 \STATE_OUT/serial/counter_i4 ( .D0(DI0_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module lut40011 ( input A, B, C, D, output Z );

  LUT4 #("0xF0E4") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40012 ( input A, B, C, D, output Z );

  LUT4 #("0xCCD8") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module STATE_OUT_SLICE_41 ( input DI1, DI0, D1, C1, B1, A1, D0, C0, B0, A0, 
    CLK, output Q0, Q1, F0, F1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  lut40013 \STATE_OUT/counter_31__I_38_i8_3_lut_4_lut ( .A(A1), .B(B1), .C(C1), 
    .D(D1), .Z(F1));
  lut40014 \STATE_OUT/counter_31__I_38_i6_3_lut_4_lut ( .A(A0), .B(B0), .C(C0), 
    .D(D0), .Z(F0));
  ffsre20006 \STATE_OUT/serial/counter_i7 ( .D0(DI1_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre20006 \STATE_OUT/serial/counter_i5 ( .D0(DI0_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module lut40013 ( input A, B, C, D, output Z );

  LUT4 #("0xABA8") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40014 ( input A, B, C, D, output Z );

  LUT4 #("0xFE02") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module STATE_OUT_SLICE_44 ( input DI1, DI0, D1, C1, B1, A1, D0, C0, B0, A0, 
    CLK, output Q0, Q1, F0, F1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  lut40011 \STATE_OUT/counter_31__I_38_i10_3_lut_4_lut ( .A(A1), .B(B1), 
    .C(C1), .D(D1), .Z(F1));
  lut40015 \STATE_OUT/counter_31__I_38_i9_3_lut_4_lut ( .A(A0), .B(B0), .C(C0), 
    .D(D0), .Z(F0));
  ffsre20006 \STATE_OUT/serial/counter_i9 ( .D0(DI1_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre20006 \STATE_OUT/serial/counter_i8 ( .D0(DI0_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module lut40015 ( input A, B, C, D, output Z );

  LUT4 #("0xF0E4") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module STATE_OUT_SLICE_46 ( input DI1, DI0, D1, C1, B1, A1, D0, C0, B0, A0, 
    CLK, output Q0, Q1, F0, F1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  lut40011 \STATE_OUT/counter_31__I_38_i12_3_lut_4_lut ( .A(A1), .B(B1), 
    .C(C1), .D(D1), .Z(F1));
  lut40015 \STATE_OUT/counter_31__I_38_i11_3_lut_4_lut ( .A(A0), .B(B0), 
    .C(C0), .D(D0), .Z(F0));
  ffsre20006 \STATE_OUT/serial/counter_i11 ( .D0(DI1_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre20006 \STATE_OUT/serial/counter_i10 ( .D0(DI0_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module STATE_OUT_SLICE_48 ( input DI1, DI0, D1, C1, B1, A1, D0, C0, B0, A0, 
    CLK, output Q0, Q1, F0, F1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  lut40016 \STATE_OUT/counter_31__I_38_i14_3_lut_4_lut ( .A(A1), .B(B1), 
    .C(C1), .D(D1), .Z(F1));
  lut40017 \STATE_OUT/counter_31__I_38_i13_3_lut_4_lut ( .A(A0), .B(B0), 
    .C(C0), .D(D0), .Z(F0));
  ffsre20006 \STATE_OUT/serial/counter_i13 ( .D0(DI1_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre20006 \STATE_OUT/serial/counter_i12 ( .D0(DI0_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module lut40016 ( input A, B, C, D, output Z );

  LUT4 #("0xAAB8") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40017 ( input A, B, C, D, output Z );

  LUT4 #("0xCDC8") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module STATE_OUT_SLICE_50 ( input DI1, DI0, D1, C1, B1, A1, D0, C0, B0, A0, 
    CLK, output Q0, Q1, F0, F1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  lut40016 \STATE_OUT/counter_31__I_38_i16_3_lut_4_lut ( .A(A1), .B(B1), 
    .C(C1), .D(D1), .Z(F1));
  lut40018 \STATE_OUT/counter_31__I_38_i15_3_lut_4_lut ( .A(A0), .B(B0), 
    .C(C0), .D(D0), .Z(F0));
  ffsre20006 \STATE_OUT/serial/counter_i15 ( .D0(DI1_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre20006 \STATE_OUT/serial/counter_i14 ( .D0(DI0_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module lut40018 ( input A, B, C, D, output Z );

  LUT4 #("0xCDC8") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module STATE_OUT_SLICE_52 ( input DI1, DI0, D1, C1, B1, A1, D0, C0, B0, A0, 
    CLK, output Q0, Q1, F0, F1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  lut40016 \STATE_OUT/counter_31__I_38_i18_3_lut_4_lut ( .A(A1), .B(B1), 
    .C(C1), .D(D1), .Z(F1));
  lut40018 \STATE_OUT/counter_31__I_38_i17_3_lut_4_lut ( .A(A0), .B(B0), 
    .C(C0), .D(D0), .Z(F0));
  ffsre20006 \STATE_OUT/serial/counter_i17 ( .D0(DI1_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre20006 \STATE_OUT/serial/counter_i16 ( .D0(DI0_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module STATE_OUT_SLICE_54 ( input DI1, DI0, D1, C1, B1, A1, D0, C0, B0, A0, 
    CLK, output Q0, Q1, F0, F1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  lut40019 \STATE_OUT/counter_31__I_38_i20_3_lut_4_lut ( .A(A1), .B(B1), 
    .C(C1), .D(D1), .Z(F1));
  lut40020 \STATE_OUT/counter_31__I_38_i19_3_lut_4_lut ( .A(A0), .B(B0), 
    .C(C0), .D(D0), .Z(F0));
  ffsre20006 \STATE_OUT/serial/counter_i19 ( .D0(DI1_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre20006 \STATE_OUT/serial/counter_i18 ( .D0(DI0_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module lut40019 ( input A, B, C, D, output Z );

  LUT4 #("0xFE02") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40020 ( input A, B, C, D, output Z );

  LUT4 #("0xF0E4") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module STATE_OUT_SLICE_56 ( input DI1, DI0, D1, C1, B1, A1, D0, C0, B0, A0, 
    CLK, output Q0, Q1, F0, F1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  lut40021 \STATE_OUT/counter_31__I_38_i22_3_lut_4_lut ( .A(A1), .B(B1), 
    .C(C1), .D(D1), .Z(F1));
  lut40005 \STATE_OUT/counter_31__I_38_i21_3_lut_4_lut ( .A(A0), .B(B0), 
    .C(C0), .D(D0), .Z(F0));
  ffsre20006 \STATE_OUT/serial/counter_i21 ( .D0(DI1_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre20006 \STATE_OUT/serial/counter_i20 ( .D0(DI0_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module lut40021 ( input A, B, C, D, output Z );

  LUT4 #("0xCCD8") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module STATE_OUT_SLICE_58 ( input DI1, DI0, D1, C1, B1, A1, D0, C0, B0, A0, 
    CLK, output Q0, Q1, F0, F1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  lut40022 \STATE_OUT/counter_31__I_38_i24_3_lut_4_lut ( .A(A1), .B(B1), 
    .C(C1), .D(D1), .Z(F1));
  lut40023 \STATE_OUT/counter_31__I_38_i23_3_lut_4_lut ( .A(A0), .B(B0), 
    .C(C0), .D(D0), .Z(F0));
  ffsre20006 \STATE_OUT/serial/counter_i23 ( .D0(DI1_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre20006 \STATE_OUT/serial/counter_i22 ( .D0(DI0_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module lut40022 ( input A, B, C, D, output Z );

  LUT4 #("0xFE10") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40023 ( input A, B, C, D, output Z );

  LUT4 #("0xFE10") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module STATE_OUT_SLICE_60 ( input DI1, DI0, D1, C1, B1, A1, D0, C0, B0, A0, 
    CLK, output Q0, Q1, F0, F1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  lut40024 \STATE_OUT/counter_31__I_38_i26_3_lut_4_lut ( .A(A1), .B(B1), 
    .C(C1), .D(D1), .Z(F1));
  lut40025 \STATE_OUT/counter_31__I_38_i25_3_lut_4_lut ( .A(A0), .B(B0), 
    .C(C0), .D(D0), .Z(F0));
  ffsre20006 \STATE_OUT/serial/counter_i25 ( .D0(DI1_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre20006 \STATE_OUT/serial/counter_i24 ( .D0(DI0_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module lut40024 ( input A, B, C, D, output Z );

  LUT4 #("0xAAAC") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40025 ( input A, B, C, D, output Z );

  LUT4 #("0xCCCA") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module STATE_OUT_SLICE_62 ( input DI1, DI0, D1, C1, B1, A1, D0, C0, B0, A0, 
    CLK, output Q0, Q1, F0, F1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  lut40022 \STATE_OUT/counter_31__I_38_i28_3_lut_4_lut ( .A(A1), .B(B1), 
    .C(C1), .D(D1), .Z(F1));
  lut40026 \STATE_OUT/counter_31__I_38_i27_3_lut_4_lut ( .A(A0), .B(B0), 
    .C(C0), .D(D0), .Z(F0));
  ffsre20006 \STATE_OUT/serial/counter_i27 ( .D0(DI1_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre20006 \STATE_OUT/serial/counter_i26 ( .D0(DI0_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module lut40026 ( input A, B, C, D, output Z );

  LUT4 #("0xABA8") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module STATE_OUT_SLICE_64 ( input DI1, DI0, D1, C1, B1, A1, D0, C0, B0, A0, 
    CLK, output Q0, Q1, F0, F1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  lut40027 \STATE_OUT/counter_31__I_38_i30_3_lut_4_lut ( .A(A1), .B(B1), 
    .C(C1), .D(D1), .Z(F1));
  lut40028 \STATE_OUT/counter_31__I_38_i29_3_lut_4_lut ( .A(A0), .B(B0), 
    .C(C0), .D(D0), .Z(F0));
  ffsre20006 \STATE_OUT/serial/counter_i29 ( .D0(DI1_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre20006 \STATE_OUT/serial/counter_i28 ( .D0(DI0_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module lut40027 ( input A, B, C, D, output Z );

  LUT4 #("0xFE04") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40028 ( input A, B, C, D, output Z );

  LUT4 #("0xF0E2") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module STATE_OUT_SLICE_66 ( input DI1, DI0, D1, C1, B1, A1, D0, C0, B0, A0, 
    CLK, output Q0, Q1, F0, F1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  lut40029 \STATE_OUT/counter_31__I_38_i32_3_lut_4_lut ( .A(A1), .B(B1), 
    .C(C1), .D(D1), .Z(F1));
  lut40030 \STATE_OUT/counter_31__I_38_i31_3_lut_4_lut ( .A(A0), .B(B0), 
    .C(C0), .D(D0), .Z(F0));
  ffsre20006 \STATE_OUT/serial/counter_i31 ( .D0(DI1_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre20006 \STATE_OUT/serial/counter_i30 ( .D0(DI0_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module lut40029 ( input A, B, C, D, output Z );

  LUT4 #("0xCDC8") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40030 ( input A, B, C, D, output Z );

  LUT4 #("0xAAB8") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_71 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40031 \mainTimer/i790_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40032 i1_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40031 ( input A, B, C, D, output Z );

  LUT4 #("0xDF10") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40032 ( input A, B, C, D, output Z );

  LUT4 #("0xFAEA") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module mainTimer_SLICE_72 ( input D1, C1, B1, A1, D0, B0, output F0, F1 );
  wire   GNDI;

  lut40033 \mainTimer/i773_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40034 \mainTimer/i1429_2_lut ( .A(GNDI), .B(B0), .C(GNDI), .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40033 ( input A, B, C, D, output Z );

  LUT4 #("0xFC88") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40034 ( input A, B, C, D, output Z );

  LUT4 #("0xCCFF") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module mainTimer_SLICE_73 ( input D0, C0, B0, A0, output F0 );

  lut40035 \mainTimer/i12_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40035 ( input A, B, C, D, output Z );

  LUT4 #("0x0CAA") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module mainTimer_SLICE_74 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, 
    F1 );

  lut40036 \mainTimer/i12_4_lut_adj_43 ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40037 \mainTimer/i7_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40036 ( input A, B, C, D, output Z );

  LUT4 #("0x4000") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40037 ( input A, B, C, D, output Z );

  LUT4 #("0x0400") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module mainTimer_SLICE_76 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, 
    F1 );

  lut40038 \mainTimer/i1276_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40039 \mainTimer/i293_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40038 ( input A, B, C, D, output Z );

  LUT4 #("0xFFFE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40039 ( input A, B, C, D, output Z );

  LUT4 #("0x30AA") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module mainTimer_SLICE_77 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, 
    F1 );

  lut40040 \mainTimer/i261_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40041 \mainTimer/i11_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40040 ( input A, B, C, D, output Z );

  LUT4 #("0x30AA") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40041 ( input A, B, C, D, output Z );

  LUT4 #("0x44F0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module mainTimer_SLICE_78 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, 
    F1 );

  lut40042 \mainTimer/i9_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40043 \mainTimer/i793_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40042 ( input A, B, C, D, output Z );

  LUT4 #("0x8000") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40043 ( input A, B, C, D, output Z );

  LUT4 #("0x22F0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module mainTimer_SLICE_80 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, 
    F1 );

  lut40044 \mainTimer/i11_4_lut_adj_42 ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40039 \mainTimer/i783_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40044 ( input A, B, C, D, output Z );

  LUT4 #("0x0800") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module mainTimer_SLICE_81 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, 
    F1 );

  lut40045 \mainTimer/i269_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40039 \mainTimer/i12_4_lut_adj_41 ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40045 ( input A, B, C, D, output Z );

  LUT4 #("0x22F0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module mainTimer_SLICE_82 ( input D1, C1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40046 \mainTimer/i2_2_lut ( .A(GNDI), .B(GNDI), .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40035 \mainTimer/i273_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40046 ( input A, B, C, D, output Z );

  LUT4 #("0xF000") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module mainTimer_SLICE_83 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, 
    F1 );

  lut40038 \mainTimer/i1274_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40043 \mainTimer/i265_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module mainTimer_SLICE_88 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, 
    F1 );

  lut40040 \mainTimer/i289_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40047 \mainTimer/i285_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40047 ( input A, B, C, D, output Z );

  LUT4 #("0x22E2") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module STATE_OUT_SLICE_89 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, 
    F1 );

  lut40048 \STATE_OUT/i2_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40049 \STATE_OUT/i1_4_lut_adj_51 ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40048 ( input A, B, C, D, output Z );

  LUT4 #("0xFFFE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40049 ( input A, B, C, D, output Z );

  LUT4 #("0xFFFE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module STATE_OUT_serial_SLICE_90 ( input D0, C0, B0, A0, output F0 );

  lut40050 \STATE_OUT/serial/i6_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40050 ( input A, B, C, D, output Z );

  LUT4 #("0xFFFE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module STATE_OUT_serial_SLICE_92 ( input D1, C1, B1, A1, D0, C0, B0, A0, 
    output F0, F1 );

  lut40051 \STATE_OUT/serial/counter_31__N_188[0]_bdd_4_lut ( .A(A1), .B(B1), 
    .C(C1), .D(D1), .Z(F1));
  lut40052 \STATE_OUT/serial/aux_3__I_0_i4_3_lut_4_lut ( .A(A0), .B(B0), 
    .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40051 ( input A, B, C, D, output Z );

  LUT4 #("0xF588") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40052 ( input A, B, C, D, output Z );

  LUT4 #("0xCCCA") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module STATE_OUT_serial_SLICE_94 ( input DI1, D1, C1, B1, A1, D0, C0, B0, A0, 
    CLK, output Q1, F0, F1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly;

  lut40053 \STATE_OUT.serial.SLICE_94_K1 ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40008 \STATE_OUT/serial/aux_3__I_0_i3_3_lut_4_lut ( .A(A0), .B(B0), 
    .C(C0), .D(D0), .Z(F0));
  ffsre20006 \STATE_OUT/serial/aux_i3 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
  endspecify

endmodule

module lut40053 ( input A, B, C, D, output Z );

  LUT4 #("0xCCD8") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module STATE_OUT_serial_SLICE_95 ( input D0, C0, B0, A0, output F0 );

  lut40054 \STATE_OUT/serial/i12_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40054 ( input A, B, C, D, output Z );

  LUT4 #("0xFFFE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module STATE_OUT_serial_SLICE_96 ( input D1, C1, B1, D0, C0, B0, A0, output F0, 
    F1 );
  wire   GNDI;

  lut40055 \STATE_OUT/serial/i18_3_lut ( .A(GNDI), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40056 \STATE_OUT/serial/i15_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40055 ( input A, B, C, D, output Z );

  LUT4 #("0xFFFC") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40056 ( input A, B, C, D, output Z );

  LUT4 #("0xFFFE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module STATE_OUT_serial_SLICE_97 ( input D1, C1, B1, A1, C0, B0, output F0, F1 );
  wire   GNDI;

  lut40057 \STATE_OUT/serial/i7_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40058 \STATE_OUT/serial/i1_2_lut ( .A(GNDI), .B(B0), .C(C0), .D(GNDI), 
    .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40057 ( input A, B, C, D, output Z );

  LUT4 #("0xFFFE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40058 ( input A, B, C, D, output Z );

  LUT4 #("0xFCFC") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module STATE_OUT_serial_SLICE_99 ( input D1, C1, B1, A1, C0, B0, output F0, F1 );
  wire   GNDI;

  lut40059 aux_3__I_0_i2_3_lut_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40060 \STATE_OUT/serial/i1_2_lut_adj_44 ( .A(GNDI), .B(B0), .C(C0), 
    .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40059 ( input A, B, C, D, output Z );

  LUT4 #("0xACA0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40060 ( input A, B, C, D, output Z );

  LUT4 #("0xFCFC") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module STATE_OUT_serial_SLICE_101 ( input D1, B1, A1, D0, C0, A0, output F0, 
    F1 );
  wire   GNDI;

  lut40061 \STATE_OUT/serial/i1_2_lut_3_lut ( .A(A1), .B(B1), .C(GNDI), .D(D1), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40062 \STATE_OUT/serial/i1543_2_lut_3_lut ( .A(A0), .B(GNDI), .C(C0), 
    .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40061 ( input A, B, C, D, output Z );

  LUT4 #("0xFF11") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40062 ( input A, B, C, D, output Z );

  LUT4 #("0x0005") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module STATE_OUT_SLICE_103 ( input B0, A0, output F0 );
  wire   GNDI;

  lut40063 \STATE_OUT/i1_2_lut_adj_49 ( .A(A0), .B(B0), .C(GNDI), .D(GNDI), 
    .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40063 ( input A, B, C, D, output Z );

  LUT4 #("0xEEEE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module STATE_OUT_serial_SLICE_104 ( input D1, B1, C0, A0, output F0, F1 );
  wire   GNDI;

  lut40064 \STATE_OUT/serial/i479_2_lut ( .A(GNDI), .B(B1), .C(GNDI), .D(D1), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40065 \STATE_OUT/serial/i477_2_lut ( .A(A0), .B(GNDI), .C(C0), .D(GNDI), 
    .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40064 ( input A, B, C, D, output Z );

  LUT4 #("0x3300") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40065 ( input A, B, C, D, output Z );

  LUT4 #("0x5050") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module STATE_OUT_SLICE_105 ( input D0, C0, B0, A0, output F0 );

  lut40066 \STATE_OUT/i1_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40066 ( input A, B, C, D, output Z );

  LUT4 #("0x0004") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module mainTimer_SLICE_108 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, 
    F1 );

  lut40067 \mainTimer/i794_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40047 \mainTimer/i776_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40067 ( input A, B, C, D, output Z );

  LUT4 #("0x3B08") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module mainTimer_SLICE_110 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, 
    F1 );

  lut40068 \mainTimer/i277_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40035 \mainTimer/i795_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40068 ( input A, B, C, D, output Z );

  LUT4 #("0x4F40") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module mainTimer_SLICE_115 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, 
    F1 );

  lut40069 \mainTimer/i271_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40039 \mainTimer/i275_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40069 ( input A, B, C, D, output Z );

  LUT4 #("0x30B8") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_118 ( input DI1, D1, C1, B1, A1, C0, B0, A0, CLK, output Q1, F0, 
    F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly;

  lut40070 SLICE_118_K1( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40071 i251_4_lut_3_lut( .A(A0), .B(B0), .C(C0), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre20006 \STATE_OUT/serial/aux_i1 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
  endspecify

endmodule

module lut40070 ( input A, B, C, D, output Z );

  LUT4 #("0xF808") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40071 ( input A, B, C, D, output Z );

  LUT4 #("0xE8E8") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module STATE_OUT_serial_SLICE_120 ( input D0, C0, B0, A0, output F0 );

  lut40072 \STATE_OUT/serial/i11_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40072 ( input A, B, C, D, output Z );

  LUT4 #("0xFFFE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module STATE_OUT_SLICE_121 ( input DI1, D1, A1, C0, A0, LSR, CLK, output Q1, 
    F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, LSR_dly;

  lut40073 \STATE_OUT/i1_2_lut_adj_48 ( .A(A1), .B(GNDI), .C(GNDI), .D(D1), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40074 \STATE_OUT/i869_2_lut ( .A(A0), .B(GNDI), .C(C0), .D(GNDI), .Z(F0));
  ffsre20075 \STATE_OUT/waiting_c ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module lut40073 ( input A, B, C, D, output Z );

  LUT4 #("0x5500") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40074 ( input A, B, C, D, output Z );

  LUT4 #("0xA0A0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module ffsre20075 ( input D0, SP, CK, LSR, output Q );

  FD1P3XZ INST01( .D(D0), .SP(SP), .CK(CK), .SR(LSR), .Q(Q));
  defparam INST01.REGSET = "SET";
  defparam INST01.SRMODE = "ASYNC";
endmodule

module STATE_OUT_serial_SLICE_122 ( input D1, B1, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40064 \STATE_OUT/serial/i502_2_lut ( .A(GNDI), .B(B1), .C(GNDI), .D(D1), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40076 \STATE_OUT/serial/i478_2_lut ( .A(A0), .B(B0), .C(GNDI), .D(GNDI), 
    .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40076 ( input A, B, C, D, output Z );

  LUT4 #("0x4444") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_123 ( output F0 );
  wire   GNDI;

  lut40077 i2( .A(GNDI), .B(GNDI), .C(GNDI), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
  endspecify

endmodule

module lut40077 ( input A, B, C, D, output Z );

  LUT4 #("0xFFFF") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_124 ( output F0 );
  wire   GNDI;

  lut40078 i1( .A(GNDI), .B(GNDI), .C(GNDI), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
  endspecify

endmodule

module lut40078 ( input A, B, C, D, output Z );

  LUT4 #("0x0000") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module STATE_OUT_SLICE_125 ( input C1, B1, D0, B0, output F0, F1 );
  wire   GNDI;

  lut40079 \STATE_OUT/i1_2_lut_adj_45 ( .A(GNDI), .B(B1), .C(C1), .D(GNDI), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40080 \STATE_OUT/i1_2_lut ( .A(GNDI), .B(B0), .C(GNDI), .D(D0), .Z(F0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40079 ( input A, B, C, D, output Z );

  LUT4 #("0x0C0C") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40080 ( input A, B, C, D, output Z );

  LUT4 #("0x00CC") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module STATE_OUT_SLICE_127 ( input DI1, D1, C1, B1, A1, C0, A0, CLK, output Q1, 
    F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly;

  lut40081 \STATE_OUT/serial/i712_4_lut_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40082 \STATE_OUT/i1_2_lut_adj_46 ( .A(A0), .B(GNDI), .C(C0), .D(GNDI), 
    .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre20006 \STATE_OUT/init_c ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
  endspecify

endmodule

module lut40081 ( input A, B, C, D, output Z );

  LUT4 #("0xDD80") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40082 ( input A, B, C, D, output Z );

  LUT4 #("0x0A0A") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module STATE_OUT_SLICE_128 ( input C1, B1, D0, A0, output F0, F1 );
  wire   GNDI;

  lut40079 \STATE_OUT/i1_2_lut_adj_50 ( .A(GNDI), .B(B1), .C(C1), .D(GNDI), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40083 \STATE_OUT/i1_2_lut_adj_47 ( .A(A0), .B(GNDI), .C(GNDI), .D(D0), 
    .Z(F0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40083 ( input A, B, C, D, output Z );

  LUT4 #("0x00AA") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module STATE_OUT_SLICE_129 ( input DI1, C1, D0, CE, CLK, output Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, CE_dly;

  lut40084 \STATE_OUT.SLICE_129_K1 ( .A(GNDI), .B(GNDI), .C(C1), .D(GNDI), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40085 \STATE_OUT/state_send_I_0_1_lut ( .A(GNDI), .B(GNDI), .C(GNDI), 
    .D(D0), .Z(F0));
  ffsre20006 \STATE_OUT/serial/status_send ( .D0(DI1_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module lut40084 ( input A, B, C, D, output Z );

  LUT4 #("0xF0F0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40085 ( input A, B, C, D, output Z );

  LUT4 #("0x00FF") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module STATE_OUT_serial_SLICE_132 ( input D1, C1, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40086 \STATE_OUT/serial/i504_2_lut ( .A(GNDI), .B(GNDI), .C(C1), .D(D1), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40087 \STATE_OUT/serial/i503_2_lut ( .A(A0), .B(B0), .C(GNDI), .D(GNDI), 
    .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40086 ( input A, B, C, D, output Z );

  LUT4 #("0x0F00") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40087 ( input A, B, C, D, output Z );

  LUT4 #("0x2222") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module STATE_OUT_serial_SLICE_134 ( input B1, A1, D0, B0, output F0, F1 );
  wire   GNDI;

  lut40088 \STATE_OUT/serial/i506_2_lut ( .A(A1), .B(B1), .C(GNDI), .D(GNDI), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40089 \STATE_OUT/serial/i505_2_lut ( .A(GNDI), .B(B0), .C(GNDI), .D(D0), 
    .Z(F0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40088 ( input A, B, C, D, output Z );

  LUT4 #("0x4444") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40089 ( input A, B, C, D, output Z );

  LUT4 #("0x3300") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module STATE_OUT_serial_SLICE_136 ( input D1, A1, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40073 \STATE_OUT/serial/i510_2_lut ( .A(A1), .B(GNDI), .C(GNDI), .D(D1), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40087 \STATE_OUT/serial/i508_2_lut ( .A(A0), .B(B0), .C(GNDI), .D(GNDI), 
    .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module STATE_OUT_serial_SLICE_138 ( input C1, A1, D0, B0, output F0, F1 );
  wire   GNDI;

  lut40090 \STATE_OUT/serial/i501_2_lut ( .A(A1), .B(GNDI), .C(C1), .D(GNDI), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40091 \STATE_OUT/serial/i500_2_lut ( .A(GNDI), .B(B0), .C(GNDI), .D(D0), 
    .Z(F0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40090 ( input A, B, C, D, output Z );

  LUT4 #("0x5050") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40091 ( input A, B, C, D, output Z );

  LUT4 #("0x00CC") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module STATE_OUT_serial_SLICE_140 ( input C1, B1, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40092 \STATE_OUT/serial/i499_2_lut ( .A(GNDI), .B(B1), .C(C1), .D(GNDI), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40076 \STATE_OUT/serial/i498_2_lut ( .A(A0), .B(B0), .C(GNDI), .D(GNDI), 
    .Z(F0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40092 ( input A, B, C, D, output Z );

  LUT4 #("0x3030") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module STATE_OUT_serial_SLICE_142 ( input D1, B1, C0, A0, output F0, F1 );
  wire   GNDI;

  lut40093 \STATE_OUT/serial/i497_2_lut ( .A(GNDI), .B(B1), .C(GNDI), .D(D1), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40065 \STATE_OUT/serial/i496_2_lut ( .A(A0), .B(GNDI), .C(C0), .D(GNDI), 
    .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40093 ( input A, B, C, D, output Z );

  LUT4 #("0x00CC") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module STATE_OUT_serial_SLICE_144 ( input D1, B1, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40093 \STATE_OUT/serial/i495_2_lut ( .A(GNDI), .B(B1), .C(GNDI), .D(D1), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40076 \STATE_OUT/serial/i494_2_lut ( .A(A0), .B(B0), .C(GNDI), .D(GNDI), 
    .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module STATE_OUT_serial_SLICE_146 ( input D1, B1, C0, B0, output F0, F1 );
  wire   GNDI;

  lut40093 \STATE_OUT/serial/i493_2_lut ( .A(GNDI), .B(B1), .C(GNDI), .D(D1), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40094 \STATE_OUT/serial/i491_2_lut ( .A(GNDI), .B(B0), .C(C0), .D(GNDI), 
    .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40094 ( input A, B, C, D, output Z );

  LUT4 #("0x0C0C") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module STATE_OUT_serial_SLICE_148 ( input D1, C1, B1, A1, C0, B0, output F0, 
    F1 );
  wire   GNDI;

  lut40095 \STATE_OUT/serial/i13_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40094 \STATE_OUT/serial/i489_2_lut ( .A(GNDI), .B(B0), .C(C0), .D(GNDI), 
    .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40095 ( input A, B, C, D, output Z );

  LUT4 #("0xFFFE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module STATE_OUT_serial_SLICE_149 ( input C1, B1, D0, C0, output F0, F1 );
  wire   GNDI;

  lut40092 \STATE_OUT/serial/i488_2_lut ( .A(GNDI), .B(B1), .C(C1), .D(GNDI), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40096 \STATE_OUT/serial/i490_2_lut ( .A(GNDI), .B(GNDI), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40096 ( input A, B, C, D, output Z );

  LUT4 #("0x0F00") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module STATE_OUT_serial_SLICE_150 ( input D1, C1, B1, A1, C0, B0, output F0, 
    F1 );
  wire   GNDI;

  lut40097 \STATE_OUT/serial/i14_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40094 \STATE_OUT/serial/i487_2_lut ( .A(GNDI), .B(B0), .C(C0), .D(GNDI), 
    .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40097 ( input A, B, C, D, output Z );

  LUT4 #("0xFFFE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module STATE_OUT_serial_SLICE_152 ( input C1, B1, C0, A0, output F0, F1 );
  wire   GNDI;

  lut40092 \STATE_OUT/serial/i486_2_lut ( .A(GNDI), .B(B1), .C(C1), .D(GNDI), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40065 \STATE_OUT/serial/i480_2_lut ( .A(A0), .B(GNDI), .C(C0), .D(GNDI), 
    .Z(F0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module STATE_OUT_serial_SLICE_156 ( input DI1, D1, C1, B1, A1, D0, C0, B0, A0, 
    LSR, CLK, output Q1, F0, F1 );
  wire   VCCI, DI1_dly, CLK_dly, LSR_dly;

  lut40098 \STATE_OUT/serial/n2204_bdd_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40099 \STATE_OUT/serial/aux_3__I_0_i1_4_lut ( .A(A0), .B(B0), .C(C0), 
    .D(D0), .Z(F0));
  ffsre20006 \STATE_OUT/serial/status_out ( .D0(DI1_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module lut40098 ( input A, B, C, D, output Z );

  LUT4 #("0xCCB8") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40099 ( input A, B, C, D, output Z );

  LUT4 #("0xCFCA") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module OSCInst1 ( input CLKLFPU, CLKLFEN, output CLKLF );
  wire   GNDI;

  LSOSC_CORE_B OSCInst1( .CLKLFPU(CLKLFPU), .CLKLFEN(CLKLFEN), .TRIM9(GNDI), 
    .TRIM8(GNDI), .TRIM7(GNDI), .TRIM6(GNDI), .TRIM5(GNDI), .TRIM4(GNDI), 
    .TRIM3(GNDI), .TRIM2(GNDI), .TRIM1(GNDI), .TRIM0(GNDI), .CLKLF(CLKLF));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
  endspecify

endmodule

module LSOSC_CORE_B ( input CLKLFPU, CLKLFEN, TRIM9, TRIM8, TRIM7, TRIM6, 
    TRIM5, TRIM4, TRIM3, TRIM2, TRIM1, TRIM0, output CLKLF );

  LSOSC_CORE INST10( .CLKLFPU(CLKLFPU), .CLKLFEN(CLKLFEN), .TRIM9(TRIM9), 
    .TRIM8(TRIM8), .TRIM7(TRIM7), .TRIM6(TRIM6), .TRIM5(TRIM5), .TRIM4(TRIM4), 
    .TRIM3(TRIM3), .TRIM2(TRIM2), .TRIM1(TRIM1), .TRIM0(TRIM0), .CLKLF(CLKLF));
  defparam INST10.FABRIC_TRIME = "DISABLE";
endmodule

module STATUS_OUT ( input PADDO, output STATUS_OUT );
  wire   VCCI;

  BB_B_B \STATUS_OUT_pad.bb_inst ( .T_N(VCCI), .I(PADDO), .O(), .B(STATUS_OUT));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (PADDO => STATUS_OUT) = (0:0:0,0:0:0);
  endspecify

endmodule

module BB_B_B ( input T_N, I, output O, inout B );

  BB_B INST10( .T_N(T_N), .I(I), .O(O), .B(B));
endmodule

module SIREN_OUT ( input PADDO, output SIREN_OUT );
  wire   VCCI;

  BB_B_B \SIREN_OUT_pad.bb_inst ( .T_N(VCCI), .I(PADDO), .O(), .B(SIREN_OUT));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (PADDO => SIREN_OUT) = (0:0:0,0:0:0);
  endspecify

endmodule

module STATUS_SEND ( input PADDO, output STATUS_SEND );
  wire   VCCI;

  BB_B_B \STATUS_SEND_pad.bb_inst ( .T_N(VCCI), .I(PADDO), .O(), 
    .B(STATUS_SEND));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (PADDO => STATUS_SEND) = (0:0:0,0:0:0);
  endspecify

endmodule

module SERCLK_OUT ( input PADDO, output SERCLK_OUT );
  wire   VCCI;

  BB_B_B \SERCLK_OUT_pad.bb_inst ( .T_N(VCCI), .I(PADDO), .O(), .B(SERCLK_OUT));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (PADDO => SERCLK_OUT) = (0:0:0,0:0:0);
  endspecify

endmodule

module RESET_OUT ( input PADDO, output RESET_OUT );
  wire   VCCI;

  BB_B_B \RESET_OUT_pad.bb_inst ( .T_N(VCCI), .I(PADDO), .O(), .B(RESET_OUT));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (PADDO => RESET_OUT) = (0:0:0,0:0:0);
  endspecify

endmodule

module SENSOR1_IN ( output PADDI, input SENSOR1_IN );
  wire   GNDI;

  BB_B_B \SENSOR1_IN_pad.bb_inst ( .T_N(GNDI), .I(GNDI), .O(PADDI), 
    .B(SENSOR1_IN));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (SENSOR1_IN => PADDI) = (0:0:0,0:0:0);
  endspecify

endmodule

module SENSOR2_IN ( output PADDI, input SENSOR2_IN );
  wire   GNDI;

  BB_B_B \SENSOR2_IN_pad.bb_inst ( .T_N(GNDI), .I(GNDI), .O(PADDI), 
    .B(SENSOR2_IN));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (SENSOR2_IN => PADDI) = (0:0:0,0:0:0);
  endspecify

endmodule


// Verilog netlist produced by program backanno, Version Radiant Software (64-bit) 3.0.0.24.1

// backanno -o ModuloAlarmaTP2_impl_1_vo.vo -sp High-Performance_1.2V -w -neg -gui ModuloAlarmaTP2_impl_1.udb 
// Netlist created on Thu Nov 18 14:45:37 2021
// Netlist written on Thu Nov 18 14:45:44 2021
// Design is for device iCE40UP5K
// Design is for package SG48
// Design is for performance grade High-Performance_1.2V

`timescale 1 ns / 1 ps

module MainModule ( STATUS_SEND, STATUS_OUT, SIREN_OUT, SERCLK_OUT, KEY_STATUS, 
                    debug, timeout, SENSOR1_IN, SENSOR2_IN, KB_IN, KB_RECV, 
                    RESET_IN );
  input  SENSOR1_IN, SENSOR2_IN;
  input  [1:0] KB_IN;
  input  KB_RECV, RESET_IN;
  output STATUS_SEND, STATUS_OUT, SIREN_OUT, SERCLK_OUT;
  output [1:0] KEY_STATUS;
  output [1:0] debug;
  output timeout;
  wire   \mainTimer.n3204 , \mainTimer.n1355 , \mainTimer.clkCont[17] , 
         \mainTimer.clkCont_17__N_40[17] , \mainTimer.n3201 , 
         \mainTimer.clkCont[16] , \mainTimer.n1353 , \mainTimer.clkCont[15] , 
         \mainTimer.clkCont_17__N_40[15] , \mainTimer.clkCont_17__N_40[16] , 
         \mainTimer.n3198 , \mainTimer.clkCont[14] , \mainTimer.n1351 , 
         \mainTimer.clkCont[13] , \mainTimer.clkCont_17__N_40[13] , 
         \mainTimer.clkCont_17__N_40[14] , \mainTimer.n3195 , 
         \mainTimer.clkCont[12] , \mainTimer.n1349 , \mainTimer.clkCont[11] , 
         \mainTimer.clkCont_17__N_40[11] , \mainTimer.clkCont_17__N_40[12] , 
         \mainTimer.n3192 , \mainTimer.clkCont[10] , \mainTimer.n1347 , 
         \mainTimer.clkCont[9] , \mainTimer.clkCont_17__N_40[9] , 
         \mainTimer.clkCont_17__N_40[10] , \mainTimer.n3189 , 
         \mainTimer.clkCont[8] , \mainTimer.n1345 , \mainTimer.clkCont[7] , 
         \mainTimer.clkCont_17__N_40[7] , \mainTimer.clkCont_17__N_40[8] , 
         \mainTimer.n3186 , \mainTimer.clkCont[6] , \mainTimer.n1343 , 
         \mainTimer.clkCont[5] , \mainTimer.clkCont_17__N_40[5] , 
         \mainTimer.clkCont_17__N_40[6] , \mainTimer.n3183 , 
         \mainTimer.clkCont[4] , \mainTimer.n1341 , \mainTimer.clkCont[3] , 
         \mainTimer.clkCont_17__N_40[3] , \mainTimer.clkCont_17__N_40[4] , 
         \mainTimer.n3180 , \mainTimer.clkCont[2] , \mainTimer.n1339 , 
         \mainTimer.clkCont[1] , \mainTimer.clkCont_17__N_40[1] , 
         \mainTimer.clkCont_17__N_40[2] , \mainTimer.n3063 , VCC_net, 
         \mainTimer.clkCont[0] , \mainTimer.clkCont_17__N_40[0] , 
         \STATE_OUT.n3075 , \j[4] , \STATE_OUT.n1308 , \j[3] , 
         \waiting_N_140[3] , \waiting_N_140[4] , \STATE_OUT.n1310 , 
         \STATE_OUT.waiting_N_140[1] , \STATE_OUT.n3072 , \j[2] , 
         \STATE_OUT.n1306 , \STATE_OUT.j[1]_2 , \STATE_OUT.waiting_N_135 , 
         \STATE_OUT.n141_c , SERCLK_OUT_c, \waiting_N_140[2] , 
         \STATE_OUT.waiting_N_140[0] , \STATE_OUT.n3069 , \STATE_OUT.j[0]_2 , 
         \STATE_OUT.n3087 , \j[12] , \STATE_OUT.n1316 , \j[11] , 
         \waiting_N_140[11] , \waiting_N_140[12] , \STATE_OUT.n1318 , 
         \STATE_OUT.n3084 , \j[10] , \STATE_OUT.n1314 , \j[9] , 
         \waiting_N_140[9] , \waiting_N_140[10] , \STATE_OUT.n3081 , \j[8] , 
         \STATE_OUT.n1312 , \j[7] , \waiting_N_140[7] , \waiting_N_140[8] , 
         \STATE_OUT.n3078 , \j[6] , \j[5] , \waiting_N_140[5] , 
         \waiting_N_140[6] , \STATE_OUT.n3117 , \STATE_OUT.n1336 , \j[31] , 
         \waiting_N_140[31] , \STATE_OUT.n3114 , \j[30] , \STATE_OUT.n1334 , 
         \j[29] , \waiting_N_140[29] , \waiting_N_140[30] , \STATE_OUT.n3111 , 
         \j[28] , \STATE_OUT.n1332 , \j[27] , \waiting_N_140[27] , 
         \waiting_N_140[28] , \STATE_OUT.n3108 , \j[26] , \STATE_OUT.n1330 , 
         \j[25] , \waiting_N_140[25] , \waiting_N_140[26] , \STATE_OUT.n3105 , 
         \j[24] , \STATE_OUT.n1328 , \j[23] , \waiting_N_140[23] , 
         \waiting_N_140[24] , \STATE_OUT.n3102 , \j[22] , \STATE_OUT.n1326 , 
         \j[21] , \waiting_N_140[21] , \waiting_N_140[22] , \STATE_OUT.n3099 , 
         \j[20] , \STATE_OUT.n1324 , \j[19] , \waiting_N_140[19] , 
         \waiting_N_140[20] , \STATE_OUT.n3096 , \j[18] , \STATE_OUT.n1322 , 
         \j[17] , \waiting_N_140[17] , \waiting_N_140[18] , \STATE_OUT.n3093 , 
         \j[16] , \STATE_OUT.n1320 , \j[15] , \waiting_N_140[15] , 
         \waiting_N_140[16] , \STATE_OUT.n3090 , \j[14] , \j[13] , 
         \waiting_N_140[13] , \waiting_N_140[14] , \STATE_OUT.serial.n3135 , 
         \STATE_OUT.serial.j[10] , \STATE_OUT.serial.n1281 , 
         \STATE_OUT.serial.j[9] , n157, n156, \STATE_OUT.serial.n1283 , 
         \STATE_OUT.serial.n3168 , \STATE_OUT.serial.n1303 , 
         \STATE_OUT.serial.j[31] , n135, \STATE_OUT.serial.n3165 , 
         \STATE_OUT.serial.j[30] , \STATE_OUT.serial.n1301 , 
         \STATE_OUT.serial.j[29] , n137, n136, \STATE_OUT.serial.n3162 , 
         \STATE_OUT.serial.j[28] , \STATE_OUT.serial.n1299 , 
         \STATE_OUT.serial.j[27] , n139, n138, \STATE_OUT.serial.n3159 , 
         \STATE_OUT.serial.j[26] , \STATE_OUT.serial.n1297 , 
         \STATE_OUT.serial.j[25] , n141, n140, \STATE_OUT.serial.n3126 , 
         \STATE_OUT.serial.j[4] , \STATE_OUT.serial.n1275 , 
         \STATE_OUT.serial.j[3] , n163, n162, \STATE_OUT.serial.n1277 , 
         \STATE_OUT.serial.n3156 , \STATE_OUT.serial.j[24] , 
         \STATE_OUT.serial.n1295 , \STATE_OUT.serial.j[23] , n143, n142, 
         \STATE_OUT.serial.n167[1] , \STATE_OUT.serial.n3123 , 
         \STATE_OUT.serial.j[2] , \STATE_OUT.serial.n1273 , 
         \STATE_OUT.serial.j[1] , n119, n164, \STATE_OUT.serial.n3141 , 
         \STATE_OUT.serial.j[14] , \STATE_OUT.serial.n1285 , 
         \STATE_OUT.serial.j[13] , n153, n152, \STATE_OUT.serial.n1287 , 
         \STATE_OUT.serial.n3132 , \STATE_OUT.serial.j[8] , 
         \STATE_OUT.serial.n1279 , \STATE_OUT.serial.j[7] , n159, n158, 
         \STATE_OUT.serial.n3153 , \STATE_OUT.serial.j[22] , 
         \STATE_OUT.serial.n1293 , \STATE_OUT.serial.j[21] , n145, n144, 
         \STATE_OUT.serial.n3150 , \STATE_OUT.serial.j[20] , 
         \STATE_OUT.serial.n1291 , \STATE_OUT.serial.j[19] , n147, n146, 
         \STATE_OUT.serial.n3147 , \STATE_OUT.serial.j[18] , 
         \STATE_OUT.serial.n1289 , \STATE_OUT.serial.j[17] , n149, n148, 
         \STATE_OUT.serial.n3138 , \STATE_OUT.serial.j[12] , 
         \STATE_OUT.serial.j[11] , n155, n154, \STATE_OUT.serial.n3144 , 
         \STATE_OUT.serial.j[16] , \STATE_OUT.serial.j[15] , n151, n150, 
         \STATE_OUT.serial.n167[0] , \STATE_OUT.serial.n3120 , 
         \STATE_OUT.serial.j[0] , \STATE_OUT.serial.n3129 , 
         \STATE_OUT.serial.j[6] , \STATE_OUT.serial.j[5] , n161, n160, 
         \debug_c_1$n1 , \debug_c_0$n0 , n2235, n26, \state[1] , n1841, 
         TIMER_EN_N_15, \Snext_1__N_1[0] , debug_c_0, n12, RESET_IN_c, 
         \Sreg[0] , \Sreg[1] , n452, n549, \state[0] , \PREV_KEY[0] , 
         \PREV_KEY[1] , n334, \keyboard.nextState[0]$n3 , 
         \keyboard.nextState[1]$n2 , \keyboard.counter[1] , \keyboard.n345 , 
         \keyboard.nextState[0] , \keyboard.counter[0] , \keyboard.n6_adj_276 , 
         \keyboard.n13[1] , \keyboard.n1 , KB_RECV_c, 
         \mainTimer.clkCont_17__N_19[16] , \mainTimer.clkCont_17__N_19[17] , 
         timeout_c, \mainTimer.clkCont_17__N_37 , 
         \mainTimer.clkCont_17__N_19[14] , \mainTimer.clkCont_17__N_19[15] , 
         \mainTimer.clkCont_17__N_19[12] , \mainTimer.clkCont_17__N_19[13] , 
         \mainTimer.clkCont_17__N_19[10] , \mainTimer.clkCont_17__N_19[11] , 
         \mainTimer.clkCont_17__N_19[8] , \mainTimer.clkCont_17__N_19[9] , 
         \mainTimer.clkCont_17__N_19[6] , \mainTimer.clkCont_17__N_19[7] , 
         \mainTimer.clkCont_17__N_19[4] , \mainTimer.clkCont_17__N_19[5] , 
         \mainTimer.clkCont_17__N_19[2] , \mainTimer.clkCont_17__N_19[3] , 
         \mainTimer.clkCont_17__N_19[0] , \mainTimer.clkCont_17__N_19[1] , 
         n520, n518, waiting_N_139, waiting, n534, n536, n524, n522, n528, 
         n526, n544, n542, n548, n546, n532, n530, \STATE_OUT.n21[1] , 
         \STATE_OUT.n21[0] , \STATE_OUT.cont[1] , \STATE_OUT.cont[0] , n462, 
         n508, n512, n510, n451, n449, n456, n454, n460, n458, n466, n464, 
         n514, n516, \STATE_OUT.n21[3] , \STATE_OUT.n21[2] , 
         \STATE_OUT.cont[3] , \STATE_OUT.cont[2] , n540, n538, n479, n478, 
         n476, n477, \SENSOR1_IN_c.sig_001.FeedThruLUT , 
         \SENSOR2_IN_c.sig_000.FeedThruLUT , SENSOR1_IN_c, SENSOR2_IN_c, 
         \STATE_OUT.n118 , \STATE_OUT.serial.temp_data_out[0] , 
         \STATE_OUT.serial.temp_data_out[1] , n474, n475, n472, n473, n470, 
         n471, n468, n469, init, n496, n497, n494, n495, n492, n493, n490, 
         n491, n488, n489, n486, n487, n484, n485, n482, n483, n480, n481, 
         \Sreg[1].sig_002.FeedThruLUT , \STATE_OUT.serial.n446 , 
         \STATE_OUT.serial.temp_data_out[3] , \keyboard.nextState[1] , 
         debug_c_1, n8, n1831, KEY_STATUS_c_1, \Snext_1__N_11[0] , n2598, n3, 
         SIREN_OUT_c, \KEY_STATUS_1__N_253[1] , n4, TIMER_EN, 
         \keyboard.actualKey[3][1] , KB_IN_c_1, \keyboard.n1708 , 
         \keyboard.n1709 , \keyboard.actualKey[2][1] , \keyboard.n6 , 
         \keyboard.n2034 , \keyboard.actualKey[3][0] , 
         \keyboard.actualKey[1][0] , KB_IN_c_0, \keyboard.actualKey[2][0] , 
         \keyboard.actualKey[0][0] , \keyboard.actualKey[1][1] , 
         \keyboard.actualKey[0][1] , \keyboard.n1707 , \keyboard.n812 , 
         \mainTimer.n2032 , \mainTimer.n17 , \mainTimer.n18 , \mainTimer.n19 , 
         \mainTimer.n7 , \STATE_OUT.n32 , \STATE_OUT.n46 , \STATE_OUT.n52 , 
         \STATE_OUT.n49 , \STATE_OUT.n50 , \STATE_OUT.n47 , \STATE_OUT.n48 , 
         \STATE_OUT.n56 , \STATE_OUT.n30 , \STATE_OUT.n51 , 
         \STATE_OUT.serial.n48 , \STATE_OUT.serial.n50 , 
         \STATE_OUT.serial.n49 , \STATE_OUT.serial.n47 , 
         \STATE_OUT.serial.n56 , \STATE_OUT.serial.n32 , 
         \STATE_OUT.serial.n46 , \STATE_OUT.serial.n52 , 
         \STATE_OUT.serial.n44 , \STATE_OUT.serial.n55 , 
         \STATE_OUT.serial.status_out_N_252 , \STATE_OUT.serial.n2592 , 
         \temp_data_out[2] , STATUS_OUT_c, n570, \STATE_OUT.n2217 , 
         \STATE_OUT.n1735 , \mainTimer.n2774 , \mainTimer.n8 , 
         \STATE_OUT.waiting_N_135$n4 , STATUS_SEND_c;

  mainTimer_SLICE_0 \mainTimer.SLICE_0 ( .D1(\mainTimer.n3204 ), 
    .D0(\mainTimer.n1355 ), .B0(\mainTimer.clkCont[17] ), 
    .CIN0(\mainTimer.n1355 ), .CIN1(\mainTimer.n3204 ), 
    .F0(\mainTimer.clkCont_17__N_40[17] ), .COUT0(\mainTimer.n3204 ));
  mainTimer_SLICE_1 \mainTimer.SLICE_1 ( .D1(\mainTimer.n3201 ), 
    .B1(\mainTimer.clkCont[16] ), .D0(\mainTimer.n1353 ), 
    .B0(\mainTimer.clkCont[15] ), .CIN0(\mainTimer.n1353 ), 
    .CIN1(\mainTimer.n3201 ), .F0(\mainTimer.clkCont_17__N_40[15] ), 
    .F1(\mainTimer.clkCont_17__N_40[16] ), .COUT1(\mainTimer.n1355 ), 
    .COUT0(\mainTimer.n3201 ));
  mainTimer_SLICE_2 \mainTimer.SLICE_2 ( .D1(\mainTimer.n3198 ), 
    .B1(\mainTimer.clkCont[14] ), .D0(\mainTimer.n1351 ), 
    .B0(\mainTimer.clkCont[13] ), .CIN0(\mainTimer.n1351 ), 
    .CIN1(\mainTimer.n3198 ), .F0(\mainTimer.clkCont_17__N_40[13] ), 
    .F1(\mainTimer.clkCont_17__N_40[14] ), .COUT1(\mainTimer.n1353 ), 
    .COUT0(\mainTimer.n3198 ));
  mainTimer_SLICE_3 \mainTimer.SLICE_3 ( .D1(\mainTimer.n3195 ), 
    .B1(\mainTimer.clkCont[12] ), .D0(\mainTimer.n1349 ), 
    .B0(\mainTimer.clkCont[11] ), .CIN0(\mainTimer.n1349 ), 
    .CIN1(\mainTimer.n3195 ), .F0(\mainTimer.clkCont_17__N_40[11] ), 
    .F1(\mainTimer.clkCont_17__N_40[12] ), .COUT1(\mainTimer.n1351 ), 
    .COUT0(\mainTimer.n3195 ));
  mainTimer_SLICE_4 \mainTimer.SLICE_4 ( .D1(\mainTimer.n3192 ), 
    .B1(\mainTimer.clkCont[10] ), .D0(\mainTimer.n1347 ), 
    .B0(\mainTimer.clkCont[9] ), .CIN0(\mainTimer.n1347 ), 
    .CIN1(\mainTimer.n3192 ), .F0(\mainTimer.clkCont_17__N_40[9] ), 
    .F1(\mainTimer.clkCont_17__N_40[10] ), .COUT1(\mainTimer.n1349 ), 
    .COUT0(\mainTimer.n3192 ));
  mainTimer_SLICE_5 \mainTimer.SLICE_5 ( .D1(\mainTimer.n3189 ), 
    .B1(\mainTimer.clkCont[8] ), .D0(\mainTimer.n1345 ), 
    .B0(\mainTimer.clkCont[7] ), .CIN0(\mainTimer.n1345 ), 
    .CIN1(\mainTimer.n3189 ), .F0(\mainTimer.clkCont_17__N_40[7] ), 
    .F1(\mainTimer.clkCont_17__N_40[8] ), .COUT1(\mainTimer.n1347 ), 
    .COUT0(\mainTimer.n3189 ));
  mainTimer_SLICE_6 \mainTimer.SLICE_6 ( .D1(\mainTimer.n3186 ), 
    .B1(\mainTimer.clkCont[6] ), .D0(\mainTimer.n1343 ), 
    .B0(\mainTimer.clkCont[5] ), .CIN0(\mainTimer.n1343 ), 
    .CIN1(\mainTimer.n3186 ), .F0(\mainTimer.clkCont_17__N_40[5] ), 
    .F1(\mainTimer.clkCont_17__N_40[6] ), .COUT1(\mainTimer.n1345 ), 
    .COUT0(\mainTimer.n3186 ));
  mainTimer_SLICE_7 \mainTimer.SLICE_7 ( .D1(\mainTimer.n3183 ), 
    .B1(\mainTimer.clkCont[4] ), .D0(\mainTimer.n1341 ), 
    .B0(\mainTimer.clkCont[3] ), .CIN0(\mainTimer.n1341 ), 
    .CIN1(\mainTimer.n3183 ), .F0(\mainTimer.clkCont_17__N_40[3] ), 
    .F1(\mainTimer.clkCont_17__N_40[4] ), .COUT1(\mainTimer.n1343 ), 
    .COUT0(\mainTimer.n3183 ));
  mainTimer_SLICE_8 \mainTimer.SLICE_8 ( .D1(\mainTimer.n3180 ), 
    .B1(\mainTimer.clkCont[2] ), .D0(\mainTimer.n1339 ), 
    .B0(\mainTimer.clkCont[1] ), .CIN0(\mainTimer.n1339 ), 
    .CIN1(\mainTimer.n3180 ), .F0(\mainTimer.clkCont_17__N_40[1] ), 
    .F1(\mainTimer.clkCont_17__N_40[2] ), .COUT1(\mainTimer.n1341 ), 
    .COUT0(\mainTimer.n3180 ));
  mainTimer_SLICE_9 \mainTimer.SLICE_9 ( .D1(\mainTimer.n3063 ), .C1(VCC_net), 
    .B1(\mainTimer.clkCont[0] ), .CIN1(\mainTimer.n3063 ), 
    .F1(\mainTimer.clkCont_17__N_40[0] ), .COUT1(\mainTimer.n1339 ), 
    .COUT0(\mainTimer.n3063 ));
  STATE_OUT_SLICE_10 \STATE_OUT.SLICE_10 ( .D1(\STATE_OUT.n3075 ), .B1(\j[4] ), 
    .D0(\STATE_OUT.n1308 ), .B0(\j[3] ), .CIN0(\STATE_OUT.n1308 ), 
    .CIN1(\STATE_OUT.n3075 ), .F0(\waiting_N_140[3] ), .F1(\waiting_N_140[4] ), 
    .COUT1(\STATE_OUT.n1310 ), .COUT0(\STATE_OUT.n3075 ));
  STATE_OUT_SLICE_11 \STATE_OUT.SLICE_11 ( .DI0(\STATE_OUT.waiting_N_140[1] ), 
    .D1(\STATE_OUT.n3072 ), .B1(\j[2] ), .D0(\STATE_OUT.n1306 ), 
    .B0(\STATE_OUT.j[1]_2 ), .CE(\STATE_OUT.waiting_N_135 ), 
    .LSR(\STATE_OUT.n141_c ), .CLK(SERCLK_OUT_c), .CIN0(\STATE_OUT.n1306 ), 
    .CIN1(\STATE_OUT.n3072 ), .Q0(\STATE_OUT.j[1]_2 ), 
    .F0(\STATE_OUT.waiting_N_140[1] ), .F1(\waiting_N_140[2] ), 
    .COUT1(\STATE_OUT.n1308 ), .COUT0(\STATE_OUT.n3072 ));
  STATE_OUT_SLICE_12 \STATE_OUT.SLICE_12 ( .DI1(\STATE_OUT.waiting_N_140[0] ), 
    .D1(\STATE_OUT.n3069 ), .C1(VCC_net), .B1(\STATE_OUT.j[0]_2 ), 
    .CE(\STATE_OUT.waiting_N_135 ), .LSR(\STATE_OUT.n141_c ), 
    .CLK(SERCLK_OUT_c), .CIN1(\STATE_OUT.n3069 ), .Q1(\STATE_OUT.j[0]_2 ), 
    .F1(\STATE_OUT.waiting_N_140[0] ), .COUT1(\STATE_OUT.n1306 ), 
    .COUT0(\STATE_OUT.n3069 ));
  STATE_OUT_SLICE_13 \STATE_OUT.SLICE_13 ( .D1(\STATE_OUT.n3087 ), 
    .B1(\j[12] ), .D0(\STATE_OUT.n1316 ), .B0(\j[11] ), 
    .CIN0(\STATE_OUT.n1316 ), .CIN1(\STATE_OUT.n3087 ), 
    .F0(\waiting_N_140[11] ), .F1(\waiting_N_140[12] ), 
    .COUT1(\STATE_OUT.n1318 ), .COUT0(\STATE_OUT.n3087 ));
  STATE_OUT_SLICE_14 \STATE_OUT.SLICE_14 ( .D1(\STATE_OUT.n3084 ), 
    .B1(\j[10] ), .D0(\STATE_OUT.n1314 ), .B0(\j[9] ), 
    .CIN0(\STATE_OUT.n1314 ), .CIN1(\STATE_OUT.n3084 ), 
    .F0(\waiting_N_140[9] ), .F1(\waiting_N_140[10] ), 
    .COUT1(\STATE_OUT.n1316 ), .COUT0(\STATE_OUT.n3084 ));
  STATE_OUT_SLICE_15 \STATE_OUT.SLICE_15 ( .D1(\STATE_OUT.n3081 ), .B1(\j[8] ), 
    .D0(\STATE_OUT.n1312 ), .B0(\j[7] ), .CIN0(\STATE_OUT.n1312 ), 
    .CIN1(\STATE_OUT.n3081 ), .F0(\waiting_N_140[7] ), .F1(\waiting_N_140[8] ), 
    .COUT1(\STATE_OUT.n1314 ), .COUT0(\STATE_OUT.n3081 ));
  STATE_OUT_SLICE_16 \STATE_OUT.SLICE_16 ( .D1(\STATE_OUT.n3078 ), .B1(\j[6] ), 
    .D0(\STATE_OUT.n1310 ), .B0(\j[5] ), .CIN0(\STATE_OUT.n1310 ), 
    .CIN1(\STATE_OUT.n3078 ), .F0(\waiting_N_140[5] ), .F1(\waiting_N_140[6] ), 
    .COUT1(\STATE_OUT.n1312 ), .COUT0(\STATE_OUT.n3078 ));
  STATE_OUT_SLICE_17 \STATE_OUT.SLICE_17 ( .D1(\STATE_OUT.n3117 ), 
    .D0(\STATE_OUT.n1336 ), .B0(\j[31] ), .CIN0(\STATE_OUT.n1336 ), 
    .CIN1(\STATE_OUT.n3117 ), .F0(\waiting_N_140[31] ), 
    .COUT0(\STATE_OUT.n3117 ));
  STATE_OUT_SLICE_18 \STATE_OUT.SLICE_18 ( .D1(\STATE_OUT.n3114 ), 
    .B1(\j[30] ), .D0(\STATE_OUT.n1334 ), .B0(\j[29] ), 
    .CIN0(\STATE_OUT.n1334 ), .CIN1(\STATE_OUT.n3114 ), 
    .F0(\waiting_N_140[29] ), .F1(\waiting_N_140[30] ), 
    .COUT1(\STATE_OUT.n1336 ), .COUT0(\STATE_OUT.n3114 ));
  STATE_OUT_SLICE_19 \STATE_OUT.SLICE_19 ( .D1(\STATE_OUT.n3111 ), 
    .B1(\j[28] ), .D0(\STATE_OUT.n1332 ), .B0(\j[27] ), 
    .CIN0(\STATE_OUT.n1332 ), .CIN1(\STATE_OUT.n3111 ), 
    .F0(\waiting_N_140[27] ), .F1(\waiting_N_140[28] ), 
    .COUT1(\STATE_OUT.n1334 ), .COUT0(\STATE_OUT.n3111 ));
  STATE_OUT_SLICE_20 \STATE_OUT.SLICE_20 ( .D1(\STATE_OUT.n3108 ), 
    .B1(\j[26] ), .D0(\STATE_OUT.n1330 ), .B0(\j[25] ), 
    .CIN0(\STATE_OUT.n1330 ), .CIN1(\STATE_OUT.n3108 ), 
    .F0(\waiting_N_140[25] ), .F1(\waiting_N_140[26] ), 
    .COUT1(\STATE_OUT.n1332 ), .COUT0(\STATE_OUT.n3108 ));
  STATE_OUT_SLICE_21 \STATE_OUT.SLICE_21 ( .D1(\STATE_OUT.n3105 ), 
    .B1(\j[24] ), .D0(\STATE_OUT.n1328 ), .B0(\j[23] ), 
    .CIN0(\STATE_OUT.n1328 ), .CIN1(\STATE_OUT.n3105 ), 
    .F0(\waiting_N_140[23] ), .F1(\waiting_N_140[24] ), 
    .COUT1(\STATE_OUT.n1330 ), .COUT0(\STATE_OUT.n3105 ));
  STATE_OUT_SLICE_22 \STATE_OUT.SLICE_22 ( .D1(\STATE_OUT.n3102 ), 
    .B1(\j[22] ), .D0(\STATE_OUT.n1326 ), .B0(\j[21] ), 
    .CIN0(\STATE_OUT.n1326 ), .CIN1(\STATE_OUT.n3102 ), 
    .F0(\waiting_N_140[21] ), .F1(\waiting_N_140[22] ), 
    .COUT1(\STATE_OUT.n1328 ), .COUT0(\STATE_OUT.n3102 ));
  STATE_OUT_SLICE_23 \STATE_OUT.SLICE_23 ( .D1(\STATE_OUT.n3099 ), 
    .B1(\j[20] ), .D0(\STATE_OUT.n1324 ), .B0(\j[19] ), 
    .CIN0(\STATE_OUT.n1324 ), .CIN1(\STATE_OUT.n3099 ), 
    .F0(\waiting_N_140[19] ), .F1(\waiting_N_140[20] ), 
    .COUT1(\STATE_OUT.n1326 ), .COUT0(\STATE_OUT.n3099 ));
  STATE_OUT_SLICE_24 \STATE_OUT.SLICE_24 ( .D1(\STATE_OUT.n3096 ), 
    .B1(\j[18] ), .D0(\STATE_OUT.n1322 ), .B0(\j[17] ), 
    .CIN0(\STATE_OUT.n1322 ), .CIN1(\STATE_OUT.n3096 ), 
    .F0(\waiting_N_140[17] ), .F1(\waiting_N_140[18] ), 
    .COUT1(\STATE_OUT.n1324 ), .COUT0(\STATE_OUT.n3096 ));
  STATE_OUT_SLICE_25 \STATE_OUT.SLICE_25 ( .D1(\STATE_OUT.n3093 ), 
    .B1(\j[16] ), .D0(\STATE_OUT.n1320 ), .B0(\j[15] ), 
    .CIN0(\STATE_OUT.n1320 ), .CIN1(\STATE_OUT.n3093 ), 
    .F0(\waiting_N_140[15] ), .F1(\waiting_N_140[16] ), 
    .COUT1(\STATE_OUT.n1322 ), .COUT0(\STATE_OUT.n3093 ));
  STATE_OUT_SLICE_26 \STATE_OUT.SLICE_26 ( .D1(\STATE_OUT.n3090 ), 
    .B1(\j[14] ), .D0(\STATE_OUT.n1318 ), .B0(\j[13] ), 
    .CIN0(\STATE_OUT.n1318 ), .CIN1(\STATE_OUT.n3090 ), 
    .F0(\waiting_N_140[13] ), .F1(\waiting_N_140[14] ), 
    .COUT1(\STATE_OUT.n1320 ), .COUT0(\STATE_OUT.n3090 ));
  STATE_OUT_serial_SLICE_27 \STATE_OUT.serial.SLICE_27 ( 
    .D1(\STATE_OUT.serial.n3135 ), .B1(\STATE_OUT.serial.j[10] ), 
    .D0(\STATE_OUT.serial.n1281 ), .B0(\STATE_OUT.serial.j[9] ), 
    .CIN0(\STATE_OUT.serial.n1281 ), .CIN1(\STATE_OUT.serial.n3135 ), 
    .F0(n157), .F1(n156), .COUT1(\STATE_OUT.serial.n1283 ), 
    .COUT0(\STATE_OUT.serial.n3135 ));
  STATE_OUT_serial_SLICE_28 \STATE_OUT.serial.SLICE_28 ( 
    .D1(\STATE_OUT.serial.n3168 ), .D0(\STATE_OUT.serial.n1303 ), 
    .B0(\STATE_OUT.serial.j[31] ), .CIN0(\STATE_OUT.serial.n1303 ), 
    .CIN1(\STATE_OUT.serial.n3168 ), .F0(n135), 
    .COUT0(\STATE_OUT.serial.n3168 ));
  STATE_OUT_serial_SLICE_29 \STATE_OUT.serial.SLICE_29 ( 
    .D1(\STATE_OUT.serial.n3165 ), .B1(\STATE_OUT.serial.j[30] ), 
    .D0(\STATE_OUT.serial.n1301 ), .B0(\STATE_OUT.serial.j[29] ), 
    .CIN0(\STATE_OUT.serial.n1301 ), .CIN1(\STATE_OUT.serial.n3165 ), 
    .F0(n137), .F1(n136), .COUT1(\STATE_OUT.serial.n1303 ), 
    .COUT0(\STATE_OUT.serial.n3165 ));
  STATE_OUT_serial_SLICE_30 \STATE_OUT.serial.SLICE_30 ( 
    .D1(\STATE_OUT.serial.n3162 ), .B1(\STATE_OUT.serial.j[28] ), 
    .D0(\STATE_OUT.serial.n1299 ), .B0(\STATE_OUT.serial.j[27] ), 
    .CIN0(\STATE_OUT.serial.n1299 ), .CIN1(\STATE_OUT.serial.n3162 ), 
    .F0(n139), .F1(n138), .COUT1(\STATE_OUT.serial.n1301 ), 
    .COUT0(\STATE_OUT.serial.n3162 ));
  STATE_OUT_serial_SLICE_31 \STATE_OUT.serial.SLICE_31 ( 
    .D1(\STATE_OUT.serial.n3159 ), .B1(\STATE_OUT.serial.j[26] ), 
    .D0(\STATE_OUT.serial.n1297 ), .B0(\STATE_OUT.serial.j[25] ), 
    .CIN0(\STATE_OUT.serial.n1297 ), .CIN1(\STATE_OUT.serial.n3159 ), 
    .F0(n141), .F1(n140), .COUT1(\STATE_OUT.serial.n1299 ), 
    .COUT0(\STATE_OUT.serial.n3159 ));
  STATE_OUT_serial_SLICE_32 \STATE_OUT.serial.SLICE_32 ( 
    .D1(\STATE_OUT.serial.n3126 ), .B1(\STATE_OUT.serial.j[4] ), 
    .D0(\STATE_OUT.serial.n1275 ), .B0(\STATE_OUT.serial.j[3] ), 
    .CIN0(\STATE_OUT.serial.n1275 ), .CIN1(\STATE_OUT.serial.n3126 ), 
    .F0(n163), .F1(n162), .COUT1(\STATE_OUT.serial.n1277 ), 
    .COUT0(\STATE_OUT.serial.n3126 ));
  STATE_OUT_serial_SLICE_33 \STATE_OUT.serial.SLICE_33 ( 
    .D1(\STATE_OUT.serial.n3156 ), .B1(\STATE_OUT.serial.j[24] ), 
    .D0(\STATE_OUT.serial.n1295 ), .B0(\STATE_OUT.serial.j[23] ), 
    .CIN0(\STATE_OUT.serial.n1295 ), .CIN1(\STATE_OUT.serial.n3156 ), 
    .F0(n143), .F1(n142), .COUT1(\STATE_OUT.serial.n1297 ), 
    .COUT0(\STATE_OUT.serial.n3156 ));
  STATE_OUT_serial_SLICE_34 \STATE_OUT.serial.SLICE_34 ( 
    .DI0(\STATE_OUT.serial.n167[1] ), .D1(\STATE_OUT.serial.n3123 ), 
    .B1(\STATE_OUT.serial.j[2] ), .D0(\STATE_OUT.serial.n1273 ), 
    .B0(\STATE_OUT.serial.j[1] ), .LSR(n119), .CLK(SERCLK_OUT_c), 
    .CIN0(\STATE_OUT.serial.n1273 ), .CIN1(\STATE_OUT.serial.n3123 ), 
    .Q0(\STATE_OUT.serial.j[1] ), .F0(\STATE_OUT.serial.n167[1] ), .F1(n164), 
    .COUT1(\STATE_OUT.serial.n1275 ), .COUT0(\STATE_OUT.serial.n3123 ));
  STATE_OUT_serial_SLICE_35 \STATE_OUT.serial.SLICE_35 ( 
    .D1(\STATE_OUT.serial.n3141 ), .B1(\STATE_OUT.serial.j[14] ), 
    .D0(\STATE_OUT.serial.n1285 ), .B0(\STATE_OUT.serial.j[13] ), 
    .CIN0(\STATE_OUT.serial.n1285 ), .CIN1(\STATE_OUT.serial.n3141 ), 
    .F0(n153), .F1(n152), .COUT1(\STATE_OUT.serial.n1287 ), 
    .COUT0(\STATE_OUT.serial.n3141 ));
  STATE_OUT_serial_SLICE_36 \STATE_OUT.serial.SLICE_36 ( 
    .D1(\STATE_OUT.serial.n3132 ), .B1(\STATE_OUT.serial.j[8] ), 
    .D0(\STATE_OUT.serial.n1279 ), .B0(\STATE_OUT.serial.j[7] ), 
    .CIN0(\STATE_OUT.serial.n1279 ), .CIN1(\STATE_OUT.serial.n3132 ), 
    .F0(n159), .F1(n158), .COUT1(\STATE_OUT.serial.n1281 ), 
    .COUT0(\STATE_OUT.serial.n3132 ));
  STATE_OUT_serial_SLICE_37 \STATE_OUT.serial.SLICE_37 ( 
    .D1(\STATE_OUT.serial.n3153 ), .B1(\STATE_OUT.serial.j[22] ), 
    .D0(\STATE_OUT.serial.n1293 ), .B0(\STATE_OUT.serial.j[21] ), 
    .CIN0(\STATE_OUT.serial.n1293 ), .CIN1(\STATE_OUT.serial.n3153 ), 
    .F0(n145), .F1(n144), .COUT1(\STATE_OUT.serial.n1295 ), 
    .COUT0(\STATE_OUT.serial.n3153 ));
  STATE_OUT_serial_SLICE_38 \STATE_OUT.serial.SLICE_38 ( 
    .D1(\STATE_OUT.serial.n3150 ), .B1(\STATE_OUT.serial.j[20] ), 
    .D0(\STATE_OUT.serial.n1291 ), .B0(\STATE_OUT.serial.j[19] ), 
    .CIN0(\STATE_OUT.serial.n1291 ), .CIN1(\STATE_OUT.serial.n3150 ), 
    .F0(n147), .F1(n146), .COUT1(\STATE_OUT.serial.n1293 ), 
    .COUT0(\STATE_OUT.serial.n3150 ));
  STATE_OUT_serial_SLICE_39 \STATE_OUT.serial.SLICE_39 ( 
    .D1(\STATE_OUT.serial.n3147 ), .B1(\STATE_OUT.serial.j[18] ), 
    .D0(\STATE_OUT.serial.n1289 ), .B0(\STATE_OUT.serial.j[17] ), 
    .CIN0(\STATE_OUT.serial.n1289 ), .CIN1(\STATE_OUT.serial.n3147 ), 
    .F0(n149), .F1(n148), .COUT1(\STATE_OUT.serial.n1291 ), 
    .COUT0(\STATE_OUT.serial.n3147 ));
  STATE_OUT_serial_SLICE_40 \STATE_OUT.serial.SLICE_40 ( 
    .D1(\STATE_OUT.serial.n3138 ), .B1(\STATE_OUT.serial.j[12] ), 
    .D0(\STATE_OUT.serial.n1283 ), .B0(\STATE_OUT.serial.j[11] ), 
    .CIN0(\STATE_OUT.serial.n1283 ), .CIN1(\STATE_OUT.serial.n3138 ), 
    .F0(n155), .F1(n154), .COUT1(\STATE_OUT.serial.n1285 ), 
    .COUT0(\STATE_OUT.serial.n3138 ));
  STATE_OUT_serial_SLICE_41 \STATE_OUT.serial.SLICE_41 ( 
    .D1(\STATE_OUT.serial.n3144 ), .B1(\STATE_OUT.serial.j[16] ), 
    .D0(\STATE_OUT.serial.n1287 ), .B0(\STATE_OUT.serial.j[15] ), 
    .CIN0(\STATE_OUT.serial.n1287 ), .CIN1(\STATE_OUT.serial.n3144 ), 
    .F0(n151), .F1(n150), .COUT1(\STATE_OUT.serial.n1289 ), 
    .COUT0(\STATE_OUT.serial.n3144 ));
  STATE_OUT_serial_SLICE_42 \STATE_OUT.serial.SLICE_42 ( 
    .DI1(\STATE_OUT.serial.n167[0] ), .D1(\STATE_OUT.serial.n3120 ), 
    .C1(VCC_net), .B1(\STATE_OUT.serial.j[0] ), .LSR(n119), .CLK(SERCLK_OUT_c), 
    .CIN1(\STATE_OUT.serial.n3120 ), .Q1(\STATE_OUT.serial.j[0] ), 
    .F1(\STATE_OUT.serial.n167[0] ), .COUT1(\STATE_OUT.serial.n1273 ), 
    .COUT0(\STATE_OUT.serial.n3120 ));
  STATE_OUT_serial_SLICE_43 \STATE_OUT.serial.SLICE_43 ( 
    .D1(\STATE_OUT.serial.n3129 ), .B1(\STATE_OUT.serial.j[6] ), 
    .D0(\STATE_OUT.serial.n1277 ), .B0(\STATE_OUT.serial.j[5] ), 
    .CIN0(\STATE_OUT.serial.n1277 ), .CIN1(\STATE_OUT.serial.n3129 ), 
    .F0(n161), .F1(n160), .COUT1(\STATE_OUT.serial.n1279 ), 
    .COUT0(\STATE_OUT.serial.n3129 ));
  SLICE_44 SLICE_44( .DI1(\debug_c_1$n1 ), .DI0(\debug_c_0$n0 ), .D1(n2235), 
    .C1(n26), .B1(\state[1] ), .A1(n1841), .D0(TIMER_EN_N_15), 
    .C0(\Snext_1__N_1[0] ), .B0(debug_c_0), .A0(n12), .LSR(RESET_IN_c), 
    .CLK(SERCLK_OUT_c), .Q0(\Sreg[0] ), .Q1(\Sreg[1] ), .F0(\debug_c_0$n0 ), 
    .F1(\debug_c_1$n1 ));
  SLICE_46 SLICE_46( .DI1(n452), .DI0(n549), .D1(\state[0] ), .C1(\state[1] ), 
    .B1(\PREV_KEY[0] ), .A1(RESET_IN_c), .D0(\state[1] ), .C0(RESET_IN_c), 
    .B0(\PREV_KEY[1] ), .A0(n334), .CLK(SERCLK_OUT_c), .Q0(\PREV_KEY[1] ), 
    .Q1(\PREV_KEY[0] ), .F0(n549), .F1(n452));
  keyboard_SLICE_48 \keyboard.SLICE_48 ( .DI1(\keyboard.nextState[0]$n3 ), 
    .DI0(\keyboard.nextState[1]$n2 ), .D1(\keyboard.counter[1] ), 
    .C1(\keyboard.n345 ), .B1(\keyboard.nextState[0] ), 
    .A1(\keyboard.counter[0] ), .D0(\state[0] ), .A0(\keyboard.n6_adj_276 ), 
    .CLK(SERCLK_OUT_c), .Q0(\state[1] ), .Q1(\state[0] ), 
    .F0(\keyboard.nextState[1]$n2 ), .F1(\keyboard.nextState[0]$n3 ));
  keyboard_SLICE_49 \keyboard.SLICE_49 ( .DI1(\keyboard.n13[1] ), 
    .DI0(\keyboard.n1 ), .D1(\keyboard.counter[1] ), 
    .A1(\keyboard.counter[0] ), .B0(\keyboard.counter[0] ), .CLK(KB_RECV_c), 
    .Q0(\keyboard.counter[0] ), .Q1(\keyboard.counter[1] ), .F0(\keyboard.n1 ), 
    .F1(\keyboard.n13[1] ));
  mainTimer_SLICE_53 \mainTimer.SLICE_53 ( 
    .DI1(\mainTimer.clkCont_17__N_19[16] ), 
    .DI0(\mainTimer.clkCont_17__N_19[17] ), 
    .C1(\mainTimer.clkCont_17__N_40[16] ), .B1(timeout_c), 
    .B0(\mainTimer.clkCont_17__N_40[17] ), .A0(timeout_c), 
    .LSR(\mainTimer.clkCont_17__N_37 ), .CLK(SERCLK_OUT_c), 
    .Q0(\mainTimer.clkCont[17] ), .Q1(\mainTimer.clkCont[16] ), 
    .F0(\mainTimer.clkCont_17__N_19[17] ), 
    .F1(\mainTimer.clkCont_17__N_19[16] ));
  mainTimer_SLICE_55 \mainTimer.SLICE_55 ( 
    .DI1(\mainTimer.clkCont_17__N_19[14] ), 
    .DI0(\mainTimer.clkCont_17__N_19[15] ), .B1(timeout_c), 
    .A1(\mainTimer.clkCont_17__N_40[14] ), 
    .D0(\mainTimer.clkCont_17__N_40[15] ), .A0(timeout_c), 
    .LSR(\mainTimer.clkCont_17__N_37 ), .CLK(SERCLK_OUT_c), 
    .Q0(\mainTimer.clkCont[15] ), .Q1(\mainTimer.clkCont[14] ), 
    .F0(\mainTimer.clkCont_17__N_19[15] ), 
    .F1(\mainTimer.clkCont_17__N_19[14] ));
  mainTimer_SLICE_57 \mainTimer.SLICE_57 ( 
    .DI1(\mainTimer.clkCont_17__N_19[12] ), 
    .DI0(\mainTimer.clkCont_17__N_19[13] ), 
    .D1(\mainTimer.clkCont_17__N_40[12] ), .B1(timeout_c), .C0(timeout_c), 
    .A0(\mainTimer.clkCont_17__N_40[13] ), .LSR(\mainTimer.clkCont_17__N_37 ), 
    .CLK(SERCLK_OUT_c), .Q0(\mainTimer.clkCont[13] ), 
    .Q1(\mainTimer.clkCont[12] ), .F0(\mainTimer.clkCont_17__N_19[13] ), 
    .F1(\mainTimer.clkCont_17__N_19[12] ));
  mainTimer_SLICE_59 \mainTimer.SLICE_59 ( 
    .DI1(\mainTimer.clkCont_17__N_19[10] ), 
    .DI0(\mainTimer.clkCont_17__N_19[11] ), .C1(timeout_c), 
    .B1(\mainTimer.clkCont_17__N_40[10] ), .D0(timeout_c), 
    .B0(\mainTimer.clkCont_17__N_40[11] ), .LSR(\mainTimer.clkCont_17__N_37 ), 
    .CLK(SERCLK_OUT_c), .Q0(\mainTimer.clkCont[11] ), 
    .Q1(\mainTimer.clkCont[10] ), .F0(\mainTimer.clkCont_17__N_19[11] ), 
    .F1(\mainTimer.clkCont_17__N_19[10] ));
  mainTimer_SLICE_61 \mainTimer.SLICE_61 ( 
    .DI1(\mainTimer.clkCont_17__N_19[8] ), 
    .DI0(\mainTimer.clkCont_17__N_19[9] ), .C1(timeout_c), 
    .A1(\mainTimer.clkCont_17__N_40[8] ), .D0(\mainTimer.clkCont_17__N_40[9] ), 
    .B0(timeout_c), .LSR(\mainTimer.clkCont_17__N_37 ), .CLK(SERCLK_OUT_c), 
    .Q0(\mainTimer.clkCont[9] ), .Q1(\mainTimer.clkCont[8] ), 
    .F0(\mainTimer.clkCont_17__N_19[9] ), .F1(\mainTimer.clkCont_17__N_19[8] ));
  mainTimer_SLICE_63 \mainTimer.SLICE_63 ( 
    .DI1(\mainTimer.clkCont_17__N_19[6] ), 
    .DI0(\mainTimer.clkCont_17__N_19[7] ), .C1(timeout_c), 
    .B1(\mainTimer.clkCont_17__N_40[6] ), .D0(timeout_c), 
    .B0(\mainTimer.clkCont_17__N_40[7] ), .LSR(\mainTimer.clkCont_17__N_37 ), 
    .CLK(SERCLK_OUT_c), .Q0(\mainTimer.clkCont[7] ), 
    .Q1(\mainTimer.clkCont[6] ), .F0(\mainTimer.clkCont_17__N_19[7] ), 
    .F1(\mainTimer.clkCont_17__N_19[6] ));
  mainTimer_SLICE_65 \mainTimer.SLICE_65 ( 
    .DI1(\mainTimer.clkCont_17__N_19[4] ), 
    .DI0(\mainTimer.clkCont_17__N_19[5] ), .C1(timeout_c), 
    .A1(\mainTimer.clkCont_17__N_40[4] ), .C0(\mainTimer.clkCont_17__N_40[5] ), 
    .B0(timeout_c), .LSR(\mainTimer.clkCont_17__N_37 ), .CLK(SERCLK_OUT_c), 
    .Q0(\mainTimer.clkCont[5] ), .Q1(\mainTimer.clkCont[4] ), 
    .F0(\mainTimer.clkCont_17__N_19[5] ), .F1(\mainTimer.clkCont_17__N_19[4] ));
  mainTimer_SLICE_67 \mainTimer.SLICE_67 ( 
    .DI1(\mainTimer.clkCont_17__N_19[2] ), 
    .DI0(\mainTimer.clkCont_17__N_19[3] ), .D1(timeout_c), 
    .C1(\mainTimer.clkCont_17__N_40[2] ), .D0(\mainTimer.clkCont_17__N_40[3] ), 
    .C0(timeout_c), .LSR(\mainTimer.clkCont_17__N_37 ), .CLK(SERCLK_OUT_c), 
    .Q0(\mainTimer.clkCont[3] ), .Q1(\mainTimer.clkCont[2] ), 
    .F0(\mainTimer.clkCont_17__N_19[3] ), .F1(\mainTimer.clkCont_17__N_19[2] ));
  mainTimer_SLICE_69 \mainTimer.SLICE_69 ( 
    .DI1(\mainTimer.clkCont_17__N_19[0] ), 
    .DI0(\mainTimer.clkCont_17__N_19[1] ), 
    .B1(\mainTimer.clkCont_17__N_40[0] ), .A1(timeout_c), 
    .D0(\mainTimer.clkCont_17__N_40[1] ), .B0(timeout_c), 
    .LSR(\mainTimer.clkCont_17__N_37 ), .CLK(SERCLK_OUT_c), 
    .Q0(\mainTimer.clkCont[1] ), .Q1(\mainTimer.clkCont[0] ), 
    .F0(\mainTimer.clkCont_17__N_19[1] ), .F1(\mainTimer.clkCont_17__N_19[0] ));
  SLICE_71 SLICE_71( .DI1(n520), .DI0(n518), .D1(\waiting_N_140[17] ), 
    .C1(waiting_N_139), .B1(waiting), .A1(\j[17] ), .D0(waiting_N_139), 
    .C0(\j[16] ), .B0(\waiting_N_140[16] ), .A0(waiting), .CLK(SERCLK_OUT_c), 
    .Q0(\j[16] ), .Q1(\j[17] ), .F0(n518), .F1(n520));
  SLICE_72 SLICE_72( .DI1(n534), .DI0(n536), .D1(waiting), 
    .C1(\waiting_N_140[24] ), .B1(\j[24] ), .A1(waiting_N_139), 
    .D0(\waiting_N_140[25] ), .C0(\j[25] ), .B0(waiting_N_139), .A0(waiting), 
    .CLK(SERCLK_OUT_c), .Q0(\j[25] ), .Q1(\j[24] ), .F0(n536), .F1(n534));
  SLICE_76 SLICE_76( .DI1(n524), .DI0(n522), .D1(waiting_N_139), 
    .C1(\waiting_N_140[19] ), .B1(\j[19] ), .A1(waiting), .D0(\j[18] ), 
    .C0(waiting_N_139), .B0(waiting), .A0(\waiting_N_140[18] ), 
    .CLK(SERCLK_OUT_c), .Q0(\j[18] ), .Q1(\j[19] ), .F0(n522), .F1(n524));
  SLICE_78 SLICE_78( .DI1(n528), .DI0(n526), .D1(waiting_N_139), .C1(\j[21] ), 
    .B1(waiting), .A1(\waiting_N_140[21] ), .D0(waiting), 
    .C0(\waiting_N_140[20] ), .B0(\j[20] ), .A0(waiting_N_139), 
    .CLK(SERCLK_OUT_c), .Q0(\j[20] ), .Q1(\j[21] ), .F0(n526), .F1(n528));
  SLICE_80 SLICE_80( .DI1(n544), .DI0(n542), .D1(\waiting_N_140[29] ), 
    .C1(\j[29] ), .B1(waiting), .A1(waiting_N_139), .D0(waiting_N_139), 
    .C0(\waiting_N_140[28] ), .B0(\j[28] ), .A0(waiting), .CLK(SERCLK_OUT_c), 
    .Q0(\j[28] ), .Q1(\j[29] ), .F0(n542), .F1(n544));
  SLICE_82 SLICE_82( .DI1(n548), .DI0(n546), .D1(waiting), .C1(waiting_N_139), 
    .B1(\waiting_N_140[31] ), .A1(\j[31] ), .D0(waiting_N_139), .C0(waiting), 
    .B0(\waiting_N_140[30] ), .A0(\j[30] ), .CLK(SERCLK_OUT_c), .Q0(\j[30] ), 
    .Q1(\j[31] ), .F0(n546), .F1(n548));
  SLICE_83 SLICE_83( .DI1(n532), .DI0(n530), .D1(\j[23] ), 
    .C1(\waiting_N_140[23] ), .B1(waiting_N_139), .A1(waiting), .D0(waiting), 
    .C0(waiting_N_139), .B0(\j[22] ), .A0(\waiting_N_140[22] ), 
    .CLK(SERCLK_OUT_c), .Q0(\j[22] ), .Q1(\j[23] ), .F0(n530), .F1(n532));
  STATE_OUT_SLICE_86 \STATE_OUT.SLICE_86 ( .DI1(\STATE_OUT.n21[1] ), 
    .DI0(\STATE_OUT.n21[0] ), .D1(\STATE_OUT.cont[1] ), 
    .B1(\STATE_OUT.cont[0] ), .C0(\STATE_OUT.cont[0] ), 
    .LSR(\STATE_OUT.waiting_N_135 ), .CLK(SERCLK_OUT_c), 
    .Q0(\STATE_OUT.cont[0] ), .Q1(\STATE_OUT.cont[1] ), 
    .F0(\STATE_OUT.n21[0] ), .F1(\STATE_OUT.n21[1] ));
  SLICE_88 SLICE_88( .DI1(n462), .DI0(n508), .D1(waiting_N_139), .C1(waiting), 
    .B1(\j[10] ), .A1(\waiting_N_140[10] ), .D0(\waiting_N_140[11] ), 
    .C0(\j[11] ), .B0(waiting), .A0(waiting_N_139), .CLK(SERCLK_OUT_c), 
    .Q0(\j[11] ), .Q1(\j[10] ), .F0(n508), .F1(n462));
  SLICE_89 SLICE_89( .DI1(n512), .DI0(n510), .D1(\waiting_N_140[13] ), 
    .C1(waiting_N_139), .B1(waiting), .A1(\j[13] ), .D0(waiting), .C0(\j[12] ), 
    .B0(waiting_N_139), .A0(\waiting_N_140[12] ), .CLK(SERCLK_OUT_c), 
    .Q0(\j[12] ), .Q1(\j[13] ), .F0(n510), .F1(n512));
  SLICE_90 SLICE_90( .DI1(n451), .DI0(n449), .D1(\j[8] ), .C1(waiting), 
    .B1(\waiting_N_140[8] ), .A1(waiting_N_139), .D0(waiting_N_139), 
    .C0(\j[9] ), .B0(waiting), .A0(\waiting_N_140[9] ), .CLK(SERCLK_OUT_c), 
    .Q0(\j[9] ), .Q1(\j[8] ), .F0(n449), .F1(n451));
  SLICE_92 SLICE_92( .DI1(n456), .DI0(n454), .D1(\waiting_N_140[6] ), 
    .C1(waiting), .B1(\j[6] ), .A1(waiting_N_139), .D0(\waiting_N_140[7] ), 
    .C0(waiting), .B0(waiting_N_139), .A0(\j[7] ), .CLK(SERCLK_OUT_c), 
    .Q0(\j[7] ), .Q1(\j[6] ), .F0(n454), .F1(n456));
  SLICE_94 SLICE_94( .DI1(n460), .DI0(n458), .D1(\j[4] ), .C1(waiting_N_139), 
    .B1(waiting), .A1(\waiting_N_140[4] ), .D0(\waiting_N_140[5] ), 
    .C0(waiting), .B0(waiting_N_139), .A0(\j[5] ), .CLK(SERCLK_OUT_c), 
    .Q0(\j[5] ), .Q1(\j[4] ), .F0(n458), .F1(n460));
  SLICE_97 SLICE_97( .DI1(n466), .DI0(n464), .D1(\waiting_N_140[2] ), 
    .C1(\j[2] ), .B1(waiting), .A1(waiting_N_139), .D0(waiting_N_139), 
    .C0(\waiting_N_140[3] ), .B0(waiting), .A0(\j[3] ), .CLK(SERCLK_OUT_c), 
    .Q0(\j[3] ), .Q1(\j[2] ), .F0(n464), .F1(n466));
  SLICE_99 SLICE_99( .DI1(n514), .DI0(n516), .D1(\waiting_N_140[14] ), 
    .C1(\j[14] ), .B1(waiting_N_139), .A1(waiting), .D0(waiting), 
    .C0(waiting_N_139), .B0(\waiting_N_140[15] ), .A0(\j[15] ), 
    .CLK(SERCLK_OUT_c), .Q0(\j[15] ), .Q1(\j[14] ), .F0(n516), .F1(n514));
  STATE_OUT_SLICE_103 \STATE_OUT.SLICE_103 ( .DI1(\STATE_OUT.n21[3] ), 
    .DI0(\STATE_OUT.n21[2] ), .D1(\STATE_OUT.cont[3] ), 
    .C1(\STATE_OUT.cont[0] ), .B1(\STATE_OUT.cont[1] ), 
    .A1(\STATE_OUT.cont[2] ), .D0(\STATE_OUT.cont[0] ), 
    .C0(\STATE_OUT.cont[1] ), .B0(\STATE_OUT.cont[2] ), 
    .LSR(\STATE_OUT.waiting_N_135 ), .CLK(SERCLK_OUT_c), 
    .Q0(\STATE_OUT.cont[2] ), .Q1(\STATE_OUT.cont[3] ), 
    .F0(\STATE_OUT.n21[2] ), .F1(\STATE_OUT.n21[3] ));
  SLICE_105 SLICE_105( .DI1(n540), .DI0(n538), .D1(waiting), .C1(\j[27] ), 
    .B1(\waiting_N_140[27] ), .A1(waiting_N_139), .D0(\waiting_N_140[26] ), 
    .C0(waiting), .B0(waiting_N_139), .A0(\j[26] ), .CLK(SERCLK_OUT_c), 
    .Q0(\j[26] ), .Q1(\j[27] ), .F0(n538), .F1(n540));
  SLICE_107 SLICE_107( .DI1(n479), .DI0(n478), .B1(n146), .A1(n119), .D0(n119), 
    .B0(n145), .CLK(SERCLK_OUT_c), .Q0(\STATE_OUT.serial.j[21] ), 
    .Q1(\STATE_OUT.serial.j[20] ), .F0(n478), .F1(n479));
  SLICE_108 SLICE_108( .DI1(n476), .DI0(n477), .D1(n143), .C1(n119), .D0(n144), 
    .B0(n119), .CLK(SERCLK_OUT_c), .Q0(\STATE_OUT.serial.j[22] ), 
    .Q1(\STATE_OUT.serial.j[23] ), .F0(n477), .F1(n476));
  SLICE_109 SLICE_109( .DI1(\SENSOR1_IN_c.sig_001.FeedThruLUT ), 
    .DI0(\SENSOR2_IN_c.sig_000.FeedThruLUT ), .D1(SENSOR1_IN_c), 
    .D0(SENSOR2_IN_c), .CE(\STATE_OUT.n118 ), .CLK(SERCLK_OUT_c), 
    .Q0(\STATE_OUT.serial.temp_data_out[0] ), 
    .Q1(\STATE_OUT.serial.temp_data_out[1] ), 
    .F0(\SENSOR2_IN_c.sig_000.FeedThruLUT ), 
    .F1(\SENSOR1_IN_c.sig_001.FeedThruLUT ));
  SLICE_111 SLICE_111( .DI1(n474), .DI0(n475), .C1(n141), .A1(n119), .D0(n119), 
    .B0(n142), .CLK(SERCLK_OUT_c), .Q0(\STATE_OUT.serial.j[24] ), 
    .Q1(\STATE_OUT.serial.j[25] ), .F0(n475), .F1(n474));
  SLICE_113 SLICE_113( .DI1(n472), .DI0(n473), .C1(n119), .B1(n139), .D0(n119), 
    .C0(n140), .CLK(SERCLK_OUT_c), .Q0(\STATE_OUT.serial.j[26] ), 
    .Q1(\STATE_OUT.serial.j[27] ), .F0(n473), .F1(n472));
  SLICE_115 SLICE_115( .DI1(n470), .DI0(n471), .D1(n137), .C1(n119), .D0(n119), 
    .C0(n138), .CLK(SERCLK_OUT_c), .Q0(\STATE_OUT.serial.j[28] ), 
    .Q1(\STATE_OUT.serial.j[29] ), .F0(n471), .F1(n470));
  SLICE_117 SLICE_117( .DI1(n468), .DI0(n469), .D1(init), .C1(n135), .C0(n136), 
    .B0(n119), .CLK(SERCLK_OUT_c), .Q0(\STATE_OUT.serial.j[30] ), 
    .Q1(\STATE_OUT.serial.j[31] ), .F0(n469), .F1(n468));
  SLICE_121 SLICE_121( .DI1(n496), .DI0(n497), .D1(n163), .A1(n119), .D0(n164), 
    .B0(n119), .CLK(SERCLK_OUT_c), .Q0(\STATE_OUT.serial.j[2] ), 
    .Q1(\STATE_OUT.serial.j[3] ), .F0(n497), .F1(n496));
  SLICE_123 SLICE_123( .DI1(n494), .DI0(n495), .C1(n161), .A1(n119), .D0(n162), 
    .B0(n119), .CLK(SERCLK_OUT_c), .Q0(\STATE_OUT.serial.j[4] ), 
    .Q1(\STATE_OUT.serial.j[5] ), .F0(n495), .F1(n494));
  SLICE_125 SLICE_125( .DI1(n492), .DI0(n493), .C1(n119), .A1(n159), .C0(n160), 
    .B0(n119), .CLK(SERCLK_OUT_c), .Q0(\STATE_OUT.serial.j[6] ), 
    .Q1(\STATE_OUT.serial.j[7] ), .F0(n493), .F1(n492));
  SLICE_127 SLICE_127( .DI1(n490), .DI0(n491), .C1(n119), .A1(n157), .D0(n119), 
    .B0(n158), .CLK(SERCLK_OUT_c), .Q0(\STATE_OUT.serial.j[8] ), 
    .Q1(\STATE_OUT.serial.j[9] ), .F0(n491), .F1(n490));
  SLICE_129 SLICE_129( .DI1(n488), .DI0(n489), .D1(n155), .C1(n119), .D0(n119), 
    .A0(n156), .CLK(SERCLK_OUT_c), .Q0(\STATE_OUT.serial.j[10] ), 
    .Q1(\STATE_OUT.serial.j[11] ), .F0(n489), .F1(n488));
  SLICE_131 SLICE_131( .DI1(n486), .DI0(n487), .D1(n119), .A1(n153), .C0(n119), 
    .A0(n154), .CLK(SERCLK_OUT_c), .Q0(\STATE_OUT.serial.j[12] ), 
    .Q1(\STATE_OUT.serial.j[13] ), .F0(n487), .F1(n486));
  SLICE_133 SLICE_133( .DI1(n484), .DI0(n485), .D1(n119), .A1(n151), .C0(n152), 
    .A0(n119), .CLK(SERCLK_OUT_c), .Q0(\STATE_OUT.serial.j[14] ), 
    .Q1(\STATE_OUT.serial.j[15] ), .F0(n485), .F1(n484));
  SLICE_135 SLICE_135( .DI1(n482), .DI0(n483), .B1(n149), .A1(n119), .D0(n119), 
    .A0(n150), .CLK(SERCLK_OUT_c), .Q0(\STATE_OUT.serial.j[16] ), 
    .Q1(\STATE_OUT.serial.j[17] ), .F0(n483), .F1(n482));
  SLICE_137 SLICE_137( .DI1(n480), .DI0(n481), .D1(n147), .A1(n119), .B0(n119), 
    .A0(n148), .CLK(SERCLK_OUT_c), .Q0(\STATE_OUT.serial.j[18] ), 
    .Q1(\STATE_OUT.serial.j[19] ), .F0(n481), .F1(n480));
  SLICE_140 SLICE_140( .DI0(\Sreg[1].sig_002.FeedThruLUT ), .A0(\Sreg[1] ), 
    .CE(\STATE_OUT.n118 ), .LSR(\STATE_OUT.serial.n446 ), .CLK(SERCLK_OUT_c), 
    .Q0(\STATE_OUT.serial.temp_data_out[3] ), 
    .F0(\Sreg[1].sig_002.FeedThruLUT ));
  keyboard_SLICE_142 \keyboard.SLICE_142 ( .D1(\keyboard.n6_adj_276 ), 
    .C1(\state[0] ), .D0(\keyboard.nextState[1] ), .C0(\keyboard.counter[1] ), 
    .B0(\keyboard.counter[0] ), .A0(\state[1] ), .F0(\keyboard.n6_adj_276 ), 
    .F1(\keyboard.nextState[1] ));
  SLICE_144 SLICE_144( .D1(\state[1] ), .C1(\Sreg[0] ), .B1(\state[0] ), 
    .D0(n1841), .C0(n2235), .B0(n26), .A0(\state[1] ), .F0(debug_c_1), .F1(n8));
  SLICE_145 SLICE_145( .D1(debug_c_1), .C1(n1831), .B1(\Sreg[1] ), .A1(n8), 
    .D0(SENSOR2_IN_c), .C0(SENSOR1_IN_c), .B0(KEY_STATUS_c_1), 
    .A0(TIMER_EN_N_15), .F0(n1831), .F1(n26));
  SLICE_146 SLICE_146( .D1(KEY_STATUS_c_1), .C1(\Snext_1__N_11[0] ), 
    .B1(\Sreg[1] ), .A1(n2598), .D0(TIMER_EN_N_15), .C0(KEY_STATUS_c_1), 
    .B0(n3), .A0(SENSOR1_IN_c), .F0(\Snext_1__N_11[0] ), 
    .F1(\Snext_1__N_1[0] ));
  SLICE_147 SLICE_147( .D1(\Sreg[0] ), .B1(\Sreg[1] ), .D0(\Sreg[1] ), 
    .C0(KEY_STATUS_c_1), .B0(timeout_c), .A0(\Sreg[0] ), .F0(n2598), 
    .F1(SIREN_OUT_c));
  SLICE_148 SLICE_148( .D1(\Sreg[0] ), .C1(KEY_STATUS_c_1), .B1(timeout_c), 
    .A1(TIMER_EN_N_15), .D0(\state[0] ), .C0(\KEY_STATUS_1__N_253[1] ), 
    .A0(\state[1] ), .F0(KEY_STATUS_c_1), .F1(n4));
  SLICE_149 SLICE_149( .C1(TIMER_EN), .D0(TIMER_EN_N_15), .C0(n4), 
    .B0(\Sreg[1] ), .A0(TIMER_EN), .F0(TIMER_EN), 
    .F1(\mainTimer.clkCont_17__N_37 ));
  SLICE_151 SLICE_151( .D1(TIMER_EN_N_15), .C1(n12), .B1(\Snext_1__N_1[0] ), 
    .A1(debug_c_0), .D0(\Sreg[1] ), .C0(\Sreg[0] ), .B0(n1831), 
    .A0(KEY_STATUS_c_1), .F0(n12), .F1(debug_c_0));
  keyboard_SLICE_152 \keyboard.SLICE_152 ( .C1(\keyboard.actualKey[3][1] ), 
    .B1(KB_IN_c_1), .A1(\keyboard.n1708 ), .D0(KB_IN_c_1), 
    .C0(\keyboard.n1709 ), .A0(\keyboard.actualKey[2][1] ), 
    .F0(\keyboard.actualKey[2][1] ), .F1(\keyboard.actualKey[3][1] ));
  keyboard_SLICE_153 \keyboard.SLICE_153 ( .D1(\keyboard.actualKey[2][1] ), 
    .C1(\keyboard.n6 ), .B1(\keyboard.n2034 ), .A1(\keyboard.actualKey[3][1] ), 
    .C0(\keyboard.actualKey[3][0] ), .A0(\keyboard.actualKey[1][0] ), 
    .F0(\keyboard.n6 ), .F1(\KEY_STATUS_1__N_253[1] ));
  keyboard_SLICE_155 \keyboard.SLICE_155 ( .D1(\keyboard.actualKey[3][0] ), 
    .C1(\keyboard.n1708 ), .A1(KB_IN_c_0), .D0(\state[0] ), .C0(\state[1] ), 
    .B0(\keyboard.counter[1] ), .A0(\keyboard.counter[0] ), 
    .F0(\keyboard.n1708 ), .F1(\keyboard.actualKey[3][0] ));
  keyboard_SLICE_156 \keyboard.SLICE_156 ( .D1(\keyboard.actualKey[2][0] ), 
    .C1(\keyboard.actualKey[0][0] ), .B1(\keyboard.actualKey[1][1] ), 
    .A1(\keyboard.actualKey[0][1] ), .D0(KB_IN_c_0), .B0(\keyboard.n1707 ), 
    .A0(\keyboard.actualKey[0][0] ), .F0(\keyboard.actualKey[0][0] ), 
    .F1(\keyboard.n2034 ));
  keyboard_SLICE_157 \keyboard.SLICE_157 ( .C1(\keyboard.actualKey[0][1] ), 
    .B1(KB_IN_c_1), .A1(\keyboard.n1707 ), .D0(\state[0] ), 
    .C0(\keyboard.counter[0] ), .B0(\state[1] ), .A0(\keyboard.counter[1] ), 
    .F0(\keyboard.n1707 ), .F1(\keyboard.actualKey[0][1] ));
  keyboard_SLICE_158 \keyboard.SLICE_158 ( .D1(\keyboard.nextState[0] ), 
    .C1(\keyboard.n345 ), .B1(\keyboard.counter[1] ), 
    .A1(\keyboard.counter[0] ), .D0(\state[0] ), .C0(\state[1] ), 
    .F0(\keyboard.n345 ), .F1(\keyboard.nextState[0] ));
  keyboard_SLICE_160 \keyboard.SLICE_160 ( .D1(\Sreg[0] ), 
    .C1(\KEY_STATUS_1__N_253[1] ), .B1(\Sreg[1] ), .A1(TIMER_EN_N_15), 
    .C0(\state[1] ), .A0(\state[0] ), .F0(TIMER_EN_N_15), .F1(n2235));
  keyboard_SLICE_166 \keyboard.SLICE_166 ( .D1(\keyboard.actualKey[1][1] ), 
    .C1(\keyboard.n812 ), .A1(KB_IN_c_1), .D0(\state[0] ), 
    .C0(\keyboard.counter[0] ), .B0(\state[1] ), .A0(\keyboard.counter[1] ), 
    .F0(\keyboard.n812 ), .F1(\keyboard.actualKey[1][1] ));
  keyboard_SLICE_168 \keyboard.SLICE_168 ( .D1(KB_IN_c_0), 
    .C1(\keyboard.n1709 ), .A1(\keyboard.actualKey[2][0] ), .D0(\state[0] ), 
    .C0(\keyboard.counter[1] ), .B0(\keyboard.counter[0] ), .A0(\state[1] ), 
    .F0(\keyboard.n1709 ), .F1(\keyboard.actualKey[2][0] ));
  SLICE_170 SLICE_170( .D1(\Sreg[0] ), .C1(n334), .B1(timeout_c), 
    .A1(TIMER_EN_N_15), .D0(\state[0] ), .B0(\KEY_STATUS_1__N_253[1] ), 
    .F0(n334), .F1(n1841));
  mainTimer_SLICE_174 \mainTimer.SLICE_174 ( .D1(\mainTimer.clkCont[12] ), 
    .C1(\mainTimer.n2032 ), .A1(\mainTimer.clkCont[10] ), 
    .D0(\mainTimer.clkCont[15] ), .C0(\mainTimer.clkCont[0] ), 
    .B0(\mainTimer.clkCont[8] ), .A0(\mainTimer.clkCont[14] ), 
    .F0(\mainTimer.n2032 ), .F1(\mainTimer.n17 ));
  mainTimer_SLICE_176 \mainTimer.SLICE_176 ( .D0(\mainTimer.clkCont[7] ), 
    .C0(\mainTimer.clkCont[17] ), .B0(\mainTimer.clkCont[13] ), .A0(timeout_c), 
    .F0(\mainTimer.n18 ));
  mainTimer_SLICE_177 \mainTimer.SLICE_177 ( .D1(\mainTimer.clkCont[6] ), 
    .C1(\mainTimer.n19 ), .B1(\mainTimer.n17 ), .A1(\mainTimer.n18 ), 
    .D0(\mainTimer.clkCont[4] ), .C0(\mainTimer.clkCont[11] ), 
    .B0(\mainTimer.clkCont[16] ), .A0(\mainTimer.clkCont[5] ), 
    .F0(\mainTimer.n19 ), .F1(\mainTimer.n7 ));
  STATE_OUT_SLICE_178 \STATE_OUT.SLICE_178 ( .B0(\waiting_N_140[4] ), 
    .A0(\waiting_N_140[13] ), .F0(\STATE_OUT.n32 ));
  STATE_OUT_SLICE_179 \STATE_OUT.SLICE_179 ( .D1(\STATE_OUT.n32 ), 
    .C1(\STATE_OUT.n46 ), .B1(\waiting_N_140[3] ), .A1(\waiting_N_140[29] ), 
    .D0(\waiting_N_140[25] ), .C0(\waiting_N_140[17] ), 
    .B0(\waiting_N_140[20] ), .A0(\waiting_N_140[19] ), .F0(\STATE_OUT.n46 ), 
    .F1(\STATE_OUT.n52 ));
  STATE_OUT_SLICE_180 \STATE_OUT.SLICE_180 ( .D1(\STATE_OUT.n49 ), 
    .C1(\STATE_OUT.n50 ), .B1(\STATE_OUT.n47 ), .A1(\STATE_OUT.n48 ), 
    .D0(\waiting_N_140[7] ), .C0(\waiting_N_140[8] ), .B0(\waiting_N_140[30] ), 
    .A0(\waiting_N_140[10] ), .F0(\STATE_OUT.n50 ), .F1(\STATE_OUT.n56 ));
  STATE_OUT_SLICE_182 \STATE_OUT.SLICE_182 ( .D1(\waiting_N_140[22] ), 
    .C1(\STATE_OUT.n30 ), .B1(\waiting_N_140[14] ), .A1(\waiting_N_140[6] ), 
    .B0(\waiting_N_140[5] ), .A0(\waiting_N_140[21] ), .F0(\STATE_OUT.n30 ), 
    .F1(\STATE_OUT.n51 ));
  STATE_OUT_SLICE_184 \STATE_OUT.SLICE_184 ( .C1(waiting_N_139), .A1(waiting), 
    .D0(\STATE_OUT.n52 ), .C0(\STATE_OUT.n56 ), .B0(\waiting_N_140[31] ), 
    .A0(\STATE_OUT.n51 ), .F0(waiting_N_139), .F1(\STATE_OUT.n141_c ));
  STATE_OUT_serial_SLICE_186 \STATE_OUT.serial.SLICE_186 ( 
    .D1(\STATE_OUT.serial.n48 ), .C1(\STATE_OUT.serial.n50 ), 
    .B1(\STATE_OUT.serial.n49 ), .A1(\STATE_OUT.serial.n47 ), .D0(n158), 
    .C0(n156), .B0(n159), .A0(n136), .F0(\STATE_OUT.serial.n50 ), 
    .F1(\STATE_OUT.serial.n56 ));
  STATE_OUT_serial_SLICE_188 \STATE_OUT.serial.SLICE_188 ( .D0(n153), 
    .B0(n162), .F0(\STATE_OUT.serial.n32 ));
  STATE_OUT_serial_SLICE_189 \STATE_OUT.serial.SLICE_189 ( 
    .D1(\STATE_OUT.serial.n32 ), .C1(\STATE_OUT.serial.n46 ), .B1(n163), 
    .A1(n137), .D0(n146), .C0(n141), .B0(n149), .A0(n147), 
    .F0(\STATE_OUT.serial.n46 ), .F1(\STATE_OUT.serial.n52 ));
  STATE_OUT_serial_SLICE_190 \STATE_OUT.serial.SLICE_190 ( .D1(n144), 
    .C1(\STATE_OUT.serial.n44 ), .B1(\STATE_OUT.serial.n52 ), .A1(n152), 
    .D0(n145), .B0(n160), .A0(n161), .F0(\STATE_OUT.serial.n44 ), 
    .F1(\STATE_OUT.serial.n55 ));
  STATE_OUT_serial_SLICE_194 \STATE_OUT.serial.SLICE_194 ( 
    .DI1(\STATE_OUT.serial.status_out_N_252 ), 
    .D1(\STATE_OUT.serial.temp_data_out[0] ), .C1(\STATE_OUT.serial.n2592 ), 
    .B1(\STATE_OUT.serial.temp_data_out[1] ), .A1(\STATE_OUT.serial.j[1] ), 
    .D0(\STATE_OUT.serial.j[1] ), .C0(\STATE_OUT.serial.temp_data_out[3] ), 
    .B0(\STATE_OUT.serial.j[0] ), .A0(\temp_data_out[2] ), 
    .LSR(\STATE_OUT.n118 ), .CLK(SERCLK_OUT_c), .Q1(STATUS_OUT_c), 
    .F0(\STATE_OUT.serial.n2592 ), .F1(\STATE_OUT.serial.status_out_N_252 ));
  STATE_OUT_serial_SLICE_195 \STATE_OUT.serial.SLICE_195 ( .DI1(n570), 
    .D1(init), .C1(\Sreg[0] ), .B1(\temp_data_out[2] ), .A1(\Sreg[1] ), 
    .C0(init), .B0(\Sreg[0] ), .CLK(SERCLK_OUT_c), .Q1(\temp_data_out[2] ), 
    .F0(\STATE_OUT.serial.n446 ), .F1(n570));
  STATE_OUT_SLICE_196 \STATE_OUT.SLICE_196 ( .D0(\STATE_OUT.cont[0] ), 
    .C0(\STATE_OUT.cont[3] ), .B0(\STATE_OUT.cont[2] ), 
    .A0(\STATE_OUT.cont[1] ), .F0(\STATE_OUT.n2217 ));
  STATE_OUT_SLICE_197 \STATE_OUT.SLICE_197 ( .DI1(\STATE_OUT.n1735 ), 
    .D1(waiting), .C1(waiting_N_139), .A1(\STATE_OUT.n2217 ), .A0(waiting), 
    .CLK(SERCLK_OUT_c), .Q1(waiting), .F0(\STATE_OUT.waiting_N_135 ), 
    .F1(\STATE_OUT.n1735 ));
  STATE_OUT_serial_SLICE_198 \STATE_OUT.serial.SLICE_198 ( .D1(n154), 
    .C1(n150), .B1(n155), .A1(n151), .D0(n164), .C0(n139), .B0(n157), 
    .A0(n138), .F0(\STATE_OUT.serial.n47 ), .F1(\STATE_OUT.serial.n48 ));
  STATE_OUT_serial_SLICE_199 \STATE_OUT.serial.SLICE_199 ( .D0(n143), 
    .C0(n148), .B0(n142), .A0(n140), .F0(\STATE_OUT.serial.n49 ));
  STATE_OUT_serial_SLICE_201 \STATE_OUT.serial.SLICE_201 ( 
    .D0(\STATE_OUT.serial.n55 ), .C0(\STATE_OUT.serial.n56 ), .B0(n135), 
    .A0(init), .F0(n119));
  STATE_OUT_SLICE_202 \STATE_OUT.SLICE_202 ( .D1(\waiting_N_140[16] ), 
    .C1(\waiting_N_140[12] ), .B1(\waiting_N_140[15] ), 
    .A1(\waiting_N_140[11] ), .D0(\waiting_N_140[28] ), 
    .C0(\waiting_N_140[27] ), .B0(\waiting_N_140[9] ), .A0(\waiting_N_140[2] ), 
    .F0(\STATE_OUT.n47 ), .F1(\STATE_OUT.n48 ));
  STATE_OUT_SLICE_203 \STATE_OUT.SLICE_203 ( .D0(\waiting_N_140[24] ), 
    .C0(\waiting_N_140[18] ), .B0(\waiting_N_140[26] ), 
    .A0(\waiting_N_140[23] ), .F0(\STATE_OUT.n49 ));
  SLICE_204 SLICE_204( .F0(VCC_net));
  keyboard_SLICE_206 \keyboard.SLICE_206 ( .C0(\keyboard.actualKey[1][0] ), 
    .B0(\keyboard.n812 ), .A0(KB_IN_c_0), .F0(\keyboard.actualKey[1][0] ));
  mainTimer_SLICE_209 \mainTimer.SLICE_209 ( .DI1(\mainTimer.n2774 ), 
    .D1(\mainTimer.clkCont[9] ), .C1(\mainTimer.n8 ), .B1(\mainTimer.n7 ), 
    .A1(\mainTimer.clkCont[3] ), .D0(\mainTimer.clkCont[2] ), 
    .A0(\mainTimer.clkCont[1] ), .LSR(\mainTimer.clkCont_17__N_37 ), 
    .CLK(SERCLK_OUT_c), .Q1(timeout_c), .F0(\mainTimer.n8 ), 
    .F1(\mainTimer.n2774 ));
  SLICE_210 SLICE_210( .D0(\PREV_KEY[1] ), .C0(\PREV_KEY[0] ), .F0(n3));
  STATE_OUT_SLICE_213 \STATE_OUT.SLICE_213 ( 
    .DI1(\STATE_OUT.waiting_N_135$n4 ), .C1(waiting), .A0(init), 
    .CLK(SERCLK_OUT_c), .Q1(init), .F0(\STATE_OUT.n118 ), 
    .F1(\STATE_OUT.waiting_N_135$n4 ));
  OSCInst1 OSCInst1( .CLKLFPU(VCC_net), .CLKLFEN(VCC_net), 
    .CLKLF(SERCLK_OUT_c));
  STATE_OUT_serial_status_send \STATE_OUT.serial.status_send ( .DO0(init), 
    .OUTCLK(SERCLK_OUT_c), .PADDO(STATUS_SEND_c));
  STATUS_SEND STATUS_SEND_I( .PADDO(STATUS_SEND_c), .STATUS_SEND(STATUS_SEND));
  STATUS_OUT STATUS_OUT_I( .PADDO(STATUS_OUT_c), .STATUS_OUT(STATUS_OUT));
  SIREN_OUT SIREN_OUT_I( .PADDO(SIREN_OUT_c), .SIREN_OUT(SIREN_OUT));
  SERCLK_OUT SERCLK_OUT_I( .PADDO(SERCLK_OUT_c), .SERCLK_OUT(SERCLK_OUT));
  KEY_STATUS_1_ \KEY_STATUS[1]_I ( .PADDO(KEY_STATUS_c_1), 
    .KEYSTATUS1(KEY_STATUS[1]));
  KEY_STATUS_0_ \KEY_STATUS[0]_I ( .PADDO(TIMER_EN_N_15), 
    .KEYSTATUS0(KEY_STATUS[0]));
  debug_1_ \debug[1]_I ( .PADDO(debug_c_1), .debug1(debug[1]));
  debug_0_ \debug[0]_I ( .PADDO(debug_c_0), .debug0(debug[0]));
  timeout timeout_I( .PADDO(timeout_c), .timeout(timeout));
  SENSOR1_IN SENSOR1_IN_I( .PADDI(SENSOR1_IN_c), .SENSOR1_IN(SENSOR1_IN));
  SENSOR2_IN SENSOR2_IN_I( .PADDI(SENSOR2_IN_c), .SENSOR2_IN(SENSOR2_IN));
  KB_IN_1_ \KB_IN[1]_I ( .PADDI(KB_IN_c_1), .KBIN1(KB_IN[1]));
  KB_IN_0_ \KB_IN[0]_I ( .PADDI(KB_IN_c_0), .KBIN0(KB_IN[0]));
  KB_RECV KB_RECV_I( .PADDI(KB_RECV_c), .KB_RECV(KB_RECV));
  RESET_IN RESET_IN_I( .PADDI(RESET_IN_c), .RESET_IN(RESET_IN));
endmodule

module mainTimer_SLICE_0 ( input D1, D0, B0, CIN0, CIN1, output F0, COUT0 );
  wire   GNDI;

  fa2 \mainTimer/add_7_add_5_19 ( .A0(GNDI), .B0(B0), .C0(GNDI), .D0(D0), 
    .A1(GNDI), .B1(GNDI), .C1(GNDI), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(), .CO0(COUT0), .CO1());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
  endspecify

endmodule

module fa2 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI0, CI1, output S0, S1, 
    CO0, CO1 );

  FA2 inst1( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .CI0(CI0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .CI1(CI1), .CO0(CO0), .CO1(CO1), .S0(S0), .S1(S1));
  defparam inst1.INIT0 = "0xc33c";
  defparam inst1.INIT1 = "0xc33c";
endmodule

module gnd ( output PWR0 );

  VLO INST1( .Z(PWR0));
endmodule

module mainTimer_SLICE_1 ( input D1, B1, D0, B0, CIN0, CIN1, output F0, F1, 
    COUT1, COUT0 );
  wire   GNDI;

  fa2 \mainTimer/add_7_add_5_17 ( .A0(GNDI), .B0(B0), .C0(GNDI), .D0(D0), 
    .A1(GNDI), .B1(B1), .C1(GNDI), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module mainTimer_SLICE_2 ( input D1, B1, D0, B0, CIN0, CIN1, output F0, F1, 
    COUT1, COUT0 );
  wire   GNDI;

  fa2 \mainTimer/add_7_add_5_15 ( .A0(GNDI), .B0(B0), .C0(GNDI), .D0(D0), 
    .A1(GNDI), .B1(B1), .C1(GNDI), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module mainTimer_SLICE_3 ( input D1, B1, D0, B0, CIN0, CIN1, output F0, F1, 
    COUT1, COUT0 );
  wire   GNDI;

  fa2 \mainTimer/add_7_add_5_13 ( .A0(GNDI), .B0(B0), .C0(GNDI), .D0(D0), 
    .A1(GNDI), .B1(B1), .C1(GNDI), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module mainTimer_SLICE_4 ( input D1, B1, D0, B0, CIN0, CIN1, output F0, F1, 
    COUT1, COUT0 );
  wire   GNDI;

  fa2 \mainTimer/add_7_add_5_11 ( .A0(GNDI), .B0(B0), .C0(GNDI), .D0(D0), 
    .A1(GNDI), .B1(B1), .C1(GNDI), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module mainTimer_SLICE_5 ( input D1, B1, D0, B0, CIN0, CIN1, output F0, F1, 
    COUT1, COUT0 );
  wire   GNDI;

  fa2 \mainTimer/add_7_add_5_9 ( .A0(GNDI), .B0(B0), .C0(GNDI), .D0(D0), 
    .A1(GNDI), .B1(B1), .C1(GNDI), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module mainTimer_SLICE_6 ( input D1, B1, D0, B0, CIN0, CIN1, output F0, F1, 
    COUT1, COUT0 );
  wire   GNDI;

  fa2 \mainTimer/add_7_add_5_7 ( .A0(GNDI), .B0(B0), .C0(GNDI), .D0(D0), 
    .A1(GNDI), .B1(B1), .C1(GNDI), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module mainTimer_SLICE_7 ( input D1, B1, D0, B0, CIN0, CIN1, output F0, F1, 
    COUT1, COUT0 );
  wire   GNDI;

  fa2 \mainTimer/add_7_add_5_5 ( .A0(GNDI), .B0(B0), .C0(GNDI), .D0(D0), 
    .A1(GNDI), .B1(B1), .C1(GNDI), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module mainTimer_SLICE_8 ( input D1, B1, D0, B0, CIN0, CIN1, output F0, F1, 
    COUT1, COUT0 );
  wire   GNDI;

  fa2 \mainTimer/add_7_add_5_3 ( .A0(GNDI), .B0(B0), .C0(GNDI), .D0(D0), 
    .A1(GNDI), .B1(B1), .C1(GNDI), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module mainTimer_SLICE_9 ( input D1, C1, B1, CIN1, output F1, COUT1, COUT0 );
  wire   GNDI, VCCI;

  fa2 \mainTimer/add_7_add_5_1 ( .A0(GNDI), .B0(GNDI), .C0(GNDI), .D0(VCCI), 
    .A1(GNDI), .B1(B1), .C1(C1), .D1(D1), .CI0(VCCI), .CI1(CIN1), .S0(), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module vcc ( output PWR1 );

  VHI INST1( .Z(PWR1));
endmodule

module STATE_OUT_SLICE_10 ( input D1, B1, D0, B0, CIN0, CIN1, output F0, F1, 
    COUT1, COUT0 );
  wire   GNDI;

  fa2 \STATE_OUT/add_7_add_5_5 ( .A0(GNDI), .B0(B0), .C0(GNDI), .D0(D0), 
    .A1(GNDI), .B1(B1), .C1(GNDI), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module STATE_OUT_SLICE_11 ( input DI0, D1, B1, D0, B0, CE, LSR, CLK, CIN0, 
    CIN1, output Q0, F0, F1, COUT1, COUT0 );
  wire   GNDI, DI0_dly, CLK_dly, CE_dly, LSR_dly;

  fa2 \STATE_OUT/add_7_add_5_3 ( .A0(GNDI), .B0(B0), .C0(GNDI), .D0(D0), 
    .A1(GNDI), .B1(B1), .C1(GNDI), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \STATE_OUT/j__i1 ( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module ffsre2 ( input D0, SP, CK, LSR, output Q );

  FD1P3XZ INST01( .D(D0), .SP(SP), .CK(CK), .SR(LSR), .Q(Q));
  defparam INST01.REGSET = "RESET";
  defparam INST01.SRMODE = "CE_OVER_LSR";
endmodule

module STATE_OUT_SLICE_12 ( input DI1, D1, C1, B1, CE, LSR, CLK, CIN1, output 
    Q1, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, CE_dly, LSR_dly;

  fa2 \STATE_OUT/add_7_add_5_1 ( .A0(GNDI), .B0(GNDI), .C0(GNDI), .D0(VCCI), 
    .A1(GNDI), .B1(B1), .C1(C1), .D1(D1), .CI0(VCCI), .CI1(CIN1), .S0(), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \STATE_OUT/j__i0 ( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module STATE_OUT_SLICE_13 ( input D1, B1, D0, B0, CIN0, CIN1, output F0, F1, 
    COUT1, COUT0 );
  wire   GNDI;

  fa2 \STATE_OUT/add_7_add_5_13 ( .A0(GNDI), .B0(B0), .C0(GNDI), .D0(D0), 
    .A1(GNDI), .B1(B1), .C1(GNDI), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module STATE_OUT_SLICE_14 ( input D1, B1, D0, B0, CIN0, CIN1, output F0, F1, 
    COUT1, COUT0 );
  wire   GNDI;

  fa2 \STATE_OUT/add_7_add_5_11 ( .A0(GNDI), .B0(B0), .C0(GNDI), .D0(D0), 
    .A1(GNDI), .B1(B1), .C1(GNDI), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module STATE_OUT_SLICE_15 ( input D1, B1, D0, B0, CIN0, CIN1, output F0, F1, 
    COUT1, COUT0 );
  wire   GNDI;

  fa2 \STATE_OUT/add_7_add_5_9 ( .A0(GNDI), .B0(B0), .C0(GNDI), .D0(D0), 
    .A1(GNDI), .B1(B1), .C1(GNDI), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module STATE_OUT_SLICE_16 ( input D1, B1, D0, B0, CIN0, CIN1, output F0, F1, 
    COUT1, COUT0 );
  wire   GNDI;

  fa2 \STATE_OUT/add_7_add_5_7 ( .A0(GNDI), .B0(B0), .C0(GNDI), .D0(D0), 
    .A1(GNDI), .B1(B1), .C1(GNDI), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module STATE_OUT_SLICE_17 ( input D1, D0, B0, CIN0, CIN1, output F0, COUT0 );
  wire   GNDI;

  fa2 \STATE_OUT/add_7_add_5_33 ( .A0(GNDI), .B0(B0), .C0(GNDI), .D0(D0), 
    .A1(GNDI), .B1(GNDI), .C1(GNDI), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(), .CO0(COUT0), .CO1());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
  endspecify

endmodule

module STATE_OUT_SLICE_18 ( input D1, B1, D0, B0, CIN0, CIN1, output F0, F1, 
    COUT1, COUT0 );
  wire   GNDI;

  fa2 \STATE_OUT/add_7_add_5_31 ( .A0(GNDI), .B0(B0), .C0(GNDI), .D0(D0), 
    .A1(GNDI), .B1(B1), .C1(GNDI), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module STATE_OUT_SLICE_19 ( input D1, B1, D0, B0, CIN0, CIN1, output F0, F1, 
    COUT1, COUT0 );
  wire   GNDI;

  fa2 \STATE_OUT/add_7_add_5_29 ( .A0(GNDI), .B0(B0), .C0(GNDI), .D0(D0), 
    .A1(GNDI), .B1(B1), .C1(GNDI), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module STATE_OUT_SLICE_20 ( input D1, B1, D0, B0, CIN0, CIN1, output F0, F1, 
    COUT1, COUT0 );
  wire   GNDI;

  fa2 \STATE_OUT/add_7_add_5_27 ( .A0(GNDI), .B0(B0), .C0(GNDI), .D0(D0), 
    .A1(GNDI), .B1(B1), .C1(GNDI), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module STATE_OUT_SLICE_21 ( input D1, B1, D0, B0, CIN0, CIN1, output F0, F1, 
    COUT1, COUT0 );
  wire   GNDI;

  fa2 \STATE_OUT/add_7_add_5_25 ( .A0(GNDI), .B0(B0), .C0(GNDI), .D0(D0), 
    .A1(GNDI), .B1(B1), .C1(GNDI), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module STATE_OUT_SLICE_22 ( input D1, B1, D0, B0, CIN0, CIN1, output F0, F1, 
    COUT1, COUT0 );
  wire   GNDI;

  fa2 \STATE_OUT/add_7_add_5_23 ( .A0(GNDI), .B0(B0), .C0(GNDI), .D0(D0), 
    .A1(GNDI), .B1(B1), .C1(GNDI), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module STATE_OUT_SLICE_23 ( input D1, B1, D0, B0, CIN0, CIN1, output F0, F1, 
    COUT1, COUT0 );
  wire   GNDI;

  fa2 \STATE_OUT/add_7_add_5_21 ( .A0(GNDI), .B0(B0), .C0(GNDI), .D0(D0), 
    .A1(GNDI), .B1(B1), .C1(GNDI), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module STATE_OUT_SLICE_24 ( input D1, B1, D0, B0, CIN0, CIN1, output F0, F1, 
    COUT1, COUT0 );
  wire   GNDI;

  fa2 \STATE_OUT/add_7_add_5_19 ( .A0(GNDI), .B0(B0), .C0(GNDI), .D0(D0), 
    .A1(GNDI), .B1(B1), .C1(GNDI), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module STATE_OUT_SLICE_25 ( input D1, B1, D0, B0, CIN0, CIN1, output F0, F1, 
    COUT1, COUT0 );
  wire   GNDI;

  fa2 \STATE_OUT/add_7_add_5_17 ( .A0(GNDI), .B0(B0), .C0(GNDI), .D0(D0), 
    .A1(GNDI), .B1(B1), .C1(GNDI), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module STATE_OUT_SLICE_26 ( input D1, B1, D0, B0, CIN0, CIN1, output F0, F1, 
    COUT1, COUT0 );
  wire   GNDI;

  fa2 \STATE_OUT/add_7_add_5_15 ( .A0(GNDI), .B0(B0), .C0(GNDI), .D0(D0), 
    .A1(GNDI), .B1(B1), .C1(GNDI), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module STATE_OUT_serial_SLICE_27 ( input D1, B1, D0, B0, CIN0, CIN1, output F0, 
    F1, COUT1, COUT0 );
  wire   GNDI;

  fa2 \STATE_OUT/serial/add_6_add_5_11 ( .A0(GNDI), .B0(B0), .C0(GNDI), 
    .D0(D0), .A1(GNDI), .B1(B1), .C1(GNDI), .D1(D1), .CI0(CIN0), .CI1(CIN1), 
    .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module STATE_OUT_serial_SLICE_28 ( input D1, D0, B0, CIN0, CIN1, output F0, 
    COUT0 );
  wire   GNDI;

  fa2 \STATE_OUT/serial/add_6_add_5_33 ( .A0(GNDI), .B0(B0), .C0(GNDI), 
    .D0(D0), .A1(GNDI), .B1(GNDI), .C1(GNDI), .D1(D1), .CI0(CIN0), .CI1(CIN1), 
    .S0(F0), .S1(), .CO0(COUT0), .CO1());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
  endspecify

endmodule

module STATE_OUT_serial_SLICE_29 ( input D1, B1, D0, B0, CIN0, CIN1, output F0, 
    F1, COUT1, COUT0 );
  wire   GNDI;

  fa2 \STATE_OUT/serial/add_6_add_5_31 ( .A0(GNDI), .B0(B0), .C0(GNDI), 
    .D0(D0), .A1(GNDI), .B1(B1), .C1(GNDI), .D1(D1), .CI0(CIN0), .CI1(CIN1), 
    .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module STATE_OUT_serial_SLICE_30 ( input D1, B1, D0, B0, CIN0, CIN1, output F0, 
    F1, COUT1, COUT0 );
  wire   GNDI;

  fa2 \STATE_OUT/serial/add_6_add_5_29 ( .A0(GNDI), .B0(B0), .C0(GNDI), 
    .D0(D0), .A1(GNDI), .B1(B1), .C1(GNDI), .D1(D1), .CI0(CIN0), .CI1(CIN1), 
    .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module STATE_OUT_serial_SLICE_31 ( input D1, B1, D0, B0, CIN0, CIN1, output F0, 
    F1, COUT1, COUT0 );
  wire   GNDI;

  fa2 \STATE_OUT/serial/add_6_add_5_27 ( .A0(GNDI), .B0(B0), .C0(GNDI), 
    .D0(D0), .A1(GNDI), .B1(B1), .C1(GNDI), .D1(D1), .CI0(CIN0), .CI1(CIN1), 
    .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module STATE_OUT_serial_SLICE_32 ( input D1, B1, D0, B0, CIN0, CIN1, output F0, 
    F1, COUT1, COUT0 );
  wire   GNDI;

  fa2 \STATE_OUT/serial/add_6_add_5_5 ( .A0(GNDI), .B0(B0), .C0(GNDI), .D0(D0), 
    .A1(GNDI), .B1(B1), .C1(GNDI), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module STATE_OUT_serial_SLICE_33 ( input D1, B1, D0, B0, CIN0, CIN1, output F0, 
    F1, COUT1, COUT0 );
  wire   GNDI;

  fa2 \STATE_OUT/serial/add_6_add_5_25 ( .A0(GNDI), .B0(B0), .C0(GNDI), 
    .D0(D0), .A1(GNDI), .B1(B1), .C1(GNDI), .D1(D1), .CI0(CIN0), .CI1(CIN1), 
    .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module STATE_OUT_serial_SLICE_34 ( input DI0, D1, B1, D0, B0, LSR, CLK, CIN0, 
    CIN1, output Q0, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI0_dly, CLK_dly, LSR_dly;

  fa2 \STATE_OUT/serial/add_6_add_5_3 ( .A0(GNDI), .B0(B0), .C0(GNDI), .D0(D0), 
    .A1(GNDI), .B1(B1), .C1(GNDI), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \STATE_OUT/serial/j__i1 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module STATE_OUT_serial_SLICE_35 ( input D1, B1, D0, B0, CIN0, CIN1, output F0, 
    F1, COUT1, COUT0 );
  wire   GNDI;

  fa2 \STATE_OUT/serial/add_6_add_5_15 ( .A0(GNDI), .B0(B0), .C0(GNDI), 
    .D0(D0), .A1(GNDI), .B1(B1), .C1(GNDI), .D1(D1), .CI0(CIN0), .CI1(CIN1), 
    .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module STATE_OUT_serial_SLICE_36 ( input D1, B1, D0, B0, CIN0, CIN1, output F0, 
    F1, COUT1, COUT0 );
  wire   GNDI;

  fa2 \STATE_OUT/serial/add_6_add_5_9 ( .A0(GNDI), .B0(B0), .C0(GNDI), .D0(D0), 
    .A1(GNDI), .B1(B1), .C1(GNDI), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module STATE_OUT_serial_SLICE_37 ( input D1, B1, D0, B0, CIN0, CIN1, output F0, 
    F1, COUT1, COUT0 );
  wire   GNDI;

  fa2 \STATE_OUT/serial/add_6_add_5_23 ( .A0(GNDI), .B0(B0), .C0(GNDI), 
    .D0(D0), .A1(GNDI), .B1(B1), .C1(GNDI), .D1(D1), .CI0(CIN0), .CI1(CIN1), 
    .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module STATE_OUT_serial_SLICE_38 ( input D1, B1, D0, B0, CIN0, CIN1, output F0, 
    F1, COUT1, COUT0 );
  wire   GNDI;

  fa2 \STATE_OUT/serial/add_6_add_5_21 ( .A0(GNDI), .B0(B0), .C0(GNDI), 
    .D0(D0), .A1(GNDI), .B1(B1), .C1(GNDI), .D1(D1), .CI0(CIN0), .CI1(CIN1), 
    .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module STATE_OUT_serial_SLICE_39 ( input D1, B1, D0, B0, CIN0, CIN1, output F0, 
    F1, COUT1, COUT0 );
  wire   GNDI;

  fa2 \STATE_OUT/serial/add_6_add_5_19 ( .A0(GNDI), .B0(B0), .C0(GNDI), 
    .D0(D0), .A1(GNDI), .B1(B1), .C1(GNDI), .D1(D1), .CI0(CIN0), .CI1(CIN1), 
    .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module STATE_OUT_serial_SLICE_40 ( input D1, B1, D0, B0, CIN0, CIN1, output F0, 
    F1, COUT1, COUT0 );
  wire   GNDI;

  fa2 \STATE_OUT/serial/add_6_add_5_13 ( .A0(GNDI), .B0(B0), .C0(GNDI), 
    .D0(D0), .A1(GNDI), .B1(B1), .C1(GNDI), .D1(D1), .CI0(CIN0), .CI1(CIN1), 
    .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module STATE_OUT_serial_SLICE_41 ( input D1, B1, D0, B0, CIN0, CIN1, output F0, 
    F1, COUT1, COUT0 );
  wire   GNDI;

  fa2 \STATE_OUT/serial/add_6_add_5_17 ( .A0(GNDI), .B0(B0), .C0(GNDI), 
    .D0(D0), .A1(GNDI), .B1(B1), .C1(GNDI), .D1(D1), .CI0(CIN0), .CI1(CIN1), 
    .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module STATE_OUT_serial_SLICE_42 ( input DI1, D1, C1, B1, LSR, CLK, CIN1, 
    output Q1, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, LSR_dly;

  fa2 \STATE_OUT/serial/add_6_add_5_1 ( .A0(GNDI), .B0(GNDI), .C0(GNDI), 
    .D0(VCCI), .A1(GNDI), .B1(B1), .C1(C1), .D1(D1), .CI0(VCCI), .CI1(CIN1), 
    .S0(), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \STATE_OUT/serial/j__i0 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module STATE_OUT_serial_SLICE_43 ( input D1, B1, D0, B0, CIN0, CIN1, output F0, 
    F1, COUT1, COUT0 );
  wire   GNDI;

  fa2 \STATE_OUT/serial/add_6_add_5_7 ( .A0(GNDI), .B0(B0), .C0(GNDI), .D0(D0), 
    .A1(GNDI), .B1(B1), .C1(GNDI), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_44 ( input DI1, DI0, D1, C1, B1, A1, D0, C0, B0, A0, LSR, CLK, 
    output Q0, Q1, F0, F1 );
  wire   VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  lut4 SLICE_44_K1( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40001 SLICE_44_K0( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  ffsre20002 Sreg_i1( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), 
    .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre20002 Sreg_i0( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), 
    .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module lut4 ( input A, B, C, D, output Z );

  LUT4 #("0x0D00") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40001 ( input A, B, C, D, output Z );

  LUT4 #("0xD8F0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module ffsre20002 ( input D0, SP, CK, LSR, output Q );

  FD1P3XZ INST01( .D(D0), .SP(SP), .CK(CK), .SR(LSR), .Q(Q));
  defparam INST01.REGSET = "RESET";
  defparam INST01.SRMODE = "ASYNC";
endmodule

module SLICE_46 ( input DI1, DI0, D1, C1, B1, A1, D0, C0, B0, A0, CLK, output 
    Q0, Q1, F0, F1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  lut40003 i333_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40004 i430_3_lut_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  ffsre2 PREV_KEY_i0_i0( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 PREV_KEY_i0_i1( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module lut40003 ( input A, B, C, D, output Z );

  LUT4 #("0xD8DD") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40004 ( input A, B, C, D, output Z );

  LUT4 #("0xCFCA") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module keyboard_SLICE_48 ( input DI1, DI0, D1, C1, B1, A1, D0, A0, CLK, 
    output Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  lut40005 \keyboard.SLICE_48_K1 ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40006 \keyboard.SLICE_48_K0 ( .A(A0), .B(GNDI), .C(GNDI), .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \keyboard/state_i0 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \keyboard/state_i1 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module lut40005 ( input A, B, C, D, output Z );

  LUT4 #("0x0E0C") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40006 ( input A, B, C, D, output Z );

  LUT4 #("0xFFAA") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module keyboard_SLICE_49 ( input DI1, DI0, D1, A1, B0, CLK, output Q0, Q1, F0, 
    F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  lut40007 \keyboard/i1059_2_lut ( .A(A1), .B(GNDI), .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40008 \keyboard/i134_1_lut ( .A(GNDI), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));
  ffsre2 \keyboard/counter_109__i1 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \keyboard/counter_109__i0 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module lut40007 ( input A, B, C, D, output Z );

  LUT4 #("0x55AA") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40008 ( input A, B, C, D, output Z );

  LUT4 #("0x3333") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module mainTimer_SLICE_53 ( input DI1, DI0, C1, B1, B0, A0, LSR, CLK, output 
    Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  lut40009 \mainTimer/i626_2_lut ( .A(GNDI), .B(B1), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40010 \mainTimer/i625_2_lut ( .A(A0), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));
  ffsre20002 \mainTimer/clkCont_i16 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre20002 \mainTimer/clkCont_i17 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module lut40009 ( input A, B, C, D, output Z );

  LUT4 #("0x3030") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40010 ( input A, B, C, D, output Z );

  LUT4 #("0x4444") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module mainTimer_SLICE_55 ( input DI1, DI0, B1, A1, D0, A0, LSR, CLK, output 
    Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  lut40011 \mainTimer/i628_2_lut ( .A(A1), .B(B1), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40012 \mainTimer/i627_2_lut ( .A(A0), .B(GNDI), .C(GNDI), .D(D0), .Z(F0));
  ffsre20002 \mainTimer/clkCont_i14 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre20002 \mainTimer/clkCont_i15 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module lut40011 ( input A, B, C, D, output Z );

  LUT4 #("0x2222") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40012 ( input A, B, C, D, output Z );

  LUT4 #("0x5500") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module mainTimer_SLICE_57 ( input DI1, DI0, D1, B1, C0, A0, LSR, CLK, output 
    Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  lut40013 \mainTimer/i630_2_lut ( .A(GNDI), .B(B1), .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40014 \mainTimer/i629_2_lut ( .A(A0), .B(GNDI), .C(C0), .D(GNDI), .Z(F0));
  ffsre20002 \mainTimer/clkCont_i12 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre20002 \mainTimer/clkCont_i13 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module lut40013 ( input A, B, C, D, output Z );

  LUT4 #("0x3300") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40014 ( input A, B, C, D, output Z );

  LUT4 #("0x0A0A") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module mainTimer_SLICE_59 ( input DI1, DI0, C1, B1, D0, B0, LSR, CLK, output 
    Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  lut40015 \mainTimer/i632_2_lut ( .A(GNDI), .B(B1), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40016 \mainTimer/i631_2_lut ( .A(GNDI), .B(B0), .C(GNDI), .D(D0), .Z(F0));
  ffsre20002 \mainTimer/clkCont_i10 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre20002 \mainTimer/clkCont_i11 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module lut40015 ( input A, B, C, D, output Z );

  LUT4 #("0x0C0C") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40016 ( input A, B, C, D, output Z );

  LUT4 #("0x00CC") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module mainTimer_SLICE_61 ( input DI1, DI0, C1, A1, D0, B0, LSR, CLK, output 
    Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  lut40017 \mainTimer/i634_2_lut ( .A(A1), .B(GNDI), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40018 \mainTimer/i633_2_lut ( .A(GNDI), .B(B0), .C(GNDI), .D(D0), .Z(F0));
  ffsre20002 \mainTimer/clkCont_i8 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre20002 \mainTimer/clkCont_i9 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module lut40017 ( input A, B, C, D, output Z );

  LUT4 #("0x0A0A") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40018 ( input A, B, C, D, output Z );

  LUT4 #("0x3300") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module mainTimer_SLICE_63 ( input DI1, DI0, C1, B1, D0, B0, LSR, CLK, output 
    Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  lut40015 \mainTimer/i624_2_lut ( .A(GNDI), .B(B1), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40016 \mainTimer/i623_2_lut ( .A(GNDI), .B(B0), .C(GNDI), .D(D0), .Z(F0));
  ffsre20002 \mainTimer/clkCont_i6 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre20002 \mainTimer/clkCont_i7 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module mainTimer_SLICE_65 ( input DI1, DI0, C1, A1, C0, B0, LSR, CLK, output 
    Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  lut40017 \mainTimer/i609_2_lut ( .A(A1), .B(GNDI), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40019 \mainTimer/i638_2_lut ( .A(GNDI), .B(B0), .C(C0), .D(GNDI), .Z(F0));
  ffsre20002 \mainTimer/clkCont_i4 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre20002 \mainTimer/clkCont_i5 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module lut40019 ( input A, B, C, D, output Z );

  LUT4 #("0x3030") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module mainTimer_SLICE_67 ( input DI1, DI0, D1, C1, D0, C0, LSR, CLK, output 
    Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  lut40020 \mainTimer/i615_2_lut ( .A(GNDI), .B(GNDI), .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40021 \mainTimer/i613_2_lut ( .A(GNDI), .B(GNDI), .C(C0), .D(D0), .Z(F0));
  ffsre20002 \mainTimer/clkCont_i2 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre20002 \mainTimer/clkCont_i3 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module lut40020 ( input A, B, C, D, output Z );

  LUT4 #("0x00F0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40021 ( input A, B, C, D, output Z );

  LUT4 #("0x0F00") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module mainTimer_SLICE_69 ( input DI1, DI0, B1, A1, D0, B0, LSR, CLK, output 
    Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  lut40022 \mainTimer/i603_2_lut ( .A(A1), .B(B1), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40018 \mainTimer/i616_2_lut ( .A(GNDI), .B(B0), .C(GNDI), .D(D0), .Z(F0));
  ffsre20002 \mainTimer/clkCont_i0 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre20002 \mainTimer/clkCont_i1 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module lut40022 ( input A, B, C, D, output Z );

  LUT4 #("0x4444") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_71 ( input DI1, DI0, D1, C1, B1, A1, D0, C0, B0, A0, CLK, output 
    Q0, Q1, F0, F1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  lut40023 i401_4_lut_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40024 i399_4_lut_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  ffsre2 \STATE_OUT/j__i17 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \STATE_OUT/j__i16 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module lut40023 ( input A, B, C, D, output Z );

  LUT4 #("0x8B88") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40024 ( input A, B, C, D, output Z );

  LUT4 #("0xA0E4") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_72 ( input DI1, DI0, D1, C1, B1, A1, D0, C0, B0, A0, CLK, output 
    Q0, Q1, F0, F1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  lut40025 i415_4_lut_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40026 i417_4_lut_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  ffsre2 \STATE_OUT/j__i24 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \STATE_OUT/j__i25 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module lut40025 ( input A, B, C, D, output Z );

  LUT4 #("0xCC50") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40026 ( input A, B, C, D, output Z );

  LUT4 #("0xB1A0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_76 ( input DI1, DI0, D1, C1, B1, A1, D0, C0, B0, A0, CLK, output 
    Q0, Q1, F0, F1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  lut40027 i405_4_lut_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40028 i403_4_lut_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  ffsre2 \STATE_OUT/j__i19 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \STATE_OUT/j__i18 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module lut40027 ( input A, B, C, D, output Z );

  LUT4 #("0x88D8") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40028 ( input A, B, C, D, output Z );

  LUT4 #("0xCE02") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_78 ( input DI1, DI0, D1, C1, B1, A1, D0, C0, B0, A0, CLK, output 
    Q0, Q1, F0, F1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  lut40029 i409_4_lut_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40030 i407_4_lut_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  ffsre2 \STATE_OUT/j__i21 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \STATE_OUT/j__i20 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module lut40029 ( input A, B, C, D, output Z );

  LUT4 #("0xC0E2") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40030 ( input A, B, C, D, output Z );

  LUT4 #("0xCC50") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_80 ( input DI1, DI0, D1, C1, B1, A1, D0, C0, B0, A0, CLK, output 
    Q0, Q1, F0, F1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  lut40031 i425_4_lut_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40032 i423_4_lut_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  ffsre2 \STATE_OUT/j__i29 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \STATE_OUT/j__i28 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module lut40031 ( input A, B, C, D, output Z );

  LUT4 #("0xD1C0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40032 ( input A, B, C, D, output Z );

  LUT4 #("0x88D8") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_82 ( input DI1, DI0, D1, C1, B1, A1, D0, C0, B0, A0, CLK, output 
    Q0, Q1, F0, F1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  lut40033 i429_4_lut_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40034 i427_4_lut_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  ffsre2 \STATE_OUT/j__i31 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \STATE_OUT/j__i30 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module lut40033 ( input A, B, C, D, output Z );

  LUT4 #("0xAA0C") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40034 ( input A, B, C, D, output Z );

  LUT4 #("0xA0AC") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_83 ( input DI1, DI0, D1, C1, B1, A1, D0, C0, B0, A0, CLK, output 
    Q0, Q1, F0, F1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  lut40035 i413_4_lut_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40036 i411_4_lut_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  ffsre2 \STATE_OUT/j__i23 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \STATE_OUT/j__i22 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module lut40035 ( input A, B, C, D, output Z );

  LUT4 #("0xBA10") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40036 ( input A, B, C, D, output Z );

  LUT4 #("0xCC0A") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module STATE_OUT_SLICE_86 ( input DI1, DI0, D1, B1, C0, LSR, CLK, output Q0, 
    Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  lut40037 \STATE_OUT/i1074_2_lut ( .A(GNDI), .B(B1), .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40038 \STATE_OUT/i1072_1_lut ( .A(GNDI), .B(GNDI), .C(C0), .D(GNDI), 
    .Z(F0));
  ffsre2 \STATE_OUT/cont_108__i1 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \STATE_OUT/cont_108__i0 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module lut40037 ( input A, B, C, D, output Z );

  LUT4 #("0x33CC") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40038 ( input A, B, C, D, output Z );

  LUT4 #("0x0F0F") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_88 ( input DI1, DI0, D1, C1, B1, A1, D0, C0, B0, A0, CLK, output 
    Q0, Q1, F0, F1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  lut40039 i343_4_lut_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40040 i389_4_lut_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  ffsre2 \STATE_OUT/j__i10 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \STATE_OUT/j__i11 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module lut40039 ( input A, B, C, D, output Z );

  LUT4 #("0xC0CA") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40040 ( input A, B, C, D, output Z );

  LUT4 #("0xD1C0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_89 ( input DI1, DI0, D1, C1, B1, A1, D0, C0, B0, A0, CLK, output 
    Q0, Q1, F0, F1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  lut40023 i393_4_lut_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40041 i391_4_lut_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  ffsre2 \STATE_OUT/j__i13 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \STATE_OUT/j__i12 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module lut40041 ( input A, B, C, D, output Z );

  LUT4 #("0xF022") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_90 ( input DI1, DI0, D1, C1, B1, A1, D0, C0, B0, A0, CLK, output 
    Q0, Q1, F0, F1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  lut40042 i332_4_lut_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40043 i330_4_lut_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  ffsre2 \STATE_OUT/j__i8 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \STATE_OUT/j__i9 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module lut40042 ( input A, B, C, D, output Z );

  LUT4 #("0xF404") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40043 ( input A, B, C, D, output Z );

  LUT4 #("0xC0E2") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_92 ( input DI1, DI0, D1, C1, B1, A1, D0, C0, B0, A0, CLK, output 
    Q0, Q1, F0, F1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  lut40044 i337_4_lut_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40045 i335_4_lut_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  ffsre2 \STATE_OUT/j__i6 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \STATE_OUT/j__i7 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module lut40044 ( input A, B, C, D, output Z );

  LUT4 #("0xC5C0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40045 ( input A, B, C, D, output Z );

  LUT4 #("0xA3A0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_94 ( input DI1, DI0, D1, C1, B1, A1, D0, C0, B0, A0, CLK, output 
    Q0, Q1, F0, F1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  lut40046 i341_4_lut_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40045 i339_4_lut_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  ffsre2 \STATE_OUT/j__i4 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \STATE_OUT/j__i5 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module lut40046 ( input A, B, C, D, output Z );

  LUT4 #("0xCE02") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_97 ( input DI1, DI0, D1, C1, B1, A1, D0, C0, B0, A0, CLK, output 
    Q0, Q1, F0, F1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  lut40031 i347_4_lut_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40047 i345_4_lut_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  ffsre2 \STATE_OUT/j__i2 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \STATE_OUT/j__i3 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module lut40047 ( input A, B, C, D, output Z );

  LUT4 #("0x88B8") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_99 ( input DI1, DI0, D1, C1, B1, A1, D0, C0, B0, A0, CLK, output 
    Q0, Q1, F0, F1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  lut40048 i395_4_lut_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40049 i397_4_lut_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  ffsre2 \STATE_OUT/j__i14 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \STATE_OUT/j__i15 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module lut40048 ( input A, B, C, D, output Z );

  LUT4 #("0xB1A0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40049 ( input A, B, C, D, output Z );

  LUT4 #("0xAA0C") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module STATE_OUT_SLICE_103 ( input DI1, DI0, D1, C1, B1, A1, D0, C0, B0, LSR, 
    CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  lut40050 \STATE_OUT/i1088_3_lut_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40051 \STATE_OUT/i1081_2_lut_3_lut ( .A(GNDI), .B(B0), .C(C0), .D(D0), 
    .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \STATE_OUT/cont_108__i3 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \STATE_OUT/cont_108__i2 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module lut40050 ( input A, B, C, D, output Z );

  LUT4 #("0x7F80") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40051 ( input A, B, C, D, output Z );

  LUT4 #("0x3CCC") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_105 ( input DI1, DI0, D1, C1, B1, A1, D0, C0, B0, A0, CLK, 
    output Q0, Q1, F0, F1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  lut40052 i421_4_lut_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40045 i419_4_lut_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  ffsre2 \STATE_OUT/j__i27 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \STATE_OUT/j__i26 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module lut40052 ( input A, B, C, D, output Z );

  LUT4 #("0xF044") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_107 ( input DI1, DI0, B1, A1, D0, B0, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  lut40053 i360_2_lut( .A(A1), .B(B1), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40054 i359_2_lut( .A(GNDI), .B(B0), .C(GNDI), .D(D0), .Z(F0));
  ffsre2 \STATE_OUT/serial/j__i20 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \STATE_OUT/serial/j__i21 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module lut40053 ( input A, B, C, D, output Z );

  LUT4 #("0x4444") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40054 ( input A, B, C, D, output Z );

  LUT4 #("0x00CC") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_108 ( input DI1, DI0, D1, C1, D0, B0, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  lut40055 i357_2_lut( .A(GNDI), .B(GNDI), .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40056 i358_2_lut( .A(GNDI), .B(B0), .C(GNDI), .D(D0), .Z(F0));
  ffsre2 \STATE_OUT/serial/j__i23 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \STATE_OUT/serial/j__i22 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module lut40055 ( input A, B, C, D, output Z );

  LUT4 #("0x0F00") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40056 ( input A, B, C, D, output Z );

  LUT4 #("0x3300") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_109 ( input DI1, DI0, D1, D0, CE, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut40057 SLICE_109_K1( .A(GNDI), .B(GNDI), .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40058 SLICE_109_K0( .A(GNDI), .B(GNDI), .C(GNDI), .D(D0), .Z(F0));
  ffsre2 \STATE_OUT/serial/temp_data_out_i0_i1 ( .D0(DI1_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  ffsre2 \STATE_OUT/serial/temp_data_out_i0_i0 ( .D0(DI0_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module lut40057 ( input A, B, C, D, output Z );

  LUT4 #("0xFF00") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40058 ( input A, B, C, D, output Z );

  LUT4 #("0xFF00") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_111 ( input DI1, DI0, C1, A1, D0, B0, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  lut40059 i355_2_lut( .A(A1), .B(GNDI), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40054 i356_2_lut( .A(GNDI), .B(B0), .C(GNDI), .D(D0), .Z(F0));
  ffsre2 \STATE_OUT/serial/j__i25 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \STATE_OUT/serial/j__i24 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module lut40059 ( input A, B, C, D, output Z );

  LUT4 #("0x5050") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_113 ( input DI1, DI0, C1, B1, D0, C0, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  lut40060 i353_2_lut( .A(GNDI), .B(B1), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40061 i354_2_lut( .A(GNDI), .B(GNDI), .C(C0), .D(D0), .Z(F0));
  ffsre2 \STATE_OUT/serial/j__i27 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \STATE_OUT/serial/j__i26 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module lut40060 ( input A, B, C, D, output Z );

  LUT4 #("0x0C0C") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40061 ( input A, B, C, D, output Z );

  LUT4 #("0x00F0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_115 ( input DI1, DI0, D1, C1, D0, C0, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  lut40055 i351_2_lut( .A(GNDI), .B(GNDI), .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40061 i352_2_lut( .A(GNDI), .B(GNDI), .C(C0), .D(D0), .Z(F0));
  ffsre2 \STATE_OUT/serial/j__i29 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \STATE_OUT/serial/j__i28 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module SLICE_117 ( input DI1, DI0, D1, C1, C0, B0, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  lut40062 i349_2_lut( .A(GNDI), .B(GNDI), .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40063 i350_2_lut( .A(GNDI), .B(B0), .C(C0), .D(GNDI), .Z(F0));
  ffsre2 \STATE_OUT/serial/j__i31 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \STATE_OUT/serial/j__i30 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module lut40062 ( input A, B, C, D, output Z );

  LUT4 #("0xF000") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40063 ( input A, B, C, D, output Z );

  LUT4 #("0x3030") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_121 ( input DI1, DI0, D1, A1, D0, B0, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  lut40064 i377_2_lut( .A(A1), .B(GNDI), .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40056 i378_2_lut( .A(GNDI), .B(B0), .C(GNDI), .D(D0), .Z(F0));
  ffsre2 \STATE_OUT/serial/j__i3 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \STATE_OUT/serial/j__i2 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module lut40064 ( input A, B, C, D, output Z );

  LUT4 #("0x5500") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_123 ( input DI1, DI0, C1, A1, D0, B0, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  lut40059 i375_2_lut( .A(A1), .B(GNDI), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40056 i376_2_lut( .A(GNDI), .B(B0), .C(GNDI), .D(D0), .Z(F0));
  ffsre2 \STATE_OUT/serial/j__i5 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \STATE_OUT/serial/j__i4 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module SLICE_125 ( input DI1, DI0, C1, A1, C0, B0, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  lut40065 i373_2_lut( .A(A1), .B(GNDI), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40063 i374_2_lut( .A(GNDI), .B(B0), .C(C0), .D(GNDI), .Z(F0));
  ffsre2 \STATE_OUT/serial/j__i7 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \STATE_OUT/serial/j__i6 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module lut40065 ( input A, B, C, D, output Z );

  LUT4 #("0x0A0A") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_127 ( input DI1, DI0, C1, A1, D0, B0, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  lut40065 i371_2_lut( .A(A1), .B(GNDI), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40054 i372_2_lut( .A(GNDI), .B(B0), .C(GNDI), .D(D0), .Z(F0));
  ffsre2 \STATE_OUT/serial/j__i9 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \STATE_OUT/serial/j__i8 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module SLICE_129 ( input DI1, DI0, D1, C1, D0, A0, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  lut40055 i369_2_lut( .A(GNDI), .B(GNDI), .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40066 i370_2_lut( .A(A0), .B(GNDI), .C(GNDI), .D(D0), .Z(F0));
  ffsre2 \STATE_OUT/serial/j__i11 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \STATE_OUT/serial/j__i10 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module lut40066 ( input A, B, C, D, output Z );

  LUT4 #("0x00AA") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_131 ( input DI1, DI0, D1, A1, C0, A0, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  lut40067 i367_2_lut( .A(A1), .B(GNDI), .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40068 i368_2_lut( .A(A0), .B(GNDI), .C(C0), .D(GNDI), .Z(F0));
  ffsre2 \STATE_OUT/serial/j__i13 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \STATE_OUT/serial/j__i12 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module lut40067 ( input A, B, C, D, output Z );

  LUT4 #("0x00AA") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40068 ( input A, B, C, D, output Z );

  LUT4 #("0x0A0A") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_133 ( input DI1, DI0, D1, A1, C0, A0, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  lut40067 i365_2_lut( .A(A1), .B(GNDI), .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40069 i366_2_lut( .A(A0), .B(GNDI), .C(C0), .D(GNDI), .Z(F0));
  ffsre2 \STATE_OUT/serial/j__i15 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \STATE_OUT/serial/j__i14 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module lut40069 ( input A, B, C, D, output Z );

  LUT4 #("0x5050") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_135 ( input DI1, DI0, B1, A1, D0, A0, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  lut40053 i363_2_lut( .A(A1), .B(B1), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40066 i364_2_lut( .A(A0), .B(GNDI), .C(GNDI), .D(D0), .Z(F0));
  ffsre2 \STATE_OUT/serial/j__i17 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \STATE_OUT/serial/j__i16 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module SLICE_137 ( input DI1, DI0, D1, A1, B0, A0, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  lut40064 i361_2_lut( .A(A1), .B(GNDI), .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40070 i362_2_lut( .A(A0), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));
  ffsre2 \STATE_OUT/serial/j__i19 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \STATE_OUT/serial/j__i18 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module lut40070 ( input A, B, C, D, output Z );

  LUT4 #("0x2222") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_140 ( input DI0, A0, CE, LSR, CLK, output Q0, F0 );
  wire   GNDI, DI0_dly, CLK_dly, CE_dly, LSR_dly;

  lut40071 SLICE_140_K0( .A(A0), .B(GNDI), .C(GNDI), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre20072 \STATE_OUT/serial/temp_data_out_i0_i3 ( .D0(DI0_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module lut40071 ( input A, B, C, D, output Z );

  LUT4 #("0xAAAA") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module ffsre20072 ( input D0, SP, CK, LSR, output Q );

  FD1P3XZ INST01( .D(D0), .SP(SP), .CK(CK), .SR(LSR), .Q(Q));
  defparam INST01.REGSET = "SET";
  defparam INST01.SRMODE = "CE_OVER_LSR";
endmodule

module keyboard_SLICE_142 ( input D1, C1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40073 \keyboard/i1_2_lut_adj_38 ( .A(GNDI), .B(GNDI), .C(C1), .D(D1), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40074 \keyboard/i12_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40073 ( input A, B, C, D, output Z );

  LUT4 #("0xFFF0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40074 ( input A, B, C, D, output Z );

  LUT4 #("0xBDA8") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_144 ( input D1, C1, B1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40075 i1_2_lut_3_lut( .A(GNDI), .B(B1), .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40076 i1861_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40075 ( input A, B, C, D, output Z );

  LUT4 #("0x0F03") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40076 ( input A, B, C, D, output Z );

  LUT4 #("0x2030") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_145 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40077 i1_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40078 i2_3_lut_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40077 ( input A, B, C, D, output Z );

  LUT4 #("0x00BA") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40078 ( input A, B, C, D, output Z );

  LUT4 #("0x000B") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_146 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40079 n2598_bdd_4_lut_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40080 mux_15_i1_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40079 ( input A, B, C, D, output Z );

  LUT4 #("0xA8B9") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40080 ( input A, B, C, D, output Z );

  LUT4 #("0xA3F3") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_147 ( input D1, B1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40081 i600_2_lut( .A(GNDI), .B(B1), .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40082 \Sreg[0]_bdd_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40081 ( input A, B, C, D, output Z );

  LUT4 #("0xCC00") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40082 ( input A, B, C, D, output Z );

  LUT4 #("0xE4AA") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_148 ( input D1, C1, B1, A1, D0, C0, A0, output F0, F1 );
  wire   GNDI;

  lut40083 i1_3_lut_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40084 i635_2_lut_3_lut( .A(A0), .B(GNDI), .C(C0), .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40083 ( input A, B, C, D, output Z );

  LUT4 #("0x00EF") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40084 ( input A, B, C, D, output Z );

  LUT4 #("0xFAFF") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_149 ( input C1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40085 \mainTimer/EN_I_0_1_lut ( .A(GNDI), .B(GNDI), .C(C1), .D(GNDI), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40086 i681_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40085 ( input A, B, C, D, output Z );

  LUT4 #("0x0F0F") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40086 ( input A, B, C, D, output Z );

  LUT4 #("0xEA2A") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_151 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40087 i457_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40088 i23_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40087 ( input A, B, C, D, output Z );

  LUT4 #("0xACCC") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40088 ( input A, B, C, D, output Z );

  LUT4 #("0x0F80") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module keyboard_SLICE_152 ( input C1, B1, A1, D0, C0, A0, output F0, F1 );
  wire   GNDI;

  lut40089 \keyboard/i481_3_lut ( .A(A1), .B(B1), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40090 \keyboard/i479_3_lut ( .A(A0), .B(GNDI), .C(C0), .D(D0), .Z(F0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40089 ( input A, B, C, D, output Z );

  LUT4 #("0xE4E4") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40090 ( input A, B, C, D, output Z );

  LUT4 #("0xAFA0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module keyboard_SLICE_153 ( input D1, C1, B1, A1, C0, A0, output F0, F1 );
  wire   GNDI;

  lut40091 \keyboard/i4_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40092 \keyboard/i1_2_lut ( .A(A0), .B(GNDI), .C(C0), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40091 ( input A, B, C, D, output Z );

  LUT4 #("0xFFFB") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40092 ( input A, B, C, D, output Z );

  LUT4 #("0xFAFA") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module keyboard_SLICE_155 ( input D1, C1, A1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40093 \keyboard/i467_3_lut ( .A(A1), .B(GNDI), .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40094 \keyboard/i2_3_lut_4_lut_adj_36 ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40093 ( input A, B, C, D, output Z );

  LUT4 #("0xFA0A") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40094 ( input A, B, C, D, output Z );

  LUT4 #("0xFFFB") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module keyboard_SLICE_156 ( input D1, C1, B1, A1, D0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40095 \keyboard/i1599_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40096 \keyboard/i461_3_lut ( .A(A0), .B(B0), .C(GNDI), .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40095 ( input A, B, C, D, output Z );

  LUT4 #("0x8000") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40096 ( input A, B, C, D, output Z );

  LUT4 #("0xBB88") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module keyboard_SLICE_157 ( input C1, B1, A1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40089 \keyboard/i475_3_lut ( .A(A1), .B(B1), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40097 \keyboard/i2_3_lut_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40097 ( input A, B, C, D, output Z );

  LUT4 #("0xFFFB") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module keyboard_SLICE_158 ( input D1, C1, B1, A1, D0, C0, output F0, F1 );
  wire   GNDI;

  lut40098 \keyboard/i469_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40099 \keyboard/i678_2_lut ( .A(GNDI), .B(GNDI), .C(C0), .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40098 ( input A, B, C, D, output Z );

  LUT4 #("0x0F08") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40099 ( input A, B, C, D, output Z );

  LUT4 #("0xFFF0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module keyboard_SLICE_160 ( input D1, C1, B1, A1, C0, A0, output F0, F1 );
  wire   GNDI;

  lut40100 i1741_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40101 \keyboard/i647_2_lut ( .A(A0), .B(GNDI), .C(C0), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40100 ( input A, B, C, D, output Z );

  LUT4 #("0xFECC") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40101 ( input A, B, C, D, output Z );

  LUT4 #("0xF5F5") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module keyboard_SLICE_166 ( input D1, C1, A1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40093 \keyboard/i477_3_lut ( .A(A1), .B(GNDI), .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40102 \keyboard/i668_2_lut_3_lut_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40102 ( input A, B, C, D, output Z );

  LUT4 #("0xFFFE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module keyboard_SLICE_168 ( input D1, C1, A1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40103 \keyboard/i465_3_lut ( .A(A1), .B(GNDI), .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40104 \keyboard/i2_3_lut_4_lut_adj_37 ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40103 ( input A, B, C, D, output Z );

  LUT4 #("0xAFA0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40104 ( input A, B, C, D, output Z );

  LUT4 #("0xFFFB") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_170 ( input D1, C1, B1, A1, D0, B0, output F0, F1 );
  wire   GNDI;

  lut40105 i1_4_lut_adj_39( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40106 i225_2_lut( .A(GNDI), .B(B0), .C(GNDI), .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40105 ( input A, B, C, D, output Z );

  LUT4 #("0x0F01") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40106 ( input A, B, C, D, output Z );

  LUT4 #("0xCCFF") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module mainTimer_SLICE_174 ( input D1, C1, A1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40107 \mainTimer/i6_3_lut ( .A(A1), .B(GNDI), .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40108 \mainTimer/i1597_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40107 ( input A, B, C, D, output Z );

  LUT4 #("0xFFAF") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40108 ( input A, B, C, D, output Z );

  LUT4 #("0x8000") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module mainTimer_SLICE_176 ( input D0, C0, B0, A0, output F0 );

  lut40109 \mainTimer/i7_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40109 ( input A, B, C, D, output Z );

  LUT4 #("0xFFFE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module mainTimer_SLICE_177 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, 
    F1 );

  lut40110 \mainTimer/i1_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40111 \mainTimer/i8_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40110 ( input A, B, C, D, output Z );

  LUT4 #("0x0100") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40111 ( input A, B, C, D, output Z );

  LUT4 #("0xFFFE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module STATE_OUT_SLICE_178 ( input B0, A0, output F0 );
  wire   GNDI;

  lut40112 \STATE_OUT/i3_2_lut ( .A(A0), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40112 ( input A, B, C, D, output Z );

  LUT4 #("0xEEEE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module STATE_OUT_SLICE_179 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, 
    F1 );

  lut40113 \STATE_OUT/i23_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40114 \STATE_OUT/i17_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40113 ( input A, B, C, D, output Z );

  LUT4 #("0xFFFE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40114 ( input A, B, C, D, output Z );

  LUT4 #("0xFFFE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module STATE_OUT_SLICE_180 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, 
    F1 );

  lut40115 \STATE_OUT/i27_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40116 \STATE_OUT/i21_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40115 ( input A, B, C, D, output Z );

  LUT4 #("0xFFFE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40116 ( input A, B, C, D, output Z );

  LUT4 #("0xFFFE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module STATE_OUT_SLICE_182 ( input D1, C1, B1, A1, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40117 \STATE_OUT/i22_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40112 \STATE_OUT/i1_2_lut ( .A(A0), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40117 ( input A, B, C, D, output Z );

  LUT4 #("0xFFFE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module STATE_OUT_SLICE_184 ( input C1, A1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40059 \STATE_OUT/i112_2_lut ( .A(A1), .B(GNDI), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40118 \STATE_OUT/i640_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40118 ( input A, B, C, D, output Z );

  LUT4 #("0x3332") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module STATE_OUT_serial_SLICE_186 ( input D1, C1, B1, A1, D0, C0, B0, A0, 
    output F0, F1 );

  lut40119 \STATE_OUT/serial/i27_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40120 \STATE_OUT/serial/i21_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40119 ( input A, B, C, D, output Z );

  LUT4 #("0xFFFE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40120 ( input A, B, C, D, output Z );

  LUT4 #("0xFFFE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module STATE_OUT_serial_SLICE_188 ( input D0, B0, output F0 );
  wire   GNDI;

  lut40121 \STATE_OUT/serial/i3_2_lut ( .A(GNDI), .B(B0), .C(GNDI), .D(D0), 
    .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40121 ( input A, B, C, D, output Z );

  LUT4 #("0xFFCC") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module STATE_OUT_serial_SLICE_189 ( input D1, C1, B1, A1, D0, C0, B0, A0, 
    output F0, F1 );

  lut40113 \STATE_OUT/serial/i23_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40122 \STATE_OUT/serial/i17_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40122 ( input A, B, C, D, output Z );

  LUT4 #("0xFFFE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module STATE_OUT_serial_SLICE_190 ( input D1, C1, B1, A1, D0, B0, A0, output 
    F0, F1 );
  wire   GNDI;

  lut40123 \STATE_OUT/serial/i26_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40124 \STATE_OUT/serial/i15_3_lut ( .A(A0), .B(B0), .C(GNDI), .D(D0), 
    .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40123 ( input A, B, C, D, output Z );

  LUT4 #("0xFFFE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40124 ( input A, B, C, D, output Z );

  LUT4 #("0xFFEE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module STATE_OUT_serial_SLICE_194 ( input DI1, D1, C1, B1, A1, D0, C0, B0, A0, 
    LSR, CLK, output Q1, F0, F1 );
  wire   VCCI, DI1_dly, CLK_dly, LSR_dly;

  lut40125 \STATE_OUT/serial/n2592_bdd_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40126 \STATE_OUT/serial/j[0]_bdd_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));
  ffsre2 \STATE_OUT/serial/status_out ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module lut40125 ( input A, B, C, D, output Z );

  LUT4 #("0xE5E0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40126 ( input A, B, C, D, output Z );

  LUT4 #("0xE2CC") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module STATE_OUT_serial_SLICE_195 ( input DI1, D1, C1, B1, A1, C0, B0, CLK, 
    output Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly;

  lut40127 i451_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40128 \STATE_OUT/serial/i327_2_lut_2_lut ( .A(GNDI), .B(B0), .C(C0), 
    .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \STATE_OUT/serial/temp_data_out_i0_i2 ( .D0(DI1_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
  endspecify

endmodule

module lut40127 ( input A, B, C, D, output Z );

  LUT4 #("0xCCA0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40128 ( input A, B, C, D, output Z );

  LUT4 #("0x0C0C") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module STATE_OUT_SLICE_196 ( input D0, C0, B0, A0, output F0 );

  lut40129 \STATE_OUT/i1735_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40129 ( input A, B, C, D, output Z );

  LUT4 #("0xFFFD") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module STATE_OUT_SLICE_197 ( input DI1, D1, C1, A1, A0, CLK, output Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly;

  lut40130 \STATE_OUT/i12_3_lut ( .A(A1), .B(GNDI), .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40131 \STATE_OUT/waiting_I_30_1_lut ( .A(A0), .B(GNDI), .C(GNDI), 
    .D(GNDI), .Z(F0));
  ffsre2 \STATE_OUT/waiting_c ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
  endspecify

endmodule

module lut40130 ( input A, B, C, D, output Z );

  LUT4 #("0xAAF0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40131 ( input A, B, C, D, output Z );

  LUT4 #("0x5555") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module STATE_OUT_serial_SLICE_198 ( input D1, C1, B1, A1, D0, C0, B0, A0, 
    output F0, F1 );

  lut40117 \STATE_OUT/serial/i19_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40132 \STATE_OUT/serial/i18_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40132 ( input A, B, C, D, output Z );

  LUT4 #("0xFFFE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module STATE_OUT_serial_SLICE_199 ( input D0, C0, B0, A0, output F0 );

  lut40133 \STATE_OUT/serial/i20_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40133 ( input A, B, C, D, output Z );

  LUT4 #("0xFFFE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module STATE_OUT_serial_SLICE_201 ( input D0, C0, B0, A0, output F0 );

  lut40134 \STATE_OUT.serial.i91_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40134 ( input A, B, C, D, output Z );

  LUT4 #("0x7775") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module STATE_OUT_SLICE_202 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, 
    F1 );

  lut40123 \STATE_OUT/i19_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40102 \STATE_OUT/i18_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module STATE_OUT_SLICE_203 ( input D0, C0, B0, A0, output F0 );

  lut40132 \STATE_OUT/i20_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_204 ( output F0 );
  wire   GNDI;

  lut40135 i2( .A(GNDI), .B(GNDI), .C(GNDI), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
  endspecify

endmodule

module lut40135 ( input A, B, C, D, output Z );

  LUT4 #("0xFFFF") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module keyboard_SLICE_206 ( input C0, B0, A0, output F0 );
  wire   GNDI;

  lut40136 \keyboard/i463_3_lut ( .A(A0), .B(B0), .C(C0), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40136 ( input A, B, C, D, output Z );

  LUT4 #("0xE2E2") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module mainTimer_SLICE_209 ( input DI1, D1, C1, B1, A1, D0, A0, LSR, CLK, 
    output Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, LSR_dly;

  lut40137 \mainTimer/i5_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40138 \mainTimer/i2_2_lut ( .A(A0), .B(GNDI), .C(GNDI), .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre20002 \mainTimer/state ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module lut40137 ( input A, B, C, D, output Z );

  LUT4 #("0x8000") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40138 ( input A, B, C, D, output Z );

  LUT4 #("0xAA00") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_210 ( input D0, C0, output F0 );
  wire   GNDI;

  lut40139 equal_8_i3_2_lut( .A(GNDI), .B(GNDI), .C(C0), .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40139 ( input A, B, C, D, output Z );

  LUT4 #("0xFFF0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module STATE_OUT_SLICE_213 ( input DI1, C1, A0, CLK, output Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly;

  lut40085 \STATE_OUT.SLICE_213_K1 ( .A(GNDI), .B(GNDI), .C(C1), .D(GNDI), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40131 \STATE_OUT/i90_1_lut ( .A(A0), .B(GNDI), .C(GNDI), .D(GNDI), .Z(F0));
  ffsre2 \STATE_OUT/init_c ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
  endspecify

endmodule

module OSCInst1 ( input CLKLFPU, CLKLFEN, output CLKLF );
  wire   GNDI;

  LSOSC_CORE_B OSCInst1( .CLKLFPU(CLKLFPU), .CLKLFEN(CLKLFEN), .TRIM9(GNDI), 
    .TRIM8(GNDI), .TRIM7(GNDI), .TRIM6(GNDI), .TRIM5(GNDI), .TRIM4(GNDI), 
    .TRIM3(GNDI), .TRIM2(GNDI), .TRIM1(GNDI), .TRIM0(GNDI), .CLKLF(CLKLF));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
  endspecify

endmodule

module LSOSC_CORE_B ( input CLKLFPU, CLKLFEN, TRIM9, TRIM8, TRIM7, TRIM6, 
    TRIM5, TRIM4, TRIM3, TRIM2, TRIM1, TRIM0, output CLKLF );

  LSOSC_CORE INST10( .CLKLFPU(CLKLFPU), .CLKLFEN(CLKLFEN), .TRIM9(TRIM9), 
    .TRIM8(TRIM8), .TRIM7(TRIM7), .TRIM6(TRIM6), .TRIM5(TRIM5), .TRIM4(TRIM4), 
    .TRIM3(TRIM3), .TRIM2(TRIM2), .TRIM1(TRIM1), .TRIM0(TRIM0), .CLKLF(CLKLF));
  defparam INST10.FABRIC_TRIME = "DISABLE";
endmodule

module STATE_OUT_serial_status_send ( input DO0, OUTCLK, output PADDO );
  wire   GNDI, VCCI, DO0_dly, OUTCLK_dly;

  IOL_B_B \STATE_OUT/serial/status_send ( .PADDI(GNDI), .DO1(GNDI), 
    .DO0(DO0_dly), .CE(VCCI), .IOLTO(GNDI), .HOLD(GNDI), .INCLK(GNDI), 
    .OUTCLK(OUTCLK_dly), .PADDO(PADDO), .PADDT(), .DI1(), .DI0());
  gnd DRIVEGND( .PWR0(GNDI));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (OUTCLK => PADDO) = (0:0:0,0:0:0);
    $setuphold (posedge OUTCLK, DO0, 0:0:0, 0:0:0,,,, OUTCLK_dly, DO0_dly);
  endspecify

endmodule

module IOL_B_B ( input PADDI, DO1, DO0, CE, IOLTO, HOLD, INCLK, OUTCLK, 
    output PADDO, PADDT, DI1, DI0 );

  IOL_B INST10( .PADDI(PADDI), .DO1(DO1), .DO0(DO0), .CE(CE), .IOLTO(IOLTO), 
    .HOLD(HOLD), .INCLK(INCLK), .OUTCLK(OUTCLK), .PADDO(PADDO), .PADDT(PADDT), 
    .DI1(DI1), .DI0(DI0));
  defparam INST10.LATCHIN = "LATCH_REG";
  defparam INST10.DDROUT = "NO";
endmodule

module STATUS_SEND ( input PADDO, output STATUS_SEND );
  wire   VCCI;

  BB_B_B \STATUS_SEND_pad.bb_inst ( .T_N(VCCI), .I(PADDO), .O(), 
    .B(STATUS_SEND));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (PADDO => STATUS_SEND) = (0:0:0,0:0:0);
  endspecify

endmodule

module BB_B_B ( input T_N, I, output O, inout B );

  BB_B INST10( .T_N(T_N), .I(I), .O(O), .B(B));
endmodule

module STATUS_OUT ( input PADDO, output STATUS_OUT );
  wire   VCCI;

  BB_B_B \STATUS_OUT_pad.bb_inst ( .T_N(VCCI), .I(PADDO), .O(), .B(STATUS_OUT));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (PADDO => STATUS_OUT) = (0:0:0,0:0:0);
  endspecify

endmodule

module SIREN_OUT ( input PADDO, output SIREN_OUT );
  wire   VCCI;

  BB_B_B \SIREN_OUT_pad.bb_inst ( .T_N(VCCI), .I(PADDO), .O(), .B(SIREN_OUT));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (PADDO => SIREN_OUT) = (0:0:0,0:0:0);
  endspecify

endmodule

module SERCLK_OUT ( input PADDO, output SERCLK_OUT );
  wire   VCCI;

  BB_B_B \SERCLK_OUT_pad.bb_inst ( .T_N(VCCI), .I(PADDO), .O(), .B(SERCLK_OUT));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (PADDO => SERCLK_OUT) = (0:0:0,0:0:0);
  endspecify

endmodule

module KEY_STATUS_1_ ( input PADDO, output KEYSTATUS1 );
  wire   VCCI;

  BB_B_B \KEY_STATUS_pad[1].bb_inst ( .T_N(VCCI), .I(PADDO), .O(), 
    .B(KEYSTATUS1));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (PADDO => KEYSTATUS1) = (0:0:0,0:0:0);
  endspecify

endmodule

module KEY_STATUS_0_ ( input PADDO, output KEYSTATUS0 );
  wire   VCCI;

  BB_B_B \KEY_STATUS_pad[0].bb_inst ( .T_N(VCCI), .I(PADDO), .O(), 
    .B(KEYSTATUS0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (PADDO => KEYSTATUS0) = (0:0:0,0:0:0);
  endspecify

endmodule

module debug_1_ ( input PADDO, output debug1 );
  wire   VCCI;

  BB_B_B \debug_pad[1].bb_inst ( .T_N(VCCI), .I(PADDO), .O(), .B(debug1));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (PADDO => debug1) = (0:0:0,0:0:0);
  endspecify

endmodule

module debug_0_ ( input PADDO, output debug0 );
  wire   VCCI;

  BB_B_B \debug_pad[0].bb_inst ( .T_N(VCCI), .I(PADDO), .O(), .B(debug0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (PADDO => debug0) = (0:0:0,0:0:0);
  endspecify

endmodule

module timeout ( input PADDO, output timeout );
  wire   VCCI;

  BB_B_B \timeout_pad.bb_inst ( .T_N(VCCI), .I(PADDO), .O(), .B(timeout));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (PADDO => timeout) = (0:0:0,0:0:0);
  endspecify

endmodule

module SENSOR1_IN ( output PADDI, input SENSOR1_IN );
  wire   GNDI;

  BB_B_B \SENSOR1_IN_pad.bb_inst ( .T_N(GNDI), .I(GNDI), .O(PADDI), 
    .B(SENSOR1_IN));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (SENSOR1_IN => PADDI) = (0:0:0,0:0:0);
  endspecify

endmodule

module SENSOR2_IN ( output PADDI, input SENSOR2_IN );
  wire   GNDI;

  BB_B_B \SENSOR2_IN_pad.bb_inst ( .T_N(GNDI), .I(GNDI), .O(PADDI), 
    .B(SENSOR2_IN));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (SENSOR2_IN => PADDI) = (0:0:0,0:0:0);
  endspecify

endmodule

module KB_IN_1_ ( output PADDI, input KBIN1 );
  wire   GNDI;

  BB_B_B \KB_IN_pad[1].bb_inst ( .T_N(GNDI), .I(GNDI), .O(PADDI), .B(KBIN1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (KBIN1 => PADDI) = (0:0:0,0:0:0);
  endspecify

endmodule

module KB_IN_0_ ( output PADDI, input KBIN0 );
  wire   GNDI;

  BB_B_B \KB_IN_pad[0].bb_inst ( .T_N(GNDI), .I(GNDI), .O(PADDI), .B(KBIN0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (KBIN0 => PADDI) = (0:0:0,0:0:0);
  endspecify

endmodule

module KB_RECV ( output PADDI, input KB_RECV );
  wire   GNDI;

  BB_B_B \KB_RECV_pad.bb_inst ( .T_N(GNDI), .I(GNDI), .O(PADDI), .B(KB_RECV));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (KB_RECV => PADDI) = (0:0:0,0:0:0);
  endspecify

endmodule

module RESET_IN ( output PADDI, input RESET_IN );
  wire   GNDI;

  BB_B_B \RESET_IN_pad.bb_inst ( .T_N(GNDI), .I(GNDI), .O(PADDI), .B(RESET_IN));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (RESET_IN => PADDI) = (0:0:0,0:0:0);
  endspecify

endmodule

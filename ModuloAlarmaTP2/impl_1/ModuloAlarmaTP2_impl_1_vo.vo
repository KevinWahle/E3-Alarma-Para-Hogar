
// Verilog netlist produced by program backanno, Version Radiant Software (64-bit) 3.0.0.24.1

// backanno -o ModuloAlarmaTP2_impl_1_vo.vo -sp High-Performance_1.2V -w -neg -gui ModuloAlarmaTP2_impl_1.udb 
// Netlist created on Wed Nov 17 21:36:44 2021
// Netlist written on Wed Nov 17 21:36:49 2021
// Design is for device iCE40UP5K
// Design is for package SG48
// Design is for performance grade High-Performance_1.2V

`timescale 1 ns / 1 ps

module MainModule ( KB_RECV, SIREN_OUT, STATUS_OUT, STATUS_SEND, SERCLK_OUT, 
                    RESET_OUT, Sreg, KEY_STATUS, DEBUG_KEY, SENSOR1_IN, 
                    SENSOR2_IN, KB_IN );
  input  KB_RECV, SENSOR1_IN, SENSOR2_IN;
  input  [1:0] KB_IN;
  output SIREN_OUT, STATUS_OUT, STATUS_SEND, SERCLK_OUT, RESET_OUT;
  output [1:0] Sreg;
  output [1:0] KEY_STATUS;
  output [1:0] DEBUG_KEY;
  wire   \Keyboard.n6480 , \Keyboard.n2708 , \Keyboard.counter[31] , 
         \Keyboard.valid_1__N_201[31] , \Keyboard.n6465 , 
         \Keyboard.counter[30] , \Keyboard.n2706 , \Keyboard.counter[29] , 
         \Keyboard.valid_1__N_201[29] , \Keyboard.valid_1__N_201[30] , 
         \Keyboard.n6450 , \Keyboard.counter[28] , \Keyboard.n2704 , 
         \Keyboard.counter[27] , \Keyboard.valid_1__N_201[27] , 
         \Keyboard.valid_1__N_201[28] , \Keyboard.n6435 , 
         \Keyboard.counter[26] , \Keyboard.n2702 , \Keyboard.counter[25] , 
         \Keyboard.valid_1__N_201[25] , \Keyboard.valid_1__N_201[26] , 
         \Keyboard.n6420 , \Keyboard.counter[24] , \Keyboard.n4967 , 
         \Keyboard.counter[23] , \Keyboard.valid_1__N_201[23] , 
         \Keyboard.valid_1__N_201[24] , \Keyboard.n6405 , 
         \Keyboard.counter[22] , \Keyboard.n5108 , \Keyboard.counter[21] , 
         \Keyboard.valid_1__N_201[21] , \Keyboard.valid_1__N_201[22] , 
         \Keyboard.n6390 , \Keyboard.counter[20] , \Keyboard.n5162 , 
         \Keyboard.counter[19] , \Keyboard.valid_1__N_201[19] , 
         \Keyboard.valid_1__N_201[20] , \Keyboard.n6375 , 
         \Keyboard.counter[18] , \Keyboard.n5036 , \Keyboard.counter[17] , 
         \Keyboard.valid_1__N_201[17] , \Keyboard.valid_1__N_201[18] , 
         \Keyboard.n6360 , \Keyboard.counter[16] , \Keyboard.n5072 , 
         \Keyboard.counter[15] , \Keyboard.valid_1__N_201[15] , 
         \Keyboard.valid_1__N_201[16] , \Keyboard.n6345 , 
         \Keyboard.counter[14] , \Keyboard.n5144 , \Keyboard.counter[13] , 
         \Keyboard.valid_1__N_201[13] , \Keyboard.valid_1__N_201[14] , 
         \Keyboard.n6270 , \Keyboard.counter[4] , \Keyboard.n4946 , 
         \Keyboard.counter[3] , \Keyboard.valid_1__N_201[3] , 
         \Keyboard.valid_1__N_201[4] , \Keyboard.n5180 , \Keyboard.n6300 , 
         \Keyboard.counter[8] , \Keyboard.n5054 , \Keyboard.counter[7] , 
         \Keyboard.valid_1__N_201[7] , \Keyboard.valid_1__N_201[8] , 
         \Keyboard.n5126 , \Keyboard.n6243 , VCC_net, \Keyboard.counter[0] , 
         \Keyboard.valid_1__N_201[0] , \Keyboard.n5198 , \Keyboard.n6255 , 
         \Keyboard.counter[2] , \Keyboard.counter[1] , 
         \Keyboard.valid_1__N_201[1] , \Keyboard.valid_1__N_201[2] , 
         \Keyboard.n6330 , \Keyboard.counter[12] , \Keyboard.n5090 , 
         \Keyboard.counter[11] , \Keyboard.valid_1__N_201[11] , 
         \Keyboard.valid_1__N_201[12] , \Keyboard.n6285 , 
         \Keyboard.counter[6] , \Keyboard.counter[5] , 
         \Keyboard.valid_1__N_201[5] , \Keyboard.valid_1__N_201[6] , 
         \Keyboard.n6315 , \Keyboard.counter[10] , \Keyboard.counter[9] , 
         \Keyboard.valid_1__N_201[9] , \Keyboard.valid_1__N_201[10] , 
         \STATE_OUT.serial.n6636 , \STATE_OUT.serial.n2760 , 
         \STATE_OUT.serial.counter_31__N_121[31] , 
         \STATE_OUT.serial.counter_31__N_153[31] , \STATE_OUT.serial.n6633 , 
         \STATE_OUT.serial.counter_31__N_121[30] , \STATE_OUT.serial.n2758 , 
         \STATE_OUT.serial.counter_31__N_121[29] , 
         \STATE_OUT.serial.counter_31__N_153[29] , 
         \STATE_OUT.serial.counter_31__N_153[30] , \STATE_OUT.serial.n6630 , 
         \STATE_OUT.serial.counter_31__N_121[28] , \STATE_OUT.serial.n2756 , 
         \STATE_OUT.serial.counter_31__N_121[27] , 
         \STATE_OUT.serial.counter_31__N_153[27] , 
         \STATE_OUT.serial.counter_31__N_153[28] , \STATE_OUT.serial.n6627 , 
         \STATE_OUT.serial.counter_31__N_121[26] , \STATE_OUT.serial.n2754 , 
         \STATE_OUT.serial.counter_31__N_121[25] , 
         \STATE_OUT.serial.counter_31__N_153[25] , 
         \STATE_OUT.serial.counter_31__N_153[26] , \STATE_OUT.serial.n6624 , 
         \STATE_OUT.serial.counter_31__N_121[24] , \STATE_OUT.serial.n2752 , 
         \STATE_OUT.serial.counter_31__N_121[23] , 
         \STATE_OUT.serial.counter_31__N_153[23] , 
         \STATE_OUT.serial.counter_31__N_153[24] , \STATE_OUT.serial.n6621 , 
         \STATE_OUT.serial.counter_31__N_121[22] , \STATE_OUT.serial.n2750 , 
         \STATE_OUT.serial.counter_31__N_121[21] , 
         \STATE_OUT.serial.counter_31__N_153[21] , 
         \STATE_OUT.serial.counter_31__N_153[22] , \STATE_OUT.serial.n6618 , 
         \STATE_OUT.serial.counter_31__N_121[20] , \STATE_OUT.serial.n2748 , 
         \STATE_OUT.serial.counter_31__N_121[19] , 
         \STATE_OUT.serial.counter_31__N_153[19] , 
         \STATE_OUT.serial.counter_31__N_153[20] , \STATE_OUT.serial.n6615 , 
         \STATE_OUT.serial.counter_31__N_121[18] , \STATE_OUT.serial.n2746 , 
         \STATE_OUT.serial.counter_31__N_121[17] , 
         \STATE_OUT.serial.counter_31__N_153[17] , 
         \STATE_OUT.serial.counter_31__N_153[18] , \STATE_OUT.serial.n6612 , 
         \STATE_OUT.serial.counter_31__N_121[16] , \STATE_OUT.serial.n2744 , 
         \STATE_OUT.serial.counter_31__N_121[15] , 
         \STATE_OUT.serial.counter_31__N_153[15] , 
         \STATE_OUT.serial.counter_31__N_153[16] , \STATE_OUT.serial.n6609 , 
         \STATE_OUT.serial.counter_31__N_121[14] , \STATE_OUT.serial.n2742 , 
         \STATE_OUT.serial.counter_31__N_121[13] , 
         \STATE_OUT.serial.counter_31__N_153[13] , 
         \STATE_OUT.serial.counter_31__N_153[14] , \STATE_OUT.serial.n6606 , 
         \STATE_OUT.serial.counter_31__N_121[12] , \STATE_OUT.serial.n2740 , 
         \STATE_OUT.serial.counter_31__N_121[11] , 
         \STATE_OUT.serial.counter_31__N_153[11] , 
         \STATE_OUT.serial.counter_31__N_153[12] , \STATE_OUT.serial.n6603 , 
         \STATE_OUT.serial.counter_31__N_121[10] , \STATE_OUT.serial.n2738 , 
         \STATE_OUT.serial.counter_31__N_121[9] , 
         \STATE_OUT.serial.counter_31__N_153[9] , 
         \STATE_OUT.serial.counter_31__N_153[10] , \STATE_OUT.serial.n6600 , 
         \STATE_OUT.serial.counter_31__N_121[8] , \STATE_OUT.serial.n2736 , 
         \STATE_OUT.serial.counter_31__N_121[7] , 
         \STATE_OUT.serial.counter_31__N_153[7] , 
         \STATE_OUT.serial.counter_31__N_153[8] , \STATE_OUT.serial.n6597 , 
         \STATE_OUT.serial.counter_31__N_121[6] , \STATE_OUT.serial.n2734 , 
         \STATE_OUT.serial.counter_31__N_121[5] , 
         \STATE_OUT.serial.counter_31__N_153[5] , 
         \STATE_OUT.serial.counter_31__N_153[6] , \STATE_OUT.serial.n6594 , 
         \STATE_OUT.serial.counter_31__N_121[4] , \STATE_OUT.serial.n2732 , 
         \STATE_OUT.counter_31__N_121[3] , 
         \STATE_OUT.serial.counter_31__N_153[3] , 
         \STATE_OUT.serial.counter_31__N_153[4] , \STATE_OUT.serial.n6591 , 
         \STATE_OUT.counter_31__N_121[2] , \STATE_OUT.serial.n2730 , 
         \STATE_OUT.counter_31__N_121[1] , 
         \STATE_OUT.serial.counter_31__N_183[1] , 
         \STATE_OUT.serial.counter_31__N_153[2] , \STATE_OUT.serial.n6558 , 
         \STATE_OUT.counter_31__N_121[0] , 
         \STATE_OUT.serial.counter_31__N_183[0] , \mainTimer.n6585 , 
         \mainTimer.n2727 , \mainTimer.clkCont[17] , 
         \mainTimer.clkCont_17__N_41[17] , \mainTimer.n6582 , 
         \mainTimer.clkCont[16] , \mainTimer.n2725 , \mainTimer.clkCont[15] , 
         \mainTimer.clkCont_17__N_41[15] , \mainTimer.clkCont_17__N_41[16] , 
         \mainTimer.n6579 , \mainTimer.clkCont[14] , \mainTimer.n2723 , 
         \mainTimer.clkCont[13] , \mainTimer.clkCont_17__N_41[13] , 
         \mainTimer.clkCont_17__N_41[14] , \mainTimer.n6576 , 
         \mainTimer.clkCont[12] , \mainTimer.n2721 , \mainTimer.clkCont[11] , 
         \mainTimer.clkCont_17__N_41[11] , \mainTimer.clkCont_17__N_41[12] , 
         \mainTimer.n6573 , \mainTimer.clkCont[10] , \mainTimer.n2719 , 
         \mainTimer.clkCont[9] , \mainTimer.clkCont_17__N_41[9] , 
         \mainTimer.clkCont_17__N_41[10] , \mainTimer.n6570 , 
         \mainTimer.clkCont[8] , \mainTimer.n2717 , \mainTimer.clkCont[7] , 
         \mainTimer.clkCont_17__N_41[7] , \mainTimer.clkCont_17__N_41[8] , 
         \mainTimer.n6567 , \mainTimer.clkCont[6] , \mainTimer.n2715 , 
         \mainTimer.clkCont[5] , \mainTimer.clkCont_17__N_41[5] , 
         \mainTimer.clkCont_17__N_41[6] , \mainTimer.n6564 , 
         \mainTimer.clkCont[4] , \mainTimer.n2713 , \mainTimer.clkCont[3] , 
         \mainTimer.clkCont_17__N_41[3] , \mainTimer.clkCont_17__N_41[4] , 
         \mainTimer.n6561 , \mainTimer.clkCont[2] , \mainTimer.n2711 , 
         \mainTimer.clkCont[1] , \mainTimer.clkCont_17__N_41[1] , 
         \mainTimer.clkCont_17__N_41[2] , \mainTimer.n6552 , 
         \mainTimer.clkCont[0] , \mainTimer.clkCont_17__N_41[0] , 
         \Keyboard.n469.sig_001.FeedThruLUT , \Keyboard.n469 , \Keyboard.n468 , 
         \Keyboard.actualKey_0__1__N_412 , TIMER_EN_N_19, \Keyboard.n470 , 
         \Keyboard.n513.sig_002.FeedThruLUT , \Keyboard.n513 , \Keyboard.n512 , 
         \Keyboard.counter_31__N_333 , \Keyboard.n514 , 
         \Keyboard.n509.sig_003.FeedThruLUT , \Keyboard.n509 , \Keyboard.n508 , 
         \Keyboard.counter_31__N_336 , \Keyboard.n510 , 
         \Keyboard.n521.sig_004.FeedThruLUT , \Keyboard.n521 , \Keyboard.n520 , 
         \Keyboard.counter_31__N_327 , \Keyboard.n522 , 
         \Keyboard.n505.sig_005.FeedThruLUT , \Keyboard.n505 , \Keyboard.n504 , 
         \Keyboard.counter_31__N_339 , \Keyboard.n506 , 
         \Keyboard.n501.sig_006.FeedThruLUT , \Keyboard.n501 , \Keyboard.n500 , 
         \Keyboard.counter_31__N_342 , \Keyboard.n502 , 
         \Keyboard.n497.sig_007.FeedThruLUT , \Keyboard.n497 , \Keyboard.n496 , 
         \Keyboard.counter_31__N_345 , \Keyboard.n498 , 
         \Keyboard.n493.sig_008.FeedThruLUT , \Keyboard.n493 , \Keyboard.n492 , 
         \Keyboard.actualKey_0__1__N_433 , \Keyboard.n494 , 
         \Keyboard.n489.sig_009.FeedThruLUT , \Keyboard.n489 , \Keyboard.n488 , 
         \Keyboard.actualKey_0__1__N_430 , \Keyboard.n490 , 
         \Keyboard.n473.sig_010.FeedThruLUT , \Keyboard.n473 , \Keyboard.n472 , 
         \Keyboard.actualKey_0__1__N_416 , \Keyboard.n474 , 
         \Keyboard.n429.sig_011.FeedThruLUT , \Keyboard.n429 , \Keyboard.n428 , 
         \Keyboard.counter_31__N_363 , \Keyboard.n430 , 
         \Keyboard.n485.sig_012.FeedThruLUT , \Keyboard.n485 , \Keyboard.n484 , 
         \Keyboard.actualKey_0__1__N_426 , \Keyboard.n486 , 
         \Keyboard.n425.sig_013.FeedThruLUT , \Keyboard.n425 , \Keyboard.n424 , 
         \Keyboard.counter_31__N_360 , \Keyboard.n426 , 
         \Keyboard.n417.sig_014.FeedThruLUT , \Keyboard.n417 , \Keyboard.n416 , 
         \Keyboard.valid_1__N_233 , \Keyboard.n418 , 
         \Keyboard.n421.sig_015.FeedThruLUT , \Keyboard.n421 , \Keyboard.n420 , 
         \Keyboard.counter_31__N_357 , \Keyboard.n422 , 
         \Keyboard.n413.sig_016.FeedThruLUT , \Keyboard.n413 , \Keyboard.n412 , 
         \Keyboard.counter_31__N_393 , \Keyboard.n414 , 
         \Keyboard.n409.sig_017.FeedThruLUT , \Keyboard.n409 , \Keyboard.n408 , 
         \Keyboard.actualKey_0__1__N_437 , \Keyboard.n410 , 
         \Keyboard.n401.sig_018.FeedThruLUT , \Keyboard.n401 , \Keyboard.n400 , 
         \Keyboard.counter_31__N_351 , \Keyboard.n402 , 
         \Keyboard.n481.sig_019.FeedThruLUT , \Keyboard.n481 , \Keyboard.n480 , 
         \Keyboard.actualKey_0__1__N_423 , \Keyboard.n482 , 
         \Keyboard.n477.sig_020.FeedThruLUT , \Keyboard.n477 , \Keyboard.n476 , 
         \Keyboard.actualKey_0__1__N_419 , \Keyboard.n478 , 
         \Keyboard.n461.sig_022.FeedThruLUT , \Keyboard.n461 , \Keyboard.n460 , 
         \Keyboard.counter_31__N_387 , \Keyboard.n462 , 
         \Keyboard.n405.sig_023.FeedThruLUT , \Keyboard.n405 , \Keyboard.n404 , 
         \Keyboard.counter_31__N_354 , \Keyboard.n406 , 
         \Keyboard.n457.sig_024.FeedThruLUT , \Keyboard.n457 , \Keyboard.n456 , 
         \Keyboard.counter_31__N_384 , \Keyboard.n458 , 
         \Keyboard.n453.sig_025.FeedThruLUT , \Keyboard.n453 , \Keyboard.n452 , 
         \Keyboard.counter_31__N_381 , \Keyboard.n454 , 
         \Keyboard.n449.sig_026.FeedThruLUT , \Keyboard.n449 , \Keyboard.n448 , 
         \Keyboard.counter_31__N_378 , \Keyboard.n450 , 
         \Keyboard.n445.sig_027.FeedThruLUT , \Keyboard.n445 , \Keyboard.n444 , 
         \Keyboard.counter_31__N_375 , \Keyboard.n446 , 
         \Keyboard.n397.sig_029.FeedThruLUT , \Keyboard.n397 , \Keyboard.n396 , 
         \Keyboard.counter_31__N_348 , \Keyboard.n398 , 
         \Keyboard.n437.sig_030.FeedThruLUT , \Keyboard.n437 , \Keyboard.n436 , 
         \Keyboard.counter_31__N_369 , \Keyboard.n438 , 
         \Keyboard.n525.sig_031.FeedThruLUT , \Keyboard.n525 , \Keyboard.n524 , 
         \Keyboard.counter_31__N_324 , \Keyboard.n526 , 
         \Keyboard.n537.sig_034.FeedThruLUT , \Keyboard.n537 , \Keyboard.n536 , 
         \Keyboard.counter_31__N_315 , \Keyboard.n538 , 
         \Keyboard.n541.sig_035.FeedThruLUT , \Keyboard.n541 , \Keyboard.n540 , 
         \Keyboard.counter_31__N_312 , \Keyboard.n542 , 
         \Keyboard.n545.sig_036.FeedThruLUT , \Keyboard.n545 , \Keyboard.n544 , 
         \Keyboard.counter_31__N_309 , \Keyboard.n546 , 
         \Keyboard.n549.sig_037.FeedThruLUT , \Keyboard.n549 , \Keyboard.n548 , 
         \Keyboard.counter_31__N_306 , \Keyboard.n550 , 
         \Keyboard.n557.sig_039.FeedThruLUT , \Keyboard.n557 , \Keyboard.n556 , 
         \Keyboard.counter_31__N_300 , \Keyboard.n558 , 
         \Keyboard.n561.sig_040.FeedThruLUT , \Keyboard.n561 , \Keyboard.n560 , 
         \Keyboard.valid_1__N_195 , \Keyboard.n562 , 
         \Keyboard.n474.sig_041.FeedThruLUT , \Keyboard.n566 , 
         \Keyboard.actualKey_0__1__N_398 , \Keyboard.n522.sig_042.FeedThruLUT , 
         \Keyboard.n567 , \Keyboard.counter_31__N_254 , 
         \Keyboard.n438.sig_043.FeedThruLUT , \Keyboard.n568 , 
         \Keyboard.counter_31__N_282 , \Keyboard.n434.sig_044.FeedThruLUT , 
         \Keyboard.n434 , \Keyboard.n569 , \Keyboard.counter_31__N_280 , 
         \Keyboard.n433 , \Keyboard.n518.sig_045.FeedThruLUT , \Keyboard.n518 , 
         \Keyboard.n570 , \Keyboard.counter_31__N_256 , \Keyboard.n517 , 
         \Keyboard.n514.sig_046.FeedThruLUT , \Keyboard.n571 , 
         \Keyboard.counter_31__N_258 , \Keyboard.n506.sig_048.FeedThruLUT , 
         \Keyboard.n573 , \Keyboard.counter_31__N_262 , 
         \Keyboard.n498.sig_050.FeedThruLUT , \Keyboard.n575 , 
         \Keyboard.counter_31__N_266 , \Keyboard.n494.sig_051.FeedThruLUT , 
         \Keyboard.n576 , \Keyboard.actualKey_0__1__N_408 , 
         \Keyboard.n490.sig_052.FeedThruLUT , \Keyboard.n577 , 
         \Keyboard.actualKey_0__1__N_406 , \Keyboard.n486.sig_053.FeedThruLUT , 
         \Keyboard.n578 , \Keyboard.actualKey_0__1__N_404 , 
         \Keyboard.n426.sig_054.FeedThruLUT , \Keyboard.n579 , 
         \Keyboard.counter_31__N_276 , \Keyboard.n418.sig_055.FeedThruLUT , 
         \Keyboard.n580 , \Keyboard.valid_1__N_193 , 
         \Keyboard.n422.sig_056.FeedThruLUT , \Keyboard.n581 , 
         \Keyboard.counter_31__N_274 , \Keyboard.n414.sig_057.FeedThruLUT , 
         \Keyboard.n582 , \Keyboard.counter_31__N_298 , 
         \Keyboard.n430.sig_058.FeedThruLUT , \Keyboard.n583 , 
         \Keyboard.counter_31__N_278 , \Keyboard.n410.sig_059.FeedThruLUT , 
         \Keyboard.n584 , \Keyboard.actualKey_0__1__N_410 , 
         \Keyboard.n470.sig_060.FeedThruLUT , \Keyboard.n585 , 
         \Keyboard.actualKey_0__1__N_396 , \Keyboard.n482.sig_061.FeedThruLUT , 
         \Keyboard.n586 , \Keyboard.actualKey_0__1__N_402 , 
         \Keyboard.n402.sig_062.FeedThruLUT , \Keyboard.n587 , 
         \Keyboard.counter_31__N_270 , \Keyboard.n466.sig_063.FeedThruLUT , 
         \Keyboard.n466 , \Keyboard.n588 , \Keyboard.counter_31__N_296 , 
         \Keyboard.n465 , \Keyboard.n406.sig_068.FeedThruLUT , \Keyboard.n593 , 
         \Keyboard.counter_31__N_272 , \Keyboard.n450.sig_069.FeedThruLUT , 
         \Keyboard.n594 , \Keyboard.counter_31__N_288 , 
         \Keyboard.n446.sig_070.FeedThruLUT , \Keyboard.n595 , 
         \Keyboard.counter_31__N_286 , \Keyboard.n442.sig_071.FeedThruLUT , 
         \Keyboard.n442 , \Keyboard.n596 , \Keyboard.counter_31__N_284 , 
         \Keyboard.n441 , \Keyboard.n398.sig_072.FeedThruLUT , \Keyboard.n597 , 
         \Keyboard.counter_31__N_268 , \Keyboard.n526.sig_073.FeedThruLUT , 
         \Keyboard.n598 , \Keyboard.counter_31__N_252 , 
         \Keyboard.n530.sig_074.FeedThruLUT , \Keyboard.n530 , \Keyboard.n599 , 
         \Keyboard.counter_31__N_250 , \Keyboard.n529 , 
         \Keyboard.n534.sig_075.FeedThruLUT , \Keyboard.n534 , \Keyboard.n600 , 
         \Keyboard.counter_31__N_248 , \Keyboard.n533 , 
         \Keyboard.n538.sig_076.FeedThruLUT , \Keyboard.n601 , 
         \Keyboard.counter_31__N_246 , \Keyboard.n542.sig_077.FeedThruLUT , 
         \Keyboard.n602 , \Keyboard.counter_31__N_244 , 
         \Keyboard.n550.sig_079.FeedThruLUT , \Keyboard.n604 , 
         \Keyboard.counter_31__N_240 , \Keyboard.n554.sig_080.FeedThruLUT , 
         \Keyboard.n554 , \Keyboard.n605 , \Keyboard.counter_31__N_238 , 
         \Keyboard.n553 , \Keyboard.n558.sig_081.FeedThruLUT , \Keyboard.n606 , 
         \Keyboard.counter_31__N_236 , \Keyboard.n517.sig_083.FeedThruLUT , 
         \Keyboard.n516 , \Keyboard.counter_31__N_330 , \Snext[0]$n5 , 
         \Snext[1]$n0 , TIMER_EN_N_11, \Snext_1__N_2[0] , n338, \Snext[0] , n7, 
         n3642, TIME_OUT, SERCLK_OUT_c, Sreg_c_1, Sreg_c_0, \STATE_OUT.n21[1] , 
         \STATE_OUT.n21[0] , \STATE_OUT.cont[1] , \STATE_OUT.waiting , 
         \STATE_OUT.cont[0] , \STATE_OUT.state_send_N_67 , \STATE_OUT.n21[3] , 
         \STATE_OUT.n21[2] , \STATE_OUT.cont[3] , \STATE_OUT.cont[2] , 
         \STATE_OUT.n2660 , \STATE_OUT.serial.counter_31__N_84[1] , 
         \STATE_OUT.serial.counter_31__N_84[0] , \STATE_OUT.init , 
         \STATE_OUT.serial.n63 , \STATE_OUT.counter[0] , 
         \STATE_OUT.counter[1] , \STATE_OUT.serial.aux_3__N_116[0]$n4 , 
         \STATE_OUT.serial.aux_3__N_116[1]$n1 , \STATE_OUT.serial.aux[0] , 
         \STATE_OUT.serial.aux[1] , \STATE_OUT.serial.aux_3__N_116[3]$n3 , 
         \STATE_OUT.serial.aux_3__N_116[2]$n2 , SENSOR2_IN_c, 
         \STATE_OUT.serial.aux[3] , \STATE_OUT.serial.aux[2] , SENSOR1_IN_c, 
         \STATE_OUT.serial.counter_31__N_84[3] , 
         \STATE_OUT.serial.counter_31__N_84[2] , \STATE_OUT.counter[2] , 
         \STATE_OUT.counter[3] , \STATE_OUT.serial.counter_31__N_84[5] , 
         \STATE_OUT.serial.counter_31__N_84[4] , \STATE_OUT.serial.counter[5] , 
         \STATE_OUT.serial.counter[4] , \STATE_OUT.serial.counter_31__N_84[7] , 
         \STATE_OUT.serial.counter_31__N_84[6] , \STATE_OUT.serial.counter[7] , 
         \STATE_OUT.serial.counter[6] , \STATE_OUT.serial.counter_31__N_84[9] , 
         \STATE_OUT.serial.counter_31__N_84[8] , \STATE_OUT.serial.counter[9] , 
         \STATE_OUT.serial.counter[8] , 
         \STATE_OUT.serial.counter_31__N_84[11] , 
         \STATE_OUT.serial.counter_31__N_84[10] , 
         \STATE_OUT.serial.counter[11] , \STATE_OUT.serial.counter[10] , 
         \STATE_OUT.serial.counter_31__N_84[13] , 
         \STATE_OUT.serial.counter_31__N_84[12] , 
         \STATE_OUT.serial.counter[13] , \STATE_OUT.serial.counter[12] , 
         \STATE_OUT.serial.counter_31__N_84[15] , 
         \STATE_OUT.serial.counter_31__N_84[14] , 
         \STATE_OUT.serial.counter[15] , \STATE_OUT.serial.counter[14] , 
         \STATE_OUT.serial.counter_31__N_84[17] , 
         \STATE_OUT.serial.counter_31__N_84[16] , 
         \STATE_OUT.serial.counter[17] , \STATE_OUT.serial.counter[16] , 
         \STATE_OUT.serial.counter_31__N_84[19] , 
         \STATE_OUT.serial.counter_31__N_84[18] , 
         \STATE_OUT.serial.counter[19] , \STATE_OUT.serial.counter[18] , 
         \STATE_OUT.serial.counter_31__N_84[21] , 
         \STATE_OUT.serial.counter_31__N_84[20] , 
         \STATE_OUT.serial.counter[21] , \STATE_OUT.serial.counter[20] , 
         \STATE_OUT.serial.counter_31__N_84[23] , 
         \STATE_OUT.serial.counter_31__N_84[22] , 
         \STATE_OUT.serial.counter[23] , \STATE_OUT.serial.counter[22] , 
         \STATE_OUT.serial.counter_31__N_84[25] , 
         \STATE_OUT.serial.counter_31__N_84[24] , 
         \STATE_OUT.serial.counter[25] , \STATE_OUT.serial.counter[24] , 
         \STATE_OUT.serial.counter_31__N_84[27] , 
         \STATE_OUT.serial.counter_31__N_84[26] , 
         \STATE_OUT.serial.counter[27] , \STATE_OUT.serial.counter[26] , 
         \STATE_OUT.serial.counter_31__N_84[29] , 
         \STATE_OUT.serial.counter_31__N_84[28] , 
         \STATE_OUT.serial.counter[29] , \STATE_OUT.serial.counter[28] , 
         \STATE_OUT.serial.counter_31__N_84[31] , 
         \STATE_OUT.serial.counter_31__N_84[30] , 
         \STATE_OUT.serial.counter[31] , \STATE_OUT.serial.counter[30] , 
         \mainTimer.clkCont_17__N_20[16] , \mainTimer.clkCont_17__N_20[17] , 
         \mainTimer.clkCont_17__N_38 , \mainTimer.clkCont_17__N_20[14] , 
         \mainTimer.clkCont_17__N_20[15] , \mainTimer.clkCont_17__N_20[12] , 
         \mainTimer.clkCont_17__N_20[13] , \mainTimer.clkCont_17__N_20[10] , 
         \mainTimer.clkCont_17__N_20[11] , \mainTimer.clkCont_17__N_20[8] , 
         \mainTimer.clkCont_17__N_20[9] , \mainTimer.clkCont_17__N_20[6] , 
         \mainTimer.clkCont_17__N_20[7] , \mainTimer.clkCont_17__N_20[4] , 
         \mainTimer.clkCont_17__N_20[5] , \mainTimer.clkCont_17__N_20[2] , 
         \mainTimer.clkCont_17__N_20[3] , \mainTimer.clkCont_17__N_20[0] , 
         \mainTimer.clkCont_17__N_20[1] , KEY_STATUS_c_0, \Snext[1] , n62, 
         KEY_STATUS_c_1, \Keyboard.KB_RECV_c , 
         \Keyboard.actualKey_0__1__N_401[0] , DEBUG_KEY_c_0, 
         \Keyboard.n4_adj_444 , DEBUG_KEY_c_1, KB_IN_c_1, 
         \Keyboard.actualKey_0__1__N_421 , \Keyboard.actualKey_0__1__N_401[1] , 
         n4473, \Keyboard.valid_1__N_192[1] , 
         \Keyboard.actualKey_0__1__N_409[0] , \Keyboard.n14 , 
         \Keyboard.actualKey_0__1__N_432 , \Keyboard.n15 , 
         \Keyboard.valid_1__N_192[0] , \Keyboard.n552 , \Keyboard.n532 , 
         \Keyboard.n528 , \Keyboard.n440 , \Keyboard.n4 , 
         \Keyboard.actualKey[0][1] , \Keyboard.actualKey_0__1__N_397[1] , 
         \Keyboard.n464 , \Keyboard.n432 , \Keyboard.actualKey_0__1__N_397[0] , 
         \Keyboard.actualKey_0__1__N_418 , \Keyboard.actualKey[0][0] , 
         KB_IN_c_0, \Keyboard.actualKey_0__1__N_409[1] , 
         \Keyboard.actualKey_0__1__N_405[0] , \Keyboard.actualKey[2][0] , 
         \Keyboard.actualKey_0__1__N_405[1] , \Keyboard.actualKey_0__1__N_414 , 
         TIMER_EN_N_13, TIMER_EN, \Keyboard.actualKey[3][0] , \Keyboard.n55 , 
         \Keyboard.n50 , \Keyboard.n60 , \Keyboard.n49 , 
         \Keyboard.actualKey[2][1] , \Keyboard.actualKey[3][1] , 
         \Keyboard.actualKey_0__1__N_400 , \Keyboard.valid_1__N_191 , 
         \Keyboard.n48 , \Keyboard.n53 , \Keyboard.n54 , \Keyboard.n51 , 
         \Keyboard.n52 , SIREN_OUT_c, \STATE_OUT.serial.n62 , 
         \STATE_OUT.serial.n58 , \STATE_OUT.serial.n49 , 
         \STATE_OUT.serial.n50 , \STATE_OUT.serial.aux_3__N_116[3] , 
         \STATE_OUT.serial.aux_3__N_116[2] , \STATE_OUT.serial.n5369 , 
         \STATE_OUT.serial.n38 , \STATE_OUT.serial.n52 , 
         \STATE_OUT.serial.n56 , \STATE_OUT.serial.n54 , 
         \STATE_OUT.serial.n53 , \STATE_OUT.serial.n55 , \mainTimer.n19 , 
         \mainTimer.n12 , \mainTimer.n4054 , \mainTimer.n18 , 
         \mainTimer.n3641 , \Keyboard.n562.sig_082.FeedThruLUT , 
         \Keyboard.n607 , \Keyboard.counter_31__N_303 , 
         \Keyboard.counter_31__N_242 , \Keyboard.counter_31__N_318 , 
         \Keyboard.counter_31__N_321 , \Keyboard.counter_31__N_372 , 
         \Keyboard.counter_31__N_290 , \Keyboard.counter_31__N_292 , 
         \Keyboard.counter_31__N_294 , \Keyboard.counter_31__N_390 , 
         \Keyboard.counter_31__N_366 , \Keyboard.counter_31__N_260 , 
         \Keyboard.counter_31__N_264 , \STATE_OUT.serial.aux_3__N_116[0] , 
         \STATE_OUT.serial.status_out_N_190 , 
         \STATE_OUT.serial.aux_3__N_116[1] , 
         \STATE_OUT.serial.counter_31__N_185 , STATUS_OUT_c, 
         \Keyboard.n553.sig_038.FeedThruLUT , 
         \Keyboard.n546.sig_078.FeedThruLUT , \Keyboard.n603 , 
         \Keyboard.n533.sig_033.FeedThruLUT , 
         \Keyboard.n529.sig_032.FeedThruLUT , \STATE_OUT.n15 , \Keyboard.n589 , 
         \Keyboard.n462.sig_064.FeedThruLUT , 
         \Keyboard.n433.sig_000.FeedThruLUT , 
         \Keyboard.n510.sig_047.FeedThruLUT , \Keyboard.n572 , 
         \Keyboard.n502.sig_049.FeedThruLUT , \Keyboard.n574 , 
         \Keyboard.n465.sig_021.FeedThruLUT , 
         \Keyboard.n458.sig_065.FeedThruLUT , \Keyboard.n590 , 
         \Keyboard.n454.sig_066.FeedThruLUT , \Keyboard.n591 , 
         \Keyboard.n478.sig_067.FeedThruLUT , \Keyboard.n592 , 
         \Keyboard.n441.sig_028.FeedThruLUT , GND_net, \STATE_OUT.n611 , 
         STATUS_SEND_c, \STATE_OUT.init.sig_084.FeedThruLUT , 
         \STATE_OUT.serial.n388 , \STATE_OUT.n1634 , \mainTimer.n5776 , 
         \mainTimer.n12_adj_443 ;

  Keyboard_SLICE_0 \Keyboard.SLICE_0 ( .D1(\Keyboard.n6480 ), 
    .D0(\Keyboard.n2708 ), .B0(\Keyboard.counter[31] ), 
    .CIN0(\Keyboard.n2708 ), .CIN1(\Keyboard.n6480 ), 
    .F0(\Keyboard.valid_1__N_201[31] ), .COUT0(\Keyboard.n6480 ));
  Keyboard_SLICE_1 \Keyboard.SLICE_1 ( .D1(\Keyboard.n6465 ), 
    .B1(\Keyboard.counter[30] ), .D0(\Keyboard.n2706 ), 
    .B0(\Keyboard.counter[29] ), .CIN0(\Keyboard.n2706 ), 
    .CIN1(\Keyboard.n6465 ), .F0(\Keyboard.valid_1__N_201[29] ), 
    .F1(\Keyboard.valid_1__N_201[30] ), .COUT1(\Keyboard.n2708 ), 
    .COUT0(\Keyboard.n6465 ));
  Keyboard_SLICE_2 \Keyboard.SLICE_2 ( .D1(\Keyboard.n6450 ), 
    .B1(\Keyboard.counter[28] ), .D0(\Keyboard.n2704 ), 
    .B0(\Keyboard.counter[27] ), .CIN0(\Keyboard.n2704 ), 
    .CIN1(\Keyboard.n6450 ), .F0(\Keyboard.valid_1__N_201[27] ), 
    .F1(\Keyboard.valid_1__N_201[28] ), .COUT1(\Keyboard.n2706 ), 
    .COUT0(\Keyboard.n6450 ));
  Keyboard_SLICE_3 \Keyboard.SLICE_3 ( .D1(\Keyboard.n6435 ), 
    .B1(\Keyboard.counter[26] ), .D0(\Keyboard.n2702 ), 
    .B0(\Keyboard.counter[25] ), .CIN0(\Keyboard.n2702 ), 
    .CIN1(\Keyboard.n6435 ), .F0(\Keyboard.valid_1__N_201[25] ), 
    .F1(\Keyboard.valid_1__N_201[26] ), .COUT1(\Keyboard.n2704 ), 
    .COUT0(\Keyboard.n6435 ));
  Keyboard_SLICE_4 \Keyboard.SLICE_4 ( .D1(\Keyboard.n6420 ), 
    .B1(\Keyboard.counter[24] ), .D0(\Keyboard.n4967 ), 
    .B0(\Keyboard.counter[23] ), .CIN0(\Keyboard.n4967 ), 
    .CIN1(\Keyboard.n6420 ), .F0(\Keyboard.valid_1__N_201[23] ), 
    .F1(\Keyboard.valid_1__N_201[24] ), .COUT1(\Keyboard.n2702 ), 
    .COUT0(\Keyboard.n6420 ));
  Keyboard_SLICE_5 \Keyboard.SLICE_5 ( .D1(\Keyboard.n6405 ), 
    .B1(\Keyboard.counter[22] ), .D0(\Keyboard.n5108 ), 
    .B0(\Keyboard.counter[21] ), .CIN0(\Keyboard.n5108 ), 
    .CIN1(\Keyboard.n6405 ), .F0(\Keyboard.valid_1__N_201[21] ), 
    .F1(\Keyboard.valid_1__N_201[22] ), .COUT1(\Keyboard.n4967 ), 
    .COUT0(\Keyboard.n6405 ));
  Keyboard_SLICE_6 \Keyboard.SLICE_6 ( .D1(\Keyboard.n6390 ), 
    .B1(\Keyboard.counter[20] ), .D0(\Keyboard.n5162 ), 
    .B0(\Keyboard.counter[19] ), .CIN0(\Keyboard.n5162 ), 
    .CIN1(\Keyboard.n6390 ), .F0(\Keyboard.valid_1__N_201[19] ), 
    .F1(\Keyboard.valid_1__N_201[20] ), .COUT1(\Keyboard.n5108 ), 
    .COUT0(\Keyboard.n6390 ));
  Keyboard_SLICE_7 \Keyboard.SLICE_7 ( .D1(\Keyboard.n6375 ), 
    .B1(\Keyboard.counter[18] ), .D0(\Keyboard.n5036 ), 
    .B0(\Keyboard.counter[17] ), .CIN0(\Keyboard.n5036 ), 
    .CIN1(\Keyboard.n6375 ), .F0(\Keyboard.valid_1__N_201[17] ), 
    .F1(\Keyboard.valid_1__N_201[18] ), .COUT1(\Keyboard.n5162 ), 
    .COUT0(\Keyboard.n6375 ));
  Keyboard_SLICE_8 \Keyboard.SLICE_8 ( .D1(\Keyboard.n6360 ), 
    .B1(\Keyboard.counter[16] ), .D0(\Keyboard.n5072 ), 
    .B0(\Keyboard.counter[15] ), .CIN0(\Keyboard.n5072 ), 
    .CIN1(\Keyboard.n6360 ), .F0(\Keyboard.valid_1__N_201[15] ), 
    .F1(\Keyboard.valid_1__N_201[16] ), .COUT1(\Keyboard.n5036 ), 
    .COUT0(\Keyboard.n6360 ));
  Keyboard_SLICE_9 \Keyboard.SLICE_9 ( .D1(\Keyboard.n6345 ), 
    .B1(\Keyboard.counter[14] ), .D0(\Keyboard.n5144 ), 
    .B0(\Keyboard.counter[13] ), .CIN0(\Keyboard.n5144 ), 
    .CIN1(\Keyboard.n6345 ), .F0(\Keyboard.valid_1__N_201[13] ), 
    .F1(\Keyboard.valid_1__N_201[14] ), .COUT1(\Keyboard.n5072 ), 
    .COUT0(\Keyboard.n6345 ));
  Keyboard_SLICE_10 \Keyboard.SLICE_10 ( .D1(\Keyboard.n6270 ), 
    .B1(\Keyboard.counter[4] ), .D0(\Keyboard.n4946 ), 
    .B0(\Keyboard.counter[3] ), .CIN0(\Keyboard.n4946 ), 
    .CIN1(\Keyboard.n6270 ), .F0(\Keyboard.valid_1__N_201[3] ), 
    .F1(\Keyboard.valid_1__N_201[4] ), .COUT1(\Keyboard.n5180 ), 
    .COUT0(\Keyboard.n6270 ));
  Keyboard_SLICE_11 \Keyboard.SLICE_11 ( .D1(\Keyboard.n6300 ), 
    .B1(\Keyboard.counter[8] ), .D0(\Keyboard.n5054 ), 
    .B0(\Keyboard.counter[7] ), .CIN0(\Keyboard.n5054 ), 
    .CIN1(\Keyboard.n6300 ), .F0(\Keyboard.valid_1__N_201[7] ), 
    .F1(\Keyboard.valid_1__N_201[8] ), .COUT1(\Keyboard.n5126 ), 
    .COUT0(\Keyboard.n6300 ));
  Keyboard_SLICE_12 \Keyboard.SLICE_12 ( .D1(\Keyboard.n6243 ), .C1(VCC_net), 
    .B1(\Keyboard.counter[0] ), .CIN1(\Keyboard.n6243 ), 
    .F1(\Keyboard.valid_1__N_201[0] ), .COUT1(\Keyboard.n5198 ), 
    .COUT0(\Keyboard.n6243 ));
  Keyboard_SLICE_13 \Keyboard.SLICE_13 ( .D1(\Keyboard.n6255 ), 
    .B1(\Keyboard.counter[2] ), .D0(\Keyboard.n5198 ), 
    .B0(\Keyboard.counter[1] ), .CIN0(\Keyboard.n5198 ), 
    .CIN1(\Keyboard.n6255 ), .F0(\Keyboard.valid_1__N_201[1] ), 
    .F1(\Keyboard.valid_1__N_201[2] ), .COUT1(\Keyboard.n4946 ), 
    .COUT0(\Keyboard.n6255 ));
  Keyboard_SLICE_14 \Keyboard.SLICE_14 ( .D1(\Keyboard.n6330 ), 
    .B1(\Keyboard.counter[12] ), .D0(\Keyboard.n5090 ), 
    .B0(\Keyboard.counter[11] ), .CIN0(\Keyboard.n5090 ), 
    .CIN1(\Keyboard.n6330 ), .F0(\Keyboard.valid_1__N_201[11] ), 
    .F1(\Keyboard.valid_1__N_201[12] ), .COUT1(\Keyboard.n5144 ), 
    .COUT0(\Keyboard.n6330 ));
  Keyboard_SLICE_15 \Keyboard.SLICE_15 ( .D1(\Keyboard.n6285 ), 
    .B1(\Keyboard.counter[6] ), .D0(\Keyboard.n5180 ), 
    .B0(\Keyboard.counter[5] ), .CIN0(\Keyboard.n5180 ), 
    .CIN1(\Keyboard.n6285 ), .F0(\Keyboard.valid_1__N_201[5] ), 
    .F1(\Keyboard.valid_1__N_201[6] ), .COUT1(\Keyboard.n5054 ), 
    .COUT0(\Keyboard.n6285 ));
  Keyboard_SLICE_16 \Keyboard.SLICE_16 ( .D1(\Keyboard.n6315 ), 
    .B1(\Keyboard.counter[10] ), .D0(\Keyboard.n5126 ), 
    .B0(\Keyboard.counter[9] ), .CIN0(\Keyboard.n5126 ), 
    .CIN1(\Keyboard.n6315 ), .F0(\Keyboard.valid_1__N_201[9] ), 
    .F1(\Keyboard.valid_1__N_201[10] ), .COUT1(\Keyboard.n5090 ), 
    .COUT0(\Keyboard.n6315 ));
  STATE_OUT_serial_SLICE_17 \STATE_OUT.serial.SLICE_17 ( 
    .D1(\STATE_OUT.serial.n6636 ), .D0(\STATE_OUT.serial.n2760 ), .C0(VCC_net), 
    .B0(\STATE_OUT.serial.counter_31__N_121[31] ), 
    .CIN0(\STATE_OUT.serial.n2760 ), .CIN1(\STATE_OUT.serial.n6636 ), 
    .F0(\STATE_OUT.serial.counter_31__N_153[31] ), 
    .COUT0(\STATE_OUT.serial.n6636 ));
  STATE_OUT_serial_SLICE_18 \STATE_OUT.serial.SLICE_18 ( 
    .D1(\STATE_OUT.serial.n6633 ), .C1(VCC_net), 
    .B1(\STATE_OUT.serial.counter_31__N_121[30] ), 
    .D0(\STATE_OUT.serial.n2758 ), .C0(VCC_net), 
    .B0(\STATE_OUT.serial.counter_31__N_121[29] ), 
    .CIN0(\STATE_OUT.serial.n2758 ), .CIN1(\STATE_OUT.serial.n6633 ), 
    .F0(\STATE_OUT.serial.counter_31__N_153[29] ), 
    .F1(\STATE_OUT.serial.counter_31__N_153[30] ), 
    .COUT1(\STATE_OUT.serial.n2760 ), .COUT0(\STATE_OUT.serial.n6633 ));
  STATE_OUT_serial_SLICE_19 \STATE_OUT.serial.SLICE_19 ( 
    .D1(\STATE_OUT.serial.n6630 ), .C1(VCC_net), 
    .B1(\STATE_OUT.serial.counter_31__N_121[28] ), 
    .D0(\STATE_OUT.serial.n2756 ), .C0(VCC_net), 
    .B0(\STATE_OUT.serial.counter_31__N_121[27] ), 
    .CIN0(\STATE_OUT.serial.n2756 ), .CIN1(\STATE_OUT.serial.n6630 ), 
    .F0(\STATE_OUT.serial.counter_31__N_153[27] ), 
    .F1(\STATE_OUT.serial.counter_31__N_153[28] ), 
    .COUT1(\STATE_OUT.serial.n2758 ), .COUT0(\STATE_OUT.serial.n6630 ));
  STATE_OUT_serial_SLICE_20 \STATE_OUT.serial.SLICE_20 ( 
    .D1(\STATE_OUT.serial.n6627 ), .C1(VCC_net), 
    .B1(\STATE_OUT.serial.counter_31__N_121[26] ), 
    .D0(\STATE_OUT.serial.n2754 ), .C0(VCC_net), 
    .B0(\STATE_OUT.serial.counter_31__N_121[25] ), 
    .CIN0(\STATE_OUT.serial.n2754 ), .CIN1(\STATE_OUT.serial.n6627 ), 
    .F0(\STATE_OUT.serial.counter_31__N_153[25] ), 
    .F1(\STATE_OUT.serial.counter_31__N_153[26] ), 
    .COUT1(\STATE_OUT.serial.n2756 ), .COUT0(\STATE_OUT.serial.n6627 ));
  STATE_OUT_serial_SLICE_21 \STATE_OUT.serial.SLICE_21 ( 
    .D1(\STATE_OUT.serial.n6624 ), .C1(VCC_net), 
    .B1(\STATE_OUT.serial.counter_31__N_121[24] ), 
    .D0(\STATE_OUT.serial.n2752 ), .C0(VCC_net), 
    .B0(\STATE_OUT.serial.counter_31__N_121[23] ), 
    .CIN0(\STATE_OUT.serial.n2752 ), .CIN1(\STATE_OUT.serial.n6624 ), 
    .F0(\STATE_OUT.serial.counter_31__N_153[23] ), 
    .F1(\STATE_OUT.serial.counter_31__N_153[24] ), 
    .COUT1(\STATE_OUT.serial.n2754 ), .COUT0(\STATE_OUT.serial.n6624 ));
  STATE_OUT_serial_SLICE_22 \STATE_OUT.serial.SLICE_22 ( 
    .D1(\STATE_OUT.serial.n6621 ), .C1(VCC_net), 
    .B1(\STATE_OUT.serial.counter_31__N_121[22] ), 
    .D0(\STATE_OUT.serial.n2750 ), .C0(VCC_net), 
    .B0(\STATE_OUT.serial.counter_31__N_121[21] ), 
    .CIN0(\STATE_OUT.serial.n2750 ), .CIN1(\STATE_OUT.serial.n6621 ), 
    .F0(\STATE_OUT.serial.counter_31__N_153[21] ), 
    .F1(\STATE_OUT.serial.counter_31__N_153[22] ), 
    .COUT1(\STATE_OUT.serial.n2752 ), .COUT0(\STATE_OUT.serial.n6621 ));
  STATE_OUT_serial_SLICE_23 \STATE_OUT.serial.SLICE_23 ( 
    .D1(\STATE_OUT.serial.n6618 ), .C1(VCC_net), 
    .B1(\STATE_OUT.serial.counter_31__N_121[20] ), 
    .D0(\STATE_OUT.serial.n2748 ), .C0(VCC_net), 
    .B0(\STATE_OUT.serial.counter_31__N_121[19] ), 
    .CIN0(\STATE_OUT.serial.n2748 ), .CIN1(\STATE_OUT.serial.n6618 ), 
    .F0(\STATE_OUT.serial.counter_31__N_153[19] ), 
    .F1(\STATE_OUT.serial.counter_31__N_153[20] ), 
    .COUT1(\STATE_OUT.serial.n2750 ), .COUT0(\STATE_OUT.serial.n6618 ));
  STATE_OUT_serial_SLICE_24 \STATE_OUT.serial.SLICE_24 ( 
    .D1(\STATE_OUT.serial.n6615 ), .C1(VCC_net), 
    .B1(\STATE_OUT.serial.counter_31__N_121[18] ), 
    .D0(\STATE_OUT.serial.n2746 ), .C0(VCC_net), 
    .B0(\STATE_OUT.serial.counter_31__N_121[17] ), 
    .CIN0(\STATE_OUT.serial.n2746 ), .CIN1(\STATE_OUT.serial.n6615 ), 
    .F0(\STATE_OUT.serial.counter_31__N_153[17] ), 
    .F1(\STATE_OUT.serial.counter_31__N_153[18] ), 
    .COUT1(\STATE_OUT.serial.n2748 ), .COUT0(\STATE_OUT.serial.n6615 ));
  STATE_OUT_serial_SLICE_25 \STATE_OUT.serial.SLICE_25 ( 
    .D1(\STATE_OUT.serial.n6612 ), .C1(VCC_net), 
    .B1(\STATE_OUT.serial.counter_31__N_121[16] ), 
    .D0(\STATE_OUT.serial.n2744 ), .C0(VCC_net), 
    .B0(\STATE_OUT.serial.counter_31__N_121[15] ), 
    .CIN0(\STATE_OUT.serial.n2744 ), .CIN1(\STATE_OUT.serial.n6612 ), 
    .F0(\STATE_OUT.serial.counter_31__N_153[15] ), 
    .F1(\STATE_OUT.serial.counter_31__N_153[16] ), 
    .COUT1(\STATE_OUT.serial.n2746 ), .COUT0(\STATE_OUT.serial.n6612 ));
  STATE_OUT_serial_SLICE_26 \STATE_OUT.serial.SLICE_26 ( 
    .D1(\STATE_OUT.serial.n6609 ), .C1(VCC_net), 
    .B1(\STATE_OUT.serial.counter_31__N_121[14] ), 
    .D0(\STATE_OUT.serial.n2742 ), .C0(VCC_net), 
    .B0(\STATE_OUT.serial.counter_31__N_121[13] ), 
    .CIN0(\STATE_OUT.serial.n2742 ), .CIN1(\STATE_OUT.serial.n6609 ), 
    .F0(\STATE_OUT.serial.counter_31__N_153[13] ), 
    .F1(\STATE_OUT.serial.counter_31__N_153[14] ), 
    .COUT1(\STATE_OUT.serial.n2744 ), .COUT0(\STATE_OUT.serial.n6609 ));
  STATE_OUT_serial_SLICE_27 \STATE_OUT.serial.SLICE_27 ( 
    .D1(\STATE_OUT.serial.n6606 ), .C1(VCC_net), 
    .B1(\STATE_OUT.serial.counter_31__N_121[12] ), 
    .D0(\STATE_OUT.serial.n2740 ), .C0(VCC_net), 
    .B0(\STATE_OUT.serial.counter_31__N_121[11] ), 
    .CIN0(\STATE_OUT.serial.n2740 ), .CIN1(\STATE_OUT.serial.n6606 ), 
    .F0(\STATE_OUT.serial.counter_31__N_153[11] ), 
    .F1(\STATE_OUT.serial.counter_31__N_153[12] ), 
    .COUT1(\STATE_OUT.serial.n2742 ), .COUT0(\STATE_OUT.serial.n6606 ));
  STATE_OUT_serial_SLICE_28 \STATE_OUT.serial.SLICE_28 ( 
    .D1(\STATE_OUT.serial.n6603 ), .C1(VCC_net), 
    .B1(\STATE_OUT.serial.counter_31__N_121[10] ), 
    .D0(\STATE_OUT.serial.n2738 ), .C0(VCC_net), 
    .B0(\STATE_OUT.serial.counter_31__N_121[9] ), 
    .CIN0(\STATE_OUT.serial.n2738 ), .CIN1(\STATE_OUT.serial.n6603 ), 
    .F0(\STATE_OUT.serial.counter_31__N_153[9] ), 
    .F1(\STATE_OUT.serial.counter_31__N_153[10] ), 
    .COUT1(\STATE_OUT.serial.n2740 ), .COUT0(\STATE_OUT.serial.n6603 ));
  STATE_OUT_serial_SLICE_29 \STATE_OUT.serial.SLICE_29 ( 
    .D1(\STATE_OUT.serial.n6600 ), .C1(VCC_net), 
    .B1(\STATE_OUT.serial.counter_31__N_121[8] ), 
    .D0(\STATE_OUT.serial.n2736 ), .C0(VCC_net), 
    .B0(\STATE_OUT.serial.counter_31__N_121[7] ), 
    .CIN0(\STATE_OUT.serial.n2736 ), .CIN1(\STATE_OUT.serial.n6600 ), 
    .F0(\STATE_OUT.serial.counter_31__N_153[7] ), 
    .F1(\STATE_OUT.serial.counter_31__N_153[8] ), 
    .COUT1(\STATE_OUT.serial.n2738 ), .COUT0(\STATE_OUT.serial.n6600 ));
  STATE_OUT_serial_SLICE_30 \STATE_OUT.serial.SLICE_30 ( 
    .D1(\STATE_OUT.serial.n6597 ), .C1(VCC_net), 
    .B1(\STATE_OUT.serial.counter_31__N_121[6] ), 
    .D0(\STATE_OUT.serial.n2734 ), .C0(VCC_net), 
    .B0(\STATE_OUT.serial.counter_31__N_121[5] ), 
    .CIN0(\STATE_OUT.serial.n2734 ), .CIN1(\STATE_OUT.serial.n6597 ), 
    .F0(\STATE_OUT.serial.counter_31__N_153[5] ), 
    .F1(\STATE_OUT.serial.counter_31__N_153[6] ), 
    .COUT1(\STATE_OUT.serial.n2736 ), .COUT0(\STATE_OUT.serial.n6597 ));
  STATE_OUT_serial_SLICE_31 \STATE_OUT.serial.SLICE_31 ( 
    .D1(\STATE_OUT.serial.n6594 ), .C1(VCC_net), 
    .B1(\STATE_OUT.serial.counter_31__N_121[4] ), 
    .D0(\STATE_OUT.serial.n2732 ), .C0(VCC_net), 
    .B0(\STATE_OUT.counter_31__N_121[3] ), .CIN0(\STATE_OUT.serial.n2732 ), 
    .CIN1(\STATE_OUT.serial.n6594 ), 
    .F0(\STATE_OUT.serial.counter_31__N_153[3] ), 
    .F1(\STATE_OUT.serial.counter_31__N_153[4] ), 
    .COUT1(\STATE_OUT.serial.n2734 ), .COUT0(\STATE_OUT.serial.n6594 ));
  STATE_OUT_serial_SLICE_32 \STATE_OUT.serial.SLICE_32 ( 
    .D1(\STATE_OUT.serial.n6591 ), .C1(VCC_net), 
    .B1(\STATE_OUT.counter_31__N_121[2] ), .D0(\STATE_OUT.serial.n2730 ), 
    .C0(VCC_net), .B0(\STATE_OUT.counter_31__N_121[1] ), 
    .CIN0(\STATE_OUT.serial.n2730 ), .CIN1(\STATE_OUT.serial.n6591 ), 
    .F0(\STATE_OUT.serial.counter_31__N_183[1] ), 
    .F1(\STATE_OUT.serial.counter_31__N_153[2] ), 
    .COUT1(\STATE_OUT.serial.n2732 ), .COUT0(\STATE_OUT.serial.n6591 ));
  STATE_OUT_serial_SLICE_33 \STATE_OUT.serial.SLICE_33 ( 
    .D1(\STATE_OUT.serial.n6558 ), .C1(VCC_net), 
    .B1(\STATE_OUT.counter_31__N_121[0] ), .CIN1(\STATE_OUT.serial.n6558 ), 
    .F1(\STATE_OUT.serial.counter_31__N_183[0] ), 
    .COUT1(\STATE_OUT.serial.n2730 ), .COUT0(\STATE_OUT.serial.n6558 ));
  mainTimer_SLICE_34 \mainTimer.SLICE_34 ( .D1(\mainTimer.n6585 ), 
    .D0(\mainTimer.n2727 ), .B0(\mainTimer.clkCont[17] ), 
    .CIN0(\mainTimer.n2727 ), .CIN1(\mainTimer.n6585 ), 
    .F0(\mainTimer.clkCont_17__N_41[17] ), .COUT0(\mainTimer.n6585 ));
  mainTimer_SLICE_35 \mainTimer.SLICE_35 ( .D1(\mainTimer.n6582 ), 
    .B1(\mainTimer.clkCont[16] ), .D0(\mainTimer.n2725 ), 
    .B0(\mainTimer.clkCont[15] ), .CIN0(\mainTimer.n2725 ), 
    .CIN1(\mainTimer.n6582 ), .F0(\mainTimer.clkCont_17__N_41[15] ), 
    .F1(\mainTimer.clkCont_17__N_41[16] ), .COUT1(\mainTimer.n2727 ), 
    .COUT0(\mainTimer.n6582 ));
  mainTimer_SLICE_36 \mainTimer.SLICE_36 ( .D1(\mainTimer.n6579 ), 
    .B1(\mainTimer.clkCont[14] ), .D0(\mainTimer.n2723 ), 
    .B0(\mainTimer.clkCont[13] ), .CIN0(\mainTimer.n2723 ), 
    .CIN1(\mainTimer.n6579 ), .F0(\mainTimer.clkCont_17__N_41[13] ), 
    .F1(\mainTimer.clkCont_17__N_41[14] ), .COUT1(\mainTimer.n2725 ), 
    .COUT0(\mainTimer.n6579 ));
  mainTimer_SLICE_37 \mainTimer.SLICE_37 ( .D1(\mainTimer.n6576 ), 
    .B1(\mainTimer.clkCont[12] ), .D0(\mainTimer.n2721 ), 
    .B0(\mainTimer.clkCont[11] ), .CIN0(\mainTimer.n2721 ), 
    .CIN1(\mainTimer.n6576 ), .F0(\mainTimer.clkCont_17__N_41[11] ), 
    .F1(\mainTimer.clkCont_17__N_41[12] ), .COUT1(\mainTimer.n2723 ), 
    .COUT0(\mainTimer.n6576 ));
  mainTimer_SLICE_38 \mainTimer.SLICE_38 ( .D1(\mainTimer.n6573 ), 
    .B1(\mainTimer.clkCont[10] ), .D0(\mainTimer.n2719 ), 
    .B0(\mainTimer.clkCont[9] ), .CIN0(\mainTimer.n2719 ), 
    .CIN1(\mainTimer.n6573 ), .F0(\mainTimer.clkCont_17__N_41[9] ), 
    .F1(\mainTimer.clkCont_17__N_41[10] ), .COUT1(\mainTimer.n2721 ), 
    .COUT0(\mainTimer.n6573 ));
  mainTimer_SLICE_39 \mainTimer.SLICE_39 ( .D1(\mainTimer.n6570 ), 
    .B1(\mainTimer.clkCont[8] ), .D0(\mainTimer.n2717 ), 
    .B0(\mainTimer.clkCont[7] ), .CIN0(\mainTimer.n2717 ), 
    .CIN1(\mainTimer.n6570 ), .F0(\mainTimer.clkCont_17__N_41[7] ), 
    .F1(\mainTimer.clkCont_17__N_41[8] ), .COUT1(\mainTimer.n2719 ), 
    .COUT0(\mainTimer.n6570 ));
  mainTimer_SLICE_40 \mainTimer.SLICE_40 ( .D1(\mainTimer.n6567 ), 
    .B1(\mainTimer.clkCont[6] ), .D0(\mainTimer.n2715 ), 
    .B0(\mainTimer.clkCont[5] ), .CIN0(\mainTimer.n2715 ), 
    .CIN1(\mainTimer.n6567 ), .F0(\mainTimer.clkCont_17__N_41[5] ), 
    .F1(\mainTimer.clkCont_17__N_41[6] ), .COUT1(\mainTimer.n2717 ), 
    .COUT0(\mainTimer.n6567 ));
  mainTimer_SLICE_41 \mainTimer.SLICE_41 ( .D1(\mainTimer.n6564 ), 
    .B1(\mainTimer.clkCont[4] ), .D0(\mainTimer.n2713 ), 
    .B0(\mainTimer.clkCont[3] ), .CIN0(\mainTimer.n2713 ), 
    .CIN1(\mainTimer.n6564 ), .F0(\mainTimer.clkCont_17__N_41[3] ), 
    .F1(\mainTimer.clkCont_17__N_41[4] ), .COUT1(\mainTimer.n2715 ), 
    .COUT0(\mainTimer.n6564 ));
  mainTimer_SLICE_42 \mainTimer.SLICE_42 ( .D1(\mainTimer.n6561 ), 
    .B1(\mainTimer.clkCont[2] ), .D0(\mainTimer.n2711 ), 
    .B0(\mainTimer.clkCont[1] ), .CIN0(\mainTimer.n2711 ), 
    .CIN1(\mainTimer.n6561 ), .F0(\mainTimer.clkCont_17__N_41[1] ), 
    .F1(\mainTimer.clkCont_17__N_41[2] ), .COUT1(\mainTimer.n2713 ), 
    .COUT0(\mainTimer.n6561 ));
  mainTimer_SLICE_43 \mainTimer.SLICE_43 ( .D1(\mainTimer.n6552 ), 
    .C1(VCC_net), .B1(\mainTimer.clkCont[0] ), .CIN1(\mainTimer.n6552 ), 
    .F1(\mainTimer.clkCont_17__N_41[0] ), .COUT1(\mainTimer.n2711 ), 
    .COUT0(\mainTimer.n6552 ));
  Keyboard_SLICE_45 \Keyboard.SLICE_45 ( 
    .DI0(\Keyboard.n469.sig_001.FeedThruLUT ), .C0(\Keyboard.n469 ), 
    .CE(\Keyboard.n468 ), .LSR(\Keyboard.actualKey_0__1__N_412 ), 
    .CLK(TIMER_EN_N_19), .Q0(\Keyboard.n470 ), 
    .F0(\Keyboard.n469.sig_001.FeedThruLUT ));
  Keyboard_SLICE_46 \Keyboard.SLICE_46 ( 
    .DI0(\Keyboard.n513.sig_002.FeedThruLUT ), .B0(\Keyboard.n513 ), 
    .CE(\Keyboard.n512 ), .LSR(\Keyboard.counter_31__N_333 ), 
    .CLK(TIMER_EN_N_19), .Q0(\Keyboard.n514 ), 
    .F0(\Keyboard.n513.sig_002.FeedThruLUT ));
  Keyboard_SLICE_47 \Keyboard.SLICE_47 ( 
    .DI0(\Keyboard.n509.sig_003.FeedThruLUT ), .C0(\Keyboard.n509 ), 
    .CE(\Keyboard.n508 ), .LSR(\Keyboard.counter_31__N_336 ), 
    .CLK(TIMER_EN_N_19), .Q0(\Keyboard.n510 ), 
    .F0(\Keyboard.n509.sig_003.FeedThruLUT ));
  Keyboard_SLICE_48 \Keyboard.SLICE_48 ( 
    .DI0(\Keyboard.n521.sig_004.FeedThruLUT ), .A0(\Keyboard.n521 ), 
    .CE(\Keyboard.n520 ), .LSR(\Keyboard.counter_31__N_327 ), 
    .CLK(TIMER_EN_N_19), .Q0(\Keyboard.n522 ), 
    .F0(\Keyboard.n521.sig_004.FeedThruLUT ));
  Keyboard_SLICE_49 \Keyboard.SLICE_49 ( 
    .DI0(\Keyboard.n505.sig_005.FeedThruLUT ), .B0(\Keyboard.n505 ), 
    .CE(\Keyboard.n504 ), .LSR(\Keyboard.counter_31__N_339 ), 
    .CLK(TIMER_EN_N_19), .Q0(\Keyboard.n506 ), 
    .F0(\Keyboard.n505.sig_005.FeedThruLUT ));
  Keyboard_SLICE_50 \Keyboard.SLICE_50 ( 
    .DI0(\Keyboard.n501.sig_006.FeedThruLUT ), .B0(\Keyboard.n501 ), 
    .CE(\Keyboard.n500 ), .LSR(\Keyboard.counter_31__N_342 ), 
    .CLK(TIMER_EN_N_19), .Q0(\Keyboard.n502 ), 
    .F0(\Keyboard.n501.sig_006.FeedThruLUT ));
  Keyboard_SLICE_51 \Keyboard.SLICE_51 ( 
    .DI0(\Keyboard.n497.sig_007.FeedThruLUT ), .A0(\Keyboard.n497 ), 
    .CE(\Keyboard.n496 ), .LSR(\Keyboard.counter_31__N_345 ), 
    .CLK(TIMER_EN_N_19), .Q0(\Keyboard.n498 ), 
    .F0(\Keyboard.n497.sig_007.FeedThruLUT ));
  Keyboard_SLICE_52 \Keyboard.SLICE_52 ( 
    .DI0(\Keyboard.n493.sig_008.FeedThruLUT ), .B0(\Keyboard.n493 ), 
    .CE(\Keyboard.n492 ), .LSR(\Keyboard.actualKey_0__1__N_433 ), 
    .CLK(TIMER_EN_N_19), .Q0(\Keyboard.n494 ), 
    .F0(\Keyboard.n493.sig_008.FeedThruLUT ));
  Keyboard_SLICE_53 \Keyboard.SLICE_53 ( 
    .DI0(\Keyboard.n489.sig_009.FeedThruLUT ), .A0(\Keyboard.n489 ), 
    .CE(\Keyboard.n488 ), .LSR(\Keyboard.actualKey_0__1__N_430 ), 
    .CLK(TIMER_EN_N_19), .Q0(\Keyboard.n490 ), 
    .F0(\Keyboard.n489.sig_009.FeedThruLUT ));
  Keyboard_SLICE_54 \Keyboard.SLICE_54 ( 
    .DI0(\Keyboard.n473.sig_010.FeedThruLUT ), .B0(\Keyboard.n473 ), 
    .CE(\Keyboard.n472 ), .LSR(\Keyboard.actualKey_0__1__N_416 ), 
    .CLK(TIMER_EN_N_19), .Q0(\Keyboard.n474 ), 
    .F0(\Keyboard.n473.sig_010.FeedThruLUT ));
  Keyboard_SLICE_55 \Keyboard.SLICE_55 ( 
    .DI0(\Keyboard.n429.sig_011.FeedThruLUT ), .A0(\Keyboard.n429 ), 
    .CE(\Keyboard.n428 ), .LSR(\Keyboard.counter_31__N_363 ), 
    .CLK(TIMER_EN_N_19), .Q0(\Keyboard.n430 ), 
    .F0(\Keyboard.n429.sig_011.FeedThruLUT ));
  Keyboard_SLICE_56 \Keyboard.SLICE_56 ( 
    .DI0(\Keyboard.n485.sig_012.FeedThruLUT ), .B0(\Keyboard.n485 ), 
    .CE(\Keyboard.n484 ), .LSR(\Keyboard.actualKey_0__1__N_426 ), 
    .CLK(TIMER_EN_N_19), .Q0(\Keyboard.n486 ), 
    .F0(\Keyboard.n485.sig_012.FeedThruLUT ));
  Keyboard_SLICE_57 \Keyboard.SLICE_57 ( 
    .DI0(\Keyboard.n425.sig_013.FeedThruLUT ), .A0(\Keyboard.n425 ), 
    .CE(\Keyboard.n424 ), .LSR(\Keyboard.counter_31__N_360 ), 
    .CLK(TIMER_EN_N_19), .Q0(\Keyboard.n426 ), 
    .F0(\Keyboard.n425.sig_013.FeedThruLUT ));
  Keyboard_SLICE_58 \Keyboard.SLICE_58 ( 
    .DI0(\Keyboard.n417.sig_014.FeedThruLUT ), .B0(\Keyboard.n417 ), 
    .CE(\Keyboard.n416 ), .LSR(\Keyboard.valid_1__N_233 ), .CLK(TIMER_EN_N_19), 
    .Q0(\Keyboard.n418 ), .F0(\Keyboard.n417.sig_014.FeedThruLUT ));
  Keyboard_SLICE_59 \Keyboard.SLICE_59 ( 
    .DI0(\Keyboard.n421.sig_015.FeedThruLUT ), .B0(\Keyboard.n421 ), 
    .CE(\Keyboard.n420 ), .LSR(\Keyboard.counter_31__N_357 ), 
    .CLK(TIMER_EN_N_19), .Q0(\Keyboard.n422 ), 
    .F0(\Keyboard.n421.sig_015.FeedThruLUT ));
  Keyboard_SLICE_60 \Keyboard.SLICE_60 ( 
    .DI0(\Keyboard.n413.sig_016.FeedThruLUT ), .C0(\Keyboard.n413 ), 
    .CE(\Keyboard.n412 ), .LSR(\Keyboard.counter_31__N_393 ), 
    .CLK(TIMER_EN_N_19), .Q0(\Keyboard.n414 ), 
    .F0(\Keyboard.n413.sig_016.FeedThruLUT ));
  Keyboard_SLICE_61 \Keyboard.SLICE_61 ( 
    .DI0(\Keyboard.n409.sig_017.FeedThruLUT ), .C0(\Keyboard.n409 ), 
    .CE(\Keyboard.n408 ), .LSR(\Keyboard.actualKey_0__1__N_437 ), 
    .CLK(TIMER_EN_N_19), .Q0(\Keyboard.n410 ), 
    .F0(\Keyboard.n409.sig_017.FeedThruLUT ));
  Keyboard_SLICE_62 \Keyboard.SLICE_62 ( 
    .DI0(\Keyboard.n401.sig_018.FeedThruLUT ), .A0(\Keyboard.n401 ), 
    .CE(\Keyboard.n400 ), .LSR(\Keyboard.counter_31__N_351 ), 
    .CLK(TIMER_EN_N_19), .Q0(\Keyboard.n402 ), 
    .F0(\Keyboard.n401.sig_018.FeedThruLUT ));
  Keyboard_SLICE_63 \Keyboard.SLICE_63 ( 
    .DI0(\Keyboard.n481.sig_019.FeedThruLUT ), .C0(\Keyboard.n481 ), 
    .CE(\Keyboard.n480 ), .LSR(\Keyboard.actualKey_0__1__N_423 ), 
    .CLK(TIMER_EN_N_19), .Q0(\Keyboard.n482 ), 
    .F0(\Keyboard.n481.sig_019.FeedThruLUT ));
  Keyboard_SLICE_64 \Keyboard.SLICE_64 ( 
    .DI0(\Keyboard.n477.sig_020.FeedThruLUT ), .A0(\Keyboard.n477 ), 
    .CE(\Keyboard.n476 ), .LSR(\Keyboard.actualKey_0__1__N_419 ), 
    .CLK(TIMER_EN_N_19), .Q0(\Keyboard.n478 ), 
    .F0(\Keyboard.n477.sig_020.FeedThruLUT ));
  Keyboard_SLICE_66 \Keyboard.SLICE_66 ( 
    .DI0(\Keyboard.n461.sig_022.FeedThruLUT ), .D0(\Keyboard.n461 ), 
    .CE(\Keyboard.n460 ), .LSR(\Keyboard.counter_31__N_387 ), 
    .CLK(TIMER_EN_N_19), .Q0(\Keyboard.n462 ), 
    .F0(\Keyboard.n461.sig_022.FeedThruLUT ));
  Keyboard_SLICE_67 \Keyboard.SLICE_67 ( 
    .DI0(\Keyboard.n405.sig_023.FeedThruLUT ), .D0(\Keyboard.n405 ), 
    .CE(\Keyboard.n404 ), .LSR(\Keyboard.counter_31__N_354 ), 
    .CLK(TIMER_EN_N_19), .Q0(\Keyboard.n406 ), 
    .F0(\Keyboard.n405.sig_023.FeedThruLUT ));
  Keyboard_SLICE_68 \Keyboard.SLICE_68 ( 
    .DI0(\Keyboard.n457.sig_024.FeedThruLUT ), .D0(\Keyboard.n457 ), 
    .CE(\Keyboard.n456 ), .LSR(\Keyboard.counter_31__N_384 ), 
    .CLK(TIMER_EN_N_19), .Q0(\Keyboard.n458 ), 
    .F0(\Keyboard.n457.sig_024.FeedThruLUT ));
  Keyboard_SLICE_69 \Keyboard.SLICE_69 ( 
    .DI0(\Keyboard.n453.sig_025.FeedThruLUT ), .A0(\Keyboard.n453 ), 
    .CE(\Keyboard.n452 ), .LSR(\Keyboard.counter_31__N_381 ), 
    .CLK(TIMER_EN_N_19), .Q0(\Keyboard.n454 ), 
    .F0(\Keyboard.n453.sig_025.FeedThruLUT ));
  Keyboard_SLICE_70 \Keyboard.SLICE_70 ( 
    .DI0(\Keyboard.n449.sig_026.FeedThruLUT ), .A0(\Keyboard.n449 ), 
    .CE(\Keyboard.n448 ), .LSR(\Keyboard.counter_31__N_378 ), 
    .CLK(TIMER_EN_N_19), .Q0(\Keyboard.n450 ), 
    .F0(\Keyboard.n449.sig_026.FeedThruLUT ));
  Keyboard_SLICE_71 \Keyboard.SLICE_71 ( 
    .DI0(\Keyboard.n445.sig_027.FeedThruLUT ), .C0(\Keyboard.n445 ), 
    .CE(\Keyboard.n444 ), .LSR(\Keyboard.counter_31__N_375 ), 
    .CLK(TIMER_EN_N_19), .Q0(\Keyboard.n446 ), 
    .F0(\Keyboard.n445.sig_027.FeedThruLUT ));
  Keyboard_SLICE_73 \Keyboard.SLICE_73 ( 
    .DI0(\Keyboard.n397.sig_029.FeedThruLUT ), .D0(\Keyboard.n397 ), 
    .CE(\Keyboard.n396 ), .LSR(\Keyboard.counter_31__N_348 ), 
    .CLK(TIMER_EN_N_19), .Q0(\Keyboard.n398 ), 
    .F0(\Keyboard.n397.sig_029.FeedThruLUT ));
  Keyboard_SLICE_74 \Keyboard.SLICE_74 ( 
    .DI0(\Keyboard.n437.sig_030.FeedThruLUT ), .C0(\Keyboard.n437 ), 
    .CE(\Keyboard.n436 ), .LSR(\Keyboard.counter_31__N_369 ), 
    .CLK(TIMER_EN_N_19), .Q0(\Keyboard.n438 ), 
    .F0(\Keyboard.n437.sig_030.FeedThruLUT ));
  Keyboard_SLICE_75 \Keyboard.SLICE_75 ( 
    .DI0(\Keyboard.n525.sig_031.FeedThruLUT ), .B0(\Keyboard.n525 ), 
    .CE(\Keyboard.n524 ), .LSR(\Keyboard.counter_31__N_324 ), 
    .CLK(TIMER_EN_N_19), .Q0(\Keyboard.n526 ), 
    .F0(\Keyboard.n525.sig_031.FeedThruLUT ));
  Keyboard_SLICE_78 \Keyboard.SLICE_78 ( 
    .DI0(\Keyboard.n537.sig_034.FeedThruLUT ), .A0(\Keyboard.n537 ), 
    .CE(\Keyboard.n536 ), .LSR(\Keyboard.counter_31__N_315 ), 
    .CLK(TIMER_EN_N_19), .Q0(\Keyboard.n538 ), 
    .F0(\Keyboard.n537.sig_034.FeedThruLUT ));
  Keyboard_SLICE_79 \Keyboard.SLICE_79 ( 
    .DI0(\Keyboard.n541.sig_035.FeedThruLUT ), .A0(\Keyboard.n541 ), 
    .CE(\Keyboard.n540 ), .LSR(\Keyboard.counter_31__N_312 ), 
    .CLK(TIMER_EN_N_19), .Q0(\Keyboard.n542 ), 
    .F0(\Keyboard.n541.sig_035.FeedThruLUT ));
  Keyboard_SLICE_80 \Keyboard.SLICE_80 ( 
    .DI0(\Keyboard.n545.sig_036.FeedThruLUT ), .C0(\Keyboard.n545 ), 
    .CE(\Keyboard.n544 ), .LSR(\Keyboard.counter_31__N_309 ), 
    .CLK(TIMER_EN_N_19), .Q0(\Keyboard.n546 ), 
    .F0(\Keyboard.n545.sig_036.FeedThruLUT ));
  Keyboard_SLICE_81 \Keyboard.SLICE_81 ( 
    .DI0(\Keyboard.n549.sig_037.FeedThruLUT ), .D0(\Keyboard.n549 ), 
    .CE(\Keyboard.n548 ), .LSR(\Keyboard.counter_31__N_306 ), 
    .CLK(TIMER_EN_N_19), .Q0(\Keyboard.n550 ), 
    .F0(\Keyboard.n549.sig_037.FeedThruLUT ));
  Keyboard_SLICE_83 \Keyboard.SLICE_83 ( 
    .DI0(\Keyboard.n557.sig_039.FeedThruLUT ), .B0(\Keyboard.n557 ), 
    .CE(\Keyboard.n556 ), .LSR(\Keyboard.counter_31__N_300 ), 
    .CLK(TIMER_EN_N_19), .Q0(\Keyboard.n558 ), 
    .F0(\Keyboard.n557.sig_039.FeedThruLUT ));
  Keyboard_SLICE_84 \Keyboard.SLICE_84 ( 
    .DI0(\Keyboard.n561.sig_040.FeedThruLUT ), .D0(\Keyboard.n561 ), 
    .CE(\Keyboard.n560 ), .LSR(\Keyboard.valid_1__N_195 ), .CLK(TIMER_EN_N_19), 
    .Q0(\Keyboard.n562 ), .F0(\Keyboard.n561.sig_040.FeedThruLUT ));
  Keyboard_SLICE_85 \Keyboard.SLICE_85 ( 
    .DI0(\Keyboard.n474.sig_041.FeedThruLUT ), .A0(\Keyboard.n474 ), 
    .CE(\Keyboard.n566 ), .LSR(\Keyboard.actualKey_0__1__N_398 ), 
    .CLK(TIMER_EN_N_19), .Q0(\Keyboard.n473 ), 
    .F0(\Keyboard.n474.sig_041.FeedThruLUT ));
  Keyboard_SLICE_86 \Keyboard.SLICE_86 ( 
    .DI0(\Keyboard.n522.sig_042.FeedThruLUT ), .C0(\Keyboard.n522 ), 
    .CE(\Keyboard.n567 ), .LSR(\Keyboard.counter_31__N_254 ), 
    .CLK(TIMER_EN_N_19), .Q0(\Keyboard.n521 ), 
    .F0(\Keyboard.n522.sig_042.FeedThruLUT ));
  Keyboard_SLICE_87 \Keyboard.SLICE_87 ( 
    .DI0(\Keyboard.n438.sig_043.FeedThruLUT ), .C0(\Keyboard.n438 ), 
    .CE(\Keyboard.n568 ), .LSR(\Keyboard.counter_31__N_282 ), 
    .CLK(TIMER_EN_N_19), .Q0(\Keyboard.n437 ), 
    .F0(\Keyboard.n438.sig_043.FeedThruLUT ));
  Keyboard_SLICE_88 \Keyboard.SLICE_88 ( 
    .DI0(\Keyboard.n434.sig_044.FeedThruLUT ), .B0(\Keyboard.n434 ), 
    .CE(\Keyboard.n569 ), .LSR(\Keyboard.counter_31__N_280 ), 
    .CLK(TIMER_EN_N_19), .Q0(\Keyboard.n433 ), 
    .F0(\Keyboard.n434.sig_044.FeedThruLUT ));
  Keyboard_SLICE_89 \Keyboard.SLICE_89 ( 
    .DI0(\Keyboard.n518.sig_045.FeedThruLUT ), .A0(\Keyboard.n518 ), 
    .CE(\Keyboard.n570 ), .LSR(\Keyboard.counter_31__N_256 ), 
    .CLK(TIMER_EN_N_19), .Q0(\Keyboard.n517 ), 
    .F0(\Keyboard.n518.sig_045.FeedThruLUT ));
  Keyboard_SLICE_90 \Keyboard.SLICE_90 ( 
    .DI0(\Keyboard.n514.sig_046.FeedThruLUT ), .C0(\Keyboard.n514 ), 
    .CE(\Keyboard.n571 ), .LSR(\Keyboard.counter_31__N_258 ), 
    .CLK(TIMER_EN_N_19), .Q0(\Keyboard.n513 ), 
    .F0(\Keyboard.n514.sig_046.FeedThruLUT ));
  Keyboard_SLICE_92 \Keyboard.SLICE_92 ( 
    .DI0(\Keyboard.n506.sig_048.FeedThruLUT ), .A0(\Keyboard.n506 ), 
    .CE(\Keyboard.n573 ), .LSR(\Keyboard.counter_31__N_262 ), 
    .CLK(TIMER_EN_N_19), .Q0(\Keyboard.n505 ), 
    .F0(\Keyboard.n506.sig_048.FeedThruLUT ));
  Keyboard_SLICE_94 \Keyboard.SLICE_94 ( 
    .DI0(\Keyboard.n498.sig_050.FeedThruLUT ), .A0(\Keyboard.n498 ), 
    .CE(\Keyboard.n575 ), .LSR(\Keyboard.counter_31__N_266 ), 
    .CLK(TIMER_EN_N_19), .Q0(\Keyboard.n497 ), 
    .F0(\Keyboard.n498.sig_050.FeedThruLUT ));
  Keyboard_SLICE_95 \Keyboard.SLICE_95 ( 
    .DI0(\Keyboard.n494.sig_051.FeedThruLUT ), .B0(\Keyboard.n494 ), 
    .CE(\Keyboard.n576 ), .LSR(\Keyboard.actualKey_0__1__N_408 ), 
    .CLK(TIMER_EN_N_19), .Q0(\Keyboard.n493 ), 
    .F0(\Keyboard.n494.sig_051.FeedThruLUT ));
  Keyboard_SLICE_96 \Keyboard.SLICE_96 ( 
    .DI0(\Keyboard.n490.sig_052.FeedThruLUT ), .C0(\Keyboard.n490 ), 
    .CE(\Keyboard.n577 ), .LSR(\Keyboard.actualKey_0__1__N_406 ), 
    .CLK(TIMER_EN_N_19), .Q0(\Keyboard.n489 ), 
    .F0(\Keyboard.n490.sig_052.FeedThruLUT ));
  Keyboard_SLICE_97 \Keyboard.SLICE_97 ( 
    .DI0(\Keyboard.n486.sig_053.FeedThruLUT ), .C0(\Keyboard.n486 ), 
    .CE(\Keyboard.n578 ), .LSR(\Keyboard.actualKey_0__1__N_404 ), 
    .CLK(TIMER_EN_N_19), .Q0(\Keyboard.n485 ), 
    .F0(\Keyboard.n486.sig_053.FeedThruLUT ));
  Keyboard_SLICE_98 \Keyboard.SLICE_98 ( 
    .DI0(\Keyboard.n426.sig_054.FeedThruLUT ), .C0(\Keyboard.n426 ), 
    .CE(\Keyboard.n579 ), .LSR(\Keyboard.counter_31__N_276 ), 
    .CLK(TIMER_EN_N_19), .Q0(\Keyboard.n425 ), 
    .F0(\Keyboard.n426.sig_054.FeedThruLUT ));
  Keyboard_SLICE_99 \Keyboard.SLICE_99 ( 
    .DI0(\Keyboard.n418.sig_055.FeedThruLUT ), .C0(\Keyboard.n418 ), 
    .CE(\Keyboard.n580 ), .LSR(\Keyboard.valid_1__N_193 ), .CLK(TIMER_EN_N_19), 
    .Q0(\Keyboard.n417 ), .F0(\Keyboard.n418.sig_055.FeedThruLUT ));
  Keyboard_SLICE_100 \Keyboard.SLICE_100 ( 
    .DI0(\Keyboard.n422.sig_056.FeedThruLUT ), .A0(\Keyboard.n422 ), 
    .CE(\Keyboard.n581 ), .LSR(\Keyboard.counter_31__N_274 ), 
    .CLK(TIMER_EN_N_19), .Q0(\Keyboard.n421 ), 
    .F0(\Keyboard.n422.sig_056.FeedThruLUT ));
  Keyboard_SLICE_101 \Keyboard.SLICE_101 ( 
    .DI0(\Keyboard.n414.sig_057.FeedThruLUT ), .B0(\Keyboard.n414 ), 
    .CE(\Keyboard.n582 ), .LSR(\Keyboard.counter_31__N_298 ), 
    .CLK(TIMER_EN_N_19), .Q0(\Keyboard.n413 ), 
    .F0(\Keyboard.n414.sig_057.FeedThruLUT ));
  Keyboard_SLICE_102 \Keyboard.SLICE_102 ( 
    .DI0(\Keyboard.n430.sig_058.FeedThruLUT ), .B0(\Keyboard.n430 ), 
    .CE(\Keyboard.n583 ), .LSR(\Keyboard.counter_31__N_278 ), 
    .CLK(TIMER_EN_N_19), .Q0(\Keyboard.n429 ), 
    .F0(\Keyboard.n430.sig_058.FeedThruLUT ));
  Keyboard_SLICE_103 \Keyboard.SLICE_103 ( 
    .DI0(\Keyboard.n410.sig_059.FeedThruLUT ), .C0(\Keyboard.n410 ), 
    .CE(\Keyboard.n584 ), .LSR(\Keyboard.actualKey_0__1__N_410 ), 
    .CLK(TIMER_EN_N_19), .Q0(\Keyboard.n409 ), 
    .F0(\Keyboard.n410.sig_059.FeedThruLUT ));
  Keyboard_SLICE_104 \Keyboard.SLICE_104 ( 
    .DI0(\Keyboard.n470.sig_060.FeedThruLUT ), .C0(\Keyboard.n470 ), 
    .CE(\Keyboard.n585 ), .LSR(\Keyboard.actualKey_0__1__N_396 ), 
    .CLK(TIMER_EN_N_19), .Q0(\Keyboard.n469 ), 
    .F0(\Keyboard.n470.sig_060.FeedThruLUT ));
  Keyboard_SLICE_105 \Keyboard.SLICE_105 ( 
    .DI0(\Keyboard.n482.sig_061.FeedThruLUT ), .B0(\Keyboard.n482 ), 
    .CE(\Keyboard.n586 ), .LSR(\Keyboard.actualKey_0__1__N_402 ), 
    .CLK(TIMER_EN_N_19), .Q0(\Keyboard.n481 ), 
    .F0(\Keyboard.n482.sig_061.FeedThruLUT ));
  Keyboard_SLICE_106 \Keyboard.SLICE_106 ( 
    .DI0(\Keyboard.n402.sig_062.FeedThruLUT ), .A0(\Keyboard.n402 ), 
    .CE(\Keyboard.n587 ), .LSR(\Keyboard.counter_31__N_270 ), 
    .CLK(TIMER_EN_N_19), .Q0(\Keyboard.n401 ), 
    .F0(\Keyboard.n402.sig_062.FeedThruLUT ));
  Keyboard_SLICE_107 \Keyboard.SLICE_107 ( 
    .DI0(\Keyboard.n466.sig_063.FeedThruLUT ), .C0(\Keyboard.n466 ), 
    .CE(\Keyboard.n588 ), .LSR(\Keyboard.counter_31__N_296 ), 
    .CLK(TIMER_EN_N_19), .Q0(\Keyboard.n465 ), 
    .F0(\Keyboard.n466.sig_063.FeedThruLUT ));
  Keyboard_SLICE_112 \Keyboard.SLICE_112 ( 
    .DI0(\Keyboard.n406.sig_068.FeedThruLUT ), .B0(\Keyboard.n406 ), 
    .CE(\Keyboard.n593 ), .LSR(\Keyboard.counter_31__N_272 ), 
    .CLK(TIMER_EN_N_19), .Q0(\Keyboard.n405 ), 
    .F0(\Keyboard.n406.sig_068.FeedThruLUT ));
  Keyboard_SLICE_113 \Keyboard.SLICE_113 ( 
    .DI0(\Keyboard.n450.sig_069.FeedThruLUT ), .A0(\Keyboard.n450 ), 
    .CE(\Keyboard.n594 ), .LSR(\Keyboard.counter_31__N_288 ), 
    .CLK(TIMER_EN_N_19), .Q0(\Keyboard.n449 ), 
    .F0(\Keyboard.n450.sig_069.FeedThruLUT ));
  Keyboard_SLICE_114 \Keyboard.SLICE_114 ( 
    .DI0(\Keyboard.n446.sig_070.FeedThruLUT ), .B0(\Keyboard.n446 ), 
    .CE(\Keyboard.n595 ), .LSR(\Keyboard.counter_31__N_286 ), 
    .CLK(TIMER_EN_N_19), .Q0(\Keyboard.n445 ), 
    .F0(\Keyboard.n446.sig_070.FeedThruLUT ));
  Keyboard_SLICE_115 \Keyboard.SLICE_115 ( 
    .DI0(\Keyboard.n442.sig_071.FeedThruLUT ), .C0(\Keyboard.n442 ), 
    .CE(\Keyboard.n596 ), .LSR(\Keyboard.counter_31__N_284 ), 
    .CLK(TIMER_EN_N_19), .Q0(\Keyboard.n441 ), 
    .F0(\Keyboard.n442.sig_071.FeedThruLUT ));
  Keyboard_SLICE_116 \Keyboard.SLICE_116 ( 
    .DI0(\Keyboard.n398.sig_072.FeedThruLUT ), .B0(\Keyboard.n398 ), 
    .CE(\Keyboard.n597 ), .LSR(\Keyboard.counter_31__N_268 ), 
    .CLK(TIMER_EN_N_19), .Q0(\Keyboard.n397 ), 
    .F0(\Keyboard.n398.sig_072.FeedThruLUT ));
  Keyboard_SLICE_117 \Keyboard.SLICE_117 ( 
    .DI0(\Keyboard.n526.sig_073.FeedThruLUT ), .A0(\Keyboard.n526 ), 
    .CE(\Keyboard.n598 ), .LSR(\Keyboard.counter_31__N_252 ), 
    .CLK(TIMER_EN_N_19), .Q0(\Keyboard.n525 ), 
    .F0(\Keyboard.n526.sig_073.FeedThruLUT ));
  Keyboard_SLICE_118 \Keyboard.SLICE_118 ( 
    .DI0(\Keyboard.n530.sig_074.FeedThruLUT ), .A0(\Keyboard.n530 ), 
    .CE(\Keyboard.n599 ), .LSR(\Keyboard.counter_31__N_250 ), 
    .CLK(TIMER_EN_N_19), .Q0(\Keyboard.n529 ), 
    .F0(\Keyboard.n530.sig_074.FeedThruLUT ));
  Keyboard_SLICE_119 \Keyboard.SLICE_119 ( 
    .DI0(\Keyboard.n534.sig_075.FeedThruLUT ), .D0(\Keyboard.n534 ), 
    .CE(\Keyboard.n600 ), .LSR(\Keyboard.counter_31__N_248 ), 
    .CLK(TIMER_EN_N_19), .Q0(\Keyboard.n533 ), 
    .F0(\Keyboard.n534.sig_075.FeedThruLUT ));
  Keyboard_SLICE_120 \Keyboard.SLICE_120 ( 
    .DI0(\Keyboard.n538.sig_076.FeedThruLUT ), .A0(\Keyboard.n538 ), 
    .CE(\Keyboard.n601 ), .LSR(\Keyboard.counter_31__N_246 ), 
    .CLK(TIMER_EN_N_19), .Q0(\Keyboard.n537 ), 
    .F0(\Keyboard.n538.sig_076.FeedThruLUT ));
  Keyboard_SLICE_121 \Keyboard.SLICE_121 ( 
    .DI0(\Keyboard.n542.sig_077.FeedThruLUT ), .D0(\Keyboard.n542 ), 
    .CE(\Keyboard.n602 ), .LSR(\Keyboard.counter_31__N_244 ), 
    .CLK(TIMER_EN_N_19), .Q0(\Keyboard.n541 ), 
    .F0(\Keyboard.n542.sig_077.FeedThruLUT ));
  Keyboard_SLICE_123 \Keyboard.SLICE_123 ( 
    .DI0(\Keyboard.n550.sig_079.FeedThruLUT ), .C0(\Keyboard.n550 ), 
    .CE(\Keyboard.n604 ), .LSR(\Keyboard.counter_31__N_240 ), 
    .CLK(TIMER_EN_N_19), .Q0(\Keyboard.n549 ), 
    .F0(\Keyboard.n550.sig_079.FeedThruLUT ));
  Keyboard_SLICE_124 \Keyboard.SLICE_124 ( 
    .DI0(\Keyboard.n554.sig_080.FeedThruLUT ), .B0(\Keyboard.n554 ), 
    .CE(\Keyboard.n605 ), .LSR(\Keyboard.counter_31__N_238 ), 
    .CLK(TIMER_EN_N_19), .Q0(\Keyboard.n553 ), 
    .F0(\Keyboard.n554.sig_080.FeedThruLUT ));
  Keyboard_SLICE_125 \Keyboard.SLICE_125 ( 
    .DI0(\Keyboard.n558.sig_081.FeedThruLUT ), .D0(\Keyboard.n558 ), 
    .CE(\Keyboard.n606 ), .LSR(\Keyboard.counter_31__N_236 ), 
    .CLK(TIMER_EN_N_19), .Q0(\Keyboard.n557 ), 
    .F0(\Keyboard.n558.sig_081.FeedThruLUT ));
  Keyboard_SLICE_127 \Keyboard.SLICE_127 ( 
    .DI0(\Keyboard.n517.sig_083.FeedThruLUT ), .C0(\Keyboard.n517 ), 
    .CE(\Keyboard.n516 ), .LSR(\Keyboard.counter_31__N_330 ), 
    .CLK(TIMER_EN_N_19), .Q0(\Keyboard.n518 ), 
    .F0(\Keyboard.n517.sig_083.FeedThruLUT ));
  SLICE_128 SLICE_128( .DI1(\Snext[0]$n5 ), .DI0(\Snext[1]$n0 ), 
    .D1(TIMER_EN_N_11), .C1(\Snext_1__N_2[0] ), .B1(n338), .A1(\Snext[0] ), 
    .D0(n7), .C0(n3642), .B0(TIMER_EN_N_11), .A0(TIME_OUT), .CLK(SERCLK_OUT_c), 
    .Q0(Sreg_c_1), .Q1(Sreg_c_0), .F0(\Snext[1]$n0 ), .F1(\Snext[0]$n5 ));
  STATE_OUT_SLICE_130 \STATE_OUT.SLICE_130 ( .DI1(\STATE_OUT.n21[1] ), 
    .DI0(\STATE_OUT.n21[0] ), .D1(\STATE_OUT.cont[1] ), 
    .B1(\STATE_OUT.waiting ), .A1(\STATE_OUT.cont[0] ), 
    .B0(\STATE_OUT.cont[0] ), .A0(\STATE_OUT.waiting ), 
    .LSR(\STATE_OUT.state_send_N_67 ), .CLK(SERCLK_OUT_c), 
    .Q0(\STATE_OUT.cont[0] ), .Q1(\STATE_OUT.cont[1] ), 
    .F0(\STATE_OUT.n21[0] ), .F1(\STATE_OUT.n21[1] ));
  STATE_OUT_SLICE_132 \STATE_OUT.SLICE_132 ( .DI1(\STATE_OUT.n21[3] ), 
    .DI0(\STATE_OUT.n21[2] ), .D1(\STATE_OUT.cont[3] ), 
    .C1(\STATE_OUT.cont[2] ), .B1(\STATE_OUT.n2660 ), .D0(\STATE_OUT.cont[2] ), 
    .C0(\STATE_OUT.waiting ), .B0(\STATE_OUT.cont[0] ), 
    .A0(\STATE_OUT.cont[1] ), .LSR(\STATE_OUT.state_send_N_67 ), 
    .CLK(SERCLK_OUT_c), .Q0(\STATE_OUT.cont[2] ), .Q1(\STATE_OUT.cont[3] ), 
    .F0(\STATE_OUT.n21[2] ), .F1(\STATE_OUT.n21[3] ));
  STATE_OUT_serial_SLICE_134 \STATE_OUT.serial.SLICE_134 ( 
    .DI1(\STATE_OUT.serial.counter_31__N_84[1] ), 
    .DI0(\STATE_OUT.serial.counter_31__N_84[0] ), .C1(\STATE_OUT.init ), 
    .B1(\STATE_OUT.serial.counter_31__N_183[1] ), .A1(\STATE_OUT.serial.n63 ), 
    .D0(\STATE_OUT.init ), .C0(\STATE_OUT.serial.counter_31__N_183[0] ), 
    .B0(\STATE_OUT.serial.n63 ), .A0(\STATE_OUT.counter[0] ), 
    .CLK(SERCLK_OUT_c), .Q0(\STATE_OUT.counter[0] ), 
    .Q1(\STATE_OUT.counter[1] ), .F0(\STATE_OUT.serial.counter_31__N_84[0] ), 
    .F1(\STATE_OUT.serial.counter_31__N_84[1] ));
  STATE_OUT_serial_SLICE_136 \STATE_OUT.serial.SLICE_136 ( 
    .DI1(\STATE_OUT.serial.aux_3__N_116[0]$n4 ), 
    .DI0(\STATE_OUT.serial.aux_3__N_116[1]$n1 ), .D1(Sreg_c_0), 
    .C1(\STATE_OUT.serial.n63 ), .B1(Sreg_c_1), .A1(\STATE_OUT.serial.aux[0] ), 
    .D0(\STATE_OUT.serial.n63 ), .C0(Sreg_c_0), .B0(\STATE_OUT.serial.aux[1] ), 
    .A0(Sreg_c_1), .CLK(SERCLK_OUT_c), .Q0(\STATE_OUT.serial.aux[1] ), 
    .Q1(\STATE_OUT.serial.aux[0] ), .F0(\STATE_OUT.serial.aux_3__N_116[1]$n1 ), 
    .F1(\STATE_OUT.serial.aux_3__N_116[0]$n4 ));
  STATE_OUT_serial_SLICE_137 \STATE_OUT.serial.SLICE_137 ( 
    .DI1(\STATE_OUT.serial.aux_3__N_116[3]$n3 ), 
    .DI0(\STATE_OUT.serial.aux_3__N_116[2]$n2 ), .D1(\STATE_OUT.serial.n63 ), 
    .C1(SENSOR2_IN_c), .B1(\STATE_OUT.serial.aux[3] ), 
    .D0(\STATE_OUT.serial.aux[2] ), .C0(\STATE_OUT.serial.n63 ), 
    .B0(SENSOR1_IN_c), .CLK(SERCLK_OUT_c), .Q0(\STATE_OUT.serial.aux[2] ), 
    .Q1(\STATE_OUT.serial.aux[3] ), .F0(\STATE_OUT.serial.aux_3__N_116[2]$n2 ), 
    .F1(\STATE_OUT.serial.aux_3__N_116[3]$n3 ));
  STATE_OUT_serial_SLICE_140 \STATE_OUT.serial.SLICE_140 ( 
    .DI1(\STATE_OUT.serial.counter_31__N_84[3] ), 
    .DI0(\STATE_OUT.serial.counter_31__N_84[2] ), 
    .D1(\STATE_OUT.serial.counter_31__N_153[3] ), .C1(\STATE_OUT.init ), 
    .B1(\STATE_OUT.serial.n63 ), .D0(\STATE_OUT.init ), 
    .C0(\STATE_OUT.serial.n63 ), .A0(\STATE_OUT.serial.counter_31__N_153[2] ), 
    .CLK(SERCLK_OUT_c), .Q0(\STATE_OUT.counter[2] ), 
    .Q1(\STATE_OUT.counter[3] ), .F0(\STATE_OUT.serial.counter_31__N_84[2] ), 
    .F1(\STATE_OUT.serial.counter_31__N_84[3] ));
  STATE_OUT_serial_SLICE_142 \STATE_OUT.serial.SLICE_142 ( 
    .DI1(\STATE_OUT.serial.counter_31__N_84[5] ), 
    .DI0(\STATE_OUT.serial.counter_31__N_84[4] ), 
    .D1(\STATE_OUT.serial.counter[5] ), .C1(\STATE_OUT.serial.n63 ), 
    .B1(\STATE_OUT.serial.counter_31__N_153[5] ), .A1(\STATE_OUT.init ), 
    .D0(\STATE_OUT.init ), .C0(\STATE_OUT.serial.counter_31__N_153[4] ), 
    .B0(\STATE_OUT.serial.counter[4] ), .A0(\STATE_OUT.serial.n63 ), 
    .CLK(SERCLK_OUT_c), .Q0(\STATE_OUT.serial.counter[4] ), 
    .Q1(\STATE_OUT.serial.counter[5] ), 
    .F0(\STATE_OUT.serial.counter_31__N_84[4] ), 
    .F1(\STATE_OUT.serial.counter_31__N_84[5] ));
  STATE_OUT_serial_SLICE_144 \STATE_OUT.serial.SLICE_144 ( 
    .DI1(\STATE_OUT.serial.counter_31__N_84[7] ), 
    .DI0(\STATE_OUT.serial.counter_31__N_84[6] ), 
    .D1(\STATE_OUT.serial.counter[7] ), 
    .C1(\STATE_OUT.serial.counter_31__N_153[7] ), .B1(\STATE_OUT.serial.n63 ), 
    .A1(\STATE_OUT.init ), .D0(\STATE_OUT.init ), 
    .C0(\STATE_OUT.serial.counter_31__N_153[6] ), 
    .B0(\STATE_OUT.serial.counter[6] ), .A0(\STATE_OUT.serial.n63 ), 
    .CLK(SERCLK_OUT_c), .Q0(\STATE_OUT.serial.counter[6] ), 
    .Q1(\STATE_OUT.serial.counter[7] ), 
    .F0(\STATE_OUT.serial.counter_31__N_84[6] ), 
    .F1(\STATE_OUT.serial.counter_31__N_84[7] ));
  STATE_OUT_serial_SLICE_146 \STATE_OUT.serial.SLICE_146 ( 
    .DI1(\STATE_OUT.serial.counter_31__N_84[9] ), 
    .DI0(\STATE_OUT.serial.counter_31__N_84[8] ), .D1(\STATE_OUT.init ), 
    .C1(\STATE_OUT.serial.n63 ), .B1(\STATE_OUT.serial.counter[9] ), 
    .A1(\STATE_OUT.serial.counter_31__N_153[9] ), 
    .D0(\STATE_OUT.serial.counter_31__N_153[8] ), 
    .C0(\STATE_OUT.serial.counter[8] ), .B0(\STATE_OUT.serial.n63 ), 
    .A0(\STATE_OUT.init ), .CLK(SERCLK_OUT_c), 
    .Q0(\STATE_OUT.serial.counter[8] ), .Q1(\STATE_OUT.serial.counter[9] ), 
    .F0(\STATE_OUT.serial.counter_31__N_84[8] ), 
    .F1(\STATE_OUT.serial.counter_31__N_84[9] ));
  STATE_OUT_serial_SLICE_148 \STATE_OUT.serial.SLICE_148 ( 
    .DI1(\STATE_OUT.serial.counter_31__N_84[11] ), 
    .DI0(\STATE_OUT.serial.counter_31__N_84[10] ), 
    .D1(\STATE_OUT.serial.counter[11] ), .C1(\STATE_OUT.serial.n63 ), 
    .B1(\STATE_OUT.serial.counter_31__N_153[11] ), .A1(\STATE_OUT.init ), 
    .D0(\STATE_OUT.init ), .C0(\STATE_OUT.serial.counter[10] ), 
    .B0(\STATE_OUT.serial.n63 ), .A0(\STATE_OUT.serial.counter_31__N_153[10] ), 
    .CLK(SERCLK_OUT_c), .Q0(\STATE_OUT.serial.counter[10] ), 
    .Q1(\STATE_OUT.serial.counter[11] ), 
    .F0(\STATE_OUT.serial.counter_31__N_84[10] ), 
    .F1(\STATE_OUT.serial.counter_31__N_84[11] ));
  STATE_OUT_serial_SLICE_150 \STATE_OUT.serial.SLICE_150 ( 
    .DI1(\STATE_OUT.serial.counter_31__N_84[13] ), 
    .DI0(\STATE_OUT.serial.counter_31__N_84[12] ), .D1(\STATE_OUT.serial.n63 ), 
    .C1(\STATE_OUT.init ), .B1(\STATE_OUT.serial.counter[13] ), 
    .A1(\STATE_OUT.serial.counter_31__N_153[13] ), 
    .D0(\STATE_OUT.serial.counter_31__N_153[12] ), 
    .C0(\STATE_OUT.serial.counter[12] ), .B0(\STATE_OUT.init ), 
    .A0(\STATE_OUT.serial.n63 ), .CLK(SERCLK_OUT_c), 
    .Q0(\STATE_OUT.serial.counter[12] ), .Q1(\STATE_OUT.serial.counter[13] ), 
    .F0(\STATE_OUT.serial.counter_31__N_84[12] ), 
    .F1(\STATE_OUT.serial.counter_31__N_84[13] ));
  STATE_OUT_serial_SLICE_152 \STATE_OUT.serial.SLICE_152 ( 
    .DI1(\STATE_OUT.serial.counter_31__N_84[15] ), 
    .DI0(\STATE_OUT.serial.counter_31__N_84[14] ), .D1(\STATE_OUT.serial.n63 ), 
    .C1(\STATE_OUT.init ), .B1(\STATE_OUT.serial.counter[15] ), 
    .A1(\STATE_OUT.serial.counter_31__N_153[15] ), .D0(\STATE_OUT.init ), 
    .C0(\STATE_OUT.serial.counter_31__N_153[14] ), 
    .B0(\STATE_OUT.serial.counter[14] ), .A0(\STATE_OUT.serial.n63 ), 
    .CLK(SERCLK_OUT_c), .Q0(\STATE_OUT.serial.counter[14] ), 
    .Q1(\STATE_OUT.serial.counter[15] ), 
    .F0(\STATE_OUT.serial.counter_31__N_84[14] ), 
    .F1(\STATE_OUT.serial.counter_31__N_84[15] ));
  STATE_OUT_serial_SLICE_154 \STATE_OUT.serial.SLICE_154 ( 
    .DI1(\STATE_OUT.serial.counter_31__N_84[17] ), 
    .DI0(\STATE_OUT.serial.counter_31__N_84[16] ), 
    .D1(\STATE_OUT.serial.counter_31__N_153[17] ), .C1(\STATE_OUT.init ), 
    .B1(\STATE_OUT.serial.counter[17] ), .A1(\STATE_OUT.serial.n63 ), 
    .D0(\STATE_OUT.init ), .C0(\STATE_OUT.serial.counter_31__N_153[16] ), 
    .B0(\STATE_OUT.serial.n63 ), .A0(\STATE_OUT.serial.counter[16] ), 
    .CLK(SERCLK_OUT_c), .Q0(\STATE_OUT.serial.counter[16] ), 
    .Q1(\STATE_OUT.serial.counter[17] ), 
    .F0(\STATE_OUT.serial.counter_31__N_84[16] ), 
    .F1(\STATE_OUT.serial.counter_31__N_84[17] ));
  STATE_OUT_serial_SLICE_156 \STATE_OUT.serial.SLICE_156 ( 
    .DI1(\STATE_OUT.serial.counter_31__N_84[19] ), 
    .DI0(\STATE_OUT.serial.counter_31__N_84[18] ), 
    .D1(\STATE_OUT.serial.counter[19] ), .C1(\STATE_OUT.serial.n63 ), 
    .B1(\STATE_OUT.serial.counter_31__N_153[19] ), .A1(\STATE_OUT.init ), 
    .D0(\STATE_OUT.init ), .C0(\STATE_OUT.serial.counter[18] ), 
    .B0(\STATE_OUT.serial.n63 ), .A0(\STATE_OUT.serial.counter_31__N_153[18] ), 
    .CLK(SERCLK_OUT_c), .Q0(\STATE_OUT.serial.counter[18] ), 
    .Q1(\STATE_OUT.serial.counter[19] ), 
    .F0(\STATE_OUT.serial.counter_31__N_84[18] ), 
    .F1(\STATE_OUT.serial.counter_31__N_84[19] ));
  STATE_OUT_serial_SLICE_158 \STATE_OUT.serial.SLICE_158 ( 
    .DI1(\STATE_OUT.serial.counter_31__N_84[21] ), 
    .DI0(\STATE_OUT.serial.counter_31__N_84[20] ), 
    .D1(\STATE_OUT.serial.counter[21] ), .C1(\STATE_OUT.init ), 
    .B1(\STATE_OUT.serial.n63 ), .A1(\STATE_OUT.serial.counter_31__N_153[21] ), 
    .D0(\STATE_OUT.init ), .C0(\STATE_OUT.serial.counter[20] ), 
    .B0(\STATE_OUT.serial.counter_31__N_153[20] ), .A0(\STATE_OUT.serial.n63 ), 
    .CLK(SERCLK_OUT_c), .Q0(\STATE_OUT.serial.counter[20] ), 
    .Q1(\STATE_OUT.serial.counter[21] ), 
    .F0(\STATE_OUT.serial.counter_31__N_84[20] ), 
    .F1(\STATE_OUT.serial.counter_31__N_84[21] ));
  STATE_OUT_serial_SLICE_160 \STATE_OUT.serial.SLICE_160 ( 
    .DI1(\STATE_OUT.serial.counter_31__N_84[23] ), 
    .DI0(\STATE_OUT.serial.counter_31__N_84[22] ), 
    .D1(\STATE_OUT.serial.counter[23] ), 
    .C1(\STATE_OUT.serial.counter_31__N_153[23] ), .B1(\STATE_OUT.init ), 
    .A1(\STATE_OUT.serial.n63 ), .D0(\STATE_OUT.serial.n63 ), 
    .C0(\STATE_OUT.serial.counter[22] ), 
    .B0(\STATE_OUT.serial.counter_31__N_153[22] ), .A0(\STATE_OUT.init ), 
    .CLK(SERCLK_OUT_c), .Q0(\STATE_OUT.serial.counter[22] ), 
    .Q1(\STATE_OUT.serial.counter[23] ), 
    .F0(\STATE_OUT.serial.counter_31__N_84[22] ), 
    .F1(\STATE_OUT.serial.counter_31__N_84[23] ));
  STATE_OUT_serial_SLICE_162 \STATE_OUT.serial.SLICE_162 ( 
    .DI1(\STATE_OUT.serial.counter_31__N_84[25] ), 
    .DI0(\STATE_OUT.serial.counter_31__N_84[24] ), .D1(\STATE_OUT.serial.n63 ), 
    .C1(\STATE_OUT.serial.counter_31__N_153[25] ), .B1(\STATE_OUT.init ), 
    .A1(\STATE_OUT.serial.counter[25] ), .D0(\STATE_OUT.serial.counter[24] ), 
    .C0(\STATE_OUT.serial.n63 ), .B0(\STATE_OUT.serial.counter_31__N_153[24] ), 
    .A0(\STATE_OUT.init ), .CLK(SERCLK_OUT_c), 
    .Q0(\STATE_OUT.serial.counter[24] ), .Q1(\STATE_OUT.serial.counter[25] ), 
    .F0(\STATE_OUT.serial.counter_31__N_84[24] ), 
    .F1(\STATE_OUT.serial.counter_31__N_84[25] ));
  STATE_OUT_serial_SLICE_164 \STATE_OUT.serial.SLICE_164 ( 
    .DI1(\STATE_OUT.serial.counter_31__N_84[27] ), 
    .DI0(\STATE_OUT.serial.counter_31__N_84[26] ), .D1(\STATE_OUT.init ), 
    .C1(\STATE_OUT.serial.n63 ), .B1(\STATE_OUT.serial.counter_31__N_153[27] ), 
    .A1(\STATE_OUT.serial.counter[27] ), .D0(\STATE_OUT.serial.n63 ), 
    .C0(\STATE_OUT.init ), .B0(\STATE_OUT.serial.counter[26] ), 
    .A0(\STATE_OUT.serial.counter_31__N_153[26] ), .CLK(SERCLK_OUT_c), 
    .Q0(\STATE_OUT.serial.counter[26] ), .Q1(\STATE_OUT.serial.counter[27] ), 
    .F0(\STATE_OUT.serial.counter_31__N_84[26] ), 
    .F1(\STATE_OUT.serial.counter_31__N_84[27] ));
  STATE_OUT_serial_SLICE_166 \STATE_OUT.serial.SLICE_166 ( 
    .DI1(\STATE_OUT.serial.counter_31__N_84[29] ), 
    .DI0(\STATE_OUT.serial.counter_31__N_84[28] ), .D1(\STATE_OUT.serial.n63 ), 
    .C1(\STATE_OUT.serial.counter_31__N_153[29] ), .B1(\STATE_OUT.init ), 
    .A1(\STATE_OUT.serial.counter[29] ), .D0(\STATE_OUT.serial.counter[28] ), 
    .C0(\STATE_OUT.serial.n63 ), .B0(\STATE_OUT.serial.counter_31__N_153[28] ), 
    .A0(\STATE_OUT.init ), .CLK(SERCLK_OUT_c), 
    .Q0(\STATE_OUT.serial.counter[28] ), .Q1(\STATE_OUT.serial.counter[29] ), 
    .F0(\STATE_OUT.serial.counter_31__N_84[28] ), 
    .F1(\STATE_OUT.serial.counter_31__N_84[29] ));
  STATE_OUT_serial_SLICE_168 \STATE_OUT.serial.SLICE_168 ( 
    .DI1(\STATE_OUT.serial.counter_31__N_84[31] ), 
    .DI0(\STATE_OUT.serial.counter_31__N_84[30] ), .D1(\STATE_OUT.init ), 
    .C1(\STATE_OUT.serial.counter_31__N_153[31] ), 
    .B1(\STATE_OUT.serial.counter[31] ), .A1(\STATE_OUT.serial.n63 ), 
    .D0(\STATE_OUT.serial.n63 ), .C0(\STATE_OUT.serial.counter[30] ), 
    .B0(\STATE_OUT.serial.counter_31__N_153[30] ), .A0(\STATE_OUT.init ), 
    .CLK(SERCLK_OUT_c), .Q0(\STATE_OUT.serial.counter[30] ), 
    .Q1(\STATE_OUT.serial.counter[31] ), 
    .F0(\STATE_OUT.serial.counter_31__N_84[30] ), 
    .F1(\STATE_OUT.serial.counter_31__N_84[31] ));
  mainTimer_SLICE_175 \mainTimer.SLICE_175 ( 
    .DI1(\mainTimer.clkCont_17__N_20[16] ), 
    .DI0(\mainTimer.clkCont_17__N_20[17] ), 
    .D1(\mainTimer.clkCont_17__N_41[16] ), .B1(TIME_OUT), 
    .C0(\mainTimer.clkCont_17__N_41[17] ), .A0(TIME_OUT), 
    .LSR(\mainTimer.clkCont_17__N_38 ), .CLK(SERCLK_OUT_c), 
    .Q0(\mainTimer.clkCont[17] ), .Q1(\mainTimer.clkCont[16] ), 
    .F0(\mainTimer.clkCont_17__N_20[17] ), 
    .F1(\mainTimer.clkCont_17__N_20[16] ));
  mainTimer_SLICE_177 \mainTimer.SLICE_177 ( 
    .DI1(\mainTimer.clkCont_17__N_20[14] ), 
    .DI0(\mainTimer.clkCont_17__N_20[15] ), .B1(TIME_OUT), 
    .A1(\mainTimer.clkCont_17__N_41[14] ), 
    .D0(\mainTimer.clkCont_17__N_41[15] ), .A0(TIME_OUT), 
    .LSR(\mainTimer.clkCont_17__N_38 ), .CLK(SERCLK_OUT_c), 
    .Q0(\mainTimer.clkCont[15] ), .Q1(\mainTimer.clkCont[14] ), 
    .F0(\mainTimer.clkCont_17__N_20[15] ), 
    .F1(\mainTimer.clkCont_17__N_20[14] ));
  mainTimer_SLICE_179 \mainTimer.SLICE_179 ( 
    .DI1(\mainTimer.clkCont_17__N_20[12] ), 
    .DI0(\mainTimer.clkCont_17__N_20[13] ), 
    .C1(\mainTimer.clkCont_17__N_41[12] ), .A1(TIME_OUT), 
    .D0(\mainTimer.clkCont_17__N_41[13] ), .B0(TIME_OUT), 
    .LSR(\mainTimer.clkCont_17__N_38 ), .CLK(SERCLK_OUT_c), 
    .Q0(\mainTimer.clkCont[13] ), .Q1(\mainTimer.clkCont[12] ), 
    .F0(\mainTimer.clkCont_17__N_20[13] ), 
    .F1(\mainTimer.clkCont_17__N_20[12] ));
  mainTimer_SLICE_181 \mainTimer.SLICE_181 ( 
    .DI1(\mainTimer.clkCont_17__N_20[10] ), 
    .DI0(\mainTimer.clkCont_17__N_20[11] ), .C1(TIME_OUT), 
    .B1(\mainTimer.clkCont_17__N_41[10] ), .B0(TIME_OUT), 
    .A0(\mainTimer.clkCont_17__N_41[11] ), .LSR(\mainTimer.clkCont_17__N_38 ), 
    .CLK(SERCLK_OUT_c), .Q0(\mainTimer.clkCont[11] ), 
    .Q1(\mainTimer.clkCont[10] ), .F0(\mainTimer.clkCont_17__N_20[11] ), 
    .F1(\mainTimer.clkCont_17__N_20[10] ));
  mainTimer_SLICE_183 \mainTimer.SLICE_183 ( 
    .DI1(\mainTimer.clkCont_17__N_20[8] ), 
    .DI0(\mainTimer.clkCont_17__N_20[9] ), .C1(TIME_OUT), 
    .A1(\mainTimer.clkCont_17__N_41[8] ), .D0(\mainTimer.clkCont_17__N_41[9] ), 
    .B0(TIME_OUT), .LSR(\mainTimer.clkCont_17__N_38 ), .CLK(SERCLK_OUT_c), 
    .Q0(\mainTimer.clkCont[9] ), .Q1(\mainTimer.clkCont[8] ), 
    .F0(\mainTimer.clkCont_17__N_20[9] ), .F1(\mainTimer.clkCont_17__N_20[8] ));
  mainTimer_SLICE_185 \mainTimer.SLICE_185 ( 
    .DI1(\mainTimer.clkCont_17__N_20[6] ), 
    .DI0(\mainTimer.clkCont_17__N_20[7] ), 
    .C1(\mainTimer.clkCont_17__N_41[6] ), .B1(TIME_OUT), .C0(TIME_OUT), 
    .B0(\mainTimer.clkCont_17__N_41[7] ), .LSR(\mainTimer.clkCont_17__N_38 ), 
    .CLK(SERCLK_OUT_c), .Q0(\mainTimer.clkCont[7] ), 
    .Q1(\mainTimer.clkCont[6] ), .F0(\mainTimer.clkCont_17__N_20[7] ), 
    .F1(\mainTimer.clkCont_17__N_20[6] ));
  mainTimer_SLICE_187 \mainTimer.SLICE_187 ( 
    .DI1(\mainTimer.clkCont_17__N_20[4] ), 
    .DI0(\mainTimer.clkCont_17__N_20[5] ), .D1(TIME_OUT), 
    .B1(\mainTimer.clkCont_17__N_41[4] ), .C0(TIME_OUT), 
    .A0(\mainTimer.clkCont_17__N_41[5] ), .LSR(\mainTimer.clkCont_17__N_38 ), 
    .CLK(SERCLK_OUT_c), .Q0(\mainTimer.clkCont[5] ), 
    .Q1(\mainTimer.clkCont[4] ), .F0(\mainTimer.clkCont_17__N_20[5] ), 
    .F1(\mainTimer.clkCont_17__N_20[4] ));
  mainTimer_SLICE_189 \mainTimer.SLICE_189 ( 
    .DI1(\mainTimer.clkCont_17__N_20[2] ), 
    .DI0(\mainTimer.clkCont_17__N_20[3] ), 
    .D1(\mainTimer.clkCont_17__N_41[2] ), .B1(TIME_OUT), 
    .C0(\mainTimer.clkCont_17__N_41[3] ), .A0(TIME_OUT), 
    .LSR(\mainTimer.clkCont_17__N_38 ), .CLK(SERCLK_OUT_c), 
    .Q0(\mainTimer.clkCont[3] ), .Q1(\mainTimer.clkCont[2] ), 
    .F0(\mainTimer.clkCont_17__N_20[3] ), .F1(\mainTimer.clkCont_17__N_20[2] ));
  mainTimer_SLICE_191 \mainTimer.SLICE_191 ( 
    .DI1(\mainTimer.clkCont_17__N_20[0] ), 
    .DI0(\mainTimer.clkCont_17__N_20[1] ), 
    .B1(\mainTimer.clkCont_17__N_41[0] ), .A1(TIME_OUT), 
    .D0(\mainTimer.clkCont_17__N_41[1] ), .B0(TIME_OUT), 
    .LSR(\mainTimer.clkCont_17__N_38 ), .CLK(SERCLK_OUT_c), 
    .Q0(\mainTimer.clkCont[1] ), .Q1(\mainTimer.clkCont[0] ), 
    .F0(\mainTimer.clkCont_17__N_20[1] ), .F1(\mainTimer.clkCont_17__N_20[0] ));
  SLICE_193 SLICE_193( .D1(TIME_OUT), .C1(TIMER_EN_N_11), .B1(n3642), .A1(n7), 
    .D0(\Keyboard.n561 ), .C0(KEY_STATUS_c_0), .B0(\Keyboard.n560 ), 
    .A0(\Keyboard.n562 ), .F0(TIMER_EN_N_11), .F1(\Snext[1] ));
  SLICE_194 SLICE_194( .D1(Sreg_c_1), .C1(n62), .B1(Sreg_c_0), .A1(\Snext[1] ), 
    .D0(SENSOR2_IN_c), .C0(SENSOR1_IN_c), .B0(KEY_STATUS_c_1), 
    .A0(KEY_STATUS_c_0), .F0(n62), .F1(n7));
  Keyboard_SLICE_195 \Keyboard.SLICE_195 ( .D1(\Keyboard.n482 ), 
    .C1(\Keyboard.n480 ), .B1(\Keyboard.n481 ), .D0(\Keyboard.KB_RECV_c ), 
    .C0(\Keyboard.actualKey_0__1__N_401[0] ), .A0(\Keyboard.n480 ), 
    .F0(\Keyboard.n480 ), .F1(DEBUG_KEY_c_0));
  Keyboard_SLICE_197 \Keyboard.SLICE_197 ( .D1(\Keyboard.n4_adj_444 ), 
    .C1(DEBUG_KEY_c_1), .B1(KB_IN_c_1), .A1(\Keyboard.counter[0] ), 
    .C0(\Keyboard.n476 ), .B0(\Keyboard.n477 ), .A0(\Keyboard.n478 ), 
    .F0(DEBUG_KEY_c_1), .F1(\Keyboard.actualKey_0__1__N_421 ));
  Keyboard_SLICE_198 \Keyboard.SLICE_198 ( 
    .D1(\Keyboard.actualKey_0__1__N_421 ), 
    .C1(\Keyboard.actualKey_0__1__N_401[1] ), .B1(\Keyboard.n476 ), 
    .A1(\Keyboard.KB_RECV_c ), .D0(DEBUG_KEY_c_1), .C0(KB_IN_c_1), 
    .B0(\Keyboard.counter[0] ), .A0(\Keyboard.n4_adj_444 ), 
    .F0(\Keyboard.actualKey_0__1__N_401[1] ), .F1(\Keyboard.n476 ));
  Keyboard_SLICE_199 \Keyboard.SLICE_199 ( .C1(KEY_STATUS_c_1), 
    .B1(SENSOR1_IN_c), .A1(KEY_STATUS_c_0), .D0(\Keyboard.n562 ), 
    .C0(\Keyboard.n560 ), .A0(\Keyboard.n561 ), .F0(KEY_STATUS_c_1), 
    .F1(n4473));
  Keyboard_SLICE_200 \Keyboard.SLICE_200 ( .D1(\Keyboard.KB_RECV_c ), 
    .C1(\Keyboard.valid_1__N_192[1] ), .A1(\Keyboard.n560 ), 
    .D0(\Keyboard.actualKey_0__1__N_409[0] ), .C0(\Keyboard.n14 ), 
    .B0(\Keyboard.actualKey_0__1__N_432 ), .A0(\Keyboard.n15 ), 
    .F0(\Keyboard.valid_1__N_192[1] ), .F1(\Keyboard.n560 ));
  Keyboard_SLICE_201 \Keyboard.SLICE_201 ( .D1(\Keyboard.n418 ), 
    .C1(\Keyboard.n416 ), .A1(\Keyboard.n417 ), .C0(\Keyboard.n416 ), 
    .B0(\Keyboard.KB_RECV_c ), .A0(\Keyboard.valid_1__N_192[0] ), 
    .F0(\Keyboard.n416 ), .F1(KEY_STATUS_c_0));
  Keyboard_SLICE_203 \Keyboard.SLICE_203 ( .D1(\Keyboard.n558 ), 
    .C1(\Keyboard.n556 ), .A1(\Keyboard.n557 ), .D0(\Keyboard.KB_RECV_c ), 
    .C0(\Keyboard.valid_1__N_201[31] ), .B0(\Keyboard.valid_1__N_192[0] ), 
    .A0(\Keyboard.n556 ), .F0(\Keyboard.n556 ), .F1(\Keyboard.counter[31] ));
  Keyboard_SLICE_205 \Keyboard.SLICE_205 ( .D1(\Keyboard.n553 ), 
    .C1(\Keyboard.n552 ), .A1(\Keyboard.n554 ), 
    .D0(\Keyboard.valid_1__N_192[0] ), .C0(\Keyboard.KB_RECV_c ), 
    .B0(\Keyboard.n552 ), .A0(\Keyboard.valid_1__N_201[30] ), 
    .F0(\Keyboard.n552 ), .F1(\Keyboard.counter[30] ));
  Keyboard_SLICE_207 \Keyboard.SLICE_207 ( .D1(\Keyboard.n549 ), 
    .C1(\Keyboard.n548 ), .A1(\Keyboard.n550 ), 
    .D0(\Keyboard.valid_1__N_192[0] ), .C0(\Keyboard.KB_RECV_c ), 
    .B0(\Keyboard.valid_1__N_201[29] ), .A0(\Keyboard.n548 ), 
    .F0(\Keyboard.n548 ), .F1(\Keyboard.counter[29] ));
  Keyboard_SLICE_209 \Keyboard.SLICE_209 ( .D1(\Keyboard.n545 ), 
    .C1(\Keyboard.n544 ), .B1(\Keyboard.n546 ), .D0(\Keyboard.KB_RECV_c ), 
    .C0(\Keyboard.n544 ), .B0(\Keyboard.valid_1__N_192[0] ), 
    .A0(\Keyboard.valid_1__N_201[28] ), .F0(\Keyboard.n544 ), 
    .F1(\Keyboard.counter[28] ));
  Keyboard_SLICE_211 \Keyboard.SLICE_211 ( .D1(\Keyboard.n541 ), 
    .C1(\Keyboard.n540 ), .B1(\Keyboard.n542 ), 
    .D0(\Keyboard.valid_1__N_201[27] ), .C0(\Keyboard.valid_1__N_192[0] ), 
    .B0(\Keyboard.KB_RECV_c ), .A0(\Keyboard.n540 ), .F0(\Keyboard.n540 ), 
    .F1(\Keyboard.counter[27] ));
  Keyboard_SLICE_213 \Keyboard.SLICE_213 ( .C1(\Keyboard.n536 ), 
    .B1(\Keyboard.n538 ), .A1(\Keyboard.n537 ), 
    .D0(\Keyboard.valid_1__N_192[0] ), .C0(\Keyboard.valid_1__N_201[26] ), 
    .B0(\Keyboard.KB_RECV_c ), .A0(\Keyboard.n536 ), .F0(\Keyboard.n536 ), 
    .F1(\Keyboard.counter[26] ));
  Keyboard_SLICE_215 \Keyboard.SLICE_215 ( .D1(\Keyboard.n533 ), 
    .C1(\Keyboard.n532 ), .A1(\Keyboard.n534 ), 
    .D0(\Keyboard.valid_1__N_201[25] ), .C0(\Keyboard.KB_RECV_c ), 
    .B0(\Keyboard.n532 ), .A0(\Keyboard.valid_1__N_192[0] ), 
    .F0(\Keyboard.n532 ), .F1(\Keyboard.counter[25] ));
  Keyboard_SLICE_217 \Keyboard.SLICE_217 ( .D1(\Keyboard.n529 ), 
    .C1(\Keyboard.n528 ), .A1(\Keyboard.n530 ), .D0(\Keyboard.KB_RECV_c ), 
    .C0(\Keyboard.valid_1__N_201[24] ), .B0(\Keyboard.n528 ), 
    .A0(\Keyboard.valid_1__N_192[0] ), .F0(\Keyboard.n528 ), 
    .F1(\Keyboard.counter[24] ));
  Keyboard_SLICE_219 \Keyboard.SLICE_219 ( .C1(\Keyboard.n524 ), 
    .B1(\Keyboard.n526 ), .A1(\Keyboard.n525 ), 
    .D0(\Keyboard.valid_1__N_192[0] ), .C0(\Keyboard.n524 ), 
    .B0(\Keyboard.KB_RECV_c ), .A0(\Keyboard.valid_1__N_201[23] ), 
    .F0(\Keyboard.n524 ), .F1(\Keyboard.counter[23] ));
  Keyboard_SLICE_221 \Keyboard.SLICE_221 ( .D1(\Keyboard.n438 ), 
    .C1(\Keyboard.n436 ), .B1(\Keyboard.n437 ), .D0(\Keyboard.KB_RECV_c ), 
    .C0(\Keyboard.n436 ), .B0(\Keyboard.valid_1__N_192[0] ), 
    .A0(\Keyboard.valid_1__N_201[8] ), .F0(\Keyboard.n436 ), 
    .F1(\Keyboard.counter[8] ));
  Keyboard_SLICE_223 \Keyboard.SLICE_223 ( .C1(\Keyboard.n396 ), 
    .B1(\Keyboard.n398 ), .A1(\Keyboard.n397 ), 
    .D0(\Keyboard.valid_1__N_192[0] ), .C0(\Keyboard.KB_RECV_c ), 
    .B0(\Keyboard.valid_1__N_201[15] ), .A0(\Keyboard.n396 ), 
    .F0(\Keyboard.n396 ), .F1(\Keyboard.counter[15] ));
  Keyboard_SLICE_225 \Keyboard.SLICE_225 ( .C1(\Keyboard.n440 ), 
    .B1(\Keyboard.n442 ), .A1(\Keyboard.n441 ), 
    .D0(\Keyboard.valid_1__N_201[7] ), .C0(\Keyboard.valid_1__N_192[0] ), 
    .B0(\Keyboard.KB_RECV_c ), .A0(\Keyboard.n440 ), .F0(\Keyboard.n440 ), 
    .F1(\Keyboard.counter[7] ));
  Keyboard_SLICE_227 \Keyboard.SLICE_227 ( .C1(\Keyboard.n444 ), 
    .B1(\Keyboard.n445 ), .A1(\Keyboard.n446 ), 
    .D0(\Keyboard.valid_1__N_192[0] ), .C0(\Keyboard.valid_1__N_201[6] ), 
    .B0(\Keyboard.KB_RECV_c ), .A0(\Keyboard.n444 ), .F0(\Keyboard.n444 ), 
    .F1(\Keyboard.counter[6] ));
  Keyboard_SLICE_229 \Keyboard.SLICE_229 ( .C1(\Keyboard.n448 ), 
    .B1(\Keyboard.n450 ), .A1(\Keyboard.n449 ), 
    .D0(\Keyboard.valid_1__N_201[5] ), .C0(\Keyboard.KB_RECV_c ), 
    .B0(\Keyboard.valid_1__N_192[0] ), .A0(\Keyboard.n448 ), 
    .F0(\Keyboard.n448 ), .F1(\Keyboard.counter[5] ));
  Keyboard_SLICE_231 \Keyboard.SLICE_231 ( .D1(\Keyboard.n453 ), 
    .C1(\Keyboard.n452 ), .A1(\Keyboard.n454 ), 
    .D0(\Keyboard.valid_1__N_201[4] ), .C0(\Keyboard.n452 ), 
    .B0(\Keyboard.KB_RECV_c ), .A0(\Keyboard.valid_1__N_192[0] ), 
    .F0(\Keyboard.n452 ), .F1(\Keyboard.counter[4] ));
  Keyboard_SLICE_233 \Keyboard.SLICE_233 ( .D1(\Keyboard.n458 ), 
    .C1(\Keyboard.n456 ), .A1(\Keyboard.n457 ), .D0(\Keyboard.KB_RECV_c ), 
    .C0(\Keyboard.valid_1__N_192[0] ), .B0(\Keyboard.valid_1__N_201[3] ), 
    .A0(\Keyboard.n456 ), .F0(\Keyboard.n456 ), .F1(\Keyboard.counter[3] ));
  Keyboard_SLICE_235 \Keyboard.SLICE_235 ( .C1(\Keyboard.n404 ), 
    .B1(\Keyboard.n406 ), .A1(\Keyboard.n405 ), 
    .D0(\Keyboard.valid_1__N_192[0] ), .C0(\Keyboard.n404 ), 
    .B0(\Keyboard.KB_RECV_c ), .A0(\Keyboard.valid_1__N_201[13] ), 
    .F0(\Keyboard.n404 ), .F1(\Keyboard.counter[13] ));
  Keyboard_SLICE_237 \Keyboard.SLICE_237 ( .D1(\Keyboard.counter[1] ), 
    .C1(\Keyboard.n460 ), .B1(\Keyboard.n462 ), .A1(\Keyboard.n461 ), 
    .D0(\Keyboard.valid_1__N_192[0] ), .C0(\Keyboard.n460 ), 
    .B0(\Keyboard.valid_1__N_201[2] ), .A0(\Keyboard.KB_RECV_c ), 
    .F0(\Keyboard.n460 ), .F1(\Keyboard.n4 ));
  Keyboard_SLICE_238 \Keyboard.SLICE_238 ( .D1(KB_IN_c_1), 
    .C1(\Keyboard.n4_adj_444 ), .B1(\Keyboard.actualKey[0][1] ), 
    .A1(\Keyboard.counter[0] ), .D0(\Keyboard.n460 ), 
    .C0(\Keyboard.counter[1] ), .B0(\Keyboard.n461 ), .A0(\Keyboard.n462 ), 
    .F0(\Keyboard.n4_adj_444 ), .F1(\Keyboard.actualKey_0__1__N_397[1] ));
  Keyboard_SLICE_239 \Keyboard.SLICE_239 ( .C1(\Keyboard.n464 ), 
    .B1(\Keyboard.n465 ), .A1(\Keyboard.n466 ), .D0(\Keyboard.KB_RECV_c ), 
    .C0(\Keyboard.valid_1__N_192[0] ), .B0(\Keyboard.valid_1__N_201[1] ), 
    .A0(\Keyboard.n464 ), .F0(\Keyboard.n464 ), .F1(\Keyboard.counter[1] ));
  Keyboard_SLICE_241 \Keyboard.SLICE_241 ( .C1(\Keyboard.n516 ), 
    .B1(\Keyboard.n518 ), .A1(\Keyboard.n517 ), 
    .D0(\Keyboard.valid_1__N_192[0] ), .C0(\Keyboard.valid_1__N_201[21] ), 
    .B0(\Keyboard.KB_RECV_c ), .A0(\Keyboard.n516 ), .F0(\Keyboard.n516 ), 
    .F1(\Keyboard.counter[21] ));
  Keyboard_SLICE_243 \Keyboard.SLICE_243 ( .D1(\Keyboard.n433 ), 
    .C1(\Keyboard.n432 ), .A1(\Keyboard.n434 ), 
    .D0(\Keyboard.valid_1__N_192[0] ), .C0(\Keyboard.n432 ), 
    .B0(\Keyboard.valid_1__N_201[9] ), .A0(\Keyboard.KB_RECV_c ), 
    .F0(\Keyboard.n432 ), .F1(\Keyboard.counter[9] ));
  Keyboard_SLICE_245 \Keyboard.SLICE_245 ( .D1(\Keyboard.n512 ), 
    .C1(\Keyboard.n514 ), .A1(\Keyboard.n513 ), 
    .D0(\Keyboard.valid_1__N_201[20] ), .C0(\Keyboard.KB_RECV_c ), 
    .B0(\Keyboard.n512 ), .A0(\Keyboard.valid_1__N_192[0] ), 
    .F0(\Keyboard.n512 ), .F1(\Keyboard.counter[20] ));
  Keyboard_SLICE_247 \Keyboard.SLICE_247 ( .D1(\Keyboard.n509 ), 
    .C1(\Keyboard.n508 ), .B1(\Keyboard.n510 ), 
    .D0(\Keyboard.valid_1__N_201[19] ), .C0(\Keyboard.n508 ), 
    .B0(\Keyboard.valid_1__N_192[0] ), .A0(\Keyboard.KB_RECV_c ), 
    .F0(\Keyboard.n508 ), .F1(\Keyboard.counter[19] ));
  Keyboard_SLICE_249 \Keyboard.SLICE_249 ( .D1(\Keyboard.n522 ), 
    .C1(\Keyboard.n520 ), .B1(\Keyboard.n521 ), .D0(\Keyboard.KB_RECV_c ), 
    .C0(\Keyboard.valid_1__N_192[0] ), .B0(\Keyboard.n520 ), 
    .A0(\Keyboard.valid_1__N_201[22] ), .F0(\Keyboard.n520 ), 
    .F1(\Keyboard.counter[22] ));
  Keyboard_SLICE_251 \Keyboard.SLICE_251 ( .D1(\Keyboard.n506 ), 
    .C1(\Keyboard.n504 ), .A1(\Keyboard.n505 ), 
    .D0(\Keyboard.valid_1__N_201[18] ), .C0(\Keyboard.n504 ), 
    .B0(\Keyboard.KB_RECV_c ), .A0(\Keyboard.valid_1__N_192[0] ), 
    .F0(\Keyboard.n504 ), .F1(\Keyboard.counter[18] ));
  Keyboard_SLICE_253 \Keyboard.SLICE_253 ( .D1(\Keyboard.n502 ), 
    .C1(\Keyboard.n500 ), .A1(\Keyboard.n501 ), 
    .D0(\Keyboard.valid_1__N_201[17] ), .C0(\Keyboard.valid_1__N_192[0] ), 
    .B0(\Keyboard.KB_RECV_c ), .A0(\Keyboard.n500 ), .F0(\Keyboard.n500 ), 
    .F1(\Keyboard.counter[17] ));
  Keyboard_SLICE_255 \Keyboard.SLICE_255 ( .D1(\Keyboard.n497 ), 
    .C1(\Keyboard.n496 ), .B1(\Keyboard.n498 ), 
    .D0(\Keyboard.valid_1__N_192[0] ), .C0(\Keyboard.valid_1__N_201[16] ), 
    .B0(\Keyboard.n496 ), .A0(\Keyboard.KB_RECV_c ), .F0(\Keyboard.n496 ), 
    .F1(\Keyboard.counter[16] ));
  Keyboard_SLICE_257 \Keyboard.SLICE_257 ( .D1(\Keyboard.n428 ), 
    .C1(\Keyboard.n430 ), .B1(\Keyboard.n429 ), 
    .D0(\Keyboard.valid_1__N_201[10] ), .C0(\Keyboard.n428 ), 
    .B0(\Keyboard.KB_RECV_c ), .A0(\Keyboard.valid_1__N_192[0] ), 
    .F0(\Keyboard.n428 ), .F1(\Keyboard.counter[10] ));
  Keyboard_SLICE_259 \Keyboard.SLICE_259 ( .D1(\Keyboard.n424 ), 
    .C1(\Keyboard.n426 ), .B1(\Keyboard.n425 ), 
    .D0(\Keyboard.valid_1__N_201[11] ), .C0(\Keyboard.KB_RECV_c ), 
    .B0(\Keyboard.valid_1__N_192[0] ), .A0(\Keyboard.n424 ), 
    .F0(\Keyboard.n424 ), .F1(\Keyboard.counter[11] ));
  Keyboard_SLICE_261 \Keyboard.SLICE_261 ( .C1(\Keyboard.n420 ), 
    .B1(\Keyboard.n421 ), .A1(\Keyboard.n422 ), 
    .D0(\Keyboard.valid_1__N_201[12] ), .C0(\Keyboard.n420 ), 
    .B0(\Keyboard.valid_1__N_192[0] ), .A0(\Keyboard.KB_RECV_c ), 
    .F0(\Keyboard.n420 ), .F1(\Keyboard.counter[12] ));
  Keyboard_SLICE_263 \Keyboard.SLICE_263 ( .D1(\Keyboard.n413 ), 
    .C1(\Keyboard.n412 ), .A1(\Keyboard.n414 ), 
    .D0(\Keyboard.valid_1__N_192[0] ), .C0(\Keyboard.valid_1__N_201[0] ), 
    .B0(\Keyboard.KB_RECV_c ), .A0(\Keyboard.n412 ), .F0(\Keyboard.n412 ), 
    .F1(\Keyboard.counter[0] ));
  Keyboard_SLICE_265 \Keyboard.SLICE_265 ( .D1(\Keyboard.n401 ), 
    .C1(\Keyboard.n400 ), .B1(\Keyboard.n402 ), 
    .D0(\Keyboard.valid_1__N_192[0] ), .C0(\Keyboard.KB_RECV_c ), 
    .B0(\Keyboard.n400 ), .A0(\Keyboard.valid_1__N_201[14] ), 
    .F0(\Keyboard.n400 ), .F1(\Keyboard.counter[14] ));
  Keyboard_SLICE_267 \Keyboard.SLICE_267 ( .A0(\Keyboard.n472 ), 
    .F0(\Keyboard.n566 ));
  Keyboard_SLICE_268 \Keyboard.SLICE_268 ( .D1(\Keyboard.KB_RECV_c ), 
    .C1(\Keyboard.actualKey_0__1__N_397[0] ), 
    .B1(\Keyboard.actualKey_0__1__N_418 ), .A1(\Keyboard.n472 ), 
    .D0(\Keyboard.counter[0] ), .C0(\Keyboard.actualKey[0][0] ), 
    .B0(KB_IN_c_0), .A0(\Keyboard.n4_adj_444 ), 
    .F0(\Keyboard.actualKey_0__1__N_397[0] ), .F1(\Keyboard.n472 ));
  Keyboard_SLICE_269 \Keyboard.SLICE_269 ( .C1(\Keyboard.n492 ), 
    .C0(\Keyboard.actualKey_0__1__N_409[1] ), .B0(\Keyboard.n492 ), 
    .A0(\Keyboard.KB_RECV_c ), .F0(\Keyboard.n492 ), .F1(\Keyboard.n576 ));
  Keyboard_SLICE_271 \Keyboard.SLICE_271 ( .C0(\Keyboard.n488 ), 
    .F0(\Keyboard.n577 ));
  Keyboard_SLICE_272 \Keyboard.SLICE_272 ( .D1(\Keyboard.KB_RECV_c ), 
    .C1(\Keyboard.actualKey_0__1__N_405[0] ), 
    .B1(\Keyboard.actualKey_0__1__N_432 ), .A1(\Keyboard.n488 ), 
    .D0(\Keyboard.counter[0] ), .C0(\Keyboard.n4 ), 
    .B0(\Keyboard.actualKey[2][0] ), .A0(KB_IN_c_0), 
    .F0(\Keyboard.actualKey_0__1__N_405[0] ), .F1(\Keyboard.n488 ));
  Keyboard_SLICE_273 \Keyboard.SLICE_273 ( .C1(\Keyboard.n484 ), 
    .D0(\Keyboard.n484 ), .C0(\Keyboard.actualKey_0__1__N_405[1] ), 
    .A0(\Keyboard.KB_RECV_c ), .F0(\Keyboard.n484 ), .F1(\Keyboard.n578 ));
  Keyboard_SLICE_275 \Keyboard.SLICE_275 ( .C1(\Keyboard.n408 ), 
    .D0(\Keyboard.n408 ), .C0(\Keyboard.actualKey_0__1__N_409[0] ), 
    .A0(\Keyboard.KB_RECV_c ), .F0(\Keyboard.n408 ), .F1(\Keyboard.n584 ));
  Keyboard_SLICE_277 \Keyboard.SLICE_277 ( .D0(\Keyboard.n468 ), 
    .F0(\Keyboard.n585 ));
  Keyboard_SLICE_278 \Keyboard.SLICE_278 ( .D1(\Keyboard.n470 ), 
    .C1(\Keyboard.n468 ), .B1(\Keyboard.n469 ), 
    .D0(\Keyboard.actualKey_0__1__N_414 ), 
    .C0(\Keyboard.actualKey_0__1__N_397[1] ), .B0(\Keyboard.n468 ), 
    .A0(\Keyboard.KB_RECV_c ), .F0(\Keyboard.n468 ), 
    .F1(\Keyboard.actualKey[0][1] ));
  SLICE_279 SLICE_279( .D1(KEY_STATUS_c_0), .C1(n3642), .B1(KEY_STATUS_c_1), 
    .A1(TIME_OUT), .D0(Sreg_c_1), .B0(Sreg_c_0), .F0(n3642), 
    .F1(TIMER_EN_N_13));
  SLICE_280 SLICE_280( .C1(TIMER_EN), .D0(TIMER_EN_N_11), .C0(TIMER_EN_N_13), 
    .B0(TIME_OUT), .A0(TIMER_EN), .F0(TIMER_EN), 
    .F1(\mainTimer.clkCont_17__N_38 ));
  Keyboard_SLICE_281 \Keyboard.SLICE_281 ( 
    .D1(\Keyboard.actualKey_0__1__N_421 ), 
    .C1(\Keyboard.actualKey_0__1__N_405[1] ), 
    .B1(\Keyboard.actualKey_0__1__N_409[1] ), 
    .A1(\Keyboard.valid_1__N_192[0] ), .D0(\Keyboard.KB_RECV_c ), 
    .C0(\Keyboard.actualKey_0__1__N_421 ), 
    .F0(\Keyboard.actualKey_0__1__N_419 ), .F1(\Keyboard.n15 ));
  Keyboard_SLICE_283 \Keyboard.SLICE_283 ( 
    .C1(\Keyboard.actualKey_0__1__N_401[0] ), .A1(\Keyboard.KB_RECV_c ), 
    .D0(KB_IN_c_0), .C0(DEBUG_KEY_c_0), .B0(\Keyboard.counter[0] ), 
    .A0(\Keyboard.n4_adj_444 ), .F0(\Keyboard.actualKey_0__1__N_401[0] ), 
    .F1(\Keyboard.actualKey_0__1__N_423 ));
  Keyboard_SLICE_285 \Keyboard.SLICE_285 ( .D1(\Keyboard.KB_RECV_c ), 
    .A1(\Keyboard.actualKey_0__1__N_409[0] ), 
    .B0(\Keyboard.actualKey_0__1__N_409[0] ), .A0(\Keyboard.KB_RECV_c ), 
    .F0(\Keyboard.actualKey_0__1__N_437 ), 
    .F1(\Keyboard.actualKey_0__1__N_410 ));
  Keyboard_SLICE_286 \Keyboard.SLICE_286 ( .D1(\Keyboard.n4 ), 
    .C1(\Keyboard.actualKey[3][0] ), .B1(\Keyboard.counter[0] ), 
    .A1(KB_IN_c_0), .D0(\Keyboard.n408 ), .C0(\Keyboard.n409 ), 
    .A0(\Keyboard.n410 ), .F0(\Keyboard.actualKey[3][0] ), 
    .F1(\Keyboard.actualKey_0__1__N_409[0] ));
  Keyboard_SLICE_287 \Keyboard.SLICE_287 ( .B1(\Keyboard.KB_RECV_c ), 
    .A1(\Keyboard.valid_1__N_192[0] ), .D0(\Keyboard.valid_1__N_192[0] ), 
    .A0(\Keyboard.KB_RECV_c ), .F0(\Keyboard.valid_1__N_233 ), 
    .F1(\Keyboard.valid_1__N_193 ));
  Keyboard_SLICE_288 \Keyboard.SLICE_288 ( .D1(\Keyboard.n55 ), 
    .C1(\Keyboard.n50 ), .B1(\Keyboard.n60 ), .A1(\Keyboard.n49 ), 
    .D0(\Keyboard.counter[26] ), .C0(\Keyboard.counter[18] ), 
    .B0(\Keyboard.counter[21] ), .A0(\Keyboard.counter[11] ), 
    .F0(\Keyboard.n50 ), .F1(\Keyboard.valid_1__N_192[0] ));
  Keyboard_SLICE_289 \Keyboard.SLICE_289 ( .D1(\Keyboard.KB_RECV_c ), 
    .C1(\Keyboard.actualKey_0__1__N_405[1] ), 
    .B0(\Keyboard.actualKey_0__1__N_405[1] ), .A0(\Keyboard.KB_RECV_c ), 
    .F0(\Keyboard.actualKey_0__1__N_426 ), 
    .F1(\Keyboard.actualKey_0__1__N_404 ));
  Keyboard_SLICE_290 \Keyboard.SLICE_290 ( .D1(\Keyboard.n4 ), 
    .C1(\Keyboard.actualKey[2][1] ), .B1(KB_IN_c_1), 
    .A1(\Keyboard.counter[0] ), .D0(\Keyboard.n485 ), .C0(\Keyboard.n484 ), 
    .B0(\Keyboard.n486 ), .F0(\Keyboard.actualKey[2][1] ), 
    .F1(\Keyboard.actualKey_0__1__N_405[1] ));
  Keyboard_SLICE_291 \Keyboard.SLICE_291 ( 
    .C0(\Keyboard.actualKey_0__1__N_418 ), .A0(\Keyboard.KB_RECV_c ), 
    .F0(\Keyboard.actualKey_0__1__N_416 ));
  Keyboard_SLICE_292 \Keyboard.SLICE_292 ( .D1(\Keyboard.counter[0] ), 
    .C1(\Keyboard.actualKey[0][0] ), .B1(\Keyboard.n4_adj_444 ), 
    .A1(KB_IN_c_0), .C0(\Keyboard.n472 ), .B0(\Keyboard.n473 ), 
    .A0(\Keyboard.n474 ), .F0(\Keyboard.actualKey[0][0] ), 
    .F1(\Keyboard.actualKey_0__1__N_418 ));
  Keyboard_SLICE_293 \Keyboard.SLICE_293 ( 
    .C0(\Keyboard.actualKey_0__1__N_432 ), .A0(\Keyboard.KB_RECV_c ), 
    .F0(\Keyboard.actualKey_0__1__N_430 ));
  Keyboard_SLICE_294 \Keyboard.SLICE_294 ( .D1(KB_IN_c_0), 
    .C1(\Keyboard.actualKey[2][0] ), .B1(\Keyboard.counter[0] ), 
    .A1(\Keyboard.n4 ), .D0(\Keyboard.n490 ), .C0(\Keyboard.n488 ), 
    .A0(\Keyboard.n489 ), .F0(\Keyboard.actualKey[2][0] ), 
    .F1(\Keyboard.actualKey_0__1__N_432 ));
  Keyboard_SLICE_295 \Keyboard.SLICE_295 ( .D1(\Keyboard.KB_RECV_c ), 
    .A1(\Keyboard.actualKey_0__1__N_409[1] ), .C0(\Keyboard.KB_RECV_c ), 
    .B0(\Keyboard.actualKey_0__1__N_409[1] ), 
    .F0(\Keyboard.actualKey_0__1__N_433 ), 
    .F1(\Keyboard.actualKey_0__1__N_408 ));
  Keyboard_SLICE_296 \Keyboard.SLICE_296 ( .D1(\Keyboard.n4 ), 
    .C1(\Keyboard.actualKey[3][1] ), .B1(KB_IN_c_1), 
    .A1(\Keyboard.counter[0] ), .D0(\Keyboard.n492 ), .B0(\Keyboard.n493 ), 
    .A0(\Keyboard.n494 ), .F0(\Keyboard.actualKey[3][1] ), 
    .F1(\Keyboard.actualKey_0__1__N_409[1] ));
  Keyboard_SLICE_297 \Keyboard.SLICE_297 ( 
    .D1(\Keyboard.actualKey_0__1__N_401[1] ), .C1(\Keyboard.KB_RECV_c ), 
    .D0(\Keyboard.KB_RECV_c ), .C0(\Keyboard.actualKey_0__1__N_414 ), 
    .F0(\Keyboard.actualKey_0__1__N_412 ), 
    .F1(\Keyboard.actualKey_0__1__N_400 ));
  Keyboard_SLICE_298 \Keyboard.SLICE_298 ( 
    .C1(\Keyboard.actualKey_0__1__N_414 ), 
    .B1(\Keyboard.actualKey_0__1__N_418 ), 
    .A1(\Keyboard.actualKey_0__1__N_401[0] ), .D0(KB_IN_c_1), 
    .C0(\Keyboard.actualKey[0][1] ), .B0(\Keyboard.counter[0] ), 
    .A0(\Keyboard.n4_adj_444 ), .F0(\Keyboard.actualKey_0__1__N_414 ), 
    .F1(\Keyboard.n14 ));
  Keyboard_SLICE_307 \Keyboard.SLICE_307 ( .D1(\Keyboard.valid_1__N_192[1] ), 
    .A1(\Keyboard.KB_RECV_c ), .B0(\Keyboard.KB_RECV_c ), 
    .A0(\Keyboard.valid_1__N_192[1] ), .F0(\Keyboard.valid_1__N_195 ), 
    .F1(\Keyboard.valid_1__N_191 ));
  Keyboard_SLICE_309 \Keyboard.SLICE_309 ( .D1(\Keyboard.n4 ), 
    .C1(\Keyboard.n48 ), .B1(\Keyboard.counter[13] ), 
    .A1(\Keyboard.counter[3] ), .D0(\Keyboard.counter[24] ), 
    .C0(\Keyboard.counter[31] ), .B0(\Keyboard.counter[0] ), 
    .A0(\Keyboard.counter[16] ), .F0(\Keyboard.n48 ), .F1(\Keyboard.n55 ));
  Keyboard_SLICE_311 \Keyboard.SLICE_311 ( .D1(\Keyboard.n53 ), 
    .C1(\Keyboard.n54 ), .B1(\Keyboard.n51 ), .A1(\Keyboard.n52 ), 
    .D0(\Keyboard.counter[23] ), .C0(\Keyboard.counter[17] ), 
    .B0(\Keyboard.counter[20] ), .A0(\Keyboard.counter[22] ), 
    .F0(\Keyboard.n54 ), .F1(\Keyboard.n60 ));
  SLICE_313 SLICE_313( .D1(n338), .C1(\Snext[0] ), .B1(TIMER_EN_N_11), 
    .A1(\Snext_1__N_2[0] ), .D0(Sreg_c_0), .C0(n62), .B0(Sreg_c_1), 
    .A0(TIME_OUT), .F0(n338), .F1(\Snext[0] ));
  SLICE_315 SLICE_315( .C1(Sreg_c_0), .A1(Sreg_c_1), .D0(Sreg_c_0), .C0(n4473), 
    .B0(Sreg_c_1), .A0(TIME_OUT), .F0(\Snext_1__N_2[0] ), .F1(SIREN_OUT_c));
  STATE_OUT_serial_SLICE_317 \STATE_OUT.serial.SLICE_317 ( .D1(SENSOR2_IN_c), 
    .C1(\STATE_OUT.serial.n63 ), .B1(\STATE_OUT.serial.aux[3] ), 
    .D0(\STATE_OUT.serial.n62 ), .C0(\STATE_OUT.serial.n58 ), 
    .B0(\STATE_OUT.serial.n49 ), .A0(\STATE_OUT.serial.n50 ), 
    .F0(\STATE_OUT.serial.n63 ), .F1(\STATE_OUT.serial.aux_3__N_116[3] ));
  STATE_OUT_serial_SLICE_318 \STATE_OUT.serial.SLICE_318 ( 
    .D1(\STATE_OUT.serial.aux_3__N_116[3] ), 
    .C1(\STATE_OUT.serial.aux_3__N_116[2] ), 
    .B1(\STATE_OUT.serial.counter_31__N_183[1] ), 
    .A1(\STATE_OUT.serial.counter_31__N_183[0] ), .D0(SENSOR1_IN_c), 
    .C0(\STATE_OUT.serial.n63 ), .A0(\STATE_OUT.serial.aux[2] ), 
    .F0(\STATE_OUT.serial.aux_3__N_116[2] ), .F1(\STATE_OUT.serial.n5369 ));
  STATE_OUT_serial_SLICE_321 \STATE_OUT.serial.SLICE_321 ( 
    .D1(\STATE_OUT.serial.counter[22] ), .C1(\STATE_OUT.serial.n38 ), 
    .B1(\STATE_OUT.serial.counter[9] ), .A1(\STATE_OUT.serial.n52 ), 
    .D0(\STATE_OUT.serial.counter[20] ), .A0(\STATE_OUT.serial.counter[17] ), 
    .F0(\STATE_OUT.serial.n38 ), .F1(\STATE_OUT.serial.n58 ));
  STATE_OUT_serial_SLICE_323 \STATE_OUT.serial.SLICE_323 ( 
    .D0(\STATE_OUT.serial.counter[25] ), .C0(\STATE_OUT.serial.counter[15] ), 
    .B0(\STATE_OUT.serial.counter[31] ), .A0(\STATE_OUT.serial.counter[30] ), 
    .F0(\STATE_OUT.serial.n56 ));
  STATE_OUT_serial_SLICE_324 \STATE_OUT.serial.SLICE_324 ( 
    .D1(\STATE_OUT.serial.n54 ), .C1(\STATE_OUT.serial.n53 ), 
    .B1(\STATE_OUT.serial.n56 ), .A1(\STATE_OUT.serial.n55 ), 
    .D0(\STATE_OUT.serial.counter[29] ), .C0(\STATE_OUT.serial.counter[19] ), 
    .B0(\STATE_OUT.serial.counter[8] ), .A0(\STATE_OUT.serial.counter[21] ), 
    .F0(\STATE_OUT.serial.n53 ), .F1(\STATE_OUT.serial.n62 ));
  mainTimer_SLICE_325 \mainTimer.SLICE_325 ( .D1(\mainTimer.n19 ), 
    .C1(\mainTimer.n12 ), .B1(\mainTimer.n4054 ), .A1(\mainTimer.n18 ), 
    .C0(\mainTimer.clkCont[14] ), .A0(\mainTimer.clkCont[16] ), 
    .F0(\mainTimer.n12 ), .F1(\mainTimer.n3641 ));
  SLICE_328 SLICE_328( .DI1(\Keyboard.n562.sig_082.FeedThruLUT ), 
    .B1(\Keyboard.n562 ), .D0(\Keyboard.n561 ), .C0(\Keyboard.n562 ), 
    .B0(\Keyboard.n560 ), .A0(KEY_STATUS_c_0), .CE(\Keyboard.n607 ), 
    .LSR(\Keyboard.valid_1__N_191 ), .CLK(TIMER_EN_N_19), .Q1(\Keyboard.n561 ), 
    .F0(TIMER_EN_N_19), .F1(\Keyboard.n562.sig_082.FeedThruLUT ));
  Keyboard_SLICE_329 \Keyboard.SLICE_329 ( .C1(\Keyboard.KB_RECV_c ), 
    .B1(\Keyboard.valid_1__N_201[31] ), .A1(\Keyboard.valid_1__N_192[0] ), 
    .D0(\Keyboard.KB_RECV_c ), .C0(\Keyboard.valid_1__N_201[31] ), 
    .B0(\Keyboard.valid_1__N_192[0] ), .F0(\Keyboard.counter_31__N_236 ), 
    .F1(\Keyboard.counter_31__N_300 ));
  Keyboard_SLICE_331 \Keyboard.SLICE_331 ( .C1(\Keyboard.KB_RECV_c ), 
    .B1(\Keyboard.valid_1__N_201[30] ), .A1(\Keyboard.valid_1__N_192[0] ), 
    .D0(\Keyboard.KB_RECV_c ), .B0(\Keyboard.valid_1__N_192[0] ), 
    .A0(\Keyboard.valid_1__N_201[30] ), .F0(\Keyboard.counter_31__N_238 ), 
    .F1(\Keyboard.counter_31__N_303 ));
  Keyboard_SLICE_333 \Keyboard.SLICE_333 ( .D1(\Keyboard.valid_1__N_201[29] ), 
    .C1(\Keyboard.valid_1__N_192[0] ), .B1(\Keyboard.KB_RECV_c ), 
    .C0(\Keyboard.valid_1__N_201[29] ), .B0(\Keyboard.valid_1__N_192[0] ), 
    .A0(\Keyboard.KB_RECV_c ), .F0(\Keyboard.counter_31__N_240 ), 
    .F1(\Keyboard.counter_31__N_306 ));
  Keyboard_SLICE_335 \Keyboard.SLICE_335 ( .C1(\Keyboard.valid_1__N_192[0] ), 
    .B1(\Keyboard.valid_1__N_201[28] ), .A1(\Keyboard.KB_RECV_c ), 
    .D0(\Keyboard.KB_RECV_c ), .B0(\Keyboard.valid_1__N_192[0] ), 
    .A0(\Keyboard.valid_1__N_201[28] ), .F0(\Keyboard.counter_31__N_242 ), 
    .F1(\Keyboard.counter_31__N_309 ));
  Keyboard_SLICE_337 \Keyboard.SLICE_337 ( .D1(\Keyboard.valid_1__N_192[0] ), 
    .C1(\Keyboard.valid_1__N_201[27] ), .A1(\Keyboard.KB_RECV_c ), 
    .D0(\Keyboard.KB_RECV_c ), .B0(\Keyboard.valid_1__N_201[27] ), 
    .A0(\Keyboard.valid_1__N_192[0] ), .F0(\Keyboard.counter_31__N_244 ), 
    .F1(\Keyboard.counter_31__N_312 ));
  Keyboard_SLICE_339 \Keyboard.SLICE_339 ( .C1(\Keyboard.valid_1__N_192[0] ), 
    .B1(\Keyboard.valid_1__N_201[26] ), .A1(\Keyboard.KB_RECV_c ), 
    .D0(\Keyboard.valid_1__N_192[0] ), .C0(\Keyboard.valid_1__N_201[26] ), 
    .B0(\Keyboard.KB_RECV_c ), .F0(\Keyboard.counter_31__N_246 ), 
    .F1(\Keyboard.counter_31__N_315 ));
  Keyboard_SLICE_341 \Keyboard.SLICE_341 ( .D1(\Keyboard.KB_RECV_c ), 
    .C1(\Keyboard.valid_1__N_201[25] ), .B1(\Keyboard.valid_1__N_192[0] ), 
    .C0(\Keyboard.KB_RECV_c ), .B0(\Keyboard.valid_1__N_201[25] ), 
    .A0(\Keyboard.valid_1__N_192[0] ), .F0(\Keyboard.counter_31__N_248 ), 
    .F1(\Keyboard.counter_31__N_318 ));
  Keyboard_SLICE_343 \Keyboard.SLICE_343 ( .D1(\Keyboard.valid_1__N_201[24] ), 
    .C1(\Keyboard.KB_RECV_c ), .B1(\Keyboard.valid_1__N_192[0] ), 
    .C0(\Keyboard.valid_1__N_192[0] ), .B0(\Keyboard.KB_RECV_c ), 
    .A0(\Keyboard.valid_1__N_201[24] ), .F0(\Keyboard.counter_31__N_250 ), 
    .F1(\Keyboard.counter_31__N_321 ));
  Keyboard_SLICE_345 \Keyboard.SLICE_345 ( .C1(\Keyboard.valid_1__N_192[0] ), 
    .B1(\Keyboard.valid_1__N_201[23] ), .A1(\Keyboard.KB_RECV_c ), 
    .D0(\Keyboard.valid_1__N_192[0] ), .C0(\Keyboard.valid_1__N_201[23] ), 
    .B0(\Keyboard.KB_RECV_c ), .F0(\Keyboard.counter_31__N_252 ), 
    .F1(\Keyboard.counter_31__N_324 ));
  Keyboard_SLICE_347 \Keyboard.SLICE_347 ( .C1(\Keyboard.KB_RECV_c ), 
    .B1(\Keyboard.valid_1__N_201[8] ), .A1(\Keyboard.valid_1__N_192[0] ), 
    .D0(\Keyboard.valid_1__N_192[0] ), .B0(\Keyboard.KB_RECV_c ), 
    .A0(\Keyboard.valid_1__N_201[8] ), .F0(\Keyboard.counter_31__N_282 ), 
    .F1(\Keyboard.counter_31__N_369 ));
  Keyboard_SLICE_349 \Keyboard.SLICE_349 ( .C1(\Keyboard.valid_1__N_201[15] ), 
    .B1(\Keyboard.KB_RECV_c ), .A1(\Keyboard.valid_1__N_192[0] ), 
    .D0(\Keyboard.valid_1__N_192[0] ), .B0(\Keyboard.valid_1__N_201[15] ), 
    .A0(\Keyboard.KB_RECV_c ), .F0(\Keyboard.counter_31__N_268 ), 
    .F1(\Keyboard.counter_31__N_348 ));
  Keyboard_SLICE_351 \Keyboard.SLICE_351 ( .D1(\Keyboard.valid_1__N_192[0] ), 
    .C1(\Keyboard.KB_RECV_c ), .A1(\Keyboard.valid_1__N_201[7] ), 
    .D0(\Keyboard.valid_1__N_201[7] ), .C0(\Keyboard.valid_1__N_192[0] ), 
    .B0(\Keyboard.KB_RECV_c ), .F0(\Keyboard.counter_31__N_284 ), 
    .F1(\Keyboard.counter_31__N_372 ));
  Keyboard_SLICE_353 \Keyboard.SLICE_353 ( .D1(\Keyboard.valid_1__N_201[6] ), 
    .C1(\Keyboard.KB_RECV_c ), .B1(\Keyboard.valid_1__N_192[0] ), 
    .D0(\Keyboard.KB_RECV_c ), .C0(\Keyboard.valid_1__N_201[6] ), 
    .A0(\Keyboard.valid_1__N_192[0] ), .F0(\Keyboard.counter_31__N_286 ), 
    .F1(\Keyboard.counter_31__N_375 ));
  Keyboard_SLICE_355 \Keyboard.SLICE_355 ( .D1(\Keyboard.KB_RECV_c ), 
    .C1(\Keyboard.valid_1__N_192[0] ), .A1(\Keyboard.valid_1__N_201[5] ), 
    .D0(\Keyboard.valid_1__N_201[5] ), .B0(\Keyboard.valid_1__N_192[0] ), 
    .A0(\Keyboard.KB_RECV_c ), .F0(\Keyboard.counter_31__N_288 ), 
    .F1(\Keyboard.counter_31__N_378 ));
  Keyboard_SLICE_357 \Keyboard.SLICE_357 ( .C1(\Keyboard.valid_1__N_201[4] ), 
    .B1(\Keyboard.valid_1__N_192[0] ), .A1(\Keyboard.KB_RECV_c ), 
    .C0(\Keyboard.valid_1__N_192[0] ), .B0(\Keyboard.valid_1__N_201[4] ), 
    .A0(\Keyboard.KB_RECV_c ), .F0(\Keyboard.counter_31__N_290 ), 
    .F1(\Keyboard.counter_31__N_381 ));
  Keyboard_SLICE_359 \Keyboard.SLICE_359 ( .D1(\Keyboard.valid_1__N_192[0] ), 
    .C1(\Keyboard.valid_1__N_201[3] ), .A1(\Keyboard.KB_RECV_c ), 
    .D0(\Keyboard.KB_RECV_c ), .B0(\Keyboard.valid_1__N_201[3] ), 
    .A0(\Keyboard.valid_1__N_192[0] ), .F0(\Keyboard.counter_31__N_292 ), 
    .F1(\Keyboard.counter_31__N_384 ));
  Keyboard_SLICE_361 \Keyboard.SLICE_361 ( .D1(\Keyboard.valid_1__N_201[13] ), 
    .C1(\Keyboard.valid_1__N_192[0] ), .A1(\Keyboard.KB_RECV_c ), 
    .D0(\Keyboard.KB_RECV_c ), .C0(\Keyboard.valid_1__N_201[13] ), 
    .B0(\Keyboard.valid_1__N_192[0] ), .F0(\Keyboard.counter_31__N_272 ), 
    .F1(\Keyboard.counter_31__N_354 ));
  Keyboard_SLICE_363 \Keyboard.SLICE_363 ( .D1(\Keyboard.KB_RECV_c ), 
    .C1(\Keyboard.valid_1__N_192[0] ), .A1(\Keyboard.valid_1__N_201[2] ), 
    .D0(\Keyboard.valid_1__N_201[2] ), .C0(\Keyboard.KB_RECV_c ), 
    .B0(\Keyboard.valid_1__N_192[0] ), .F0(\Keyboard.counter_31__N_294 ), 
    .F1(\Keyboard.counter_31__N_387 ));
  Keyboard_SLICE_365 \Keyboard.SLICE_365 ( .D1(\Keyboard.valid_1__N_192[0] ), 
    .B1(\Keyboard.valid_1__N_201[1] ), .A1(\Keyboard.KB_RECV_c ), 
    .C0(\Keyboard.valid_1__N_192[0] ), .B0(\Keyboard.KB_RECV_c ), 
    .A0(\Keyboard.valid_1__N_201[1] ), .F0(\Keyboard.counter_31__N_296 ), 
    .F1(\Keyboard.counter_31__N_390 ));
  Keyboard_SLICE_367 \Keyboard.SLICE_367 ( .C1(\Keyboard.valid_1__N_192[0] ), 
    .B1(\Keyboard.valid_1__N_201[21] ), .A1(\Keyboard.KB_RECV_c ), 
    .D0(\Keyboard.KB_RECV_c ), .C0(\Keyboard.valid_1__N_201[21] ), 
    .B0(\Keyboard.valid_1__N_192[0] ), .F0(\Keyboard.counter_31__N_256 ), 
    .F1(\Keyboard.counter_31__N_330 ));
  Keyboard_SLICE_369 \Keyboard.SLICE_369 ( .D1(\Keyboard.KB_RECV_c ), 
    .C1(\Keyboard.valid_1__N_192[0] ), .A1(\Keyboard.valid_1__N_201[9] ), 
    .D0(\Keyboard.valid_1__N_201[9] ), .B0(\Keyboard.valid_1__N_192[0] ), 
    .A0(\Keyboard.KB_RECV_c ), .F0(\Keyboard.counter_31__N_280 ), 
    .F1(\Keyboard.counter_31__N_366 ));
  Keyboard_SLICE_371 \Keyboard.SLICE_371 ( .C1(\Keyboard.KB_RECV_c ), 
    .B1(\Keyboard.valid_1__N_192[0] ), .A1(\Keyboard.valid_1__N_201[20] ), 
    .D0(\Keyboard.valid_1__N_201[20] ), .B0(\Keyboard.KB_RECV_c ), 
    .A0(\Keyboard.valid_1__N_192[0] ), .F0(\Keyboard.counter_31__N_258 ), 
    .F1(\Keyboard.counter_31__N_333 ));
  Keyboard_SLICE_373 \Keyboard.SLICE_373 ( .D1(\Keyboard.KB_RECV_c ), 
    .C1(\Keyboard.valid_1__N_201[19] ), .A1(\Keyboard.valid_1__N_192[0] ), 
    .D0(\Keyboard.valid_1__N_201[19] ), .C0(\Keyboard.KB_RECV_c ), 
    .B0(\Keyboard.valid_1__N_192[0] ), .F0(\Keyboard.counter_31__N_260 ), 
    .F1(\Keyboard.counter_31__N_336 ));
  Keyboard_SLICE_375 \Keyboard.SLICE_375 ( .D1(\Keyboard.valid_1__N_192[0] ), 
    .B1(\Keyboard.valid_1__N_201[22] ), .A1(\Keyboard.KB_RECV_c ), 
    .D0(\Keyboard.KB_RECV_c ), .C0(\Keyboard.valid_1__N_192[0] ), 
    .A0(\Keyboard.valid_1__N_201[22] ), .F0(\Keyboard.counter_31__N_254 ), 
    .F1(\Keyboard.counter_31__N_327 ));
  Keyboard_SLICE_377 \Keyboard.SLICE_377 ( .C1(\Keyboard.valid_1__N_192[0] ), 
    .B1(\Keyboard.valid_1__N_201[18] ), .A1(\Keyboard.KB_RECV_c ), 
    .D0(\Keyboard.valid_1__N_192[0] ), .B0(\Keyboard.KB_RECV_c ), 
    .A0(\Keyboard.valid_1__N_201[18] ), .F0(\Keyboard.counter_31__N_262 ), 
    .F1(\Keyboard.counter_31__N_339 ));
  Keyboard_SLICE_379 \Keyboard.SLICE_379 ( .D1(\Keyboard.valid_1__N_192[0] ), 
    .C1(\Keyboard.valid_1__N_201[17] ), .A1(\Keyboard.KB_RECV_c ), 
    .D0(\Keyboard.KB_RECV_c ), .C0(\Keyboard.valid_1__N_192[0] ), 
    .B0(\Keyboard.valid_1__N_201[17] ), .F0(\Keyboard.counter_31__N_264 ), 
    .F1(\Keyboard.counter_31__N_342 ));
  Keyboard_SLICE_381 \Keyboard.SLICE_381 ( .D1(\Keyboard.KB_RECV_c ), 
    .C1(\Keyboard.valid_1__N_192[0] ), .B1(\Keyboard.valid_1__N_201[16] ), 
    .D0(\Keyboard.valid_1__N_192[0] ), .C0(\Keyboard.valid_1__N_201[16] ), 
    .A0(\Keyboard.KB_RECV_c ), .F0(\Keyboard.counter_31__N_266 ), 
    .F1(\Keyboard.counter_31__N_345 ));
  Keyboard_SLICE_383 \Keyboard.SLICE_383 ( .C1(\Keyboard.valid_1__N_201[10] ), 
    .B1(\Keyboard.valid_1__N_192[0] ), .A1(\Keyboard.KB_RECV_c ), 
    .D0(\Keyboard.valid_1__N_201[10] ), .C0(\Keyboard.valid_1__N_192[0] ), 
    .B0(\Keyboard.KB_RECV_c ), .F0(\Keyboard.counter_31__N_278 ), 
    .F1(\Keyboard.counter_31__N_363 ));
  Keyboard_SLICE_385 \Keyboard.SLICE_385 ( .D1(\Keyboard.KB_RECV_c ), 
    .C1(\Keyboard.valid_1__N_201[11] ), .A1(\Keyboard.valid_1__N_192[0] ), 
    .D0(\Keyboard.valid_1__N_201[11] ), .B0(\Keyboard.valid_1__N_192[0] ), 
    .A0(\Keyboard.KB_RECV_c ), .F0(\Keyboard.counter_31__N_276 ), 
    .F1(\Keyboard.counter_31__N_360 ));
  Keyboard_SLICE_387 \Keyboard.SLICE_387 ( .C1(\Keyboard.valid_1__N_201[12] ), 
    .B1(\Keyboard.KB_RECV_c ), .A1(\Keyboard.valid_1__N_192[0] ), 
    .D0(\Keyboard.valid_1__N_192[0] ), .B0(\Keyboard.valid_1__N_201[12] ), 
    .A0(\Keyboard.KB_RECV_c ), .F0(\Keyboard.counter_31__N_274 ), 
    .F1(\Keyboard.counter_31__N_357 ));
  Keyboard_SLICE_389 \Keyboard.SLICE_389 ( .C1(\Keyboard.valid_1__N_201[0] ), 
    .B1(\Keyboard.valid_1__N_192[0] ), .A1(\Keyboard.KB_RECV_c ), 
    .D0(\Keyboard.valid_1__N_201[0] ), .C0(\Keyboard.valid_1__N_192[0] ), 
    .B0(\Keyboard.KB_RECV_c ), .F0(\Keyboard.counter_31__N_298 ), 
    .F1(\Keyboard.counter_31__N_393 ));
  Keyboard_SLICE_391 \Keyboard.SLICE_391 ( .D1(\Keyboard.KB_RECV_c ), 
    .C1(\Keyboard.valid_1__N_192[0] ), .B1(\Keyboard.valid_1__N_201[14] ), 
    .D0(\Keyboard.valid_1__N_192[0] ), .C0(\Keyboard.KB_RECV_c ), 
    .A0(\Keyboard.valid_1__N_201[14] ), .F0(\Keyboard.counter_31__N_270 ), 
    .F1(\Keyboard.counter_31__N_351 ));
  STATE_OUT_serial_SLICE_393 \STATE_OUT.serial.SLICE_393 ( .D0(Sreg_c_0), 
    .C0(Sreg_c_1), .B0(\STATE_OUT.serial.n63 ), .A0(\STATE_OUT.serial.aux[0] ), 
    .F0(\STATE_OUT.serial.aux_3__N_116[0] ));
  STATE_OUT_serial_SLICE_394 \STATE_OUT.serial.SLICE_394 ( 
    .DI1(\STATE_OUT.serial.status_out_N_190 ), .D1(\STATE_OUT.serial.n5369 ), 
    .C1(\STATE_OUT.serial.aux_3__N_116[1] ), 
    .B1(\STATE_OUT.serial.aux_3__N_116[0] ), 
    .A1(\STATE_OUT.serial.counter_31__N_183[1] ), .D0(Sreg_c_0), 
    .C0(\STATE_OUT.serial.aux[1] ), .B0(\STATE_OUT.serial.n63 ), .A0(Sreg_c_1), 
    .LSR(\STATE_OUT.serial.counter_31__N_185 ), .CLK(SERCLK_OUT_c), 
    .Q1(STATUS_OUT_c), .F0(\STATE_OUT.serial.aux_3__N_116[1] ), 
    .F1(\STATE_OUT.serial.status_out_N_190 ));
  mainTimer_SLICE_395 \mainTimer.SLICE_395 ( .D1(\mainTimer.clkCont[3] ), 
    .C1(\mainTimer.clkCont[8] ), .B1(\mainTimer.clkCont[15] ), 
    .A1(\mainTimer.clkCont[17] ), .D0(\mainTimer.clkCont[7] ), 
    .B0(\mainTimer.clkCont[2] ), .A0(\mainTimer.clkCont[4] ), 
    .F0(\mainTimer.n4054 ), .F1(\mainTimer.n18 ));
  mainTimer_SLICE_396 \mainTimer.SLICE_396 ( .D0(TIME_OUT), 
    .C0(\mainTimer.clkCont[5] ), .B0(\mainTimer.clkCont[10] ), 
    .A0(\mainTimer.clkCont[6] ), .F0(\mainTimer.n19 ));
  Keyboard_SLICE_397 \Keyboard.SLICE_397 ( .D0(\Keyboard.counter[19] ), 
    .C0(\Keyboard.counter[12] ), .B0(\Keyboard.counter[30] ), 
    .A0(\Keyboard.counter[14] ), .F0(\Keyboard.n52 ));
  Keyboard_SLICE_398 \Keyboard.SLICE_398 ( .D0(\Keyboard.counter[8] ), 
    .C0(\Keyboard.counter[29] ), .B0(\Keyboard.counter[25] ), 
    .A0(\Keyboard.counter[9] ), .F0(\Keyboard.n53 ));
  Keyboard_SLICE_399 \Keyboard.SLICE_399 ( .D0(\Keyboard.counter[15] ), 
    .C0(\Keyboard.counter[6] ), .B0(\Keyboard.counter[28] ), 
    .A0(\Keyboard.counter[10] ), .F0(\Keyboard.n51 ));
  Keyboard_SLICE_400 \Keyboard.SLICE_400 ( .A0(\Keyboard.n444 ), 
    .F0(\Keyboard.n595 ));
  Keyboard_SLICE_403 \Keyboard.SLICE_403 ( .D0(\Keyboard.counter[5] ), 
    .C0(\Keyboard.counter[4] ), .B0(\Keyboard.counter[27] ), 
    .A0(\Keyboard.counter[7] ), .F0(\Keyboard.n49 ));
  Keyboard_SLICE_405 \Keyboard.SLICE_405 ( .A0(\Keyboard.n556 ), 
    .F0(\Keyboard.n606 ));
  Keyboard_SLICE_407 \Keyboard.SLICE_407 ( 
    .DI1(\Keyboard.n553.sig_038.FeedThruLUT ), .D1(\Keyboard.n553 ), 
    .B0(\Keyboard.n552 ), .CE(\Keyboard.n552 ), 
    .LSR(\Keyboard.counter_31__N_303 ), .CLK(TIMER_EN_N_19), 
    .Q1(\Keyboard.n554 ), .F0(\Keyboard.n605 ), 
    .F1(\Keyboard.n553.sig_038.FeedThruLUT ));
  Keyboard_SLICE_408 \Keyboard.SLICE_408 ( .C1(\Keyboard.KB_RECV_c ), 
    .B1(\Keyboard.actualKey_0__1__N_397[1] ), .B0(\Keyboard.KB_RECV_c ), 
    .A0(\Keyboard.actualKey_0__1__N_401[0] ), 
    .F0(\Keyboard.actualKey_0__1__N_402 ), 
    .F1(\Keyboard.actualKey_0__1__N_396 ));
  Keyboard_SLICE_409 \Keyboard.SLICE_409 ( .C0(\Keyboard.n548 ), 
    .F0(\Keyboard.n604 ));
  Keyboard_SLICE_411 \Keyboard.SLICE_411 ( 
    .DI1(\Keyboard.n546.sig_078.FeedThruLUT ), .A1(\Keyboard.n546 ), 
    .B0(\Keyboard.n544 ), .CE(\Keyboard.n603 ), 
    .LSR(\Keyboard.counter_31__N_242 ), .CLK(TIMER_EN_N_19), 
    .Q1(\Keyboard.n545 ), .F0(\Keyboard.n603 ), 
    .F1(\Keyboard.n546.sig_078.FeedThruLUT ));
  Keyboard_SLICE_413 \Keyboard.SLICE_413 ( .A0(\Keyboard.n540 ), 
    .F0(\Keyboard.n602 ));
  Keyboard_SLICE_415 \Keyboard.SLICE_415 ( .C0(\Keyboard.n536 ), 
    .F0(\Keyboard.n601 ));
  Keyboard_SLICE_416 \Keyboard.SLICE_416 ( 
    .B1(\Keyboard.actualKey_0__1__N_397[0] ), .A1(\Keyboard.KB_RECV_c ), 
    .D0(\Keyboard.KB_RECV_c ), .B0(\Keyboard.actualKey_0__1__N_405[0] ), 
    .F0(\Keyboard.actualKey_0__1__N_406 ), 
    .F1(\Keyboard.actualKey_0__1__N_398 ));
  Keyboard_SLICE_417 \Keyboard.SLICE_417 ( 
    .DI1(\Keyboard.n533.sig_033.FeedThruLUT ), .D1(\Keyboard.n533 ), 
    .D0(\Keyboard.n532 ), .CE(\Keyboard.n532 ), 
    .LSR(\Keyboard.counter_31__N_318 ), .CLK(TIMER_EN_N_19), 
    .Q1(\Keyboard.n534 ), .F0(\Keyboard.n600 ), 
    .F1(\Keyboard.n533.sig_033.FeedThruLUT ));
  Keyboard_SLICE_419 \Keyboard.SLICE_419 ( 
    .DI1(\Keyboard.n529.sig_032.FeedThruLUT ), .D1(\Keyboard.n529 ), 
    .B0(\Keyboard.n528 ), .CE(\Keyboard.n528 ), 
    .LSR(\Keyboard.counter_31__N_321 ), .CLK(TIMER_EN_N_19), 
    .Q1(\Keyboard.n530 ), .F0(\Keyboard.n599 ), 
    .F1(\Keyboard.n529.sig_032.FeedThruLUT ));
  Keyboard_SLICE_421 \Keyboard.SLICE_421 ( .A0(\Keyboard.n480 ), 
    .F0(\Keyboard.n586 ));
  Keyboard_SLICE_423 \Keyboard.SLICE_423 ( .B0(\Keyboard.n416 ), 
    .F0(\Keyboard.n580 ));
  STATE_OUT_SLICE_425 \STATE_OUT.SLICE_425 ( .D0(\STATE_OUT.cont[0] ), 
    .C0(\STATE_OUT.cont[1] ), .B0(\STATE_OUT.cont[2] ), 
    .A0(\STATE_OUT.cont[3] ), .F0(\STATE_OUT.n15 ));
  STATE_OUT_serial_SLICE_426 \STATE_OUT.serial.SLICE_426 ( 
    .C1(\STATE_OUT.serial.counter[18] ), .B1(\STATE_OUT.init ), 
    .C0(\STATE_OUT.serial.counter[31] ), .A0(\STATE_OUT.init ), 
    .F0(\STATE_OUT.serial.counter_31__N_121[31] ), 
    .F1(\STATE_OUT.serial.counter_31__N_121[18] ));
  Keyboard_SLICE_427 \Keyboard.SLICE_427 ( .C0(\Keyboard.n460 ), 
    .F0(\Keyboard.n589 ));
  Keyboard_SLICE_428 \Keyboard.SLICE_428 ( 
    .DI1(\Keyboard.n462.sig_064.FeedThruLUT ), .D1(\Keyboard.n462 ), 
    .C0(\Keyboard.n460 ), .B0(\Keyboard.n461 ), .A0(\Keyboard.n462 ), 
    .CE(\Keyboard.n589 ), .LSR(\Keyboard.counter_31__N_294 ), 
    .CLK(TIMER_EN_N_19), .Q1(\Keyboard.n461 ), .F0(\Keyboard.counter[2] ), 
    .F1(\Keyboard.n462.sig_064.FeedThruLUT ));
  STATE_OUT_serial_SLICE_429 \STATE_OUT.serial.SLICE_429 ( 
    .B1(\STATE_OUT.counter[3] ), .A1(\STATE_OUT.init ), 
    .D0(\STATE_OUT.serial.counter[5] ), .C0(\STATE_OUT.counter[2] ), 
    .B0(\STATE_OUT.counter[3] ), .A0(\STATE_OUT.counter[1] ), 
    .F0(\STATE_OUT.serial.n49 ), .F1(\STATE_OUT.counter_31__N_121[3] ));
  STATE_OUT_serial_SLICE_430 \STATE_OUT.serial.SLICE_430 ( 
    .D0(\STATE_OUT.serial.counter[6] ), .C0(\STATE_OUT.counter[0] ), 
    .B0(\STATE_OUT.serial.counter[16] ), .A0(\STATE_OUT.serial.counter[7] ), 
    .F0(\STATE_OUT.serial.n50 ));
  SLICE_431 SLICE_431( .F0(VCC_net));
  Keyboard_SLICE_432 \Keyboard.SLICE_432 ( .D0(\Keyboard.n520 ), 
    .F0(\Keyboard.n567 ));
  Keyboard_SLICE_433 \Keyboard.SLICE_433 ( .A0(\Keyboard.n436 ), 
    .F0(\Keyboard.n568 ));
  Keyboard_SLICE_434 \Keyboard.SLICE_434 ( 
    .DI1(\Keyboard.n433.sig_000.FeedThruLUT ), .D1(\Keyboard.n433 ), 
    .A0(\Keyboard.n432 ), .CE(\Keyboard.n432 ), 
    .LSR(\Keyboard.counter_31__N_366 ), .CLK(TIMER_EN_N_19), 
    .Q1(\Keyboard.n434 ), .F0(\Keyboard.n569 ), 
    .F1(\Keyboard.n433.sig_000.FeedThruLUT ));
  Keyboard_SLICE_435 \Keyboard.SLICE_435 ( .A0(\Keyboard.n516 ), 
    .F0(\Keyboard.n570 ));
  Keyboard_SLICE_436 \Keyboard.SLICE_436 ( .B0(\Keyboard.n512 ), 
    .F0(\Keyboard.n571 ));
  Keyboard_SLICE_437 \Keyboard.SLICE_437 ( 
    .DI1(\Keyboard.n510.sig_047.FeedThruLUT ), .C1(\Keyboard.n510 ), 
    .A0(\Keyboard.n508 ), .CE(\Keyboard.n572 ), 
    .LSR(\Keyboard.counter_31__N_260 ), .CLK(TIMER_EN_N_19), 
    .Q1(\Keyboard.n509 ), .F0(\Keyboard.n572 ), 
    .F1(\Keyboard.n510.sig_047.FeedThruLUT ));
  Keyboard_SLICE_438 \Keyboard.SLICE_438 ( .A0(\Keyboard.n504 ), 
    .F0(\Keyboard.n573 ));
  Keyboard_SLICE_439 \Keyboard.SLICE_439 ( 
    .DI1(\Keyboard.n502.sig_049.FeedThruLUT ), .D1(\Keyboard.n502 ), 
    .C0(\Keyboard.n500 ), .CE(\Keyboard.n574 ), 
    .LSR(\Keyboard.counter_31__N_264 ), .CLK(TIMER_EN_N_19), 
    .Q1(\Keyboard.n501 ), .F0(\Keyboard.n574 ), 
    .F1(\Keyboard.n502.sig_049.FeedThruLUT ));
  Keyboard_SLICE_440 \Keyboard.SLICE_440 ( .D0(\Keyboard.n496 ), 
    .F0(\Keyboard.n575 ));
  Keyboard_SLICE_441 \Keyboard.SLICE_441 ( .A0(\Keyboard.n424 ), 
    .F0(\Keyboard.n579 ));
  Keyboard_SLICE_442 \Keyboard.SLICE_442 ( .A0(\Keyboard.n420 ), 
    .F0(\Keyboard.n581 ));
  Keyboard_SLICE_443 \Keyboard.SLICE_443 ( .A0(\Keyboard.n412 ), 
    .F0(\Keyboard.n582 ));
  Keyboard_SLICE_444 \Keyboard.SLICE_444 ( .A0(\Keyboard.n428 ), 
    .F0(\Keyboard.n583 ));
  Keyboard_SLICE_445 \Keyboard.SLICE_445 ( .A0(\Keyboard.n400 ), 
    .F0(\Keyboard.n587 ));
  Keyboard_SLICE_446 \Keyboard.SLICE_446 ( 
    .DI1(\Keyboard.n465.sig_021.FeedThruLUT ), .A1(\Keyboard.n465 ), 
    .B0(\Keyboard.n464 ), .CE(\Keyboard.n464 ), 
    .LSR(\Keyboard.counter_31__N_390 ), .CLK(TIMER_EN_N_19), 
    .Q1(\Keyboard.n466 ), .F0(\Keyboard.n588 ), 
    .F1(\Keyboard.n465.sig_021.FeedThruLUT ));
  Keyboard_SLICE_447 \Keyboard.SLICE_447 ( 
    .DI1(\Keyboard.n458.sig_065.FeedThruLUT ), .B1(\Keyboard.n458 ), 
    .A0(\Keyboard.n456 ), .CE(\Keyboard.n590 ), 
    .LSR(\Keyboard.counter_31__N_292 ), .CLK(TIMER_EN_N_19), 
    .Q1(\Keyboard.n457 ), .F0(\Keyboard.n590 ), 
    .F1(\Keyboard.n458.sig_065.FeedThruLUT ));
  Keyboard_SLICE_448 \Keyboard.SLICE_448 ( 
    .DI1(\Keyboard.n454.sig_066.FeedThruLUT ), .A1(\Keyboard.n454 ), 
    .B0(\Keyboard.n452 ), .CE(\Keyboard.n591 ), 
    .LSR(\Keyboard.counter_31__N_290 ), .CLK(TIMER_EN_N_19), 
    .Q1(\Keyboard.n453 ), .F0(\Keyboard.n591 ), 
    .F1(\Keyboard.n454.sig_066.FeedThruLUT ));
  Keyboard_SLICE_449 \Keyboard.SLICE_449 ( 
    .DI1(\Keyboard.n478.sig_067.FeedThruLUT ), .C1(\Keyboard.n478 ), 
    .A0(\Keyboard.n476 ), .CE(\Keyboard.n592 ), 
    .LSR(\Keyboard.actualKey_0__1__N_400 ), .CLK(TIMER_EN_N_19), 
    .Q1(\Keyboard.n477 ), .F0(\Keyboard.n592 ), 
    .F1(\Keyboard.n478.sig_067.FeedThruLUT ));
  Keyboard_SLICE_450 \Keyboard.SLICE_450 ( .A0(\Keyboard.n404 ), 
    .F0(\Keyboard.n593 ));
  Keyboard_SLICE_451 \Keyboard.SLICE_451 ( .A0(\Keyboard.n448 ), 
    .F0(\Keyboard.n594 ));
  Keyboard_SLICE_452 \Keyboard.SLICE_452 ( 
    .DI1(\Keyboard.n441.sig_028.FeedThruLUT ), .A1(\Keyboard.n441 ), 
    .A0(\Keyboard.n440 ), .CE(\Keyboard.n440 ), 
    .LSR(\Keyboard.counter_31__N_372 ), .CLK(TIMER_EN_N_19), 
    .Q1(\Keyboard.n442 ), .F0(\Keyboard.n596 ), 
    .F1(\Keyboard.n441.sig_028.FeedThruLUT ));
  Keyboard_SLICE_453 \Keyboard.SLICE_453 ( .C0(\Keyboard.n396 ), 
    .F0(\Keyboard.n597 ));
  Keyboard_SLICE_454 \Keyboard.SLICE_454 ( .A0(\Keyboard.n524 ), 
    .F0(\Keyboard.n598 ));
  Keyboard_SLICE_455 \Keyboard.SLICE_455 ( .B0(\Keyboard.n560 ), 
    .F0(\Keyboard.n607 ));
  SLICE_460 SLICE_460( .F0(GND_net));
  STATE_OUT_SLICE_462 \STATE_OUT.SLICE_462 ( .DI1(\STATE_OUT.n611 ), 
    .D1(\STATE_OUT.waiting ), .C1(\STATE_OUT.init ), .B1(\STATE_OUT.n15 ), 
    .A1(STATUS_SEND_c), .D0(\STATE_OUT.init ), .A0(\STATE_OUT.counter[0] ), 
    .CLK(SERCLK_OUT_c), .Q1(\STATE_OUT.init ), 
    .F0(\STATE_OUT.counter_31__N_121[0] ), .F1(\STATE_OUT.n611 ));
  STATE_OUT_SLICE_463 \STATE_OUT.SLICE_463 ( 
    .DI1(\STATE_OUT.init.sig_084.FeedThruLUT ), .D1(\STATE_OUT.init ), 
    .B0(STATUS_SEND_c), .CE(\STATE_OUT.serial.n388 ), .CLK(SERCLK_OUT_c), 
    .Q1(STATUS_SEND_c), .F0(\STATE_OUT.state_send_N_67 ), 
    .F1(\STATE_OUT.init.sig_084.FeedThruLUT ));
  STATE_OUT_SLICE_464 \STATE_OUT.SLICE_464 ( .DI1(\STATE_OUT.n1634 ), 
    .D1(\STATE_OUT.waiting ), .B1(\STATE_OUT.n15 ), .C0(\STATE_OUT.waiting ), 
    .B0(\STATE_OUT.cont[0] ), .A0(\STATE_OUT.cont[1] ), 
    .LSR(\STATE_OUT.state_send_N_67 ), .CLK(SERCLK_OUT_c), 
    .Q1(\STATE_OUT.waiting ), .F0(\STATE_OUT.n2660 ), .F1(\STATE_OUT.n1634 ));
  STATE_OUT_SLICE_466 \STATE_OUT.SLICE_466 ( .C1(\STATE_OUT.init ), 
    .B1(\STATE_OUT.counter[2] ), .D0(\STATE_OUT.init ), 
    .A0(\STATE_OUT.counter[1] ), .F0(\STATE_OUT.counter_31__N_121[1] ), 
    .F1(\STATE_OUT.counter_31__N_121[2] ));
  STATE_OUT_serial_SLICE_469 \STATE_OUT.serial.SLICE_469 ( 
    .D1(\STATE_OUT.serial.counter[16] ), .C1(\STATE_OUT.init ), 
    .D0(\STATE_OUT.init ), .A0(\STATE_OUT.serial.counter[17] ), 
    .F0(\STATE_OUT.serial.counter_31__N_121[17] ), 
    .F1(\STATE_OUT.serial.counter_31__N_121[16] ));
  STATE_OUT_serial_SLICE_471 \STATE_OUT.serial.SLICE_471 ( 
    .C1(\STATE_OUT.init ), .B1(\STATE_OUT.serial.counter[14] ), 
    .D0(\STATE_OUT.init ), .A0(\STATE_OUT.serial.counter[15] ), 
    .F0(\STATE_OUT.serial.counter_31__N_121[15] ), 
    .F1(\STATE_OUT.serial.counter_31__N_121[14] ));
  STATE_OUT_serial_SLICE_473 \STATE_OUT.serial.SLICE_473 ( 
    .B1(\STATE_OUT.serial.counter[12] ), .A1(\STATE_OUT.init ), 
    .B0(\STATE_OUT.init ), .A0(\STATE_OUT.serial.counter[13] ), 
    .F0(\STATE_OUT.serial.counter_31__N_121[13] ), 
    .F1(\STATE_OUT.serial.counter_31__N_121[12] ));
  STATE_OUT_serial_SLICE_475 \STATE_OUT.serial.SLICE_475 ( 
    .D1(\STATE_OUT.serial.counter[11] ), .C1(\STATE_OUT.serial.counter[18] ), 
    .B1(\STATE_OUT.serial.counter[28] ), .A1(\STATE_OUT.serial.counter[26] ), 
    .C0(\STATE_OUT.serial.counter[11] ), .A0(\STATE_OUT.init ), 
    .F0(\STATE_OUT.serial.counter_31__N_121[11] ), .F1(\STATE_OUT.serial.n54 ));
  STATE_OUT_serial_SLICE_476 \STATE_OUT.serial.SLICE_476 ( 
    .D1(\STATE_OUT.serial.counter[9] ), .B1(\STATE_OUT.init ), 
    .C0(\STATE_OUT.serial.counter[10] ), .A0(\STATE_OUT.init ), 
    .F0(\STATE_OUT.serial.counter_31__N_121[10] ), 
    .F1(\STATE_OUT.serial.counter_31__N_121[9] ));
  STATE_OUT_serial_SLICE_478 \STATE_OUT.serial.SLICE_478 ( 
    .D1(\STATE_OUT.init ), .B1(\STATE_OUT.serial.counter[7] ), 
    .C0(\STATE_OUT.init ), .A0(\STATE_OUT.serial.counter[8] ), 
    .F0(\STATE_OUT.serial.counter_31__N_121[8] ), 
    .F1(\STATE_OUT.serial.counter_31__N_121[7] ));
  STATE_OUT_serial_SLICE_480 \STATE_OUT.serial.SLICE_480 ( 
    .D1(\STATE_OUT.serial.counter[5] ), .A1(\STATE_OUT.init ), 
    .D0(\STATE_OUT.serial.counter[6] ), .B0(\STATE_OUT.init ), 
    .F0(\STATE_OUT.serial.counter_31__N_121[6] ), 
    .F1(\STATE_OUT.serial.counter_31__N_121[5] ));
  STATE_OUT_serial_SLICE_482 \STATE_OUT.serial.SLICE_482 ( 
    .D1(\STATE_OUT.serial.counter[14] ), .C1(\STATE_OUT.serial.counter[24] ), 
    .B1(\STATE_OUT.serial.counter[12] ), .A1(\STATE_OUT.serial.counter[4] ), 
    .D0(\STATE_OUT.init ), .B0(\STATE_OUT.serial.counter[4] ), 
    .F0(\STATE_OUT.serial.counter_31__N_121[4] ), .F1(\STATE_OUT.serial.n52 ));
  STATE_OUT_serial_SLICE_483 \STATE_OUT.serial.SLICE_483 ( 
    .D1(\STATE_OUT.init ), .C1(\STATE_OUT.serial.n63 ), 
    .D0(\STATE_OUT.serial.n63 ), .A0(\STATE_OUT.init ), 
    .F0(\STATE_OUT.serial.n388 ), .F1(\STATE_OUT.serial.counter_31__N_185 ));
  STATE_OUT_serial_SLICE_487 \STATE_OUT.serial.SLICE_487 ( 
    .D0(\STATE_OUT.serial.counter[23] ), .C0(\STATE_OUT.serial.counter[10] ), 
    .B0(\STATE_OUT.serial.counter[27] ), .A0(\STATE_OUT.serial.counter[13] ), 
    .F0(\STATE_OUT.serial.n55 ));
  STATE_OUT_serial_SLICE_489 \STATE_OUT.serial.SLICE_489 ( 
    .D1(\STATE_OUT.serial.counter[20] ), .C1(\STATE_OUT.init ), 
    .B0(\STATE_OUT.init ), .A0(\STATE_OUT.serial.counter[19] ), 
    .F0(\STATE_OUT.serial.counter_31__N_121[19] ), 
    .F1(\STATE_OUT.serial.counter_31__N_121[20] ));
  STATE_OUT_serial_SLICE_491 \STATE_OUT.serial.SLICE_491 ( 
    .C1(\STATE_OUT.init ), .A1(\STATE_OUT.serial.counter[22] ), 
    .D0(\STATE_OUT.serial.counter[21] ), .B0(\STATE_OUT.init ), 
    .F0(\STATE_OUT.serial.counter_31__N_121[21] ), 
    .F1(\STATE_OUT.serial.counter_31__N_121[22] ));
  STATE_OUT_serial_SLICE_493 \STATE_OUT.serial.SLICE_493 ( 
    .B1(\STATE_OUT.init ), .A1(\STATE_OUT.serial.counter[24] ), 
    .C0(\STATE_OUT.init ), .A0(\STATE_OUT.serial.counter[23] ), 
    .F0(\STATE_OUT.serial.counter_31__N_121[23] ), 
    .F1(\STATE_OUT.serial.counter_31__N_121[24] ));
  STATE_OUT_serial_SLICE_495 \STATE_OUT.serial.SLICE_495 ( 
    .D1(\STATE_OUT.init ), .C1(\STATE_OUT.serial.counter[26] ), 
    .B0(\STATE_OUT.serial.counter[25] ), .A0(\STATE_OUT.init ), 
    .F0(\STATE_OUT.serial.counter_31__N_121[25] ), 
    .F1(\STATE_OUT.serial.counter_31__N_121[26] ));
  STATE_OUT_serial_SLICE_497 \STATE_OUT.serial.SLICE_497 ( 
    .D1(\STATE_OUT.init ), .B1(\STATE_OUT.serial.counter[28] ), 
    .C0(\STATE_OUT.init ), .B0(\STATE_OUT.serial.counter[27] ), 
    .F0(\STATE_OUT.serial.counter_31__N_121[27] ), 
    .F1(\STATE_OUT.serial.counter_31__N_121[28] ));
  STATE_OUT_serial_SLICE_499 \STATE_OUT.serial.SLICE_499 ( 
    .D1(\STATE_OUT.serial.counter[30] ), .B1(\STATE_OUT.init ), 
    .B0(\STATE_OUT.serial.counter[29] ), .A0(\STATE_OUT.init ), 
    .F0(\STATE_OUT.serial.counter_31__N_121[29] ), 
    .F1(\STATE_OUT.serial.counter_31__N_121[30] ));
  mainTimer_SLICE_503 \mainTimer.SLICE_503 ( .DI1(\mainTimer.n5776 ), 
    .D1(\mainTimer.clkCont[0] ), .C1(\mainTimer.n12_adj_443 ), 
    .B1(\mainTimer.n3641 ), .A1(\mainTimer.clkCont[13] ), 
    .D0(\mainTimer.clkCont[12] ), .C0(\mainTimer.clkCont[9] ), 
    .B0(\mainTimer.clkCont[11] ), .A0(\mainTimer.clkCont[1] ), 
    .LSR(\mainTimer.clkCont_17__N_38 ), .CLK(SERCLK_OUT_c), .Q1(TIME_OUT), 
    .F0(\mainTimer.n12_adj_443 ), .F1(\mainTimer.n5776 ));
  KB_RECV KB_RECV_I( .PADDI(\Keyboard.KB_RECV_c ), .KB_RECV(KB_RECV));
  OSCInst1 OSCInst1( .CLKLFPU(VCC_net), .CLKLFEN(VCC_net), 
    .CLKLF(SERCLK_OUT_c));
  SIREN_OUT SIREN_OUT_I( .PADDO(SIREN_OUT_c), .SIREN_OUT(SIREN_OUT));
  STATUS_OUT STATUS_OUT_I( .PADDO(STATUS_OUT_c), .STATUS_OUT(STATUS_OUT));
  STATUS_SEND STATUS_SEND_I( .PADDO(STATUS_SEND_c), .STATUS_SEND(STATUS_SEND));
  SERCLK_OUT SERCLK_OUT_I( .PADDO(SERCLK_OUT_c), .SERCLK_OUT(SERCLK_OUT));
  RESET_OUT RESET_OUT_I( .PADDO(GND_net), .RESET_OUT(RESET_OUT));
  Sreg_1_ \Sreg[1]_I ( .PADDO(Sreg_c_1), .Sreg1(Sreg[1]));
  Sreg_0_ \Sreg[0]_I ( .PADDO(Sreg_c_0), .Sreg0(Sreg[0]));
  KEY_STATUS_1_ \KEY_STATUS[1]_I ( .PADDO(KEY_STATUS_c_1), 
    .KEYSTATUS1(KEY_STATUS[1]));
  KEY_STATUS_0_ \KEY_STATUS[0]_I ( .PADDO(KEY_STATUS_c_0), 
    .KEYSTATUS0(KEY_STATUS[0]));
  DEBUG_KEY_1_ \DEBUG_KEY[1]_I ( .PADDO(DEBUG_KEY_c_1), 
    .DEBUGKEY1(DEBUG_KEY[1]));
  DEBUG_KEY_0_ \DEBUG_KEY[0]_I ( .PADDO(DEBUG_KEY_c_0), 
    .DEBUGKEY0(DEBUG_KEY[0]));
  SENSOR1_IN SENSOR1_IN_I( .PADDI(SENSOR1_IN_c), .SENSOR1_IN(SENSOR1_IN));
  SENSOR2_IN SENSOR2_IN_I( .PADDI(SENSOR2_IN_c), .SENSOR2_IN(SENSOR2_IN));
  KB_IN_1_ \KB_IN[1]_I ( .PADDI(KB_IN_c_1), .KBIN1(KB_IN[1]));
  KB_IN_0_ \KB_IN[0]_I ( .PADDI(KB_IN_c_0), .KBIN0(KB_IN[0]));
endmodule

module Keyboard_SLICE_0 ( input D1, D0, B0, CIN0, CIN1, output F0, COUT0 );
  wire   GNDI;

  fa2 \Keyboard/counter_31__I_0_add_5_33 ( .A0(GNDI), .B0(B0), .C0(GNDI), 
    .D0(D0), .A1(GNDI), .B1(GNDI), .C1(GNDI), .D1(D1), .CI0(CIN0), .CI1(CIN1), 
    .S0(F0), .S1(), .CO0(COUT0), .CO1());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
  endspecify

endmodule

module fa2 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI0, CI1, output S0, S1, 
    CO0, CO1 );

  FA2 inst1( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .CI0(CI0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .CI1(CI1), .CO0(CO0), .CO1(CO1), .S0(S0), .S1(S1));
  defparam inst1.INIT0 = "0xc33c";
  defparam inst1.INIT1 = "0xc33c";
endmodule

module gnd ( output PWR0 );

  VLO INST1( .Z(PWR0));
endmodule

module Keyboard_SLICE_1 ( input D1, B1, D0, B0, CIN0, CIN1, output F0, F1, 
    COUT1, COUT0 );
  wire   GNDI;

  fa2 \Keyboard/counter_31__I_0_add_5_31 ( .A0(GNDI), .B0(B0), .C0(GNDI), 
    .D0(D0), .A1(GNDI), .B1(B1), .C1(GNDI), .D1(D1), .CI0(CIN0), .CI1(CIN1), 
    .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module Keyboard_SLICE_2 ( input D1, B1, D0, B0, CIN0, CIN1, output F0, F1, 
    COUT1, COUT0 );
  wire   GNDI;

  fa2 \Keyboard/counter_31__I_0_add_5_29 ( .A0(GNDI), .B0(B0), .C0(GNDI), 
    .D0(D0), .A1(GNDI), .B1(B1), .C1(GNDI), .D1(D1), .CI0(CIN0), .CI1(CIN1), 
    .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module Keyboard_SLICE_3 ( input D1, B1, D0, B0, CIN0, CIN1, output F0, F1, 
    COUT1, COUT0 );
  wire   GNDI;

  fa2 \Keyboard/counter_31__I_0_add_5_27 ( .A0(GNDI), .B0(B0), .C0(GNDI), 
    .D0(D0), .A1(GNDI), .B1(B1), .C1(GNDI), .D1(D1), .CI0(CIN0), .CI1(CIN1), 
    .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module Keyboard_SLICE_4 ( input D1, B1, D0, B0, CIN0, CIN1, output F0, F1, 
    COUT1, COUT0 );
  wire   GNDI;

  fa2 \Keyboard/counter_31__I_0_add_5_25 ( .A0(GNDI), .B0(B0), .C0(GNDI), 
    .D0(D0), .A1(GNDI), .B1(B1), .C1(GNDI), .D1(D1), .CI0(CIN0), .CI1(CIN1), 
    .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module Keyboard_SLICE_5 ( input D1, B1, D0, B0, CIN0, CIN1, output F0, F1, 
    COUT1, COUT0 );
  wire   GNDI;

  fa2 \Keyboard/counter_31__I_0_add_5_23 ( .A0(GNDI), .B0(B0), .C0(GNDI), 
    .D0(D0), .A1(GNDI), .B1(B1), .C1(GNDI), .D1(D1), .CI0(CIN0), .CI1(CIN1), 
    .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module Keyboard_SLICE_6 ( input D1, B1, D0, B0, CIN0, CIN1, output F0, F1, 
    COUT1, COUT0 );
  wire   GNDI;

  fa2 \Keyboard/counter_31__I_0_add_5_21 ( .A0(GNDI), .B0(B0), .C0(GNDI), 
    .D0(D0), .A1(GNDI), .B1(B1), .C1(GNDI), .D1(D1), .CI0(CIN0), .CI1(CIN1), 
    .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module Keyboard_SLICE_7 ( input D1, B1, D0, B0, CIN0, CIN1, output F0, F1, 
    COUT1, COUT0 );
  wire   GNDI;

  fa2 \Keyboard/counter_31__I_0_add_5_19 ( .A0(GNDI), .B0(B0), .C0(GNDI), 
    .D0(D0), .A1(GNDI), .B1(B1), .C1(GNDI), .D1(D1), .CI0(CIN0), .CI1(CIN1), 
    .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module Keyboard_SLICE_8 ( input D1, B1, D0, B0, CIN0, CIN1, output F0, F1, 
    COUT1, COUT0 );
  wire   GNDI;

  fa2 \Keyboard/counter_31__I_0_add_5_17 ( .A0(GNDI), .B0(B0), .C0(GNDI), 
    .D0(D0), .A1(GNDI), .B1(B1), .C1(GNDI), .D1(D1), .CI0(CIN0), .CI1(CIN1), 
    .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module Keyboard_SLICE_9 ( input D1, B1, D0, B0, CIN0, CIN1, output F0, F1, 
    COUT1, COUT0 );
  wire   GNDI;

  fa2 \Keyboard/counter_31__I_0_add_5_15 ( .A0(GNDI), .B0(B0), .C0(GNDI), 
    .D0(D0), .A1(GNDI), .B1(B1), .C1(GNDI), .D1(D1), .CI0(CIN0), .CI1(CIN1), 
    .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module Keyboard_SLICE_10 ( input D1, B1, D0, B0, CIN0, CIN1, output F0, F1, 
    COUT1, COUT0 );
  wire   GNDI;

  fa2 \Keyboard/counter_31__I_0_add_5_5 ( .A0(GNDI), .B0(B0), .C0(GNDI), 
    .D0(D0), .A1(GNDI), .B1(B1), .C1(GNDI), .D1(D1), .CI0(CIN0), .CI1(CIN1), 
    .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module Keyboard_SLICE_11 ( input D1, B1, D0, B0, CIN0, CIN1, output F0, F1, 
    COUT1, COUT0 );
  wire   GNDI;

  fa2 \Keyboard/counter_31__I_0_add_5_9 ( .A0(GNDI), .B0(B0), .C0(GNDI), 
    .D0(D0), .A1(GNDI), .B1(B1), .C1(GNDI), .D1(D1), .CI0(CIN0), .CI1(CIN1), 
    .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module Keyboard_SLICE_12 ( input D1, C1, B1, CIN1, output F1, COUT1, COUT0 );
  wire   GNDI, VCCI;

  fa2 \Keyboard/counter_31__I_0_add_5_1 ( .A0(GNDI), .B0(GNDI), .C0(GNDI), 
    .D0(VCCI), .A1(GNDI), .B1(B1), .C1(C1), .D1(D1), .CI0(VCCI), .CI1(CIN1), 
    .S0(), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module vcc ( output PWR1 );

  VHI INST1( .Z(PWR1));
endmodule

module Keyboard_SLICE_13 ( input D1, B1, D0, B0, CIN0, CIN1, output F0, F1, 
    COUT1, COUT0 );
  wire   GNDI;

  fa2 \Keyboard/counter_31__I_0_add_5_3 ( .A0(GNDI), .B0(B0), .C0(GNDI), 
    .D0(D0), .A1(GNDI), .B1(B1), .C1(GNDI), .D1(D1), .CI0(CIN0), .CI1(CIN1), 
    .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module Keyboard_SLICE_14 ( input D1, B1, D0, B0, CIN0, CIN1, output F0, F1, 
    COUT1, COUT0 );
  wire   GNDI;

  fa2 \Keyboard/counter_31__I_0_add_5_13 ( .A0(GNDI), .B0(B0), .C0(GNDI), 
    .D0(D0), .A1(GNDI), .B1(B1), .C1(GNDI), .D1(D1), .CI0(CIN0), .CI1(CIN1), 
    .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module Keyboard_SLICE_15 ( input D1, B1, D0, B0, CIN0, CIN1, output F0, F1, 
    COUT1, COUT0 );
  wire   GNDI;

  fa2 \Keyboard/counter_31__I_0_add_5_7 ( .A0(GNDI), .B0(B0), .C0(GNDI), 
    .D0(D0), .A1(GNDI), .B1(B1), .C1(GNDI), .D1(D1), .CI0(CIN0), .CI1(CIN1), 
    .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module Keyboard_SLICE_16 ( input D1, B1, D0, B0, CIN0, CIN1, output F0, F1, 
    COUT1, COUT0 );
  wire   GNDI;

  fa2 \Keyboard/counter_31__I_0_add_5_11 ( .A0(GNDI), .B0(B0), .C0(GNDI), 
    .D0(D0), .A1(GNDI), .B1(B1), .C1(GNDI), .D1(D1), .CI0(CIN0), .CI1(CIN1), 
    .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module STATE_OUT_serial_SLICE_17 ( input D1, D0, C0, B0, CIN0, CIN1, output F0, 
    COUT0 );
  wire   GNDI;

  fa2 \STATE_OUT/serial/sub_11_add_2_add_5_33 ( .A0(GNDI), .B0(B0), .C0(C0), 
    .D0(D0), .A1(GNDI), .B1(GNDI), .C1(GNDI), .D1(D1), .CI0(CIN0), .CI1(CIN1), 
    .S0(F0), .S1(), .CO0(COUT0), .CO1());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
  endspecify

endmodule

module STATE_OUT_serial_SLICE_18 ( input D1, C1, B1, D0, C0, B0, CIN0, CIN1, 
    output F0, F1, COUT1, COUT0 );
  wire   GNDI;

  fa2 \STATE_OUT/serial/sub_11_add_2_add_5_31 ( .A0(GNDI), .B0(B0), .C0(C0), 
    .D0(D0), .A1(GNDI), .B1(B1), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), 
    .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module STATE_OUT_serial_SLICE_19 ( input D1, C1, B1, D0, C0, B0, CIN0, CIN1, 
    output F0, F1, COUT1, COUT0 );
  wire   GNDI;

  fa2 \STATE_OUT/serial/sub_11_add_2_add_5_29 ( .A0(GNDI), .B0(B0), .C0(C0), 
    .D0(D0), .A1(GNDI), .B1(B1), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), 
    .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module STATE_OUT_serial_SLICE_20 ( input D1, C1, B1, D0, C0, B0, CIN0, CIN1, 
    output F0, F1, COUT1, COUT0 );
  wire   GNDI;

  fa2 \STATE_OUT/serial/sub_11_add_2_add_5_27 ( .A0(GNDI), .B0(B0), .C0(C0), 
    .D0(D0), .A1(GNDI), .B1(B1), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), 
    .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module STATE_OUT_serial_SLICE_21 ( input D1, C1, B1, D0, C0, B0, CIN0, CIN1, 
    output F0, F1, COUT1, COUT0 );
  wire   GNDI;

  fa2 \STATE_OUT/serial/sub_11_add_2_add_5_25 ( .A0(GNDI), .B0(B0), .C0(C0), 
    .D0(D0), .A1(GNDI), .B1(B1), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), 
    .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module STATE_OUT_serial_SLICE_22 ( input D1, C1, B1, D0, C0, B0, CIN0, CIN1, 
    output F0, F1, COUT1, COUT0 );
  wire   GNDI;

  fa2 \STATE_OUT/serial/sub_11_add_2_add_5_23 ( .A0(GNDI), .B0(B0), .C0(C0), 
    .D0(D0), .A1(GNDI), .B1(B1), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), 
    .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module STATE_OUT_serial_SLICE_23 ( input D1, C1, B1, D0, C0, B0, CIN0, CIN1, 
    output F0, F1, COUT1, COUT0 );
  wire   GNDI;

  fa2 \STATE_OUT/serial/sub_11_add_2_add_5_21 ( .A0(GNDI), .B0(B0), .C0(C0), 
    .D0(D0), .A1(GNDI), .B1(B1), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), 
    .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module STATE_OUT_serial_SLICE_24 ( input D1, C1, B1, D0, C0, B0, CIN0, CIN1, 
    output F0, F1, COUT1, COUT0 );
  wire   GNDI;

  fa2 \STATE_OUT/serial/sub_11_add_2_add_5_19 ( .A0(GNDI), .B0(B0), .C0(C0), 
    .D0(D0), .A1(GNDI), .B1(B1), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), 
    .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module STATE_OUT_serial_SLICE_25 ( input D1, C1, B1, D0, C0, B0, CIN0, CIN1, 
    output F0, F1, COUT1, COUT0 );
  wire   GNDI;

  fa2 \STATE_OUT/serial/sub_11_add_2_add_5_17 ( .A0(GNDI), .B0(B0), .C0(C0), 
    .D0(D0), .A1(GNDI), .B1(B1), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), 
    .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module STATE_OUT_serial_SLICE_26 ( input D1, C1, B1, D0, C0, B0, CIN0, CIN1, 
    output F0, F1, COUT1, COUT0 );
  wire   GNDI;

  fa2 \STATE_OUT/serial/sub_11_add_2_add_5_15 ( .A0(GNDI), .B0(B0), .C0(C0), 
    .D0(D0), .A1(GNDI), .B1(B1), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), 
    .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module STATE_OUT_serial_SLICE_27 ( input D1, C1, B1, D0, C0, B0, CIN0, CIN1, 
    output F0, F1, COUT1, COUT0 );
  wire   GNDI;

  fa2 \STATE_OUT/serial/sub_11_add_2_add_5_13 ( .A0(GNDI), .B0(B0), .C0(C0), 
    .D0(D0), .A1(GNDI), .B1(B1), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), 
    .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module STATE_OUT_serial_SLICE_28 ( input D1, C1, B1, D0, C0, B0, CIN0, CIN1, 
    output F0, F1, COUT1, COUT0 );
  wire   GNDI;

  fa2 \STATE_OUT/serial/sub_11_add_2_add_5_11 ( .A0(GNDI), .B0(B0), .C0(C0), 
    .D0(D0), .A1(GNDI), .B1(B1), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), 
    .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module STATE_OUT_serial_SLICE_29 ( input D1, C1, B1, D0, C0, B0, CIN0, CIN1, 
    output F0, F1, COUT1, COUT0 );
  wire   GNDI;

  fa2 \STATE_OUT/serial/sub_11_add_2_add_5_9 ( .A0(GNDI), .B0(B0), .C0(C0), 
    .D0(D0), .A1(GNDI), .B1(B1), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), 
    .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module STATE_OUT_serial_SLICE_30 ( input D1, C1, B1, D0, C0, B0, CIN0, CIN1, 
    output F0, F1, COUT1, COUT0 );
  wire   GNDI;

  fa2 \STATE_OUT/serial/sub_11_add_2_add_5_7 ( .A0(GNDI), .B0(B0), .C0(C0), 
    .D0(D0), .A1(GNDI), .B1(B1), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), 
    .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module STATE_OUT_serial_SLICE_31 ( input D1, C1, B1, D0, C0, B0, CIN0, CIN1, 
    output F0, F1, COUT1, COUT0 );
  wire   GNDI;

  fa2 \STATE_OUT/serial/sub_11_add_2_add_5_5 ( .A0(GNDI), .B0(B0), .C0(C0), 
    .D0(D0), .A1(GNDI), .B1(B1), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), 
    .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module STATE_OUT_serial_SLICE_32 ( input D1, C1, B1, D0, C0, B0, CIN0, CIN1, 
    output F0, F1, COUT1, COUT0 );
  wire   GNDI;

  fa2 \STATE_OUT/serial/sub_11_add_2_add_5_3 ( .A0(GNDI), .B0(B0), .C0(C0), 
    .D0(D0), .A1(GNDI), .B1(B1), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), 
    .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module STATE_OUT_serial_SLICE_33 ( input D1, C1, B1, CIN1, output F1, COUT1, 
    COUT0 );
  wire   GNDI, VCCI;

  fa2 \STATE_OUT/serial/sub_11_add_2_add_5_1 ( .A0(GNDI), .B0(GNDI), .C0(GNDI), 
    .D0(VCCI), .A1(GNDI), .B1(B1), .C1(C1), .D1(D1), .CI0(VCCI), .CI1(CIN1), 
    .S0(), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module mainTimer_SLICE_34 ( input D1, D0, B0, CIN0, CIN1, output F0, COUT0 );
  wire   GNDI;

  fa2 \mainTimer/add_7_add_5_19 ( .A0(GNDI), .B0(B0), .C0(GNDI), .D0(D0), 
    .A1(GNDI), .B1(GNDI), .C1(GNDI), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(), .CO0(COUT0), .CO1());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
  endspecify

endmodule

module mainTimer_SLICE_35 ( input D1, B1, D0, B0, CIN0, CIN1, output F0, F1, 
    COUT1, COUT0 );
  wire   GNDI;

  fa2 \mainTimer/add_7_add_5_17 ( .A0(GNDI), .B0(B0), .C0(GNDI), .D0(D0), 
    .A1(GNDI), .B1(B1), .C1(GNDI), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module mainTimer_SLICE_36 ( input D1, B1, D0, B0, CIN0, CIN1, output F0, F1, 
    COUT1, COUT0 );
  wire   GNDI;

  fa2 \mainTimer/add_7_add_5_15 ( .A0(GNDI), .B0(B0), .C0(GNDI), .D0(D0), 
    .A1(GNDI), .B1(B1), .C1(GNDI), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module mainTimer_SLICE_37 ( input D1, B1, D0, B0, CIN0, CIN1, output F0, F1, 
    COUT1, COUT0 );
  wire   GNDI;

  fa2 \mainTimer/add_7_add_5_13 ( .A0(GNDI), .B0(B0), .C0(GNDI), .D0(D0), 
    .A1(GNDI), .B1(B1), .C1(GNDI), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module mainTimer_SLICE_38 ( input D1, B1, D0, B0, CIN0, CIN1, output F0, F1, 
    COUT1, COUT0 );
  wire   GNDI;

  fa2 \mainTimer/add_7_add_5_11 ( .A0(GNDI), .B0(B0), .C0(GNDI), .D0(D0), 
    .A1(GNDI), .B1(B1), .C1(GNDI), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module mainTimer_SLICE_39 ( input D1, B1, D0, B0, CIN0, CIN1, output F0, F1, 
    COUT1, COUT0 );
  wire   GNDI;

  fa2 \mainTimer/add_7_add_5_9 ( .A0(GNDI), .B0(B0), .C0(GNDI), .D0(D0), 
    .A1(GNDI), .B1(B1), .C1(GNDI), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module mainTimer_SLICE_40 ( input D1, B1, D0, B0, CIN0, CIN1, output F0, F1, 
    COUT1, COUT0 );
  wire   GNDI;

  fa2 \mainTimer/add_7_add_5_7 ( .A0(GNDI), .B0(B0), .C0(GNDI), .D0(D0), 
    .A1(GNDI), .B1(B1), .C1(GNDI), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module mainTimer_SLICE_41 ( input D1, B1, D0, B0, CIN0, CIN1, output F0, F1, 
    COUT1, COUT0 );
  wire   GNDI;

  fa2 \mainTimer/add_7_add_5_5 ( .A0(GNDI), .B0(B0), .C0(GNDI), .D0(D0), 
    .A1(GNDI), .B1(B1), .C1(GNDI), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module mainTimer_SLICE_42 ( input D1, B1, D0, B0, CIN0, CIN1, output F0, F1, 
    COUT1, COUT0 );
  wire   GNDI;

  fa2 \mainTimer/add_7_add_5_3 ( .A0(GNDI), .B0(B0), .C0(GNDI), .D0(D0), 
    .A1(GNDI), .B1(B1), .C1(GNDI), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module mainTimer_SLICE_43 ( input D1, C1, B1, CIN1, output F1, COUT1, COUT0 );
  wire   GNDI, VCCI;

  fa2 \mainTimer/add_7_add_5_1 ( .A0(GNDI), .B0(GNDI), .C0(GNDI), .D0(VCCI), 
    .A1(GNDI), .B1(B1), .C1(C1), .D1(D1), .CI0(VCCI), .CI1(CIN1), .S0(), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module Keyboard_SLICE_45 ( input DI0, C0, CE, LSR, CLK, output Q0, F0 );
  wire   GNDI, DI0_dly, CLK_dly, CE_dly, LSR_dly;

  lut4 \Keyboard.SLICE_45_K0 ( .A(GNDI), .B(GNDI), .C(C0), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \Keyboard/actualKey[3]_i8_reset ( .D0(DI0_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (C0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module lut4 ( input A, B, C, D, output Z );

  LUT4 #("0xF0F0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module ffsre2 ( input D0, SP, CK, LSR, output Q );

  FD1P3XZ INST01( .D(D0), .SP(SP), .CK(CK), .SR(LSR), .Q(Q));
  defparam INST01.REGSET = "RESET";
  defparam INST01.SRMODE = "ASYNC";
endmodule

module Keyboard_SLICE_46 ( input DI0, B0, CE, LSR, CLK, output Q0, F0 );
  wire   GNDI, DI0_dly, CLK_dly, CE_dly, LSR_dly;

  lut40001 \Keyboard.SLICE_46_K0 ( .A(GNDI), .B(B0), .C(GNDI), .D(GNDI), 
    .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \Keyboard/counter_i20_reset ( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));

  specify
    (B0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module lut40001 ( input A, B, C, D, output Z );

  LUT4 #("0xCCCC") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module Keyboard_SLICE_47 ( input DI0, C0, CE, LSR, CLK, output Q0, F0 );
  wire   GNDI, DI0_dly, CLK_dly, CE_dly, LSR_dly;

  lut4 \Keyboard.SLICE_47_K0 ( .A(GNDI), .B(GNDI), .C(C0), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \Keyboard/counter_i19_reset ( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));

  specify
    (C0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module Keyboard_SLICE_48 ( input DI0, A0, CE, LSR, CLK, output Q0, F0 );
  wire   GNDI, DI0_dly, CLK_dly, CE_dly, LSR_dly;

  lut40002 \Keyboard.SLICE_48_K0 ( .A(A0), .B(GNDI), .C(GNDI), .D(GNDI), 
    .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \Keyboard/counter_i22_reset ( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));

  specify
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module lut40002 ( input A, B, C, D, output Z );

  LUT4 #("0xAAAA") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module Keyboard_SLICE_49 ( input DI0, B0, CE, LSR, CLK, output Q0, F0 );
  wire   GNDI, DI0_dly, CLK_dly, CE_dly, LSR_dly;

  lut40001 \Keyboard.SLICE_49_K0 ( .A(GNDI), .B(B0), .C(GNDI), .D(GNDI), 
    .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \Keyboard/counter_i18_reset ( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));

  specify
    (B0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module Keyboard_SLICE_50 ( input DI0, B0, CE, LSR, CLK, output Q0, F0 );
  wire   GNDI, DI0_dly, CLK_dly, CE_dly, LSR_dly;

  lut40001 \Keyboard.SLICE_50_K0 ( .A(GNDI), .B(B0), .C(GNDI), .D(GNDI), 
    .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \Keyboard/counter_i17_reset ( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));

  specify
    (B0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module Keyboard_SLICE_51 ( input DI0, A0, CE, LSR, CLK, output Q0, F0 );
  wire   GNDI, DI0_dly, CLK_dly, CE_dly, LSR_dly;

  lut40002 \Keyboard.SLICE_51_K0 ( .A(A0), .B(GNDI), .C(GNDI), .D(GNDI), 
    .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \Keyboard/counter_i16_reset ( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));

  specify
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module Keyboard_SLICE_52 ( input DI0, B0, CE, LSR, CLK, output Q0, F0 );
  wire   GNDI, DI0_dly, CLK_dly, CE_dly, LSR_dly;

  lut40001 \Keyboard.SLICE_52_K0 ( .A(GNDI), .B(B0), .C(GNDI), .D(GNDI), 
    .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \Keyboard/actualKey[3]_i2_reset ( .D0(DI0_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (B0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module Keyboard_SLICE_53 ( input DI0, A0, CE, LSR, CLK, output Q0, F0 );
  wire   GNDI, DI0_dly, CLK_dly, CE_dly, LSR_dly;

  lut40002 \Keyboard.SLICE_53_K0 ( .A(A0), .B(GNDI), .C(GNDI), .D(GNDI), 
    .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \Keyboard/actualKey[3]_i3_reset ( .D0(DI0_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module Keyboard_SLICE_54 ( input DI0, B0, CE, LSR, CLK, output Q0, F0 );
  wire   GNDI, DI0_dly, CLK_dly, CE_dly, LSR_dly;

  lut40001 \Keyboard.SLICE_54_K0 ( .A(GNDI), .B(B0), .C(GNDI), .D(GNDI), 
    .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \Keyboard/actualKey[3]_i7_reset ( .D0(DI0_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (B0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module Keyboard_SLICE_55 ( input DI0, A0, CE, LSR, CLK, output Q0, F0 );
  wire   GNDI, DI0_dly, CLK_dly, CE_dly, LSR_dly;

  lut40002 \Keyboard.SLICE_55_K0 ( .A(A0), .B(GNDI), .C(GNDI), .D(GNDI), 
    .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \Keyboard/counter_i10_reset ( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));

  specify
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module Keyboard_SLICE_56 ( input DI0, B0, CE, LSR, CLK, output Q0, F0 );
  wire   GNDI, DI0_dly, CLK_dly, CE_dly, LSR_dly;

  lut40001 \Keyboard.SLICE_56_K0 ( .A(GNDI), .B(B0), .C(GNDI), .D(GNDI), 
    .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \Keyboard/actualKey[3]_i4_reset ( .D0(DI0_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (B0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module Keyboard_SLICE_57 ( input DI0, A0, CE, LSR, CLK, output Q0, F0 );
  wire   GNDI, DI0_dly, CLK_dly, CE_dly, LSR_dly;

  lut40002 \Keyboard.SLICE_57_K0 ( .A(A0), .B(GNDI), .C(GNDI), .D(GNDI), 
    .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \Keyboard/counter_i11_reset ( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));

  specify
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module Keyboard_SLICE_58 ( input DI0, B0, CE, LSR, CLK, output Q0, F0 );
  wire   GNDI, DI0_dly, CLK_dly, CE_dly, LSR_dly;

  lut40001 \Keyboard.SLICE_58_K0 ( .A(GNDI), .B(B0), .C(GNDI), .D(GNDI), 
    .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \Keyboard/valid_i1_reset ( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));

  specify
    (B0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module Keyboard_SLICE_59 ( input DI0, B0, CE, LSR, CLK, output Q0, F0 );
  wire   GNDI, DI0_dly, CLK_dly, CE_dly, LSR_dly;

  lut40001 \Keyboard.SLICE_59_K0 ( .A(GNDI), .B(B0), .C(GNDI), .D(GNDI), 
    .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \Keyboard/counter_i12_reset ( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));

  specify
    (B0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module Keyboard_SLICE_60 ( input DI0, C0, CE, LSR, CLK, output Q0, F0 );
  wire   GNDI, DI0_dly, CLK_dly, CE_dly, LSR_dly;

  lut4 \Keyboard.SLICE_60_K0 ( .A(GNDI), .B(GNDI), .C(C0), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \Keyboard/counter_i0_reset ( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));

  specify
    (C0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module Keyboard_SLICE_61 ( input DI0, C0, CE, LSR, CLK, output Q0, F0 );
  wire   GNDI, DI0_dly, CLK_dly, CE_dly, LSR_dly;

  lut4 \Keyboard.SLICE_61_K0 ( .A(GNDI), .B(GNDI), .C(C0), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \Keyboard/actualKey[3]_i1_reset ( .D0(DI0_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (C0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module Keyboard_SLICE_62 ( input DI0, A0, CE, LSR, CLK, output Q0, F0 );
  wire   GNDI, DI0_dly, CLK_dly, CE_dly, LSR_dly;

  lut40002 \Keyboard.SLICE_62_K0 ( .A(A0), .B(GNDI), .C(GNDI), .D(GNDI), 
    .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \Keyboard/counter_i14_reset ( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));

  specify
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module Keyboard_SLICE_63 ( input DI0, C0, CE, LSR, CLK, output Q0, F0 );
  wire   GNDI, DI0_dly, CLK_dly, CE_dly, LSR_dly;

  lut4 \Keyboard.SLICE_63_K0 ( .A(GNDI), .B(GNDI), .C(C0), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \Keyboard/actualKey[3]_i5_reset ( .D0(DI0_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (C0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module Keyboard_SLICE_64 ( input DI0, A0, CE, LSR, CLK, output Q0, F0 );
  wire   GNDI, DI0_dly, CLK_dly, CE_dly, LSR_dly;

  lut40002 \Keyboard.SLICE_64_K0 ( .A(A0), .B(GNDI), .C(GNDI), .D(GNDI), 
    .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \Keyboard/actualKey[3]_i6_reset ( .D0(DI0_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module Keyboard_SLICE_66 ( input DI0, D0, CE, LSR, CLK, output Q0, F0 );
  wire   GNDI, DI0_dly, CLK_dly, CE_dly, LSR_dly;

  lut40003 \Keyboard.SLICE_66_K0 ( .A(GNDI), .B(GNDI), .C(GNDI), .D(D0), 
    .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \Keyboard/counter_i2_reset ( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module lut40003 ( input A, B, C, D, output Z );

  LUT4 #("0xFF00") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module Keyboard_SLICE_67 ( input DI0, D0, CE, LSR, CLK, output Q0, F0 );
  wire   GNDI, DI0_dly, CLK_dly, CE_dly, LSR_dly;

  lut40003 \Keyboard.SLICE_67_K0 ( .A(GNDI), .B(GNDI), .C(GNDI), .D(D0), 
    .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \Keyboard/counter_i13_reset ( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module Keyboard_SLICE_68 ( input DI0, D0, CE, LSR, CLK, output Q0, F0 );
  wire   GNDI, DI0_dly, CLK_dly, CE_dly, LSR_dly;

  lut40003 \Keyboard.SLICE_68_K0 ( .A(GNDI), .B(GNDI), .C(GNDI), .D(D0), 
    .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \Keyboard/counter_i3_reset ( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module Keyboard_SLICE_69 ( input DI0, A0, CE, LSR, CLK, output Q0, F0 );
  wire   GNDI, DI0_dly, CLK_dly, CE_dly, LSR_dly;

  lut40002 \Keyboard.SLICE_69_K0 ( .A(A0), .B(GNDI), .C(GNDI), .D(GNDI), 
    .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \Keyboard/counter_i4_reset ( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));

  specify
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module Keyboard_SLICE_70 ( input DI0, A0, CE, LSR, CLK, output Q0, F0 );
  wire   GNDI, DI0_dly, CLK_dly, CE_dly, LSR_dly;

  lut40002 \Keyboard.SLICE_70_K0 ( .A(A0), .B(GNDI), .C(GNDI), .D(GNDI), 
    .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \Keyboard/counter_i5_reset ( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));

  specify
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module Keyboard_SLICE_71 ( input DI0, C0, CE, LSR, CLK, output Q0, F0 );
  wire   GNDI, DI0_dly, CLK_dly, CE_dly, LSR_dly;

  lut4 \Keyboard.SLICE_71_K0 ( .A(GNDI), .B(GNDI), .C(C0), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \Keyboard/counter_i6_reset ( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));

  specify
    (C0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module Keyboard_SLICE_73 ( input DI0, D0, CE, LSR, CLK, output Q0, F0 );
  wire   GNDI, DI0_dly, CLK_dly, CE_dly, LSR_dly;

  lut40003 \Keyboard.SLICE_73_K0 ( .A(GNDI), .B(GNDI), .C(GNDI), .D(D0), 
    .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \Keyboard/counter_i15_reset ( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module Keyboard_SLICE_74 ( input DI0, C0, CE, LSR, CLK, output Q0, F0 );
  wire   GNDI, DI0_dly, CLK_dly, CE_dly, LSR_dly;

  lut4 \Keyboard.SLICE_74_K0 ( .A(GNDI), .B(GNDI), .C(C0), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \Keyboard/counter_i8_reset ( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));

  specify
    (C0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module Keyboard_SLICE_75 ( input DI0, B0, CE, LSR, CLK, output Q0, F0 );
  wire   GNDI, DI0_dly, CLK_dly, CE_dly, LSR_dly;

  lut40001 \Keyboard.SLICE_75_K0 ( .A(GNDI), .B(B0), .C(GNDI), .D(GNDI), 
    .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \Keyboard/counter_i23_reset ( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));

  specify
    (B0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module Keyboard_SLICE_78 ( input DI0, A0, CE, LSR, CLK, output Q0, F0 );
  wire   GNDI, DI0_dly, CLK_dly, CE_dly, LSR_dly;

  lut40002 \Keyboard.SLICE_78_K0 ( .A(A0), .B(GNDI), .C(GNDI), .D(GNDI), 
    .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \Keyboard/counter_i26_reset ( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));

  specify
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module Keyboard_SLICE_79 ( input DI0, A0, CE, LSR, CLK, output Q0, F0 );
  wire   GNDI, DI0_dly, CLK_dly, CE_dly, LSR_dly;

  lut40002 \Keyboard.SLICE_79_K0 ( .A(A0), .B(GNDI), .C(GNDI), .D(GNDI), 
    .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \Keyboard/counter_i27_reset ( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));

  specify
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module Keyboard_SLICE_80 ( input DI0, C0, CE, LSR, CLK, output Q0, F0 );
  wire   GNDI, DI0_dly, CLK_dly, CE_dly, LSR_dly;

  lut4 \Keyboard.SLICE_80_K0 ( .A(GNDI), .B(GNDI), .C(C0), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \Keyboard/counter_i28_reset ( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));

  specify
    (C0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module Keyboard_SLICE_81 ( input DI0, D0, CE, LSR, CLK, output Q0, F0 );
  wire   GNDI, DI0_dly, CLK_dly, CE_dly, LSR_dly;

  lut40003 \Keyboard.SLICE_81_K0 ( .A(GNDI), .B(GNDI), .C(GNDI), .D(D0), 
    .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \Keyboard/counter_i29_reset ( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module Keyboard_SLICE_83 ( input DI0, B0, CE, LSR, CLK, output Q0, F0 );
  wire   GNDI, DI0_dly, CLK_dly, CE_dly, LSR_dly;

  lut40001 \Keyboard.SLICE_83_K0 ( .A(GNDI), .B(B0), .C(GNDI), .D(GNDI), 
    .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \Keyboard/counter_i31_reset ( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));

  specify
    (B0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module Keyboard_SLICE_84 ( input DI0, D0, CE, LSR, CLK, output Q0, F0 );
  wire   GNDI, DI0_dly, CLK_dly, CE_dly, LSR_dly;

  lut40003 \Keyboard.SLICE_84_K0 ( .A(GNDI), .B(GNDI), .C(GNDI), .D(D0), 
    .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \Keyboard/valid_i2_reset ( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module Keyboard_SLICE_85 ( input DI0, A0, CE, LSR, CLK, output Q0, F0 );
  wire   GNDI, DI0_dly, CLK_dly, CE_dly, LSR_dly;

  lut40002 \Keyboard.SLICE_85_K0 ( .A(A0), .B(GNDI), .C(GNDI), .D(GNDI), 
    .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre20004 \Keyboard/actualKey[3]_i7_set ( .D0(DI0_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module ffsre20004 ( input D0, SP, CK, LSR, output Q );

  FD1P3XZ INST01( .D(D0), .SP(SP), .CK(CK), .SR(LSR), .Q(Q));
  defparam INST01.REGSET = "SET";
  defparam INST01.SRMODE = "ASYNC";
endmodule

module Keyboard_SLICE_86 ( input DI0, C0, CE, LSR, CLK, output Q0, F0 );
  wire   GNDI, DI0_dly, CLK_dly, CE_dly, LSR_dly;

  lut4 \Keyboard.SLICE_86_K0 ( .A(GNDI), .B(GNDI), .C(C0), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre20004 \Keyboard/counter_i22_set ( .D0(DI0_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (C0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module Keyboard_SLICE_87 ( input DI0, C0, CE, LSR, CLK, output Q0, F0 );
  wire   GNDI, DI0_dly, CLK_dly, CE_dly, LSR_dly;

  lut4 \Keyboard.SLICE_87_K0 ( .A(GNDI), .B(GNDI), .C(C0), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre20004 \Keyboard/counter_i8_set ( .D0(DI0_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (C0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module Keyboard_SLICE_88 ( input DI0, B0, CE, LSR, CLK, output Q0, F0 );
  wire   GNDI, DI0_dly, CLK_dly, CE_dly, LSR_dly;

  lut40001 \Keyboard.SLICE_88_K0 ( .A(GNDI), .B(B0), .C(GNDI), .D(GNDI), 
    .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre20004 \Keyboard/counter_i9_set ( .D0(DI0_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (B0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module Keyboard_SLICE_89 ( input DI0, A0, CE, LSR, CLK, output Q0, F0 );
  wire   GNDI, DI0_dly, CLK_dly, CE_dly, LSR_dly;

  lut40002 \Keyboard.SLICE_89_K0 ( .A(A0), .B(GNDI), .C(GNDI), .D(GNDI), 
    .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre20004 \Keyboard/counter_i21_set ( .D0(DI0_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module Keyboard_SLICE_90 ( input DI0, C0, CE, LSR, CLK, output Q0, F0 );
  wire   GNDI, DI0_dly, CLK_dly, CE_dly, LSR_dly;

  lut4 \Keyboard.SLICE_90_K0 ( .A(GNDI), .B(GNDI), .C(C0), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre20004 \Keyboard/counter_i20_set ( .D0(DI0_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (C0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module Keyboard_SLICE_92 ( input DI0, A0, CE, LSR, CLK, output Q0, F0 );
  wire   GNDI, DI0_dly, CLK_dly, CE_dly, LSR_dly;

  lut40002 \Keyboard.SLICE_92_K0 ( .A(A0), .B(GNDI), .C(GNDI), .D(GNDI), 
    .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre20004 \Keyboard/counter_i18_set ( .D0(DI0_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module Keyboard_SLICE_94 ( input DI0, A0, CE, LSR, CLK, output Q0, F0 );
  wire   GNDI, DI0_dly, CLK_dly, CE_dly, LSR_dly;

  lut40002 \Keyboard.SLICE_94_K0 ( .A(A0), .B(GNDI), .C(GNDI), .D(GNDI), 
    .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre20004 \Keyboard/counter_i16_set ( .D0(DI0_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module Keyboard_SLICE_95 ( input DI0, B0, CE, LSR, CLK, output Q0, F0 );
  wire   GNDI, DI0_dly, CLK_dly, CE_dly, LSR_dly;

  lut40001 \Keyboard.SLICE_95_K0 ( .A(GNDI), .B(B0), .C(GNDI), .D(GNDI), 
    .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre20004 \Keyboard/actualKey[3]_i2_set ( .D0(DI0_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (B0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module Keyboard_SLICE_96 ( input DI0, C0, CE, LSR, CLK, output Q0, F0 );
  wire   GNDI, DI0_dly, CLK_dly, CE_dly, LSR_dly;

  lut4 \Keyboard.SLICE_96_K0 ( .A(GNDI), .B(GNDI), .C(C0), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre20004 \Keyboard/actualKey[3]_i3_set ( .D0(DI0_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (C0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module Keyboard_SLICE_97 ( input DI0, C0, CE, LSR, CLK, output Q0, F0 );
  wire   GNDI, DI0_dly, CLK_dly, CE_dly, LSR_dly;

  lut4 \Keyboard.SLICE_97_K0 ( .A(GNDI), .B(GNDI), .C(C0), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre20004 \Keyboard/actualKey[3]_i4_set ( .D0(DI0_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (C0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module Keyboard_SLICE_98 ( input DI0, C0, CE, LSR, CLK, output Q0, F0 );
  wire   GNDI, DI0_dly, CLK_dly, CE_dly, LSR_dly;

  lut4 \Keyboard.SLICE_98_K0 ( .A(GNDI), .B(GNDI), .C(C0), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre20004 \Keyboard/counter_i11_set ( .D0(DI0_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (C0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module Keyboard_SLICE_99 ( input DI0, C0, CE, LSR, CLK, output Q0, F0 );
  wire   GNDI, DI0_dly, CLK_dly, CE_dly, LSR_dly;

  lut4 \Keyboard.SLICE_99_K0 ( .A(GNDI), .B(GNDI), .C(C0), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre20004 \Keyboard/valid_i1_set ( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));

  specify
    (C0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module Keyboard_SLICE_100 ( input DI0, A0, CE, LSR, CLK, output Q0, F0 );
  wire   GNDI, DI0_dly, CLK_dly, CE_dly, LSR_dly;

  lut40002 \Keyboard.SLICE_100_K0 ( .A(A0), .B(GNDI), .C(GNDI), .D(GNDI), 
    .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre20004 \Keyboard/counter_i12_set ( .D0(DI0_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module Keyboard_SLICE_101 ( input DI0, B0, CE, LSR, CLK, output Q0, F0 );
  wire   GNDI, DI0_dly, CLK_dly, CE_dly, LSR_dly;

  lut40001 \Keyboard.SLICE_101_K0 ( .A(GNDI), .B(B0), .C(GNDI), .D(GNDI), 
    .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre20004 \Keyboard/counter_i0_set ( .D0(DI0_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (B0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module Keyboard_SLICE_102 ( input DI0, B0, CE, LSR, CLK, output Q0, F0 );
  wire   GNDI, DI0_dly, CLK_dly, CE_dly, LSR_dly;

  lut40001 \Keyboard.SLICE_102_K0 ( .A(GNDI), .B(B0), .C(GNDI), .D(GNDI), 
    .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre20004 \Keyboard/counter_i10_set ( .D0(DI0_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (B0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module Keyboard_SLICE_103 ( input DI0, C0, CE, LSR, CLK, output Q0, F0 );
  wire   GNDI, DI0_dly, CLK_dly, CE_dly, LSR_dly;

  lut4 \Keyboard.SLICE_103_K0 ( .A(GNDI), .B(GNDI), .C(C0), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre20004 \Keyboard/actualKey[3]_i1_set ( .D0(DI0_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (C0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module Keyboard_SLICE_104 ( input DI0, C0, CE, LSR, CLK, output Q0, F0 );
  wire   GNDI, DI0_dly, CLK_dly, CE_dly, LSR_dly;

  lut4 \Keyboard.SLICE_104_K0 ( .A(GNDI), .B(GNDI), .C(C0), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre20004 \Keyboard/actualKey[3]_i8_set ( .D0(DI0_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (C0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module Keyboard_SLICE_105 ( input DI0, B0, CE, LSR, CLK, output Q0, F0 );
  wire   GNDI, DI0_dly, CLK_dly, CE_dly, LSR_dly;

  lut40001 \Keyboard.SLICE_105_K0 ( .A(GNDI), .B(B0), .C(GNDI), .D(GNDI), 
    .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre20004 \Keyboard/actualKey[3]_i5_set ( .D0(DI0_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (B0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module Keyboard_SLICE_106 ( input DI0, A0, CE, LSR, CLK, output Q0, F0 );
  wire   GNDI, DI0_dly, CLK_dly, CE_dly, LSR_dly;

  lut40002 \Keyboard.SLICE_106_K0 ( .A(A0), .B(GNDI), .C(GNDI), .D(GNDI), 
    .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre20004 \Keyboard/counter_i14_set ( .D0(DI0_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module Keyboard_SLICE_107 ( input DI0, C0, CE, LSR, CLK, output Q0, F0 );
  wire   GNDI, DI0_dly, CLK_dly, CE_dly, LSR_dly;

  lut4 \Keyboard.SLICE_107_K0 ( .A(GNDI), .B(GNDI), .C(C0), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre20004 \Keyboard/counter_i1_set ( .D0(DI0_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (C0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module Keyboard_SLICE_112 ( input DI0, B0, CE, LSR, CLK, output Q0, F0 );
  wire   GNDI, DI0_dly, CLK_dly, CE_dly, LSR_dly;

  lut40001 \Keyboard.SLICE_112_K0 ( .A(GNDI), .B(B0), .C(GNDI), .D(GNDI), 
    .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre20004 \Keyboard/counter_i13_set ( .D0(DI0_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (B0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module Keyboard_SLICE_113 ( input DI0, A0, CE, LSR, CLK, output Q0, F0 );
  wire   GNDI, DI0_dly, CLK_dly, CE_dly, LSR_dly;

  lut40002 \Keyboard.SLICE_113_K0 ( .A(A0), .B(GNDI), .C(GNDI), .D(GNDI), 
    .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre20004 \Keyboard/counter_i5_set ( .D0(DI0_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module Keyboard_SLICE_114 ( input DI0, B0, CE, LSR, CLK, output Q0, F0 );
  wire   GNDI, DI0_dly, CLK_dly, CE_dly, LSR_dly;

  lut40001 \Keyboard.SLICE_114_K0 ( .A(GNDI), .B(B0), .C(GNDI), .D(GNDI), 
    .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre20004 \Keyboard/counter_i6_set ( .D0(DI0_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (B0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module Keyboard_SLICE_115 ( input DI0, C0, CE, LSR, CLK, output Q0, F0 );
  wire   GNDI, DI0_dly, CLK_dly, CE_dly, LSR_dly;

  lut4 \Keyboard.SLICE_115_K0 ( .A(GNDI), .B(GNDI), .C(C0), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre20004 \Keyboard/counter_i7_set ( .D0(DI0_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (C0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module Keyboard_SLICE_116 ( input DI0, B0, CE, LSR, CLK, output Q0, F0 );
  wire   GNDI, DI0_dly, CLK_dly, CE_dly, LSR_dly;

  lut40001 \Keyboard.SLICE_116_K0 ( .A(GNDI), .B(B0), .C(GNDI), .D(GNDI), 
    .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre20004 \Keyboard/counter_i15_set ( .D0(DI0_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (B0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module Keyboard_SLICE_117 ( input DI0, A0, CE, LSR, CLK, output Q0, F0 );
  wire   GNDI, DI0_dly, CLK_dly, CE_dly, LSR_dly;

  lut40002 \Keyboard.SLICE_117_K0 ( .A(A0), .B(GNDI), .C(GNDI), .D(GNDI), 
    .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre20004 \Keyboard/counter_i23_set ( .D0(DI0_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module Keyboard_SLICE_118 ( input DI0, A0, CE, LSR, CLK, output Q0, F0 );
  wire   GNDI, DI0_dly, CLK_dly, CE_dly, LSR_dly;

  lut40002 \Keyboard.SLICE_118_K0 ( .A(A0), .B(GNDI), .C(GNDI), .D(GNDI), 
    .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre20004 \Keyboard/counter_i24_set ( .D0(DI0_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module Keyboard_SLICE_119 ( input DI0, D0, CE, LSR, CLK, output Q0, F0 );
  wire   GNDI, DI0_dly, CLK_dly, CE_dly, LSR_dly;

  lut40003 \Keyboard.SLICE_119_K0 ( .A(GNDI), .B(GNDI), .C(GNDI), .D(D0), 
    .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre20004 \Keyboard/counter_i25_set ( .D0(DI0_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module Keyboard_SLICE_120 ( input DI0, A0, CE, LSR, CLK, output Q0, F0 );
  wire   GNDI, DI0_dly, CLK_dly, CE_dly, LSR_dly;

  lut40002 \Keyboard.SLICE_120_K0 ( .A(A0), .B(GNDI), .C(GNDI), .D(GNDI), 
    .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre20004 \Keyboard/counter_i26_set ( .D0(DI0_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module Keyboard_SLICE_121 ( input DI0, D0, CE, LSR, CLK, output Q0, F0 );
  wire   GNDI, DI0_dly, CLK_dly, CE_dly, LSR_dly;

  lut40003 \Keyboard.SLICE_121_K0 ( .A(GNDI), .B(GNDI), .C(GNDI), .D(D0), 
    .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre20004 \Keyboard/counter_i27_set ( .D0(DI0_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module Keyboard_SLICE_123 ( input DI0, C0, CE, LSR, CLK, output Q0, F0 );
  wire   GNDI, DI0_dly, CLK_dly, CE_dly, LSR_dly;

  lut4 \Keyboard.SLICE_123_K0 ( .A(GNDI), .B(GNDI), .C(C0), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre20004 \Keyboard/counter_i29_set ( .D0(DI0_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (C0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module Keyboard_SLICE_124 ( input DI0, B0, CE, LSR, CLK, output Q0, F0 );
  wire   GNDI, DI0_dly, CLK_dly, CE_dly, LSR_dly;

  lut40001 \Keyboard.SLICE_124_K0 ( .A(GNDI), .B(B0), .C(GNDI), .D(GNDI), 
    .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre20004 \Keyboard/counter_i30_set ( .D0(DI0_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (B0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module Keyboard_SLICE_125 ( input DI0, D0, CE, LSR, CLK, output Q0, F0 );
  wire   GNDI, DI0_dly, CLK_dly, CE_dly, LSR_dly;

  lut40003 \Keyboard.SLICE_125_K0 ( .A(GNDI), .B(GNDI), .C(GNDI), .D(D0), 
    .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre20004 \Keyboard/counter_i31_set ( .D0(DI0_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module Keyboard_SLICE_127 ( input DI0, C0, CE, LSR, CLK, output Q0, F0 );
  wire   GNDI, DI0_dly, CLK_dly, CE_dly, LSR_dly;

  lut4 \Keyboard.SLICE_127_K0 ( .A(GNDI), .B(GNDI), .C(C0), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \Keyboard/counter_i21_reset ( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));

  specify
    (C0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module SLICE_128 ( input DI1, DI0, D1, C1, B1, A1, D0, C0, B0, A0, CLK, 
    output Q0, Q1, F0, F1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  lut40005 SLICE_128_K1( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40006 SLICE_128_K0( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  ffsre20007 Sreg_i1( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre20007 Sreg_i2( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module lut40005 ( input A, B, C, D, output Z );

  LUT4 #("0xE2F0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40006 ( input A, B, C, D, output Z );

  LUT4 #("0xECA0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module ffsre20007 ( input D0, SP, CK, LSR, output Q );

  FD1P3XZ INST01( .D(D0), .SP(SP), .CK(CK), .SR(LSR), .Q(Q));
  defparam INST01.REGSET = "RESET";
  defparam INST01.SRMODE = "CE_OVER_LSR";
endmodule

module STATE_OUT_SLICE_130 ( input DI1, DI0, D1, B1, A1, B0, A0, LSR, CLK, 
    output Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  lut40008 \STATE_OUT/i2056_2_lut_3_lut ( .A(A1), .B(B1), .C(GNDI), .D(D1), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40009 \STATE_OUT/i2048_2_lut ( .A(A0), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));
  ffsre2 \STATE_OUT/cont_139__i1 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \STATE_OUT/cont_139__i0 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module lut40008 ( input A, B, C, D, output Z );

  LUT4 #("0x7788") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40009 ( input A, B, C, D, output Z );

  LUT4 #("0x6666") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module STATE_OUT_SLICE_132 ( input DI1, DI0, D1, C1, B1, D0, C0, B0, A0, LSR, 
    CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  lut40010 \STATE_OUT/i2070_3_lut ( .A(GNDI), .B(B1), .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40011 \STATE_OUT/i2063_2_lut_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));
  ffsre2 \STATE_OUT/cont_139__i3 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \STATE_OUT/cont_139__i2 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module lut40010 ( input A, B, C, D, output Z );

  LUT4 #("0x3FC0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40011 ( input A, B, C, D, output Z );

  LUT4 #("0x7F80") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module STATE_OUT_serial_SLICE_134 ( input DI1, DI0, C1, B1, A1, D0, C0, B0, A0, 
    CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  lut40012 \STATE_OUT/serial/i1_2_lut_3_lut ( .A(A1), .B(B1), .C(C1), .D(GNDI), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40013 \STATE_OUT/serial/counter_31__I_36_i1_3_lut_4_lut ( .A(A0), .B(B0), 
    .C(C0), .D(D0), .Z(F0));
  ffsre20007 \STATE_OUT/serial/counter_i1 ( .D0(DI1_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre20007 \STATE_OUT/serial/counter_i0 ( .D0(DI0_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module lut40012 ( input A, B, C, D, output Z );

  LUT4 #("0xC8C8") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40013 ( input A, B, C, D, output Z );

  LUT4 #("0xF0E2") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module STATE_OUT_serial_SLICE_136 ( input DI1, DI0, D1, C1, B1, A1, D0, C0, B0, 
    A0, CLK, output Q0, Q1, F0, F1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  lut40014 \STATE_OUT.serial.SLICE_136_K1 ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40015 \STATE_OUT.serial.SLICE_136_K0 ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));
  ffsre20007 \STATE_OUT/serial/aux_i0 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre20007 \STATE_OUT/serial/aux_i1 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module lut40014 ( input A, B, C, D, output Z );

  LUT4 #("0xAFAC") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40015 ( input A, B, C, D, output Z );

  LUT4 #("0xCCA0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module STATE_OUT_serial_SLICE_137 ( input DI1, DI0, D1, C1, B1, D0, C0, B0, 
    CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  lut40016 \STATE_OUT.serial.SLICE_137_K1 ( .A(GNDI), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40017 \STATE_OUT.serial.SLICE_137_K0 ( .A(GNDI), .B(B0), .C(C0), .D(D0), 
    .Z(F0));
  ffsre20007 \STATE_OUT/serial/aux_i3 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre20007 \STATE_OUT/serial/aux_i2 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module lut40016 ( input A, B, C, D, output Z );

  LUT4 #("0xCCF0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40017 ( input A, B, C, D, output Z );

  LUT4 #("0xFC0C") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module STATE_OUT_serial_SLICE_140 ( input DI1, DI0, D1, C1, B1, D0, C0, A0, 
    CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  lut40018 \STATE_OUT/serial/i1_2_lut_3_lut_adj_42 ( .A(GNDI), .B(B1), .C(C1), 
    .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40019 \STATE_OUT/serial/i1_2_lut_3_lut_adj_41 ( .A(A0), .B(GNDI), .C(C0), 
    .D(D0), .Z(F0));
  ffsre20007 \STATE_OUT/serial/counter_i3 ( .D0(DI1_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre20007 \STATE_OUT/serial/counter_i2 ( .D0(DI0_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module lut40018 ( input A, B, C, D, output Z );

  LUT4 #("0xFC00") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40019 ( input A, B, C, D, output Z );

  LUT4 #("0xAAA0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module STATE_OUT_serial_SLICE_142 ( input DI1, DI0, D1, C1, B1, A1, D0, C0, B0, 
    A0, CLK, output Q0, Q1, F0, F1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  lut40020 \STATE_OUT/serial/counter_31__I_36_i6_3_lut_4_lut ( .A(A1), .B(B1), 
    .C(C1), .D(D1), .Z(F1));
  lut40021 \STATE_OUT/serial/counter_31__I_36_i5_3_lut_4_lut ( .A(A0), .B(B0), 
    .C(C0), .D(D0), .Z(F0));
  ffsre20007 \STATE_OUT/serial/counter_i5 ( .D0(DI1_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre20007 \STATE_OUT/serial/counter_i4 ( .D0(DI0_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module lut40020 ( input A, B, C, D, output Z );

  LUT4 #("0xCDC8") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40021 ( input A, B, C, D, output Z );

  LUT4 #("0xF0E4") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module STATE_OUT_serial_SLICE_144 ( input DI1, DI0, D1, C1, B1, A1, D0, C0, B0, 
    A0, CLK, output Q0, Q1, F0, F1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  lut40022 \STATE_OUT/serial/counter_31__I_36_i8_3_lut_4_lut ( .A(A1), .B(B1), 
    .C(C1), .D(D1), .Z(F1));
  lut40021 \STATE_OUT/serial/counter_31__I_36_i7_3_lut_4_lut ( .A(A0), .B(B0), 
    .C(C0), .D(D0), .Z(F0));
  ffsre20007 \STATE_OUT/serial/counter_i7 ( .D0(DI1_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre20007 \STATE_OUT/serial/counter_i6 ( .D0(DI0_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module lut40022 ( input A, B, C, D, output Z );

  LUT4 #("0xF1E0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module STATE_OUT_serial_SLICE_146 ( input DI1, DI0, D1, C1, B1, A1, D0, C0, B0, 
    A0, CLK, output Q0, Q1, F0, F1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  lut40023 \STATE_OUT/serial/counter_31__I_36_i10_3_lut_4_lut ( .A(A1), .B(B1), 
    .C(C1), .D(D1), .Z(F1));
  lut40024 \STATE_OUT/serial/counter_31__I_36_i9_3_lut_4_lut ( .A(A0), .B(B0), 
    .C(C0), .D(D0), .Z(F0));
  ffsre20007 \STATE_OUT/serial/counter_i9 ( .D0(DI1_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre20007 \STATE_OUT/serial/counter_i8 ( .D0(DI0_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module lut40023 ( input A, B, C, D, output Z );

  LUT4 #("0xAAAC") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40024 ( input A, B, C, D, output Z );

  LUT4 #("0xFE10") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module STATE_OUT_serial_SLICE_148 ( input DI1, DI0, D1, C1, B1, A1, D0, C0, B0, 
    A0, CLK, output Q0, Q1, F0, F1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  lut40020 \STATE_OUT/serial/counter_31__I_36_i12_3_lut_4_lut ( .A(A1), .B(B1), 
    .C(C1), .D(D1), .Z(F1));
  lut40025 \STATE_OUT/serial/counter_31__I_36_i11_3_lut_4_lut ( .A(A0), .B(B0), 
    .C(C0), .D(D0), .Z(F0));
  ffsre20007 \STATE_OUT/serial/counter_i11 ( .D0(DI1_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre20007 \STATE_OUT/serial/counter_i10 ( .D0(DI0_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module lut40025 ( input A, B, C, D, output Z );

  LUT4 #("0xAAB8") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module STATE_OUT_serial_SLICE_150 ( input DI1, DI0, D1, C1, B1, A1, D0, C0, B0, 
    A0, CLK, output Q0, Q1, F0, F1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  lut40026 \STATE_OUT/serial/counter_31__I_36_i14_3_lut_4_lut ( .A(A1), .B(B1), 
    .C(C1), .D(D1), .Z(F1));
  lut40027 \STATE_OUT/serial/counter_31__I_36_i13_3_lut_4_lut ( .A(A0), .B(B0), 
    .C(C0), .D(D0), .Z(F0));
  ffsre20007 \STATE_OUT/serial/counter_i13 ( .D0(DI1_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre20007 \STATE_OUT/serial/counter_i12 ( .D0(DI0_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module lut40026 ( input A, B, C, D, output Z );

  LUT4 #("0xAAAC") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40027 ( input A, B, C, D, output Z );

  LUT4 #("0xFE10") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module STATE_OUT_serial_SLICE_152 ( input DI1, DI0, D1, C1, B1, A1, D0, C0, B0, 
    A0, CLK, output Q0, Q1, F0, F1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  lut40026 \STATE_OUT/serial/counter_31__I_36_i16_3_lut_4_lut ( .A(A1), .B(B1), 
    .C(C1), .D(D1), .Z(F1));
  lut40021 \STATE_OUT/serial/counter_31__I_36_i15_3_lut_4_lut ( .A(A0), .B(B0), 
    .C(C0), .D(D0), .Z(F0));
  ffsre20007 \STATE_OUT/serial/counter_i15 ( .D0(DI1_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre20007 \STATE_OUT/serial/counter_i14 ( .D0(DI0_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module STATE_OUT_serial_SLICE_154 ( input DI1, DI0, D1, C1, B1, A1, D0, C0, B0, 
    A0, CLK, output Q0, Q1, F0, F1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  lut40028 \STATE_OUT/serial/counter_31__I_36_i18_3_lut_4_lut ( .A(A1), .B(B1), 
    .C(C1), .D(D1), .Z(F1));
  lut40029 \STATE_OUT/serial/counter_31__I_36_i17_3_lut_4_lut ( .A(A0), .B(B0), 
    .C(C0), .D(D0), .Z(F0));
  ffsre20007 \STATE_OUT/serial/counter_i17 ( .D0(DI1_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre20007 \STATE_OUT/serial/counter_i16 ( .D0(DI0_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module lut40028 ( input A, B, C, D, output Z );

  LUT4 #("0xFE04") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40029 ( input A, B, C, D, output Z );

  LUT4 #("0xF0E2") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module STATE_OUT_serial_SLICE_156 ( input DI1, DI0, D1, C1, B1, A1, D0, C0, B0, 
    A0, CLK, output Q0, Q1, F0, F1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  lut40020 \STATE_OUT/serial/counter_31__I_36_i20_3_lut_4_lut ( .A(A1), .B(B1), 
    .C(C1), .D(D1), .Z(F1));
  lut40025 \STATE_OUT/serial/counter_31__I_36_i19_3_lut_4_lut ( .A(A0), .B(B0), 
    .C(C0), .D(D0), .Z(F0));
  ffsre20007 \STATE_OUT/serial/counter_i19 ( .D0(DI1_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre20007 \STATE_OUT/serial/counter_i18 ( .D0(DI0_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module STATE_OUT_serial_SLICE_158 ( input DI1, DI0, D1, C1, B1, A1, D0, C0, B0, 
    A0, CLK, output Q0, Q1, F0, F1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  lut40030 \STATE_OUT/serial/counter_31__I_36_i22_3_lut_4_lut ( .A(A1), .B(B1), 
    .C(C1), .D(D1), .Z(F1));
  lut40031 \STATE_OUT/serial/counter_31__I_36_i21_3_lut_4_lut ( .A(A0), .B(B0), 
    .C(C0), .D(D0), .Z(F0));
  ffsre20007 \STATE_OUT/serial/counter_i21 ( .D0(DI1_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre20007 \STATE_OUT/serial/counter_i20 ( .D0(DI0_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module lut40030 ( input A, B, C, D, output Z );

  LUT4 #("0xABA8") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40031 ( input A, B, C, D, output Z );

  LUT4 #("0xCCD8") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module STATE_OUT_serial_SLICE_160 ( input DI1, DI0, D1, C1, B1, A1, D0, C0, B0, 
    A0, CLK, output Q0, Q1, F0, F1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  lut40032 \STATE_OUT/serial/counter_31__I_36_i24_3_lut_4_lut ( .A(A1), .B(B1), 
    .C(C1), .D(D1), .Z(F1));
  lut40033 \STATE_OUT/serial/counter_31__I_36_i23_3_lut_4_lut ( .A(A0), .B(B0), 
    .C(C0), .D(D0), .Z(F0));
  ffsre20007 \STATE_OUT/serial/counter_i23 ( .D0(DI1_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre20007 \STATE_OUT/serial/counter_i22 ( .D0(DI0_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module lut40032 ( input A, B, C, D, output Z );

  LUT4 #("0xF1E0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40033 ( input A, B, C, D, output Z );

  LUT4 #("0xCCD8") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module STATE_OUT_serial_SLICE_162 ( input DI1, DI0, D1, C1, B1, A1, D0, C0, B0, 
    A0, CLK, output Q0, Q1, F0, F1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  lut40034 \STATE_OUT/serial/counter_31__I_36_i26_3_lut_4_lut ( .A(A1), .B(B1), 
    .C(C1), .D(D1), .Z(F1));
  lut40035 \STATE_OUT/serial/counter_31__I_36_i25_3_lut_4_lut ( .A(A0), .B(B0), 
    .C(C0), .D(D0), .Z(F0));
  ffsre20007 \STATE_OUT/serial/counter_i25 ( .D0(DI1_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre20007 \STATE_OUT/serial/counter_i24 ( .D0(DI0_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module lut40034 ( input A, B, C, D, output Z );

  LUT4 #("0xF0E2") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40035 ( input A, B, C, D, output Z );

  LUT4 #("0xCDC8") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module STATE_OUT_serial_SLICE_164 ( input DI1, DI0, D1, C1, B1, A1, D0, C0, B0, 
    A0, CLK, output Q0, Q1, F0, F1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  lut40036 \STATE_OUT/serial/counter_31__I_36_i28_3_lut_4_lut ( .A(A1), .B(B1), 
    .C(C1), .D(D1), .Z(F1));
  lut40037 \STATE_OUT/serial/counter_31__I_36_i27_3_lut_4_lut ( .A(A0), .B(B0), 
    .C(C0), .D(D0), .Z(F0));
  ffsre20007 \STATE_OUT/serial/counter_i27 ( .D0(DI1_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre20007 \STATE_OUT/serial/counter_i26 ( .D0(DI0_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module lut40036 ( input A, B, C, D, output Z );

  LUT4 #("0xCCCA") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40037 ( input A, B, C, D, output Z );

  LUT4 #("0xAAAC") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module STATE_OUT_serial_SLICE_166 ( input DI1, DI0, D1, C1, B1, A1, D0, C0, B0, 
    A0, CLK, output Q0, Q1, F0, F1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  lut40034 \STATE_OUT/serial/counter_31__I_36_i30_3_lut_4_lut ( .A(A1), .B(B1), 
    .C(C1), .D(D1), .Z(F1));
  lut40035 \STATE_OUT/serial/counter_31__I_36_i29_3_lut_4_lut ( .A(A0), .B(B0), 
    .C(C0), .D(D0), .Z(F0));
  ffsre20007 \STATE_OUT/serial/counter_i29 ( .D0(DI1_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre20007 \STATE_OUT/serial/counter_i28 ( .D0(DI0_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module STATE_OUT_serial_SLICE_168 ( input DI1, DI0, D1, C1, B1, A1, D0, C0, B0, 
    A0, CLK, output Q0, Q1, F0, F1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  lut40038 \STATE_OUT/serial/counter_31__I_36_i32_3_lut_4_lut ( .A(A1), .B(B1), 
    .C(C1), .D(D1), .Z(F1));
  lut40033 \STATE_OUT/serial/counter_31__I_36_i31_3_lut_4_lut ( .A(A0), .B(B0), 
    .C(C0), .D(D0), .Z(F0));
  ffsre20007 \STATE_OUT/serial/counter_i31 ( .D0(DI1_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre20007 \STATE_OUT/serial/counter_i30 ( .D0(DI0_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module lut40038 ( input A, B, C, D, output Z );

  LUT4 #("0xF0E4") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module mainTimer_SLICE_175 ( input DI1, DI0, D1, B1, C0, A0, LSR, CLK, output 
    Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  lut40039 \mainTimer/i1276_2_lut ( .A(GNDI), .B(B1), .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40040 \mainTimer/i1277_2_lut ( .A(A0), .B(GNDI), .C(C0), .D(GNDI), .Z(F0));
  ffsre2 \mainTimer/clkCont_i16 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \mainTimer/clkCont_i17 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module lut40039 ( input A, B, C, D, output Z );

  LUT4 #("0x3300") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40040 ( input A, B, C, D, output Z );

  LUT4 #("0x5050") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module mainTimer_SLICE_177 ( input DI1, DI0, B1, A1, D0, A0, LSR, CLK, output 
    Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  lut40041 \mainTimer/i1274_2_lut ( .A(A1), .B(B1), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40042 \mainTimer/i1259_2_lut ( .A(A0), .B(GNDI), .C(GNDI), .D(D0), .Z(F0));
  ffsre2 \mainTimer/clkCont_i14 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \mainTimer/clkCont_i15 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module lut40041 ( input A, B, C, D, output Z );

  LUT4 #("0x2222") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40042 ( input A, B, C, D, output Z );

  LUT4 #("0x5500") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module mainTimer_SLICE_179 ( input DI1, DI0, C1, A1, D0, B0, LSR, CLK, output 
    Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  lut40043 \mainTimer/i1272_2_lut ( .A(A1), .B(GNDI), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40044 \mainTimer/i1258_2_lut ( .A(GNDI), .B(B0), .C(GNDI), .D(D0), .Z(F0));
  ffsre2 \mainTimer/clkCont_i12 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \mainTimer/clkCont_i13 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module lut40043 ( input A, B, C, D, output Z );

  LUT4 #("0x5050") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40044 ( input A, B, C, D, output Z );

  LUT4 #("0x3300") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module mainTimer_SLICE_181 ( input DI1, DI0, C1, B1, B0, A0, LSR, CLK, output 
    Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  lut40045 \mainTimer/i1267_2_lut ( .A(GNDI), .B(B1), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40046 \mainTimer/i1265_2_lut ( .A(A0), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));
  ffsre2 \mainTimer/clkCont_i10 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \mainTimer/clkCont_i11 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module lut40045 ( input A, B, C, D, output Z );

  LUT4 #("0x0C0C") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40046 ( input A, B, C, D, output Z );

  LUT4 #("0x2222") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module mainTimer_SLICE_183 ( input DI1, DI0, C1, A1, D0, B0, LSR, CLK, output 
    Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  lut40047 \mainTimer/i1270_2_lut ( .A(A1), .B(GNDI), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40044 \mainTimer/i1268_2_lut ( .A(GNDI), .B(B0), .C(GNDI), .D(D0), .Z(F0));
  ffsre2 \mainTimer/clkCont_i8 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \mainTimer/clkCont_i9 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module lut40047 ( input A, B, C, D, output Z );

  LUT4 #("0x0A0A") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module mainTimer_SLICE_185 ( input DI1, DI0, C1, B1, C0, B0, LSR, CLK, output 
    Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  lut40048 \mainTimer/i1248_2_lut ( .A(GNDI), .B(B1), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40049 \mainTimer/i1287_2_lut ( .A(GNDI), .B(B0), .C(C0), .D(GNDI), .Z(F0));
  ffsre2 \mainTimer/clkCont_i6 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \mainTimer/clkCont_i7 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module lut40048 ( input A, B, C, D, output Z );

  LUT4 #("0x3030") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40049 ( input A, B, C, D, output Z );

  LUT4 #("0x0C0C") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module mainTimer_SLICE_187 ( input DI1, DI0, D1, B1, C0, A0, LSR, CLK, output 
    Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  lut40050 \mainTimer/i1263_2_lut ( .A(GNDI), .B(B1), .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40051 \mainTimer/i1262_2_lut ( .A(A0), .B(GNDI), .C(C0), .D(GNDI), .Z(F0));
  ffsre2 \mainTimer/clkCont_i4 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \mainTimer/clkCont_i5 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module lut40050 ( input A, B, C, D, output Z );

  LUT4 #("0x00CC") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40051 ( input A, B, C, D, output Z );

  LUT4 #("0x0A0A") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module mainTimer_SLICE_189 ( input DI1, DI0, D1, B1, C0, A0, LSR, CLK, output 
    Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  lut40039 \mainTimer/i1269_2_lut ( .A(GNDI), .B(B1), .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40040 \mainTimer/i1264_2_lut ( .A(A0), .B(GNDI), .C(C0), .D(GNDI), .Z(F0));
  ffsre2 \mainTimer/clkCont_i2 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \mainTimer/clkCont_i3 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module mainTimer_SLICE_191 ( input DI1, DI0, B1, A1, D0, B0, LSR, CLK, output 
    Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  lut40052 \mainTimer/i1247_2_lut ( .A(A1), .B(B1), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40044 \mainTimer/i1271_2_lut ( .A(GNDI), .B(B0), .C(GNDI), .D(D0), .Z(F0));
  ffsre2 \mainTimer/clkCont_i0 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \mainTimer/clkCont_i1 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module lut40052 ( input A, B, C, D, output Z );

  LUT4 #("0x4444") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_193 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40053 i1_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40054 KEY_STATUS_1__I_0_2_i3_2_lut( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40053 ( input A, B, C, D, output Z );

  LUT4 #("0xECA0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40054 ( input A, B, C, D, output Z );

  LUT4 #("0xFEF2") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_194 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40055 i1_4_lut_adj_47( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40056 i37_4_lut_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40055 ( input A, B, C, D, output Z );

  LUT4 #("0xAAEA") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40056 ( input A, B, C, D, output Z );

  LUT4 #("0xCCC4") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module Keyboard_SLICE_195 ( input D1, C1, B1, D0, C0, A0, output F0, F1 );
  wire   GNDI;

  lut40057 \Keyboard/i370_3_lut ( .A(GNDI), .B(B1), .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40058 \Keyboard/i607_3_lut ( .A(A0), .B(GNDI), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40057 ( input A, B, C, D, output Z );

  LUT4 #("0xCFC0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40058 ( input A, B, C, D, output Z );

  LUT4 #("0xF0AA") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module Keyboard_SLICE_197 ( input D1, C1, B1, A1, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40059 \Keyboard.i71_1_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40060 \Keyboard/i366_3_lut ( .A(A0), .B(B0), .C(C0), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40059 ( input A, B, C, D, output Z );

  LUT4 #("0x0F27") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40060 ( input A, B, C, D, output Z );

  LUT4 #("0xCACA") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module Keyboard_SLICE_198 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, 
    F1 );

  lut40061 \Keyboard/i602_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40062 \Keyboard/actualKey_1__1__I_0_i2_3_lut_4_lut ( .A(A0), .B(B0), 
    .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40061 ( input A, B, C, D, output Z );

  LUT4 #("0x44EC") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40062 ( input A, B, C, D, output Z );

  LUT4 #("0xFB40") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module Keyboard_SLICE_199 ( input C1, B1, A1, D0, C0, A0, output F0, F1 );
  wire   GNDI;

  lut40063 i3258_3_lut_3_lut( .A(A1), .B(B1), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40064 \Keyboard/i450_3_lut ( .A(A0), .B(GNDI), .C(C0), .D(D0), .Z(F0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40063 ( input A, B, C, D, output Z );

  LUT4 #("0xD8D8") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40064 ( input A, B, C, D, output Z );

  LUT4 #("0xAFA0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module Keyboard_SLICE_200 ( input D1, C1, A1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40065 \Keyboard/i707_3_lut ( .A(A1), .B(GNDI), .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40066 \Keyboard/i8_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40065 ( input A, B, C, D, output Z );

  LUT4 #("0xF0AA") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40066 ( input A, B, C, D, output Z );

  LUT4 #("0xFFFE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module Keyboard_SLICE_201 ( input D1, C1, A1, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40067 \Keyboard/i306_3_lut ( .A(A1), .B(GNDI), .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40068 \Keyboard/i525_3_lut ( .A(A0), .B(B0), .C(C0), .D(GNDI), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40067 ( input A, B, C, D, output Z );

  LUT4 #("0xAFA0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40068 ( input A, B, C, D, output Z );

  LUT4 #("0xB8B8") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module Keyboard_SLICE_203 ( input D1, C1, A1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40067 \Keyboard/i446_3_lut ( .A(A1), .B(GNDI), .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40069 \Keyboard/i702_3_lut_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40069 ( input A, B, C, D, output Z );

  LUT4 #("0xC0AA") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module Keyboard_SLICE_205 ( input D1, C1, A1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40070 \Keyboard/i442_3_lut ( .A(A1), .B(GNDI), .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40071 \Keyboard/i697_3_lut_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40070 ( input A, B, C, D, output Z );

  LUT4 #("0xFA0A") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40071 ( input A, B, C, D, output Z );

  LUT4 #("0xAC0C") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module Keyboard_SLICE_207 ( input D1, C1, A1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40070 \Keyboard/i438_3_lut ( .A(A1), .B(GNDI), .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40072 \Keyboard/i692_3_lut_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40072 ( input A, B, C, D, output Z );

  LUT4 #("0xCA0A") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module Keyboard_SLICE_209 ( input D1, C1, B1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40073 \Keyboard/i434_3_lut ( .A(GNDI), .B(B1), .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40074 \Keyboard/i687_3_lut_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40073 ( input A, B, C, D, output Z );

  LUT4 #("0xFC0C") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40074 ( input A, B, C, D, output Z );

  LUT4 #("0x88F0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module Keyboard_SLICE_211 ( input D1, C1, B1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40073 \Keyboard/i430_3_lut ( .A(GNDI), .B(B1), .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40075 \Keyboard/i682_3_lut_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40075 ( input A, B, C, D, output Z );

  LUT4 #("0xE222") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module Keyboard_SLICE_213 ( input C1, B1, A1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40076 \Keyboard/i426_3_lut ( .A(A1), .B(B1), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40077 \Keyboard/i677_3_lut_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40076 ( input A, B, C, D, output Z );

  LUT4 #("0xACAC") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40077 ( input A, B, C, D, output Z );

  LUT4 #("0xE222") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module Keyboard_SLICE_215 ( input D1, C1, A1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40070 \Keyboard/i422_3_lut ( .A(A1), .B(GNDI), .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40078 \Keyboard/i672_3_lut_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40078 ( input A, B, C, D, output Z );

  LUT4 #("0xAC0C") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module Keyboard_SLICE_217 ( input D1, C1, A1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40070 \Keyboard/i418_3_lut ( .A(A1), .B(GNDI), .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40079 \Keyboard/i667_3_lut_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40079 ( input A, B, C, D, output Z );

  LUT4 #("0xA0CC") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module Keyboard_SLICE_219 ( input C1, B1, A1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40076 \Keyboard/i414_3_lut ( .A(A1), .B(B1), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40080 \Keyboard/i662_3_lut_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40080 ( input A, B, C, D, output Z );

  LUT4 #("0xB830") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module Keyboard_SLICE_221 ( input D1, C1, B1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40057 \Keyboard/i326_3_lut ( .A(GNDI), .B(B1), .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40074 \Keyboard/i552_3_lut_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module Keyboard_SLICE_223 ( input C1, B1, A1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40076 \Keyboard/i286_3_lut ( .A(A1), .B(B1), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40072 \Keyboard/i712_3_lut_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module Keyboard_SLICE_225 ( input C1, B1, A1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40076 \Keyboard/i330_3_lut ( .A(A1), .B(B1), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40075 \Keyboard/i557_3_lut_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module Keyboard_SLICE_227 ( input C1, B1, A1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40081 \Keyboard/i334_3_lut ( .A(A1), .B(B1), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40077 \Keyboard/i562_3_lut_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40081 ( input A, B, C, D, output Z );

  LUT4 #("0xCACA") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module Keyboard_SLICE_229 ( input C1, B1, A1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40076 \Keyboard/i338_3_lut ( .A(A1), .B(B1), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40082 \Keyboard/i567_3_lut_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40082 ( input A, B, C, D, output Z );

  LUT4 #("0xCA0A") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module Keyboard_SLICE_231 ( input D1, C1, A1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40070 \Keyboard/i342_3_lut ( .A(A1), .B(GNDI), .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40083 \Keyboard/i572_3_lut_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40083 ( input A, B, C, D, output Z );

  LUT4 #("0xB830") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module Keyboard_SLICE_233 ( input D1, C1, A1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40067 \Keyboard/i346_3_lut ( .A(A1), .B(GNDI), .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40084 \Keyboard/i577_3_lut_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40084 ( input A, B, C, D, output Z );

  LUT4 #("0xC0AA") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module Keyboard_SLICE_235 ( input C1, B1, A1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40076 \Keyboard/i294_3_lut ( .A(A1), .B(B1), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40080 \Keyboard/i510_3_lut_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module Keyboard_SLICE_237 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, 
    F1 );

  lut40085 \Keyboard.equal_73_i4_2_lut ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40086 \Keyboard/i582_3_lut_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40085 ( input A, B, C, D, output Z );

  LUT4 #("0xACFF") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40086 ( input A, B, C, D, output Z );

  LUT4 #("0xD850") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module Keyboard_SLICE_238 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, 
    F1 );

  lut40087 \Keyboard/actualKey_0__1__I_0_i2_3_lut_4_lut ( .A(A1), .B(B1), 
    .C(C1), .D(D1), .Z(F1));
  lut40088 \Keyboard.equal_75_i4_2_lut ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40087 ( input A, B, C, D, output Z );

  LUT4 #("0xCDC8") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40088 ( input A, B, C, D, output Z );

  LUT4 #("0xFCFA") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module Keyboard_SLICE_239 ( input C1, B1, A1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40081 \Keyboard/i354_3_lut ( .A(A1), .B(B1), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40084 \Keyboard/i587_3_lut_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module Keyboard_SLICE_241 ( input C1, B1, A1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40076 \Keyboard/i406_3_lut ( .A(A1), .B(B1), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40077 \Keyboard/i652_3_lut_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module Keyboard_SLICE_243 ( input D1, C1, A1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40070 \Keyboard/i322_3_lut ( .A(A1), .B(GNDI), .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40086 \Keyboard/i547_3_lut_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module Keyboard_SLICE_245 ( input D1, C1, A1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40089 \Keyboard/i402_3_lut ( .A(A1), .B(GNDI), .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40078 \Keyboard/i647_3_lut_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40089 ( input A, B, C, D, output Z );

  LUT4 #("0xAAF0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module Keyboard_SLICE_247 ( input D1, C1, B1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40073 \Keyboard/i398_3_lut ( .A(GNDI), .B(B1), .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40090 \Keyboard/i642_3_lut_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40090 ( input A, B, C, D, output Z );

  LUT4 #("0xD850") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module Keyboard_SLICE_249 ( input D1, C1, B1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40057 \Keyboard/i410_3_lut ( .A(GNDI), .B(B1), .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40091 \Keyboard/i657_3_lut_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40091 ( input A, B, C, D, output Z );

  LUT4 #("0xA0CC") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module Keyboard_SLICE_251 ( input D1, C1, A1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40067 \Keyboard/i394_3_lut ( .A(A1), .B(GNDI), .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40083 \Keyboard/i637_3_lut_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module Keyboard_SLICE_253 ( input D1, C1, A1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40067 \Keyboard/i390_3_lut ( .A(A1), .B(GNDI), .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40075 \Keyboard/i632_3_lut_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module Keyboard_SLICE_255 ( input D1, C1, B1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40073 \Keyboard/i386_3_lut ( .A(GNDI), .B(B1), .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40092 \Keyboard/i627_3_lut_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40092 ( input A, B, C, D, output Z );

  LUT4 #("0xE444") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module Keyboard_SLICE_257 ( input D1, C1, B1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40016 \Keyboard/i318_3_lut ( .A(GNDI), .B(B1), .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40083 \Keyboard/i542_3_lut_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module Keyboard_SLICE_259 ( input D1, C1, B1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40016 \Keyboard/i314_3_lut ( .A(GNDI), .B(B1), .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40082 \Keyboard/i537_3_lut_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module Keyboard_SLICE_261 ( input C1, B1, A1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40081 \Keyboard/i310_3_lut ( .A(A1), .B(B1), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40090 \Keyboard/i530_3_lut_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module Keyboard_SLICE_263 ( input D1, C1, A1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40070 \Keyboard/i302_3_lut ( .A(A1), .B(GNDI), .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40077 \Keyboard/i520_3_lut_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module Keyboard_SLICE_265 ( input D1, C1, B1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40073 \Keyboard/i290_3_lut ( .A(GNDI), .B(B1), .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40071 \Keyboard/i505_3_lut_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module Keyboard_SLICE_267 ( input A0, output F0 );
  wire   GNDI;

  lut40093 \Keyboard/i453_1_lut ( .A(A0), .B(GNDI), .C(GNDI), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40093 ( input A, B, C, D, output Z );

  LUT4 #("0x5555") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module Keyboard_SLICE_268 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, 
    F1 );

  lut40094 \Keyboard/i597_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40095 \Keyboard/actualKey_0__1__I_0_i1_3_lut_4_lut ( .A(A0), .B(B0), 
    .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40094 ( input A, B, C, D, output Z );

  LUT4 #("0x32AA") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40095 ( input A, B, C, D, output Z );

  LUT4 #("0xF0E4") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module Keyboard_SLICE_269 ( input C1, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40096 \Keyboard/i463_1_lut ( .A(GNDI), .B(GNDI), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40097 \Keyboard/i622_3_lut ( .A(A0), .B(B0), .C(C0), .D(GNDI), .Z(F0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40096 ( input A, B, C, D, output Z );

  LUT4 #("0x0F0F") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40097 ( input A, B, C, D, output Z );

  LUT4 #("0xE4E4") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module Keyboard_SLICE_271 ( input C0, output F0 );
  wire   GNDI;

  lut40098 \Keyboard/i464_1_lut ( .A(GNDI), .B(GNDI), .C(C0), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (C0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40098 ( input A, B, C, D, output Z );

  LUT4 #("0x0F0F") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module Keyboard_SLICE_272 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, 
    F1 );

  lut40094 \Keyboard/i617_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40099 \Keyboard/actualKey_2__1__I_0_i1_3_lut_4_lut ( .A(A0), .B(B0), 
    .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40099 ( input A, B, C, D, output Z );

  LUT4 #("0xCCCA") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module Keyboard_SLICE_273 ( input C1, D0, C0, A0, output F0, F1 );
  wire   GNDI;

  lut40096 \Keyboard/i465_1_lut ( .A(GNDI), .B(GNDI), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40100 \Keyboard/i612_3_lut ( .A(A0), .B(GNDI), .C(C0), .D(D0), .Z(F0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40100 ( input A, B, C, D, output Z );

  LUT4 #("0xF5A0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module Keyboard_SLICE_275 ( input C1, D0, C0, A0, output F0, F1 );
  wire   GNDI;

  lut40096 \Keyboard/i471_1_lut ( .A(GNDI), .B(GNDI), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40100 \Keyboard/i515_3_lut ( .A(A0), .B(GNDI), .C(C0), .D(D0), .Z(F0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module Keyboard_SLICE_277 ( input D0, output F0 );
  wire   GNDI;

  lut40101 \Keyboard/i472_1_lut ( .A(GNDI), .B(GNDI), .C(GNDI), .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40101 ( input A, B, C, D, output Z );

  LUT4 #("0x00FF") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module Keyboard_SLICE_278 ( input D1, C1, B1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40057 \Keyboard/i358_3_lut ( .A(GNDI), .B(B1), .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40102 \Keyboard/i592_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40102 ( input A, B, C, D, output Z );

  LUT4 #("0x44EC") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_279 ( input D1, C1, B1, A1, D0, B0, output F0, F1 );
  wire   GNDI;

  lut40103 i1_4_lut_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40044 i1_2_lut( .A(GNDI), .B(B0), .C(GNDI), .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40103 ( input A, B, C, D, output Z );

  LUT4 #("0xE0F0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_280 ( input C1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40096 \mainTimer/EN_I_0_1_lut ( .A(GNDI), .B(GNDI), .C(C1), .D(GNDI), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40104 i503_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40104 ( input A, B, C, D, output Z );

  LUT4 #("0x3A0A") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module Keyboard_SLICE_281 ( input D1, C1, B1, A1, D0, C0, output F0, F1 );
  wire   GNDI;

  lut40105 \Keyboard/i6_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40106 \Keyboard/pulsed_I_0_80_2_lut ( .A(GNDI), .B(GNDI), .C(C0), .D(D0), 
    .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40105 ( input A, B, C, D, output Z );

  LUT4 #("0xFFFE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40106 ( input A, B, C, D, output Z );

  LUT4 #("0xF000") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module Keyboard_SLICE_283 ( input C1, A1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40047 \Keyboard/pulsed_I_0_81_2_lut ( .A(A1), .B(GNDI), .C(C1), .D(GNDI), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40107 \Keyboard/actualKey_1__1__I_0_i1_3_lut_4_lut ( .A(A0), .B(B0), 
    .C(C0), .D(D0), .Z(F0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40107 ( input A, B, C, D, output Z );

  LUT4 #("0xF4B0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module Keyboard_SLICE_285 ( input D1, A1, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40108 \Keyboard/pulsed_I_0_77_2_lut ( .A(A1), .B(GNDI), .C(GNDI), .D(D1), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40046 \Keyboard/pulsed_I_0_2_lut ( .A(A0), .B(B0), .C(GNDI), .D(GNDI), 
    .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40108 ( input A, B, C, D, output Z );

  LUT4 #("0xAA00") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module Keyboard_SLICE_286 ( input D1, C1, B1, A1, D0, C0, A0, output F0, F1 );
  wire   GNDI;

  lut40109 \Keyboard/actualKey_3__1__I_0_i1_3_lut_4_lut ( .A(A1), .B(B1), 
    .C(C1), .D(D1), .Z(F1));
  lut40058 \Keyboard/i298_3_lut ( .A(A0), .B(GNDI), .C(C0), .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40109 ( input A, B, C, D, output Z );

  LUT4 #("0xF0B8") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module Keyboard_SLICE_287 ( input B1, A1, D0, A0, output F0, F1 );
  wire   GNDI;

  lut40110 \Keyboard/pulsed_I_0_3_2_lut ( .A(A1), .B(B1), .C(GNDI), .D(GNDI), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40111 \Keyboard/pulsed_I_0_5_2_lut ( .A(A0), .B(GNDI), .C(GNDI), .D(D0), 
    .Z(F0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40110 ( input A, B, C, D, output Z );

  LUT4 #("0x8888") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40111 ( input A, B, C, D, output Z );

  LUT4 #("0x00AA") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module Keyboard_SLICE_288 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, 
    F1 );

  lut40112 \Keyboard/i30_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40113 \Keyboard/i19_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40112 ( input A, B, C, D, output Z );

  LUT4 #("0xFFFE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40113 ( input A, B, C, D, output Z );

  LUT4 #("0xFFFE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module Keyboard_SLICE_289 ( input D1, C1, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40114 \Keyboard/pulsed_I_0_74_2_lut ( .A(GNDI), .B(GNDI), .C(C1), .D(D1), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40046 \Keyboard/pulsed_I_0_82_2_lut ( .A(A0), .B(B0), .C(GNDI), .D(GNDI), 
    .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40114 ( input A, B, C, D, output Z );

  LUT4 #("0xF000") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module Keyboard_SLICE_290 ( input D1, C1, B1, A1, D0, C0, B0, output F0, F1 );
  wire   GNDI;

  lut40115 \Keyboard/actualKey_2__1__I_0_i2_3_lut_4_lut ( .A(A1), .B(B1), 
    .C(C1), .D(D1), .Z(F1));
  lut40017 \Keyboard/i374_3_lut ( .A(GNDI), .B(B0), .C(C0), .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40115 ( input A, B, C, D, output Z );

  LUT4 #("0xF0E4") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module Keyboard_SLICE_291 ( input C0, A0, output F0 );
  wire   GNDI;

  lut40116 \Keyboard/pulsed_I_0_79_2_lut ( .A(A0), .B(GNDI), .C(C0), .D(GNDI), 
    .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40116 ( input A, B, C, D, output Z );

  LUT4 #("0xA0A0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module Keyboard_SLICE_292 ( input D1, C1, B1, A1, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40117 \Keyboard.i69_1_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40060 \Keyboard/i362_3_lut ( .A(A0), .B(B0), .C(C0), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40117 ( input A, B, C, D, output Z );

  LUT4 #("0x0F1D") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module Keyboard_SLICE_293 ( input C0, A0, output F0 );
  wire   GNDI;

  lut40116 \Keyboard/pulsed_I_0_83_2_lut ( .A(A0), .B(GNDI), .C(C0), .D(GNDI), 
    .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module Keyboard_SLICE_294 ( input D1, C1, B1, A1, D0, C0, A0, output F0, F1 );
  wire   GNDI;

  lut40118 \Keyboard.i72_1_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40064 \Keyboard/i378_3_lut ( .A(A0), .B(GNDI), .C(C0), .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40118 ( input A, B, C, D, output Z );

  LUT4 #("0x0E1F") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module Keyboard_SLICE_295 ( input D1, A1, C0, B0, output F0, F1 );
  wire   GNDI;

  lut40108 \Keyboard/pulsed_I_0_76_2_lut ( .A(A1), .B(GNDI), .C(GNDI), .D(D1), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40119 \Keyboard/pulsed_I_0_84_2_lut ( .A(GNDI), .B(B0), .C(C0), .D(GNDI), 
    .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40119 ( input A, B, C, D, output Z );

  LUT4 #("0x3030") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module Keyboard_SLICE_296 ( input D1, C1, B1, A1, D0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40120 \Keyboard/actualKey_3__1__I_0_i2_3_lut_4_lut ( .A(A1), .B(B1), 
    .C(C1), .D(D1), .Z(F1));
  lut40121 \Keyboard/i382_3_lut ( .A(A0), .B(B0), .C(GNDI), .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40120 ( input A, B, C, D, output Z );

  LUT4 #("0xF0D8") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40121 ( input A, B, C, D, output Z );

  LUT4 #("0xCCAA") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module Keyboard_SLICE_297 ( input D1, C1, D0, C0, output F0, F1 );
  wire   GNDI;

  lut40122 \Keyboard/pulsed_I_0_72_2_lut ( .A(GNDI), .B(GNDI), .C(C1), .D(D1), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40106 \Keyboard/pulsed_I_0_78_2_lut ( .A(GNDI), .B(GNDI), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40122 ( input A, B, C, D, output Z );

  LUT4 #("0xF000") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module Keyboard_SLICE_298 ( input C1, B1, A1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40123 \Keyboard/i5_3_lut ( .A(A1), .B(B1), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40124 \Keyboard.i70_1_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40123 ( input A, B, C, D, output Z );

  LUT4 #("0xFEFE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40124 ( input A, B, C, D, output Z );

  LUT4 #("0x0E1F") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module Keyboard_SLICE_307 ( input D1, A1, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40125 \Keyboard/pulsed_I_0_2_2_lut ( .A(A1), .B(GNDI), .C(GNDI), .D(D1), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40126 \Keyboard/pulsed_I_0_4_2_lut ( .A(A0), .B(B0), .C(GNDI), .D(GNDI), 
    .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40125 ( input A, B, C, D, output Z );

  LUT4 #("0xAA00") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40126 ( input A, B, C, D, output Z );

  LUT4 #("0x4444") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module Keyboard_SLICE_309 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, 
    F1 );

  lut40127 \Keyboard/i24_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40128 \Keyboard/i17_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40127 ( input A, B, C, D, output Z );

  LUT4 #("0xFFFE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40128 ( input A, B, C, D, output Z );

  LUT4 #("0xFFFB") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module Keyboard_SLICE_311 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, 
    F1 );

  lut40129 \Keyboard/i29_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40113 \Keyboard/i23_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40129 ( input A, B, C, D, output Z );

  LUT4 #("0xFFFE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_313 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40130 i501_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40131 Mux_39_i3_4_lut_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40130 ( input A, B, C, D, output Z );

  LUT4 #("0xAAE2") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40131 ( input A, B, C, D, output Z );

  LUT4 #("0x3088") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_315 ( input C1, A1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40132 i1243_2_lut( .A(A1), .B(GNDI), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40133 Sreg_1__I_0_3_Mux_0_i3_4_lut_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40132 ( input A, B, C, D, output Z );

  LUT4 #("0xA0A0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40133 ( input A, B, C, D, output Z );

  LUT4 #("0x30BB") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module STATE_OUT_serial_SLICE_317 ( input D1, C1, B1, D0, C0, B0, A0, output 
    F0, F1 );
  wire   GNDI;

  lut40057 \STATE_OUT/serial/aux_3__I_0_i4_3_lut ( .A(GNDI), .B(B1), .C(C1), 
    .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40134 \STATE_OUT/serial/i31_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40134 ( input A, B, C, D, output Z );

  LUT4 #("0xFFFE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module STATE_OUT_serial_SLICE_318 ( input D1, C1, B1, A1, D0, C0, A0, output 
    F0, F1 );
  wire   GNDI;

  lut40135 \STATE_OUT/serial/counter_31__N_183[0]_bdd_4_lut ( .A(A1), .B(B1), 
    .C(C1), .D(D1), .Z(F1));
  lut40064 \STATE_OUT/serial/aux_3__I_0_i3_3_lut ( .A(A0), .B(GNDI), .C(C0), 
    .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40135 ( input A, B, C, D, output Z );

  LUT4 #("0xEA62") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module STATE_OUT_serial_SLICE_321 ( input D1, C1, B1, A1, D0, A0, output F0, 
    F1 );
  wire   GNDI;

  lut40136 \STATE_OUT/serial/i26_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40137 \STATE_OUT/serial/i6_2_lut ( .A(A0), .B(GNDI), .C(GNDI), .D(D0), 
    .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40136 ( input A, B, C, D, output Z );

  LUT4 #("0xFFFE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40137 ( input A, B, C, D, output Z );

  LUT4 #("0xFFAA") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module STATE_OUT_serial_SLICE_323 ( input D0, C0, B0, A0, output F0 );

  lut40138 \STATE_OUT/serial/i24_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40138 ( input A, B, C, D, output Z );

  LUT4 #("0xFFFE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module STATE_OUT_serial_SLICE_324 ( input D1, C1, B1, A1, D0, C0, B0, A0, 
    output F0, F1 );

  lut40139 \STATE_OUT/serial/i30_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40140 \STATE_OUT/serial/i21_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40139 ( input A, B, C, D, output Z );

  LUT4 #("0xFFFE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40140 ( input A, B, C, D, output Z );

  LUT4 #("0xFFFE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module mainTimer_SLICE_325 ( input D1, C1, B1, A1, C0, A0, output F0, F1 );
  wire   GNDI;

  lut40141 \mainTimer/i10_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40142 \mainTimer/i1_2_lut ( .A(A0), .B(GNDI), .C(C0), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40141 ( input A, B, C, D, output Z );

  LUT4 #("0xFFFB") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40142 ( input A, B, C, D, output Z );

  LUT4 #("0xFAFA") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_328 ( input DI1, B1, D0, C0, B0, A0, CE, LSR, CLK, output Q1, F0, 
    F1 );
  wire   GNDI, DI1_dly, CLK_dly, CE_dly, LSR_dly;

  lut40143 SLICE_328_K1( .A(GNDI), .B(B1), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40144 i3536_2_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  ffsre20004 \Keyboard/valid_i2_set ( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module lut40143 ( input A, B, C, D, output Z );

  LUT4 #("0xCCCC") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40144 ( input A, B, C, D, output Z );

  LUT4 #("0x57DF") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module Keyboard_SLICE_329 ( input C1, B1, A1, D0, C0, B0, output F0, F1 );
  wire   GNDI;

  lut40145 \Keyboard/pulsed_I_0_38_2_lut_3_lut ( .A(A1), .B(B1), .C(C1), 
    .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40146 \Keyboard/pulsed_I_0_6_2_lut_3_lut ( .A(GNDI), .B(B0), .C(C0), 
    .D(D0), .Z(F0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40145 ( input A, B, C, D, output Z );

  LUT4 #("0x7070") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40146 ( input A, B, C, D, output Z );

  LUT4 #("0xC000") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module Keyboard_SLICE_331 ( input C1, B1, A1, D0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40145 \Keyboard/pulsed_I_0_39_2_lut_3_lut ( .A(A1), .B(B1), .C(C1), 
    .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40147 \Keyboard/pulsed_I_0_7_2_lut_3_lut ( .A(A0), .B(B0), .C(GNDI), 
    .D(D0), .Z(F0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40147 ( input A, B, C, D, output Z );

  LUT4 #("0x8800") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module Keyboard_SLICE_333 ( input D1, C1, B1, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40148 \Keyboard/pulsed_I_0_40_2_lut_3_lut ( .A(GNDI), .B(B1), .C(C1), 
    .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40149 \Keyboard/pulsed_I_0_8_2_lut_3_lut ( .A(A0), .B(B0), .C(C0), 
    .D(GNDI), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40148 ( input A, B, C, D, output Z );

  LUT4 #("0x0CCC") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40149 ( input A, B, C, D, output Z );

  LUT4 #("0x8080") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module Keyboard_SLICE_335 ( input C1, B1, A1, D0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40150 \Keyboard/pulsed_I_0_41_2_lut_3_lut ( .A(A1), .B(B1), .C(C1), 
    .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40147 \Keyboard/pulsed_I_0_9_2_lut_3_lut ( .A(A0), .B(B0), .C(GNDI), 
    .D(D0), .Z(F0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40150 ( input A, B, C, D, output Z );

  LUT4 #("0x2A2A") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module Keyboard_SLICE_337 ( input D1, C1, A1, D0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40151 \Keyboard/pulsed_I_0_42_2_lut_3_lut ( .A(A1), .B(GNDI), .C(C1), 
    .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40152 \Keyboard/pulsed_I_0_10_2_lut_3_lut ( .A(A0), .B(B0), .C(GNDI), 
    .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40151 ( input A, B, C, D, output Z );

  LUT4 #("0x0AAA") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40152 ( input A, B, C, D, output Z );

  LUT4 #("0x8800") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module Keyboard_SLICE_339 ( input C1, B1, A1, D0, C0, B0, output F0, F1 );
  wire   GNDI;

  lut40150 \Keyboard/pulsed_I_0_43_2_lut_3_lut ( .A(A1), .B(B1), .C(C1), 
    .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40153 \Keyboard/pulsed_I_0_11_2_lut_3_lut ( .A(GNDI), .B(B0), .C(C0), 
    .D(D0), .Z(F0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40153 ( input A, B, C, D, output Z );

  LUT4 #("0xC000") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module Keyboard_SLICE_341 ( input D1, C1, B1, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40154 \Keyboard/pulsed_I_0_44_2_lut_3_lut ( .A(GNDI), .B(B1), .C(C1), 
    .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40155 \Keyboard/pulsed_I_0_12_2_lut_3_lut ( .A(A0), .B(B0), .C(C0), 
    .D(GNDI), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40154 ( input A, B, C, D, output Z );

  LUT4 #("0x3F00") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40155 ( input A, B, C, D, output Z );

  LUT4 #("0x8080") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module Keyboard_SLICE_343 ( input D1, C1, B1, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40156 \Keyboard/pulsed_I_0_45_2_lut_3_lut ( .A(GNDI), .B(B1), .C(C1), 
    .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40157 \Keyboard/pulsed_I_0_13_2_lut_3_lut ( .A(A0), .B(B0), .C(C0), 
    .D(GNDI), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40156 ( input A, B, C, D, output Z );

  LUT4 #("0x30F0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40157 ( input A, B, C, D, output Z );

  LUT4 #("0x8080") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module Keyboard_SLICE_345 ( input C1, B1, A1, D0, C0, B0, output F0, F1 );
  wire   GNDI;

  lut40150 \Keyboard/pulsed_I_0_46_2_lut_3_lut ( .A(A1), .B(B1), .C(C1), 
    .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40153 \Keyboard/pulsed_I_0_14_2_lut_3_lut ( .A(GNDI), .B(B0), .C(C0), 
    .D(D0), .Z(F0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module Keyboard_SLICE_347 ( input C1, B1, A1, D0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40145 \Keyboard/pulsed_I_0_61_2_lut_3_lut ( .A(A1), .B(B1), .C(C1), 
    .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40158 \Keyboard/pulsed_I_0_29_2_lut_3_lut ( .A(A0), .B(B0), .C(GNDI), 
    .D(D0), .Z(F0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40158 ( input A, B, C, D, output Z );

  LUT4 #("0x8800") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module Keyboard_SLICE_349 ( input C1, B1, A1, D0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40159 \Keyboard/pulsed_I_0_54_2_lut_3_lut ( .A(A1), .B(B1), .C(C1), 
    .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40160 \Keyboard/pulsed_I_0_22_2_lut_3_lut ( .A(A0), .B(B0), .C(GNDI), 
    .D(D0), .Z(F0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40159 ( input A, B, C, D, output Z );

  LUT4 #("0x4C4C") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40160 ( input A, B, C, D, output Z );

  LUT4 #("0x8800") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module Keyboard_SLICE_351 ( input D1, C1, A1, D0, C0, B0, output F0, F1 );
  wire   GNDI;

  lut40161 \Keyboard/pulsed_I_0_62_2_lut_3_lut ( .A(A1), .B(GNDI), .C(C1), 
    .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40162 \Keyboard/pulsed_I_0_30_2_lut_3_lut ( .A(GNDI), .B(B0), .C(C0), 
    .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40161 ( input A, B, C, D, output Z );

  LUT4 #("0x50F0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40162 ( input A, B, C, D, output Z );

  LUT4 #("0xC000") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module Keyboard_SLICE_353 ( input D1, C1, B1, D0, C0, A0, output F0, F1 );
  wire   GNDI;

  lut40156 \Keyboard/pulsed_I_0_63_2_lut_3_lut ( .A(GNDI), .B(B1), .C(C1), 
    .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40163 \Keyboard/pulsed_I_0_31_2_lut_3_lut ( .A(A0), .B(GNDI), .C(C0), 
    .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40163 ( input A, B, C, D, output Z );

  LUT4 #("0xA000") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module Keyboard_SLICE_355 ( input D1, C1, A1, D0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40164 \Keyboard/pulsed_I_0_64_2_lut_3_lut ( .A(A1), .B(GNDI), .C(C1), 
    .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40165 \Keyboard/pulsed_I_0_32_2_lut_3_lut ( .A(A0), .B(B0), .C(GNDI), 
    .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40164 ( input A, B, C, D, output Z );

  LUT4 #("0x5F00") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40165 ( input A, B, C, D, output Z );

  LUT4 #("0x8800") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module Keyboard_SLICE_357 ( input C1, B1, A1, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40166 \Keyboard/pulsed_I_0_65_2_lut_3_lut ( .A(A1), .B(B1), .C(C1), 
    .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40167 \Keyboard/pulsed_I_0_33_2_lut_3_lut ( .A(A0), .B(B0), .C(C0), 
    .D(GNDI), .Z(F0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40166 ( input A, B, C, D, output Z );

  LUT4 #("0x2A2A") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40167 ( input A, B, C, D, output Z );

  LUT4 #("0x8080") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module Keyboard_SLICE_359 ( input D1, C1, A1, D0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40151 \Keyboard/pulsed_I_0_66_2_lut_3_lut ( .A(A1), .B(GNDI), .C(C1), 
    .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40152 \Keyboard/pulsed_I_0_34_2_lut_3_lut ( .A(A0), .B(B0), .C(GNDI), 
    .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module Keyboard_SLICE_361 ( input D1, C1, A1, D0, C0, B0, output F0, F1 );
  wire   GNDI;

  lut40168 \Keyboard/pulsed_I_0_56_2_lut_3_lut ( .A(A1), .B(GNDI), .C(C1), 
    .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40146 \Keyboard/pulsed_I_0_24_2_lut_3_lut ( .A(GNDI), .B(B0), .C(C0), 
    .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40168 ( input A, B, C, D, output Z );

  LUT4 #("0x0AAA") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module Keyboard_SLICE_363 ( input D1, C1, A1, D0, C0, B0, output F0, F1 );
  wire   GNDI;

  lut40164 \Keyboard/pulsed_I_0_67_2_lut_3_lut ( .A(A1), .B(GNDI), .C(C1), 
    .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40169 \Keyboard/pulsed_I_0_35_2_lut_3_lut ( .A(GNDI), .B(B0), .C(C0), 
    .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40169 ( input A, B, C, D, output Z );

  LUT4 #("0xC000") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module Keyboard_SLICE_365 ( input D1, B1, A1, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40170 \Keyboard/pulsed_I_0_68_2_lut_3_lut ( .A(A1), .B(B1), .C(GNDI), 
    .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40157 \Keyboard/pulsed_I_0_36_2_lut_3_lut ( .A(A0), .B(B0), .C(C0), 
    .D(GNDI), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40170 ( input A, B, C, D, output Z );

  LUT4 #("0x22AA") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module Keyboard_SLICE_367 ( input C1, B1, A1, D0, C0, B0, output F0, F1 );
  wire   GNDI;

  lut40150 \Keyboard/pulsed_I_0_48_2_lut_3_lut ( .A(A1), .B(B1), .C(C1), 
    .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40146 \Keyboard/pulsed_I_0_16_2_lut_3_lut ( .A(GNDI), .B(B0), .C(C0), 
    .D(D0), .Z(F0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module Keyboard_SLICE_369 ( input D1, C1, A1, D0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40164 \Keyboard/pulsed_I_0_60_2_lut_3_lut ( .A(A1), .B(GNDI), .C(C1), 
    .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40165 \Keyboard/pulsed_I_0_28_2_lut_3_lut ( .A(A0), .B(B0), .C(GNDI), 
    .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module Keyboard_SLICE_371 ( input C1, B1, A1, D0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40171 \Keyboard/pulsed_I_0_49_2_lut_3_lut ( .A(A1), .B(B1), .C(C1), 
    .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40172 \Keyboard/pulsed_I_0_17_2_lut_3_lut ( .A(A0), .B(B0), .C(GNDI), 
    .D(D0), .Z(F0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40171 ( input A, B, C, D, output Z );

  LUT4 #("0x7070") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40172 ( input A, B, C, D, output Z );

  LUT4 #("0x8800") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module Keyboard_SLICE_373 ( input D1, C1, A1, D0, C0, B0, output F0, F1 );
  wire   GNDI;

  lut40173 \Keyboard/pulsed_I_0_50_2_lut_3_lut ( .A(A1), .B(GNDI), .C(C1), 
    .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40169 \Keyboard/pulsed_I_0_18_2_lut_3_lut ( .A(GNDI), .B(B0), .C(C0), 
    .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40173 ( input A, B, C, D, output Z );

  LUT4 #("0x5F00") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module Keyboard_SLICE_375 ( input D1, B1, A1, D0, C0, A0, output F0, F1 );
  wire   GNDI;

  lut40170 \Keyboard/pulsed_I_0_47_2_lut_3_lut ( .A(A1), .B(B1), .C(GNDI), 
    .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40174 \Keyboard/pulsed_I_0_15_2_lut_3_lut ( .A(A0), .B(GNDI), .C(C0), 
    .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40174 ( input A, B, C, D, output Z );

  LUT4 #("0xA000") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module Keyboard_SLICE_377 ( input C1, B1, A1, D0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40150 \Keyboard/pulsed_I_0_51_2_lut_3_lut ( .A(A1), .B(B1), .C(C1), 
    .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40158 \Keyboard/pulsed_I_0_19_2_lut_3_lut ( .A(A0), .B(B0), .C(GNDI), 
    .D(D0), .Z(F0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module Keyboard_SLICE_379 ( input D1, C1, A1, D0, C0, B0, output F0, F1 );
  wire   GNDI;

  lut40151 \Keyboard/pulsed_I_0_52_2_lut_3_lut ( .A(A1), .B(GNDI), .C(C1), 
    .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40175 \Keyboard/pulsed_I_0_20_2_lut_3_lut ( .A(GNDI), .B(B0), .C(C0), 
    .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40175 ( input A, B, C, D, output Z );

  LUT4 #("0xC000") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module Keyboard_SLICE_381 ( input D1, C1, B1, D0, C0, A0, output F0, F1 );
  wire   GNDI;

  lut40176 \Keyboard/pulsed_I_0_53_2_lut_3_lut ( .A(GNDI), .B(B1), .C(C1), 
    .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40177 \Keyboard/pulsed_I_0_21_2_lut_3_lut ( .A(A0), .B(GNDI), .C(C0), 
    .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40176 ( input A, B, C, D, output Z );

  LUT4 #("0x3F00") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40177 ( input A, B, C, D, output Z );

  LUT4 #("0xA000") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module Keyboard_SLICE_383 ( input C1, B1, A1, D0, C0, B0, output F0, F1 );
  wire   GNDI;

  lut40166 \Keyboard/pulsed_I_0_59_2_lut_3_lut ( .A(A1), .B(B1), .C(C1), 
    .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40162 \Keyboard/pulsed_I_0_27_2_lut_3_lut ( .A(GNDI), .B(B0), .C(C0), 
    .D(D0), .Z(F0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module Keyboard_SLICE_385 ( input D1, C1, A1, D0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40173 \Keyboard/pulsed_I_0_58_2_lut_3_lut ( .A(A1), .B(GNDI), .C(C1), 
    .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40165 \Keyboard/pulsed_I_0_26_2_lut_3_lut ( .A(A0), .B(B0), .C(GNDI), 
    .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module Keyboard_SLICE_387 ( input C1, B1, A1, D0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40159 \Keyboard/pulsed_I_0_57_2_lut_3_lut ( .A(A1), .B(B1), .C(C1), 
    .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40160 \Keyboard/pulsed_I_0_25_2_lut_3_lut ( .A(A0), .B(B0), .C(GNDI), 
    .D(D0), .Z(F0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module Keyboard_SLICE_389 ( input C1, B1, A1, D0, C0, B0, output F0, F1 );
  wire   GNDI;

  lut40166 \Keyboard/pulsed_I_0_69_2_lut_3_lut ( .A(A1), .B(B1), .C(C1), 
    .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40162 \Keyboard/pulsed_I_0_37_2_lut_3_lut ( .A(GNDI), .B(B0), .C(C0), 
    .D(D0), .Z(F0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module Keyboard_SLICE_391 ( input D1, C1, B1, D0, C0, A0, output F0, F1 );
  wire   GNDI;

  lut40176 \Keyboard/pulsed_I_0_55_2_lut_3_lut ( .A(GNDI), .B(B1), .C(C1), 
    .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40178 \Keyboard/pulsed_I_0_23_2_lut_3_lut ( .A(A0), .B(GNDI), .C(C0), 
    .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40178 ( input A, B, C, D, output Z );

  LUT4 #("0xA000") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module STATE_OUT_serial_SLICE_393 ( input D0, C0, B0, A0, output F0 );

  lut40179 \STATE_OUT/serial/aux_3__I_0_i1_4_lut ( .A(A0), .B(B0), .C(C0), 
    .D(D0), .Z(F0));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40179 ( input A, B, C, D, output Z );

  LUT4 #("0xBBB8") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module STATE_OUT_serial_SLICE_394 ( input DI1, D1, C1, B1, A1, D0, C0, B0, A0, 
    LSR, CLK, output Q1, F0, F1 );
  wire   VCCI, DI1_dly, CLK_dly, LSR_dly;

  lut40180 \STATE_OUT/serial/n5369_bdd_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40181 \STATE_OUT/serial/aux_3__I_0_i2_3_lut_4_lut ( .A(A0), .B(B0), 
    .C(C0), .D(D0), .Z(F0));
  ffsre20007 \STATE_OUT/serial/status_out ( .D0(DI1_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module lut40180 ( input A, B, C, D, output Z );

  LUT4 #("0xFA44") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40181 ( input A, B, C, D, output Z );

  LUT4 #("0xE2C0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module mainTimer_SLICE_395 ( input D1, C1, B1, A1, D0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40127 \mainTimer/i7_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40160 \mainTimer/i2966_3_lut ( .A(A0), .B(B0), .C(GNDI), .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module mainTimer_SLICE_396 ( input D0, C0, B0, A0, output F0 );

  lut40182 \mainTimer/i8_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40182 ( input A, B, C, D, output Z );

  LUT4 #("0xFFFE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module Keyboard_SLICE_397 ( input D0, C0, B0, A0, output F0 );

  lut40183 \Keyboard/i21_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40183 ( input A, B, C, D, output Z );

  LUT4 #("0xFFFE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module Keyboard_SLICE_398 ( input D0, C0, B0, A0, output F0 );

  lut40184 \Keyboard/i22_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40184 ( input A, B, C, D, output Z );

  LUT4 #("0xFFFE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module Keyboard_SLICE_399 ( input D0, C0, B0, A0, output F0 );

  lut40185 \Keyboard/i20_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40185 ( input A, B, C, D, output Z );

  LUT4 #("0xFFFE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module Keyboard_SLICE_400 ( input A0, output F0 );
  wire   GNDI;

  lut40093 \Keyboard/i482_1_lut ( .A(A0), .B(GNDI), .C(GNDI), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module Keyboard_SLICE_403 ( input D0, C0, B0, A0, output F0 );

  lut40183 \Keyboard/i18_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module Keyboard_SLICE_405 ( input A0, output F0 );
  wire   GNDI;

  lut40093 \Keyboard/i493_1_lut ( .A(A0), .B(GNDI), .C(GNDI), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module Keyboard_SLICE_407 ( input DI1, D1, B0, CE, LSR, CLK, output Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, CE_dly, LSR_dly;

  lut40186 \Keyboard.SLICE_407_K1 ( .A(GNDI), .B(GNDI), .C(GNDI), .D(D1), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40187 \Keyboard/i492_1_lut ( .A(GNDI), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));
  ffsre2 \Keyboard/counter_i30_reset ( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module lut40186 ( input A, B, C, D, output Z );

  LUT4 #("0xFF00") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40187 ( input A, B, C, D, output Z );

  LUT4 #("0x3333") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module Keyboard_SLICE_408 ( input C1, B1, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40188 \Keyboard/pulsed_I_0_70_2_lut ( .A(GNDI), .B(B1), .C(C1), .D(GNDI), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40189 \Keyboard/pulsed_I_0_73_2_lut ( .A(A0), .B(B0), .C(GNDI), .D(GNDI), 
    .Z(F0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40188 ( input A, B, C, D, output Z );

  LUT4 #("0xC0C0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40189 ( input A, B, C, D, output Z );

  LUT4 #("0x8888") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module Keyboard_SLICE_409 ( input C0, output F0 );
  wire   GNDI;

  lut40098 \Keyboard/i491_1_lut ( .A(GNDI), .B(GNDI), .C(C0), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (C0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module Keyboard_SLICE_411 ( input DI1, A1, B0, CE, LSR, CLK, output Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, CE_dly, LSR_dly;

  lut40190 \Keyboard.SLICE_411_K1 ( .A(A1), .B(GNDI), .C(GNDI), .D(GNDI), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40187 \Keyboard/i490_1_lut ( .A(GNDI), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));
  ffsre20004 \Keyboard/counter_i28_set ( .D0(DI1_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module lut40190 ( input A, B, C, D, output Z );

  LUT4 #("0xAAAA") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module Keyboard_SLICE_413 ( input A0, output F0 );
  wire   GNDI;

  lut40093 \Keyboard/i489_1_lut ( .A(A0), .B(GNDI), .C(GNDI), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module Keyboard_SLICE_415 ( input C0, output F0 );
  wire   GNDI;

  lut40098 \Keyboard/i488_1_lut ( .A(GNDI), .B(GNDI), .C(C0), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (C0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module Keyboard_SLICE_416 ( input B1, A1, D0, B0, output F0, F1 );
  wire   GNDI;

  lut40191 \Keyboard/pulsed_I_0_71_2_lut ( .A(A1), .B(B1), .C(GNDI), .D(GNDI), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40192 \Keyboard/pulsed_I_0_75_2_lut ( .A(GNDI), .B(B0), .C(GNDI), .D(D0), 
    .Z(F0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40191 ( input A, B, C, D, output Z );

  LUT4 #("0x8888") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40192 ( input A, B, C, D, output Z );

  LUT4 #("0xCC00") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module Keyboard_SLICE_417 ( input DI1, D1, D0, CE, LSR, CLK, output Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, CE_dly, LSR_dly;

  lut40186 \Keyboard.SLICE_417_K1 ( .A(GNDI), .B(GNDI), .C(GNDI), .D(D1), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40101 \Keyboard/i487_1_lut ( .A(GNDI), .B(GNDI), .C(GNDI), .D(D0), .Z(F0));
  ffsre2 \Keyboard/counter_i25_reset ( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module Keyboard_SLICE_419 ( input DI1, D1, B0, CE, LSR, CLK, output Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, CE_dly, LSR_dly;

  lut40186 \Keyboard.SLICE_419_K1 ( .A(GNDI), .B(GNDI), .C(GNDI), .D(D1), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40187 \Keyboard/i486_1_lut ( .A(GNDI), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));
  ffsre2 \Keyboard/counter_i24_reset ( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module Keyboard_SLICE_421 ( input A0, output F0 );
  wire   GNDI;

  lut40093 \Keyboard/i473_1_lut ( .A(A0), .B(GNDI), .C(GNDI), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module Keyboard_SLICE_423 ( input B0, output F0 );
  wire   GNDI;

  lut40187 \Keyboard/i467_1_lut ( .A(GNDI), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module STATE_OUT_SLICE_425 ( input D0, C0, B0, A0, output F0 );

  lut40193 \STATE_OUT/i3_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40193 ( input A, B, C, D, output Z );

  LUT4 #("0xFFEF") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module STATE_OUT_serial_SLICE_426 ( input C1, B1, C0, A0, output F0, F1 );
  wire   GNDI;

  lut40048 \STATE_OUT/serial/i1327_2_lut ( .A(GNDI), .B(B1), .C(C1), .D(GNDI), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40040 \STATE_OUT/serial/i1340_2_lut ( .A(A0), .B(GNDI), .C(C0), .D(GNDI), 
    .Z(F0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module Keyboard_SLICE_427 ( input C0, output F0 );
  wire   GNDI;

  lut40098 \Keyboard/i476_1_lut ( .A(GNDI), .B(GNDI), .C(C0), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (C0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module Keyboard_SLICE_428 ( input DI1, D1, C0, B0, A0, CE, LSR, CLK, output Q1, 
    F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, CE_dly, LSR_dly;

  lut40186 \Keyboard.SLICE_428_K1 ( .A(GNDI), .B(GNDI), .C(GNDI), .D(D1), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40060 \Keyboard/i350_3_lut ( .A(A0), .B(B0), .C(C0), .D(GNDI), .Z(F0));
  ffsre20004 \Keyboard/counter_i2_set ( .D0(DI1_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module STATE_OUT_serial_SLICE_429 ( input B1, A1, D0, C0, B0, A0, output F0, 
    F1 );
  wire   GNDI;

  lut40194 \STATE_OUT/i1_2_lut_adj_44 ( .A(A1), .B(B1), .C(GNDI), .D(GNDI), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40140 \STATE_OUT/serial/i17_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40194 ( input A, B, C, D, output Z );

  LUT4 #("0x4444") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module STATE_OUT_serial_SLICE_430 ( input D0, C0, B0, A0, output F0 );

  lut40185 \STATE_OUT/serial/i18_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_431 ( output F0 );
  wire   GNDI;

  lut40195 i2( .A(GNDI), .B(GNDI), .C(GNDI), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
  endspecify

endmodule

module lut40195 ( input A, B, C, D, output Z );

  LUT4 #("0xFFFF") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module Keyboard_SLICE_432 ( input D0, output F0 );
  wire   GNDI;

  lut40101 \Keyboard/i454_1_lut ( .A(GNDI), .B(GNDI), .C(GNDI), .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module Keyboard_SLICE_433 ( input A0, output F0 );
  wire   GNDI;

  lut40093 \Keyboard/i455_1_lut ( .A(A0), .B(GNDI), .C(GNDI), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module Keyboard_SLICE_434 ( input DI1, D1, A0, CE, LSR, CLK, output Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, CE_dly, LSR_dly;

  lut40186 \Keyboard.SLICE_434_K1 ( .A(GNDI), .B(GNDI), .C(GNDI), .D(D1), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40093 \Keyboard/i456_1_lut ( .A(A0), .B(GNDI), .C(GNDI), .D(GNDI), .Z(F0));
  ffsre2 \Keyboard/counter_i9_reset ( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module Keyboard_SLICE_435 ( input A0, output F0 );
  wire   GNDI;

  lut40093 \Keyboard/i457_1_lut ( .A(A0), .B(GNDI), .C(GNDI), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module Keyboard_SLICE_436 ( input B0, output F0 );
  wire   GNDI;

  lut40187 \Keyboard/i458_1_lut ( .A(GNDI), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module Keyboard_SLICE_437 ( input DI1, C1, A0, CE, LSR, CLK, output Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, CE_dly, LSR_dly;

  lut40196 \Keyboard.SLICE_437_K1 ( .A(GNDI), .B(GNDI), .C(C1), .D(GNDI), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40093 \Keyboard/i459_1_lut ( .A(A0), .B(GNDI), .C(GNDI), .D(GNDI), .Z(F0));
  ffsre20004 \Keyboard/counter_i19_set ( .D0(DI1_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module lut40196 ( input A, B, C, D, output Z );

  LUT4 #("0xF0F0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module Keyboard_SLICE_438 ( input A0, output F0 );
  wire   GNDI;

  lut40093 \Keyboard/i460_1_lut ( .A(A0), .B(GNDI), .C(GNDI), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module Keyboard_SLICE_439 ( input DI1, D1, C0, CE, LSR, CLK, output Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, CE_dly, LSR_dly;

  lut40186 \Keyboard.SLICE_439_K1 ( .A(GNDI), .B(GNDI), .C(GNDI), .D(D1), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40098 \Keyboard/i461_1_lut ( .A(GNDI), .B(GNDI), .C(C0), .D(GNDI), .Z(F0));
  ffsre20004 \Keyboard/counter_i17_set ( .D0(DI1_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module Keyboard_SLICE_440 ( input D0, output F0 );
  wire   GNDI;

  lut40101 \Keyboard/i462_1_lut ( .A(GNDI), .B(GNDI), .C(GNDI), .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module Keyboard_SLICE_441 ( input A0, output F0 );
  wire   GNDI;

  lut40093 \Keyboard/i466_1_lut ( .A(A0), .B(GNDI), .C(GNDI), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module Keyboard_SLICE_442 ( input A0, output F0 );
  wire   GNDI;

  lut40093 \Keyboard/i468_1_lut ( .A(A0), .B(GNDI), .C(GNDI), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module Keyboard_SLICE_443 ( input A0, output F0 );
  wire   GNDI;

  lut40093 \Keyboard/i469_1_lut ( .A(A0), .B(GNDI), .C(GNDI), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module Keyboard_SLICE_444 ( input A0, output F0 );
  wire   GNDI;

  lut40093 \Keyboard/i470_1_lut ( .A(A0), .B(GNDI), .C(GNDI), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module Keyboard_SLICE_445 ( input A0, output F0 );
  wire   GNDI;

  lut40093 \Keyboard/i474_1_lut ( .A(A0), .B(GNDI), .C(GNDI), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module Keyboard_SLICE_446 ( input DI1, A1, B0, CE, LSR, CLK, output Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, CE_dly, LSR_dly;

  lut40190 \Keyboard.SLICE_446_K1 ( .A(A1), .B(GNDI), .C(GNDI), .D(GNDI), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40187 \Keyboard/i475_1_lut ( .A(GNDI), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));
  ffsre2 \Keyboard/counter_i1_reset ( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module Keyboard_SLICE_447 ( input DI1, B1, A0, CE, LSR, CLK, output Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, CE_dly, LSR_dly;

  lut40143 \Keyboard.SLICE_447_K1 ( .A(GNDI), .B(B1), .C(GNDI), .D(GNDI), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40093 \Keyboard/i477_1_lut ( .A(A0), .B(GNDI), .C(GNDI), .D(GNDI), .Z(F0));
  ffsre20004 \Keyboard/counter_i3_set ( .D0(DI1_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module Keyboard_SLICE_448 ( input DI1, A1, B0, CE, LSR, CLK, output Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, CE_dly, LSR_dly;

  lut40190 \Keyboard.SLICE_448_K1 ( .A(A1), .B(GNDI), .C(GNDI), .D(GNDI), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40187 \Keyboard/i478_1_lut ( .A(GNDI), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));
  ffsre20004 \Keyboard/counter_i4_set ( .D0(DI1_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module Keyboard_SLICE_449 ( input DI1, C1, A0, CE, LSR, CLK, output Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, CE_dly, LSR_dly;

  lut40196 \Keyboard.SLICE_449_K1 ( .A(GNDI), .B(GNDI), .C(C1), .D(GNDI), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40093 \Keyboard/i479_1_lut ( .A(A0), .B(GNDI), .C(GNDI), .D(GNDI), .Z(F0));
  ffsre20004 \Keyboard/actualKey[3]_i6_set ( .D0(DI1_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module Keyboard_SLICE_450 ( input A0, output F0 );
  wire   GNDI;

  lut40093 \Keyboard/i480_1_lut ( .A(A0), .B(GNDI), .C(GNDI), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module Keyboard_SLICE_451 ( input A0, output F0 );
  wire   GNDI;

  lut40093 \Keyboard/i481_1_lut ( .A(A0), .B(GNDI), .C(GNDI), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module Keyboard_SLICE_452 ( input DI1, A1, A0, CE, LSR, CLK, output Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, CE_dly, LSR_dly;

  lut40190 \Keyboard.SLICE_452_K1 ( .A(A1), .B(GNDI), .C(GNDI), .D(GNDI), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40093 \Keyboard/i483_1_lut ( .A(A0), .B(GNDI), .C(GNDI), .D(GNDI), .Z(F0));
  ffsre2 \Keyboard/counter_i7_reset ( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module Keyboard_SLICE_453 ( input C0, output F0 );
  wire   GNDI;

  lut40098 \Keyboard/i484_1_lut ( .A(GNDI), .B(GNDI), .C(C0), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (C0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module Keyboard_SLICE_454 ( input A0, output F0 );
  wire   GNDI;

  lut40093 \Keyboard/i485_1_lut ( .A(A0), .B(GNDI), .C(GNDI), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module Keyboard_SLICE_455 ( input B0, output F0 );
  wire   GNDI;

  lut40187 \Keyboard/i494_1_lut ( .A(GNDI), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_460 ( output F0 );
  wire   GNDI;

  lut40197 i1( .A(GNDI), .B(GNDI), .C(GNDI), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
  endspecify

endmodule

module lut40197 ( input A, B, C, D, output Z );

  LUT4 #("0x0000") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module STATE_OUT_SLICE_462 ( input DI1, D1, C1, B1, A1, D0, A0, CLK, output Q1, 
    F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly;

  lut40198 \STATE_OUT/serial/i1802_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40199 \STATE_OUT/i1_2_lut ( .A(A0), .B(GNDI), .C(GNDI), .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre20007 \STATE_OUT/init_c ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
  endspecify

endmodule

module lut40198 ( input A, B, C, D, output Z );

  LUT4 #("0xF250") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40199 ( input A, B, C, D, output Z );

  LUT4 #("0x00AA") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module STATE_OUT_SLICE_463 ( input DI1, D1, B0, CE, CLK, output Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, CE_dly;

  lut40186 \STATE_OUT.SLICE_463_K1 ( .A(GNDI), .B(GNDI), .C(GNDI), .D(D1), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40187 \STATE_OUT/state_send_I_0_1_lut ( .A(GNDI), .B(B0), .C(GNDI), 
    .D(GNDI), .Z(F0));
  ffsre20007 \STATE_OUT/serial/status_send ( .D0(DI1_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module STATE_OUT_SLICE_464 ( input DI1, D1, B1, C0, B0, A0, LSR, CLK, output 
    Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, LSR_dly;

  lut40200 \STATE_OUT/i1_2_lut_adj_43 ( .A(GNDI), .B(B1), .C(GNDI), .D(D1), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40149 \STATE_OUT/i2059_2_lut_3_lut ( .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(F0));
  ffsre20004 \STATE_OUT/waiting_c ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module lut40200 ( input A, B, C, D, output Z );

  LUT4 #("0xCC00") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module STATE_OUT_SLICE_466 ( input C1, B1, D0, A0, output F0, F1 );
  wire   GNDI;

  lut40201 \STATE_OUT/i1_2_lut_adj_46 ( .A(GNDI), .B(B1), .C(C1), .D(GNDI), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40199 \STATE_OUT/i1_2_lut_adj_45 ( .A(A0), .B(GNDI), .C(GNDI), .D(D0), 
    .Z(F0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40201 ( input A, B, C, D, output Z );

  LUT4 #("0xFCFC") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module STATE_OUT_serial_SLICE_469 ( input D1, C1, D0, A0, output F0, F1 );
  wire   GNDI;

  lut40202 \STATE_OUT/serial/i1325_2_lut ( .A(GNDI), .B(GNDI), .C(C1), .D(D1), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40111 \STATE_OUT/serial/i1326_2_lut ( .A(A0), .B(GNDI), .C(GNDI), .D(D0), 
    .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40202 ( input A, B, C, D, output Z );

  LUT4 #("0x0F00") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module STATE_OUT_serial_SLICE_471 ( input C1, B1, D0, A0, output F0, F1 );
  wire   GNDI;

  lut40045 \STATE_OUT/serial/i1323_2_lut ( .A(GNDI), .B(B1), .C(C1), .D(GNDI), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40111 \STATE_OUT/serial/i1324_2_lut ( .A(A0), .B(GNDI), .C(GNDI), .D(D0), 
    .Z(F0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module STATE_OUT_serial_SLICE_473 ( input B1, A1, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40052 \STATE_OUT/serial/i1321_2_lut ( .A(A1), .B(B1), .C(GNDI), .D(GNDI), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40046 \STATE_OUT/serial/i1322_2_lut ( .A(A0), .B(B0), .C(GNDI), .D(GNDI), 
    .Z(F0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module STATE_OUT_serial_SLICE_475 ( input D1, C1, B1, A1, C0, A0, output F0, 
    F1 );
  wire   GNDI;

  lut40203 \STATE_OUT/serial/i22_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40040 \STATE_OUT/serial/i1320_2_lut ( .A(A0), .B(GNDI), .C(C0), .D(GNDI), 
    .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40203 ( input A, B, C, D, output Z );

  LUT4 #("0xFFFE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module STATE_OUT_serial_SLICE_476 ( input D1, B1, C0, A0, output F0, F1 );
  wire   GNDI;

  lut40039 \STATE_OUT/serial/i1318_2_lut ( .A(GNDI), .B(B1), .C(GNDI), .D(D1), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40040 \STATE_OUT/serial/i1319_2_lut ( .A(A0), .B(GNDI), .C(C0), .D(GNDI), 
    .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module STATE_OUT_serial_SLICE_478 ( input D1, B1, C0, A0, output F0, F1 );
  wire   GNDI;

  lut40050 \STATE_OUT/serial/i1316_2_lut ( .A(GNDI), .B(B1), .C(GNDI), .D(D1), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40051 \STATE_OUT/serial/i1317_2_lut ( .A(A0), .B(GNDI), .C(C0), .D(GNDI), 
    .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module STATE_OUT_serial_SLICE_480 ( input D1, A1, D0, B0, output F0, F1 );
  wire   GNDI;

  lut40204 \STATE_OUT/serial/i1314_2_lut ( .A(A1), .B(GNDI), .C(GNDI), .D(D1), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40044 \STATE_OUT/serial/i1315_2_lut ( .A(GNDI), .B(B0), .C(GNDI), .D(D0), 
    .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40204 ( input A, B, C, D, output Z );

  LUT4 #("0x5500") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module STATE_OUT_serial_SLICE_482 ( input D1, C1, B1, A1, D0, B0, output F0, 
    F1 );
  wire   GNDI;

  lut40205 \STATE_OUT/serial/i20_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40206 \STATE_OUT/serial/i1313_2_lut ( .A(GNDI), .B(B0), .C(GNDI), .D(D0), 
    .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40205 ( input A, B, C, D, output Z );

  LUT4 #("0xFFFE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40206 ( input A, B, C, D, output Z );

  LUT4 #("0x00CC") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module STATE_OUT_serial_SLICE_483 ( input D1, C1, D0, A0, output F0, F1 );
  wire   GNDI;

  lut40207 \STATE_OUT/serial/i3571_2_lut ( .A(GNDI), .B(GNDI), .C(C1), .D(D1), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40208 \STATE_OUT/serial/i1_2_lut ( .A(A0), .B(GNDI), .C(GNDI), .D(D0), 
    .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40207 ( input A, B, C, D, output Z );

  LUT4 #("0x000F") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40208 ( input A, B, C, D, output Z );

  LUT4 #("0xAAFF") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module STATE_OUT_serial_SLICE_487 ( input D0, C0, B0, A0, output F0 );

  lut40209 \STATE_OUT/serial/i23_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40209 ( input A, B, C, D, output Z );

  LUT4 #("0xFFFE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module STATE_OUT_serial_SLICE_489 ( input D1, C1, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40202 \STATE_OUT/serial/i1329_2_lut ( .A(GNDI), .B(GNDI), .C(C1), .D(D1), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40046 \STATE_OUT/serial/i1328_2_lut ( .A(A0), .B(B0), .C(GNDI), .D(GNDI), 
    .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module STATE_OUT_serial_SLICE_491 ( input C1, A1, D0, B0, output F0, F1 );
  wire   GNDI;

  lut40047 \STATE_OUT/serial/i1331_2_lut ( .A(A1), .B(GNDI), .C(C1), .D(GNDI), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40044 \STATE_OUT/serial/i1330_2_lut ( .A(GNDI), .B(B0), .C(GNDI), .D(D0), 
    .Z(F0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module STATE_OUT_serial_SLICE_493 ( input B1, A1, C0, A0, output F0, F1 );
  wire   GNDI;

  lut40041 \STATE_OUT/serial/i1333_2_lut ( .A(A1), .B(B1), .C(GNDI), .D(GNDI), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40051 \STATE_OUT/serial/i1332_2_lut ( .A(A0), .B(GNDI), .C(C0), .D(GNDI), 
    .Z(F0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module STATE_OUT_serial_SLICE_495 ( input D1, C1, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40210 \STATE_OUT/serial/i1335_2_lut ( .A(GNDI), .B(GNDI), .C(C1), .D(D1), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40126 \STATE_OUT/serial/i1334_2_lut ( .A(A0), .B(B0), .C(GNDI), .D(GNDI), 
    .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40210 ( input A, B, C, D, output Z );

  LUT4 #("0x00F0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module STATE_OUT_serial_SLICE_497 ( input D1, B1, C0, B0, output F0, F1 );
  wire   GNDI;

  lut40050 \STATE_OUT/serial/i1337_2_lut ( .A(GNDI), .B(B1), .C(GNDI), .D(D1), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40049 \STATE_OUT/serial/i1336_2_lut ( .A(GNDI), .B(B0), .C(C0), .D(GNDI), 
    .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module STATE_OUT_serial_SLICE_499 ( input D1, B1, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40039 \STATE_OUT/serial/i1339_2_lut ( .A(GNDI), .B(B1), .C(GNDI), .D(D1), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40126 \STATE_OUT/serial/i1338_2_lut ( .A(A0), .B(B0), .C(GNDI), .D(GNDI), 
    .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module mainTimer_SLICE_503 ( input DI1, D1, C1, B1, A1, D0, C0, B0, A0, LSR, 
    CLK, output Q1, F0, F1 );
  wire   VCCI, DI1_dly, CLK_dly, LSR_dly;

  lut40211 \mainTimer/i6_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40212 \mainTimer/i5_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  ffsre2 \mainTimer/state ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module lut40211 ( input A, B, C, D, output Z );

  LUT4 #("0x2000") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40212 ( input A, B, C, D, output Z );

  LUT4 #("0x8000") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module KB_RECV ( output PADDI, input KB_RECV );
  wire   GNDI;

  BB_B_B \Keyboard/KB_RECV_pad.bb_inst ( .T_N(GNDI), .I(GNDI), .O(PADDI), 
    .B(KB_RECV));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (KB_RECV => PADDI) = (0:0:0,0:0:0);
  endspecify

endmodule

module BB_B_B ( input T_N, I, output O, inout B );

  BB_B INST10( .T_N(T_N), .I(I), .O(O), .B(B));
endmodule

module OSCInst1 ( input CLKLFPU, CLKLFEN, output CLKLF );
  wire   GNDI;

  LSOSC_CORE_B OSCInst1( .CLKLFPU(CLKLFPU), .CLKLFEN(CLKLFEN), .TRIM9(GNDI), 
    .TRIM8(GNDI), .TRIM7(GNDI), .TRIM6(GNDI), .TRIM5(GNDI), .TRIM4(GNDI), 
    .TRIM3(GNDI), .TRIM2(GNDI), .TRIM1(GNDI), .TRIM0(GNDI), .CLKLF(CLKLF));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
  endspecify

endmodule

module LSOSC_CORE_B ( input CLKLFPU, CLKLFEN, TRIM9, TRIM8, TRIM7, TRIM6, 
    TRIM5, TRIM4, TRIM3, TRIM2, TRIM1, TRIM0, output CLKLF );

  LSOSC_CORE INST10( .CLKLFPU(CLKLFPU), .CLKLFEN(CLKLFEN), .TRIM9(TRIM9), 
    .TRIM8(TRIM8), .TRIM7(TRIM7), .TRIM6(TRIM6), .TRIM5(TRIM5), .TRIM4(TRIM4), 
    .TRIM3(TRIM3), .TRIM2(TRIM2), .TRIM1(TRIM1), .TRIM0(TRIM0), .CLKLF(CLKLF));
  defparam INST10.FABRIC_TRIME = "DISABLE";
endmodule

module SIREN_OUT ( input PADDO, output SIREN_OUT );
  wire   VCCI;

  BB_B_B \SIREN_OUT_pad.bb_inst ( .T_N(VCCI), .I(PADDO), .O(), .B(SIREN_OUT));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (PADDO => SIREN_OUT) = (0:0:0,0:0:0);
  endspecify

endmodule

module STATUS_OUT ( input PADDO, output STATUS_OUT );
  wire   VCCI;

  BB_B_B \STATUS_OUT_pad.bb_inst ( .T_N(VCCI), .I(PADDO), .O(), .B(STATUS_OUT));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (PADDO => STATUS_OUT) = (0:0:0,0:0:0);
  endspecify

endmodule

module STATUS_SEND ( input PADDO, output STATUS_SEND );
  wire   VCCI;

  BB_B_B \STATUS_SEND_pad.bb_inst ( .T_N(VCCI), .I(PADDO), .O(), 
    .B(STATUS_SEND));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (PADDO => STATUS_SEND) = (0:0:0,0:0:0);
  endspecify

endmodule

module SERCLK_OUT ( input PADDO, output SERCLK_OUT );
  wire   VCCI;

  BB_B_B \SERCLK_OUT_pad.bb_inst ( .T_N(VCCI), .I(PADDO), .O(), .B(SERCLK_OUT));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (PADDO => SERCLK_OUT) = (0:0:0,0:0:0);
  endspecify

endmodule

module RESET_OUT ( input PADDO, output RESET_OUT );
  wire   VCCI;

  BB_B_B \RESET_OUT_pad.bb_inst ( .T_N(VCCI), .I(PADDO), .O(), .B(RESET_OUT));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (PADDO => RESET_OUT) = (0:0:0,0:0:0);
  endspecify

endmodule

module Sreg_1_ ( input PADDO, output Sreg1 );
  wire   VCCI;

  BB_B_B \Sreg_pad[1].bb_inst ( .T_N(VCCI), .I(PADDO), .O(), .B(Sreg1));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (PADDO => Sreg1) = (0:0:0,0:0:0);
  endspecify

endmodule

module Sreg_0_ ( input PADDO, output Sreg0 );
  wire   VCCI;

  BB_B_B \Sreg_pad[0].bb_inst ( .T_N(VCCI), .I(PADDO), .O(), .B(Sreg0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (PADDO => Sreg0) = (0:0:0,0:0:0);
  endspecify

endmodule

module KEY_STATUS_1_ ( input PADDO, output KEYSTATUS1 );
  wire   VCCI;

  BB_B_B \KEY_STATUS_pad[1].bb_inst ( .T_N(VCCI), .I(PADDO), .O(), 
    .B(KEYSTATUS1));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (PADDO => KEYSTATUS1) = (0:0:0,0:0:0);
  endspecify

endmodule

module KEY_STATUS_0_ ( input PADDO, output KEYSTATUS0 );
  wire   VCCI;

  BB_B_B \KEY_STATUS_pad[0].bb_inst ( .T_N(VCCI), .I(PADDO), .O(), 
    .B(KEYSTATUS0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (PADDO => KEYSTATUS0) = (0:0:0,0:0:0);
  endspecify

endmodule

module DEBUG_KEY_1_ ( input PADDO, output DEBUGKEY1 );
  wire   VCCI;

  BB_B_B \DEBUG_KEY_pad[1].bb_inst ( .T_N(VCCI), .I(PADDO), .O(), 
    .B(DEBUGKEY1));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (PADDO => DEBUGKEY1) = (0:0:0,0:0:0);
  endspecify

endmodule

module DEBUG_KEY_0_ ( input PADDO, output DEBUGKEY0 );
  wire   VCCI;

  BB_B_B \DEBUG_KEY_pad[0].bb_inst ( .T_N(VCCI), .I(PADDO), .O(), 
    .B(DEBUGKEY0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (PADDO => DEBUGKEY0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SENSOR1_IN ( output PADDI, input SENSOR1_IN );
  wire   GNDI;

  BB_B_B \SENSOR1_IN_pad.bb_inst ( .T_N(GNDI), .I(GNDI), .O(PADDI), 
    .B(SENSOR1_IN));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (SENSOR1_IN => PADDI) = (0:0:0,0:0:0);
  endspecify

endmodule

module SENSOR2_IN ( output PADDI, input SENSOR2_IN );
  wire   GNDI;

  BB_B_B \SENSOR2_IN_pad.bb_inst ( .T_N(GNDI), .I(GNDI), .O(PADDI), 
    .B(SENSOR2_IN));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (SENSOR2_IN => PADDI) = (0:0:0,0:0:0);
  endspecify

endmodule

module KB_IN_1_ ( output PADDI, input KBIN1 );
  wire   GNDI;

  BB_B_B \KB_IN_pad[1].bb_inst ( .T_N(GNDI), .I(GNDI), .O(PADDI), .B(KBIN1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (KBIN1 => PADDI) = (0:0:0,0:0:0);
  endspecify

endmodule

module KB_IN_0_ ( output PADDI, input KBIN0 );
  wire   GNDI;

  BB_B_B \KB_IN_pad[0].bb_inst ( .T_N(GNDI), .I(GNDI), .O(PADDI), .B(KBIN0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (KBIN0 => PADDI) = (0:0:0,0:0:0);
  endspecify

endmodule

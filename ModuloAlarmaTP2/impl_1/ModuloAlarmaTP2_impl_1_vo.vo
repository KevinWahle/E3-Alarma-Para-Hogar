
// Verilog netlist produced by program backanno, Version Radiant Software (64-bit) 3.0.0.24.1

// backanno -o ModuloAlarmaTP2_impl_1_vo.vo -sp High-Performance_1.2V -w -neg -gui ModuloAlarmaTP2_impl_1.udb 
// Netlist created on Thu Nov 18 16:21:20 2021
// Netlist written on Thu Nov 18 16:21:27 2021
// Design is for device iCE40UP5K
// Design is for package SG48
// Design is for performance grade High-Performance_1.2V

`timescale 1 ns / 1 ps

module MainModule ( STATUS_SEND, STATUS_OUT, SIREN_OUT, SERCLK_OUT, KEY_STATUS, 
                    debug, timeout, SENSOR1_IN, SENSOR2_IN, KB_IN, KB_RECV, 
                    RESET_IN );
  input  SENSOR1_IN, SENSOR2_IN;
  input  [1:0] KB_IN;
  input  KB_RECV, RESET_IN;
  output STATUS_SEND, STATUS_OUT, SIREN_OUT, SERCLK_OUT;
  output [1:0] KEY_STATUS;
  output [1:0] debug;
  output timeout;
  wire   \mainTimer.n3434 , \mainTimer.clkCont[16] , \mainTimer.n1520 , 
         \mainTimer.clkCont[15] , \mainTimer.clkCont_17__N_55[15] , 
         \mainTimer.clkCont_17__N_55[16] , \mainTimer.n1522 , 
         \mainTimer.n3431 , \mainTimer.clkCont[14] , \mainTimer.n1518 , 
         \mainTimer.clkCont[13] , \mainTimer.clkCont_17__N_55[13] , 
         \mainTimer.clkCont_17__N_55[14] , \mainTimer.n3428 , 
         \mainTimer.clkCont[12] , \mainTimer.n1516 , \mainTimer.clkCont[11] , 
         \mainTimer.clkCont_17__N_55[11] , \mainTimer.clkCont_17__N_55[12] , 
         \mainTimer.n3425 , \mainTimer.clkCont[10] , \mainTimer.n1514 , 
         \mainTimer.clkCont[9] , \mainTimer.clkCont_17__N_55[9] , 
         \mainTimer.clkCont_17__N_55[10] , \mainTimer.n3422 , 
         \mainTimer.clkCont[8] , \mainTimer.n1512 , \mainTimer.clkCont[7] , 
         \mainTimer.clkCont_17__N_55[7] , \mainTimer.clkCont_17__N_55[8] , 
         \mainTimer.n3419 , \mainTimer.clkCont[6] , \mainTimer.n1510 , 
         \mainTimer.clkCont[5] , \mainTimer.clkCont_17__N_55[5] , 
         \mainTimer.clkCont_17__N_55[6] , \mainTimer.n3416 , 
         \mainTimer.clkCont[4] , \mainTimer.n1508 , \mainTimer.clkCont[3] , 
         \mainTimer.clkCont_17__N_55[3] , \mainTimer.clkCont_17__N_55[4] , 
         \mainTimer.n3413 , \mainTimer.clkCont[2] , \mainTimer.n1506 , 
         \mainTimer.clkCont[1] , \mainTimer.clkCont_17__N_55[1] , 
         \mainTimer.clkCont_17__N_55[2] , \mainTimer.n3326 , VCC_net, 
         \mainTimer.clkCont[0] , \mainTimer.clkCont_17__N_55[0] , 
         \mainTimer.n3437 , \mainTimer.clkCont[17] , 
         \mainTimer.clkCont_17__N_55[17] , \STATE_OUT.n3293 , \j[12] , 
         \STATE_OUT.n1483 , \j[11] , \waiting_N_155[11] , \waiting_N_155[12] , 
         \STATE_OUT.n1485 , \STATE_OUT.n3290 , \j[10] , \STATE_OUT.n1481 , 
         \j[9] , \waiting_N_155[9] , \waiting_N_155[10] , \STATE_OUT.n3323 , 
         \STATE_OUT.n1503 , \j[31] , \waiting_N_155[31] , \STATE_OUT.n3287 , 
         \j[8] , \STATE_OUT.n1479 , \j[7] , \waiting_N_155[7] , 
         \waiting_N_155[8] , \STATE_OUT.n3320 , \j[30] , \STATE_OUT.n1501 , 
         \j[29] , \waiting_N_155[29] , \waiting_N_155[30] , \STATE_OUT.n3317 , 
         \j[28] , \STATE_OUT.n1499 , \j[27] , \waiting_N_155[27] , 
         \waiting_N_155[28] , \STATE_OUT.n3284 , \j[6] , \STATE_OUT.n1477 , 
         \j[5] , \waiting_N_155[5] , \waiting_N_155[6] , \STATE_OUT.n3281 , 
         \j[4] , \STATE_OUT.n1475 , \j[3] , \waiting_N_155[3] , 
         \waiting_N_155[4] , \STATE_OUT.n3314 , \j[26] , \STATE_OUT.n1497 , 
         \j[25] , \waiting_N_155[25] , \waiting_N_155[26] , 
         \STATE_OUT.waiting_N_155[1]_2 , \STATE_OUT.n3278 , \j[2] , 
         \STATE_OUT.n1473 , \STATE_OUT.j[1]_2 , \STATE_OUT.waiting_N_150 , 
         \STATE_OUT.n196 , SERCLK_OUT_c, \waiting_N_155[2] , 
         \STATE_OUT.waiting_N_155[0]_2 , \STATE_OUT.n3275 , \STATE_OUT.j[0]_2 , 
         \STATE_OUT.n3311 , \j[24] , \STATE_OUT.n1495 , \j[23] , 
         \waiting_N_155[23] , \waiting_N_155[24] , \STATE_OUT.n3308 , \j[22] , 
         \STATE_OUT.n1493 , \j[21] , \waiting_N_155[21] , \waiting_N_155[22] , 
         \STATE_OUT.n3305 , \j[20] , \STATE_OUT.n1491 , \j[19] , 
         \waiting_N_155[19] , \waiting_N_155[20] , \STATE_OUT.n3302 , \j[18] , 
         \STATE_OUT.n1489 , \j[17] , \waiting_N_155[17] , \waiting_N_155[18] , 
         \STATE_OUT.n3299 , \j[16] , \STATE_OUT.n1487 , \j[15] , 
         \waiting_N_155[15] , \waiting_N_155[16] , \STATE_OUT.n3296 , \j[14] , 
         \j[13] , \waiting_N_155[13] , \waiting_N_155[14] , 
         \STATE_OUT.serial.n3380 , \STATE_OUT.serial.j[16] , 
         \STATE_OUT.serial.n1454 , \STATE_OUT.serial.j[15] , n151, n150, 
         \STATE_OUT.serial.n1456 , \STATE_OUT.serial.n3365 , 
         \STATE_OUT.serial.j[6] , \STATE_OUT.serial.n1444 , 
         \STATE_OUT.serial.j[5] , n161, n160, \STATE_OUT.serial.n1446 , 
         \STATE_OUT.serial.n3371 , \STATE_OUT.serial.j[10] , 
         \STATE_OUT.serial.n1448 , \STATE_OUT.serial.j[9] , n157, n156, 
         \STATE_OUT.serial.n1450 , \STATE_OUT.serial.n3404 , 
         \STATE_OUT.serial.n1470 , \STATE_OUT.serial.j[31] , n135, 
         \STATE_OUT.serial.n3362 , \STATE_OUT.serial.j[4] , 
         \STATE_OUT.serial.n1442 , \STATE_OUT.serial.j[3] , n163, n162, 
         \STATE_OUT.serial.n3401 , \STATE_OUT.serial.j[30] , 
         \STATE_OUT.serial.n1468 , \STATE_OUT.serial.j[29] , n137, n136, 
         \STATE_OUT.serial.n167[1]_2 , \STATE_OUT.serial.n3359 , 
         \STATE_OUT.serial.j[2] , \STATE_OUT.serial.n1440 , 
         \STATE_OUT.serial.j[1] , n177, n164, \STATE_OUT.serial.n3398 , 
         \STATE_OUT.serial.j[28] , \STATE_OUT.serial.n1466 , 
         \STATE_OUT.serial.j[27] , n139, n138, \STATE_OUT.serial.n3377 , 
         \STATE_OUT.serial.j[14] , \STATE_OUT.serial.n1452 , 
         \STATE_OUT.serial.j[13] , n153, n152, \STATE_OUT.serial.n3395 , 
         \STATE_OUT.serial.j[26] , \STATE_OUT.serial.n1464 , 
         \STATE_OUT.serial.j[25] , n141, n140, \STATE_OUT.serial.n3368 , 
         \STATE_OUT.serial.j[8] , \STATE_OUT.serial.j[7] , n159, n158, 
         \STATE_OUT.serial.n3392 , \STATE_OUT.serial.j[24] , 
         \STATE_OUT.serial.n1462 , \STATE_OUT.serial.j[23] , n143, n142, 
         \STATE_OUT.serial.n3374 , \STATE_OUT.serial.j[12] , 
         \STATE_OUT.serial.j[11] , n155, n154, \STATE_OUT.serial.n3389 , 
         \STATE_OUT.serial.j[22] , \STATE_OUT.serial.n1460 , 
         \STATE_OUT.serial.j[21] , n145, n144, \STATE_OUT.serial.n3386 , 
         \STATE_OUT.serial.j[20] , \STATE_OUT.serial.n1458 , 
         \STATE_OUT.serial.j[19] , n147, n146, \STATE_OUT.serial.n167[0]_2 , 
         \STATE_OUT.serial.n3356 , \STATE_OUT.serial.j[0] , 
         \STATE_OUT.serial.n3383 , \STATE_OUT.serial.j[18] , 
         \STATE_OUT.serial.j[17] , n149, n148, \debug_c_0$n1 , \debug_c_1$n0 , 
         n19, \Sreg[0] , n22, \Snext_1__N_1[1] , n1904, debug_c_1, RESET_IN_c, 
         \Sreg[1] , \keyboard.nextState[0]$n3 , \keyboard.nextState[1]$n2 , 
         \keyboard.nextState[0] , \keyboard.counter[1] , \keyboard.counter[0] , 
         \keyboard.n398 , \keyboard.n6 , \state[0] , \state[1] , 
         \keyboard.n13[1] , \keyboard.n1 , KB_RECV_c, 
         \mainTimer.clkCont_17__N_34[16] , \mainTimer.clkCont_17__N_34[17] , 
         timeout_c, \mainTimer.clkCont_17__N_52 , 
         \mainTimer.clkCont_17__N_34[14] , \mainTimer.clkCont_17__N_34[15] , 
         \mainTimer.clkCont_17__N_34[12] , \mainTimer.clkCont_17__N_34[13] , 
         \mainTimer.clkCont_17__N_34[10] , \mainTimer.clkCont_17__N_34[11] , 
         \mainTimer.clkCont_17__N_34[8] , \mainTimer.clkCont_17__N_34[9] , 
         \mainTimer.clkCont_17__N_34[6] , \mainTimer.clkCont_17__N_34[7] , 
         \mainTimer.clkCont_17__N_34[4] , \mainTimer.clkCont_17__N_34[5] , 
         \mainTimer.clkCont_17__N_34[2] , \mainTimer.clkCont_17__N_34[3] , 
         \mainTimer.clkCont_17__N_34[0] , \mainTimer.clkCont_17__N_34[1] , 
         n512, n514, waiting_N_154, waiting, n508, n510, n518, n516, n553, 
         n520, \STATE_OUT.n21[1] , \STATE_OUT.n21[0] , \STATE_OUT.cont[1] , 
         \STATE_OUT.cont[0] , n557, n555, n561, n559, n565, n563, n569, n567, 
         n591, n593, n587, n589, n583, n585, n579, n581, n575, n577, n571, 
         n573, n506, n504, \STATE_OUT.n21[3] , \STATE_OUT.n21[2] , 
         \STATE_OUT.cont[3] , \STATE_OUT.cont[2] , n532, n533, 
         \SENSOR1_IN_c.sig_001.FeedThruLUT , 
         \SENSOR2_IN_c.sig_000.FeedThruLUT , SENSOR1_IN_c, SENSOR2_IN_c, 
         \STATE_OUT.n176 , \STATE_OUT.serial.temp_data_out[0] , 
         \STATE_OUT.serial.temp_data_out[1] , n550, n551, n548, n549, n546, 
         n547, n544, n545, n542, n543, n540, n541, n530, n531, n528, n529, 
         n526, n527, n524, n525, n522, n523, init, n538, n539, n536, n537, 
         n534, n535, \Sreg[1].sig_002.FeedThruLUT , n501, 
         \STATE_OUT.serial.temp_data_out[3] , TIMER_EN, n8, n2043, n4, n2443, 
         KEY_STATUS_c_0, n1077, KEY_STATUS_c_1, n27, \keyboard.nextState[1] , 
         n63, n724, \PREV_KEY[1] , n6, n2448, n2044, \PREV_KEY[0] , 
         TIMER_EN_N_26, n2439, \keyboard.actualKey[0][1] , \keyboard.n8 , 
         \keyboard.actualKey[3][1] , \keyboard.actualKey[3][0] , 
         \keyboard.n1888 , KB_IN_c_0, \keyboard.n2249 , 
         \keyboard.actualKey[1][1] , \keyboard.actualKey[2][1] , 
         \keyboard.actualKey[2][0] , \keyboard.actualKey[0][0] , 
         \keyboard.actualKey[1][0] , \keyboard.n1889 , KB_IN_c_1, debug_c_0, 
         n45, n2436, \keyboard.n1887 , \keyboard.n1081 , \mainTimer.n2247 , 
         \mainTimer.n17 , \mainTimer.n3009 , \mainTimer.n8 , \mainTimer.n7 , 
         \mainTimer.n18 , \mainTimer.n19 , \STATE_OUT.n32 , \STATE_OUT.n46 , 
         \STATE_OUT.n52 , \STATE_OUT.n49 , \STATE_OUT.n50 , \STATE_OUT.n48 , 
         \STATE_OUT.n47 , \STATE_OUT.n56 , \STATE_OUT.n30 , \STATE_OUT.n51 , 
         \STATE_OUT.serial.n49 , \STATE_OUT.serial.n50 , 
         \STATE_OUT.serial.n47 , \STATE_OUT.serial.n48 , 
         \STATE_OUT.serial.n56 , \STATE_OUT.serial.n32 , 
         \STATE_OUT.serial.n46 , \STATE_OUT.serial.n52 , 
         \STATE_OUT.serial.n44 , \STATE_OUT.serial.n55 , 
         \STATE_OUT.serial.status_out_N_267 , \STATE_OUT.serial.n2827 , 
         \temp_data_out[2] , STATUS_OUT_c, \STATE_OUT.n2445 , 
         \STATE_OUT.n1919 , n2037, SIREN_OUT_c, \STATE_OUT.waiting_N_150$n4 , 
         STATUS_SEND_c;

  mainTimer_SLICE_0 \mainTimer.SLICE_0 ( .D1(\mainTimer.n3434 ), 
    .B1(\mainTimer.clkCont[16] ), .D0(\mainTimer.n1520 ), 
    .B0(\mainTimer.clkCont[15] ), .CIN0(\mainTimer.n1520 ), 
    .CIN1(\mainTimer.n3434 ), .F0(\mainTimer.clkCont_17__N_55[15] ), 
    .F1(\mainTimer.clkCont_17__N_55[16] ), .COUT1(\mainTimer.n1522 ), 
    .COUT0(\mainTimer.n3434 ));
  mainTimer_SLICE_1 \mainTimer.SLICE_1 ( .D1(\mainTimer.n3431 ), 
    .B1(\mainTimer.clkCont[14] ), .D0(\mainTimer.n1518 ), 
    .B0(\mainTimer.clkCont[13] ), .CIN0(\mainTimer.n1518 ), 
    .CIN1(\mainTimer.n3431 ), .F0(\mainTimer.clkCont_17__N_55[13] ), 
    .F1(\mainTimer.clkCont_17__N_55[14] ), .COUT1(\mainTimer.n1520 ), 
    .COUT0(\mainTimer.n3431 ));
  mainTimer_SLICE_2 \mainTimer.SLICE_2 ( .D1(\mainTimer.n3428 ), 
    .B1(\mainTimer.clkCont[12] ), .D0(\mainTimer.n1516 ), 
    .B0(\mainTimer.clkCont[11] ), .CIN0(\mainTimer.n1516 ), 
    .CIN1(\mainTimer.n3428 ), .F0(\mainTimer.clkCont_17__N_55[11] ), 
    .F1(\mainTimer.clkCont_17__N_55[12] ), .COUT1(\mainTimer.n1518 ), 
    .COUT0(\mainTimer.n3428 ));
  mainTimer_SLICE_3 \mainTimer.SLICE_3 ( .D1(\mainTimer.n3425 ), 
    .B1(\mainTimer.clkCont[10] ), .D0(\mainTimer.n1514 ), 
    .B0(\mainTimer.clkCont[9] ), .CIN0(\mainTimer.n1514 ), 
    .CIN1(\mainTimer.n3425 ), .F0(\mainTimer.clkCont_17__N_55[9] ), 
    .F1(\mainTimer.clkCont_17__N_55[10] ), .COUT1(\mainTimer.n1516 ), 
    .COUT0(\mainTimer.n3425 ));
  mainTimer_SLICE_4 \mainTimer.SLICE_4 ( .D1(\mainTimer.n3422 ), 
    .B1(\mainTimer.clkCont[8] ), .D0(\mainTimer.n1512 ), 
    .B0(\mainTimer.clkCont[7] ), .CIN0(\mainTimer.n1512 ), 
    .CIN1(\mainTimer.n3422 ), .F0(\mainTimer.clkCont_17__N_55[7] ), 
    .F1(\mainTimer.clkCont_17__N_55[8] ), .COUT1(\mainTimer.n1514 ), 
    .COUT0(\mainTimer.n3422 ));
  mainTimer_SLICE_5 \mainTimer.SLICE_5 ( .D1(\mainTimer.n3419 ), 
    .B1(\mainTimer.clkCont[6] ), .D0(\mainTimer.n1510 ), 
    .B0(\mainTimer.clkCont[5] ), .CIN0(\mainTimer.n1510 ), 
    .CIN1(\mainTimer.n3419 ), .F0(\mainTimer.clkCont_17__N_55[5] ), 
    .F1(\mainTimer.clkCont_17__N_55[6] ), .COUT1(\mainTimer.n1512 ), 
    .COUT0(\mainTimer.n3419 ));
  mainTimer_SLICE_6 \mainTimer.SLICE_6 ( .D1(\mainTimer.n3416 ), 
    .B1(\mainTimer.clkCont[4] ), .D0(\mainTimer.n1508 ), 
    .B0(\mainTimer.clkCont[3] ), .CIN0(\mainTimer.n1508 ), 
    .CIN1(\mainTimer.n3416 ), .F0(\mainTimer.clkCont_17__N_55[3] ), 
    .F1(\mainTimer.clkCont_17__N_55[4] ), .COUT1(\mainTimer.n1510 ), 
    .COUT0(\mainTimer.n3416 ));
  mainTimer_SLICE_7 \mainTimer.SLICE_7 ( .D1(\mainTimer.n3413 ), 
    .B1(\mainTimer.clkCont[2] ), .D0(\mainTimer.n1506 ), 
    .B0(\mainTimer.clkCont[1] ), .CIN0(\mainTimer.n1506 ), 
    .CIN1(\mainTimer.n3413 ), .F0(\mainTimer.clkCont_17__N_55[1] ), 
    .F1(\mainTimer.clkCont_17__N_55[2] ), .COUT1(\mainTimer.n1508 ), 
    .COUT0(\mainTimer.n3413 ));
  mainTimer_SLICE_8 \mainTimer.SLICE_8 ( .D1(\mainTimer.n3326 ), .C1(VCC_net), 
    .B1(\mainTimer.clkCont[0] ), .CIN1(\mainTimer.n3326 ), 
    .F1(\mainTimer.clkCont_17__N_55[0] ), .COUT1(\mainTimer.n1506 ), 
    .COUT0(\mainTimer.n3326 ));
  mainTimer_SLICE_9 \mainTimer.SLICE_9 ( .D1(\mainTimer.n3437 ), 
    .D0(\mainTimer.n1522 ), .B0(\mainTimer.clkCont[17] ), 
    .CIN0(\mainTimer.n1522 ), .CIN1(\mainTimer.n3437 ), 
    .F0(\mainTimer.clkCont_17__N_55[17] ), .COUT0(\mainTimer.n3437 ));
  STATE_OUT_SLICE_10 \STATE_OUT.SLICE_10 ( .D1(\STATE_OUT.n3293 ), 
    .B1(\j[12] ), .D0(\STATE_OUT.n1483 ), .B0(\j[11] ), 
    .CIN0(\STATE_OUT.n1483 ), .CIN1(\STATE_OUT.n3293 ), 
    .F0(\waiting_N_155[11] ), .F1(\waiting_N_155[12] ), 
    .COUT1(\STATE_OUT.n1485 ), .COUT0(\STATE_OUT.n3293 ));
  STATE_OUT_SLICE_11 \STATE_OUT.SLICE_11 ( .D1(\STATE_OUT.n3290 ), 
    .B1(\j[10] ), .D0(\STATE_OUT.n1481 ), .B0(\j[9] ), 
    .CIN0(\STATE_OUT.n1481 ), .CIN1(\STATE_OUT.n3290 ), 
    .F0(\waiting_N_155[9] ), .F1(\waiting_N_155[10] ), 
    .COUT1(\STATE_OUT.n1483 ), .COUT0(\STATE_OUT.n3290 ));
  STATE_OUT_SLICE_12 \STATE_OUT.SLICE_12 ( .D1(\STATE_OUT.n3323 ), 
    .D0(\STATE_OUT.n1503 ), .B0(\j[31] ), .CIN0(\STATE_OUT.n1503 ), 
    .CIN1(\STATE_OUT.n3323 ), .F0(\waiting_N_155[31] ), 
    .COUT0(\STATE_OUT.n3323 ));
  STATE_OUT_SLICE_13 \STATE_OUT.SLICE_13 ( .D1(\STATE_OUT.n3287 ), .B1(\j[8] ), 
    .D0(\STATE_OUT.n1479 ), .B0(\j[7] ), .CIN0(\STATE_OUT.n1479 ), 
    .CIN1(\STATE_OUT.n3287 ), .F0(\waiting_N_155[7] ), .F1(\waiting_N_155[8] ), 
    .COUT1(\STATE_OUT.n1481 ), .COUT0(\STATE_OUT.n3287 ));
  STATE_OUT_SLICE_14 \STATE_OUT.SLICE_14 ( .D1(\STATE_OUT.n3320 ), 
    .B1(\j[30] ), .D0(\STATE_OUT.n1501 ), .B0(\j[29] ), 
    .CIN0(\STATE_OUT.n1501 ), .CIN1(\STATE_OUT.n3320 ), 
    .F0(\waiting_N_155[29] ), .F1(\waiting_N_155[30] ), 
    .COUT1(\STATE_OUT.n1503 ), .COUT0(\STATE_OUT.n3320 ));
  STATE_OUT_SLICE_15 \STATE_OUT.SLICE_15 ( .D1(\STATE_OUT.n3317 ), 
    .B1(\j[28] ), .D0(\STATE_OUT.n1499 ), .B0(\j[27] ), 
    .CIN0(\STATE_OUT.n1499 ), .CIN1(\STATE_OUT.n3317 ), 
    .F0(\waiting_N_155[27] ), .F1(\waiting_N_155[28] ), 
    .COUT1(\STATE_OUT.n1501 ), .COUT0(\STATE_OUT.n3317 ));
  STATE_OUT_SLICE_16 \STATE_OUT.SLICE_16 ( .D1(\STATE_OUT.n3284 ), .B1(\j[6] ), 
    .D0(\STATE_OUT.n1477 ), .B0(\j[5] ), .CIN0(\STATE_OUT.n1477 ), 
    .CIN1(\STATE_OUT.n3284 ), .F0(\waiting_N_155[5] ), .F1(\waiting_N_155[6] ), 
    .COUT1(\STATE_OUT.n1479 ), .COUT0(\STATE_OUT.n3284 ));
  STATE_OUT_SLICE_17 \STATE_OUT.SLICE_17 ( .D1(\STATE_OUT.n3281 ), .B1(\j[4] ), 
    .D0(\STATE_OUT.n1475 ), .B0(\j[3] ), .CIN0(\STATE_OUT.n1475 ), 
    .CIN1(\STATE_OUT.n3281 ), .F0(\waiting_N_155[3] ), .F1(\waiting_N_155[4] ), 
    .COUT1(\STATE_OUT.n1477 ), .COUT0(\STATE_OUT.n3281 ));
  STATE_OUT_SLICE_18 \STATE_OUT.SLICE_18 ( .D1(\STATE_OUT.n3314 ), 
    .B1(\j[26] ), .D0(\STATE_OUT.n1497 ), .B0(\j[25] ), 
    .CIN0(\STATE_OUT.n1497 ), .CIN1(\STATE_OUT.n3314 ), 
    .F0(\waiting_N_155[25] ), .F1(\waiting_N_155[26] ), 
    .COUT1(\STATE_OUT.n1499 ), .COUT0(\STATE_OUT.n3314 ));
  STATE_OUT_SLICE_19 \STATE_OUT.SLICE_19 ( 
    .DI0(\STATE_OUT.waiting_N_155[1]_2 ), .D1(\STATE_OUT.n3278 ), .B1(\j[2] ), 
    .D0(\STATE_OUT.n1473 ), .B0(\STATE_OUT.j[1]_2 ), 
    .CE(\STATE_OUT.waiting_N_150 ), .LSR(\STATE_OUT.n196 ), .CLK(SERCLK_OUT_c), 
    .CIN0(\STATE_OUT.n1473 ), .CIN1(\STATE_OUT.n3278 ), 
    .Q0(\STATE_OUT.j[1]_2 ), .F0(\STATE_OUT.waiting_N_155[1]_2 ), 
    .F1(\waiting_N_155[2] ), .COUT1(\STATE_OUT.n1475 ), 
    .COUT0(\STATE_OUT.n3278 ));
  STATE_OUT_SLICE_20 \STATE_OUT.SLICE_20 ( 
    .DI1(\STATE_OUT.waiting_N_155[0]_2 ), .D1(\STATE_OUT.n3275 ), .C1(VCC_net), 
    .B1(\STATE_OUT.j[0]_2 ), .CE(\STATE_OUT.waiting_N_150 ), 
    .LSR(\STATE_OUT.n196 ), .CLK(SERCLK_OUT_c), .CIN1(\STATE_OUT.n3275 ), 
    .Q1(\STATE_OUT.j[0]_2 ), .F1(\STATE_OUT.waiting_N_155[0]_2 ), 
    .COUT1(\STATE_OUT.n1473 ), .COUT0(\STATE_OUT.n3275 ));
  STATE_OUT_SLICE_21 \STATE_OUT.SLICE_21 ( .D1(\STATE_OUT.n3311 ), 
    .B1(\j[24] ), .D0(\STATE_OUT.n1495 ), .B0(\j[23] ), 
    .CIN0(\STATE_OUT.n1495 ), .CIN1(\STATE_OUT.n3311 ), 
    .F0(\waiting_N_155[23] ), .F1(\waiting_N_155[24] ), 
    .COUT1(\STATE_OUT.n1497 ), .COUT0(\STATE_OUT.n3311 ));
  STATE_OUT_SLICE_22 \STATE_OUT.SLICE_22 ( .D1(\STATE_OUT.n3308 ), 
    .B1(\j[22] ), .D0(\STATE_OUT.n1493 ), .B0(\j[21] ), 
    .CIN0(\STATE_OUT.n1493 ), .CIN1(\STATE_OUT.n3308 ), 
    .F0(\waiting_N_155[21] ), .F1(\waiting_N_155[22] ), 
    .COUT1(\STATE_OUT.n1495 ), .COUT0(\STATE_OUT.n3308 ));
  STATE_OUT_SLICE_23 \STATE_OUT.SLICE_23 ( .D1(\STATE_OUT.n3305 ), 
    .B1(\j[20] ), .D0(\STATE_OUT.n1491 ), .B0(\j[19] ), 
    .CIN0(\STATE_OUT.n1491 ), .CIN1(\STATE_OUT.n3305 ), 
    .F0(\waiting_N_155[19] ), .F1(\waiting_N_155[20] ), 
    .COUT1(\STATE_OUT.n1493 ), .COUT0(\STATE_OUT.n3305 ));
  STATE_OUT_SLICE_24 \STATE_OUT.SLICE_24 ( .D1(\STATE_OUT.n3302 ), 
    .B1(\j[18] ), .D0(\STATE_OUT.n1489 ), .B0(\j[17] ), 
    .CIN0(\STATE_OUT.n1489 ), .CIN1(\STATE_OUT.n3302 ), 
    .F0(\waiting_N_155[17] ), .F1(\waiting_N_155[18] ), 
    .COUT1(\STATE_OUT.n1491 ), .COUT0(\STATE_OUT.n3302 ));
  STATE_OUT_SLICE_25 \STATE_OUT.SLICE_25 ( .D1(\STATE_OUT.n3299 ), 
    .B1(\j[16] ), .D0(\STATE_OUT.n1487 ), .B0(\j[15] ), 
    .CIN0(\STATE_OUT.n1487 ), .CIN1(\STATE_OUT.n3299 ), 
    .F0(\waiting_N_155[15] ), .F1(\waiting_N_155[16] ), 
    .COUT1(\STATE_OUT.n1489 ), .COUT0(\STATE_OUT.n3299 ));
  STATE_OUT_SLICE_26 \STATE_OUT.SLICE_26 ( .D1(\STATE_OUT.n3296 ), 
    .B1(\j[14] ), .D0(\STATE_OUT.n1485 ), .B0(\j[13] ), 
    .CIN0(\STATE_OUT.n1485 ), .CIN1(\STATE_OUT.n3296 ), 
    .F0(\waiting_N_155[13] ), .F1(\waiting_N_155[14] ), 
    .COUT1(\STATE_OUT.n1487 ), .COUT0(\STATE_OUT.n3296 ));
  STATE_OUT_serial_SLICE_27 \STATE_OUT.serial.SLICE_27 ( 
    .D1(\STATE_OUT.serial.n3380 ), .B1(\STATE_OUT.serial.j[16] ), 
    .D0(\STATE_OUT.serial.n1454 ), .B0(\STATE_OUT.serial.j[15] ), 
    .CIN0(\STATE_OUT.serial.n1454 ), .CIN1(\STATE_OUT.serial.n3380 ), 
    .F0(n151), .F1(n150), .COUT1(\STATE_OUT.serial.n1456 ), 
    .COUT0(\STATE_OUT.serial.n3380 ));
  STATE_OUT_serial_SLICE_28 \STATE_OUT.serial.SLICE_28 ( 
    .D1(\STATE_OUT.serial.n3365 ), .B1(\STATE_OUT.serial.j[6] ), 
    .D0(\STATE_OUT.serial.n1444 ), .B0(\STATE_OUT.serial.j[5] ), 
    .CIN0(\STATE_OUT.serial.n1444 ), .CIN1(\STATE_OUT.serial.n3365 ), 
    .F0(n161), .F1(n160), .COUT1(\STATE_OUT.serial.n1446 ), 
    .COUT0(\STATE_OUT.serial.n3365 ));
  STATE_OUT_serial_SLICE_29 \STATE_OUT.serial.SLICE_29 ( 
    .D1(\STATE_OUT.serial.n3371 ), .B1(\STATE_OUT.serial.j[10] ), 
    .D0(\STATE_OUT.serial.n1448 ), .B0(\STATE_OUT.serial.j[9] ), 
    .CIN0(\STATE_OUT.serial.n1448 ), .CIN1(\STATE_OUT.serial.n3371 ), 
    .F0(n157), .F1(n156), .COUT1(\STATE_OUT.serial.n1450 ), 
    .COUT0(\STATE_OUT.serial.n3371 ));
  STATE_OUT_serial_SLICE_30 \STATE_OUT.serial.SLICE_30 ( 
    .D1(\STATE_OUT.serial.n3404 ), .D0(\STATE_OUT.serial.n1470 ), 
    .B0(\STATE_OUT.serial.j[31] ), .CIN0(\STATE_OUT.serial.n1470 ), 
    .CIN1(\STATE_OUT.serial.n3404 ), .F0(n135), 
    .COUT0(\STATE_OUT.serial.n3404 ));
  STATE_OUT_serial_SLICE_31 \STATE_OUT.serial.SLICE_31 ( 
    .D1(\STATE_OUT.serial.n3362 ), .B1(\STATE_OUT.serial.j[4] ), 
    .D0(\STATE_OUT.serial.n1442 ), .B0(\STATE_OUT.serial.j[3] ), 
    .CIN0(\STATE_OUT.serial.n1442 ), .CIN1(\STATE_OUT.serial.n3362 ), 
    .F0(n163), .F1(n162), .COUT1(\STATE_OUT.serial.n1444 ), 
    .COUT0(\STATE_OUT.serial.n3362 ));
  STATE_OUT_serial_SLICE_32 \STATE_OUT.serial.SLICE_32 ( 
    .D1(\STATE_OUT.serial.n3401 ), .B1(\STATE_OUT.serial.j[30] ), 
    .D0(\STATE_OUT.serial.n1468 ), .B0(\STATE_OUT.serial.j[29] ), 
    .CIN0(\STATE_OUT.serial.n1468 ), .CIN1(\STATE_OUT.serial.n3401 ), 
    .F0(n137), .F1(n136), .COUT1(\STATE_OUT.serial.n1470 ), 
    .COUT0(\STATE_OUT.serial.n3401 ));
  STATE_OUT_serial_SLICE_33 \STATE_OUT.serial.SLICE_33 ( 
    .DI0(\STATE_OUT.serial.n167[1]_2 ), .D1(\STATE_OUT.serial.n3359 ), 
    .B1(\STATE_OUT.serial.j[2] ), .D0(\STATE_OUT.serial.n1440 ), 
    .B0(\STATE_OUT.serial.j[1] ), .LSR(n177), .CLK(SERCLK_OUT_c), 
    .CIN0(\STATE_OUT.serial.n1440 ), .CIN1(\STATE_OUT.serial.n3359 ), 
    .Q0(\STATE_OUT.serial.j[1] ), .F0(\STATE_OUT.serial.n167[1]_2 ), .F1(n164), 
    .COUT1(\STATE_OUT.serial.n1442 ), .COUT0(\STATE_OUT.serial.n3359 ));
  STATE_OUT_serial_SLICE_34 \STATE_OUT.serial.SLICE_34 ( 
    .D1(\STATE_OUT.serial.n3398 ), .B1(\STATE_OUT.serial.j[28] ), 
    .D0(\STATE_OUT.serial.n1466 ), .B0(\STATE_OUT.serial.j[27] ), 
    .CIN0(\STATE_OUT.serial.n1466 ), .CIN1(\STATE_OUT.serial.n3398 ), 
    .F0(n139), .F1(n138), .COUT1(\STATE_OUT.serial.n1468 ), 
    .COUT0(\STATE_OUT.serial.n3398 ));
  STATE_OUT_serial_SLICE_35 \STATE_OUT.serial.SLICE_35 ( 
    .D1(\STATE_OUT.serial.n3377 ), .B1(\STATE_OUT.serial.j[14] ), 
    .D0(\STATE_OUT.serial.n1452 ), .B0(\STATE_OUT.serial.j[13] ), 
    .CIN0(\STATE_OUT.serial.n1452 ), .CIN1(\STATE_OUT.serial.n3377 ), 
    .F0(n153), .F1(n152), .COUT1(\STATE_OUT.serial.n1454 ), 
    .COUT0(\STATE_OUT.serial.n3377 ));
  STATE_OUT_serial_SLICE_36 \STATE_OUT.serial.SLICE_36 ( 
    .D1(\STATE_OUT.serial.n3395 ), .B1(\STATE_OUT.serial.j[26] ), 
    .D0(\STATE_OUT.serial.n1464 ), .B0(\STATE_OUT.serial.j[25] ), 
    .CIN0(\STATE_OUT.serial.n1464 ), .CIN1(\STATE_OUT.serial.n3395 ), 
    .F0(n141), .F1(n140), .COUT1(\STATE_OUT.serial.n1466 ), 
    .COUT0(\STATE_OUT.serial.n3395 ));
  STATE_OUT_serial_SLICE_37 \STATE_OUT.serial.SLICE_37 ( 
    .D1(\STATE_OUT.serial.n3368 ), .B1(\STATE_OUT.serial.j[8] ), 
    .D0(\STATE_OUT.serial.n1446 ), .B0(\STATE_OUT.serial.j[7] ), 
    .CIN0(\STATE_OUT.serial.n1446 ), .CIN1(\STATE_OUT.serial.n3368 ), 
    .F0(n159), .F1(n158), .COUT1(\STATE_OUT.serial.n1448 ), 
    .COUT0(\STATE_OUT.serial.n3368 ));
  STATE_OUT_serial_SLICE_38 \STATE_OUT.serial.SLICE_38 ( 
    .D1(\STATE_OUT.serial.n3392 ), .B1(\STATE_OUT.serial.j[24] ), 
    .D0(\STATE_OUT.serial.n1462 ), .B0(\STATE_OUT.serial.j[23] ), 
    .CIN0(\STATE_OUT.serial.n1462 ), .CIN1(\STATE_OUT.serial.n3392 ), 
    .F0(n143), .F1(n142), .COUT1(\STATE_OUT.serial.n1464 ), 
    .COUT0(\STATE_OUT.serial.n3392 ));
  STATE_OUT_serial_SLICE_39 \STATE_OUT.serial.SLICE_39 ( 
    .D1(\STATE_OUT.serial.n3374 ), .B1(\STATE_OUT.serial.j[12] ), 
    .D0(\STATE_OUT.serial.n1450 ), .B0(\STATE_OUT.serial.j[11] ), 
    .CIN0(\STATE_OUT.serial.n1450 ), .CIN1(\STATE_OUT.serial.n3374 ), 
    .F0(n155), .F1(n154), .COUT1(\STATE_OUT.serial.n1452 ), 
    .COUT0(\STATE_OUT.serial.n3374 ));
  STATE_OUT_serial_SLICE_40 \STATE_OUT.serial.SLICE_40 ( 
    .D1(\STATE_OUT.serial.n3389 ), .B1(\STATE_OUT.serial.j[22] ), 
    .D0(\STATE_OUT.serial.n1460 ), .B0(\STATE_OUT.serial.j[21] ), 
    .CIN0(\STATE_OUT.serial.n1460 ), .CIN1(\STATE_OUT.serial.n3389 ), 
    .F0(n145), .F1(n144), .COUT1(\STATE_OUT.serial.n1462 ), 
    .COUT0(\STATE_OUT.serial.n3389 ));
  STATE_OUT_serial_SLICE_41 \STATE_OUT.serial.SLICE_41 ( 
    .D1(\STATE_OUT.serial.n3386 ), .B1(\STATE_OUT.serial.j[20] ), 
    .D0(\STATE_OUT.serial.n1458 ), .B0(\STATE_OUT.serial.j[19] ), 
    .CIN0(\STATE_OUT.serial.n1458 ), .CIN1(\STATE_OUT.serial.n3386 ), 
    .F0(n147), .F1(n146), .COUT1(\STATE_OUT.serial.n1460 ), 
    .COUT0(\STATE_OUT.serial.n3386 ));
  STATE_OUT_serial_SLICE_42 \STATE_OUT.serial.SLICE_42 ( 
    .DI1(\STATE_OUT.serial.n167[0]_2 ), .D1(\STATE_OUT.serial.n3356 ), 
    .C1(VCC_net), .B1(\STATE_OUT.serial.j[0] ), .LSR(n177), .CLK(SERCLK_OUT_c), 
    .CIN1(\STATE_OUT.serial.n3356 ), .Q1(\STATE_OUT.serial.j[0] ), 
    .F1(\STATE_OUT.serial.n167[0]_2 ), .COUT1(\STATE_OUT.serial.n1440 ), 
    .COUT0(\STATE_OUT.serial.n3356 ));
  STATE_OUT_serial_SLICE_43 \STATE_OUT.serial.SLICE_43 ( 
    .D1(\STATE_OUT.serial.n3383 ), .B1(\STATE_OUT.serial.j[18] ), 
    .D0(\STATE_OUT.serial.n1456 ), .B0(\STATE_OUT.serial.j[17] ), 
    .CIN0(\STATE_OUT.serial.n1456 ), .CIN1(\STATE_OUT.serial.n3383 ), 
    .F0(n149), .F1(n148), .COUT1(\STATE_OUT.serial.n1458 ), 
    .COUT0(\STATE_OUT.serial.n3383 ));
  SLICE_44 SLICE_44( .DI1(\debug_c_0$n1 ), .DI0(\debug_c_1$n0 ), .D1(n19), 
    .C1(\Sreg[0] ), .A1(n22), .C0(\Snext_1__N_1[1] ), .B0(n1904), 
    .A0(debug_c_1), .LSR(RESET_IN_c), .CLK(SERCLK_OUT_c), .Q0(\Sreg[1] ), 
    .Q1(\Sreg[0] ), .F0(\debug_c_1$n0 ), .F1(\debug_c_0$n1 ));
  keyboard_SLICE_46 \keyboard.SLICE_46 ( .DI1(\keyboard.nextState[0]$n3 ), 
    .DI0(\keyboard.nextState[1]$n2 ), .D1(\keyboard.nextState[0] ), 
    .C1(\keyboard.counter[1] ), .B1(\keyboard.counter[0] ), 
    .A1(\keyboard.n398 ), .C0(\keyboard.n6 ), .A0(\state[0] ), 
    .CLK(SERCLK_OUT_c), .Q0(\state[1] ), .Q1(\state[0] ), 
    .F0(\keyboard.nextState[1]$n2 ), .F1(\keyboard.nextState[0]$n3 ));
  keyboard_SLICE_47 \keyboard.SLICE_47 ( .DI1(\keyboard.n13[1] ), 
    .DI0(\keyboard.n1 ), .C1(\keyboard.counter[1] ), 
    .B1(\keyboard.counter[0] ), .C0(\keyboard.counter[0] ), .CLK(KB_RECV_c), 
    .Q0(\keyboard.counter[0] ), .Q1(\keyboard.counter[1] ), .F0(\keyboard.n1 ), 
    .F1(\keyboard.n13[1] ));
  mainTimer_SLICE_51 \mainTimer.SLICE_51 ( 
    .DI1(\mainTimer.clkCont_17__N_34[16] ), 
    .DI0(\mainTimer.clkCont_17__N_34[17] ), 
    .D1(\mainTimer.clkCont_17__N_55[16] ), .C1(timeout_c), 
    .C0(\mainTimer.clkCont_17__N_55[17] ), .B0(timeout_c), 
    .LSR(\mainTimer.clkCont_17__N_52 ), .CLK(SERCLK_OUT_c), 
    .Q0(\mainTimer.clkCont[17] ), .Q1(\mainTimer.clkCont[16] ), 
    .F0(\mainTimer.clkCont_17__N_34[17] ), 
    .F1(\mainTimer.clkCont_17__N_34[16] ));
  mainTimer_SLICE_53 \mainTimer.SLICE_53 ( 
    .DI1(\mainTimer.clkCont_17__N_34[14] ), 
    .DI0(\mainTimer.clkCont_17__N_34[15] ), 
    .C1(\mainTimer.clkCont_17__N_55[14] ), .A1(timeout_c), 
    .D0(\mainTimer.clkCont_17__N_55[15] ), .B0(timeout_c), 
    .LSR(\mainTimer.clkCont_17__N_52 ), .CLK(SERCLK_OUT_c), 
    .Q0(\mainTimer.clkCont[15] ), .Q1(\mainTimer.clkCont[14] ), 
    .F0(\mainTimer.clkCont_17__N_34[15] ), 
    .F1(\mainTimer.clkCont_17__N_34[14] ));
  mainTimer_SLICE_55 \mainTimer.SLICE_55 ( 
    .DI1(\mainTimer.clkCont_17__N_34[12] ), 
    .DI0(\mainTimer.clkCont_17__N_34[13] ), .D1(timeout_c), 
    .C1(\mainTimer.clkCont_17__N_55[12] ), 
    .C0(\mainTimer.clkCont_17__N_55[13] ), .A0(timeout_c), 
    .LSR(\mainTimer.clkCont_17__N_52 ), .CLK(SERCLK_OUT_c), 
    .Q0(\mainTimer.clkCont[13] ), .Q1(\mainTimer.clkCont[12] ), 
    .F0(\mainTimer.clkCont_17__N_34[13] ), 
    .F1(\mainTimer.clkCont_17__N_34[12] ));
  mainTimer_SLICE_57 \mainTimer.SLICE_57 ( 
    .DI1(\mainTimer.clkCont_17__N_34[10] ), 
    .DI0(\mainTimer.clkCont_17__N_34[11] ), 
    .D1(\mainTimer.clkCont_17__N_55[10] ), .C1(timeout_c), .B0(timeout_c), 
    .A0(\mainTimer.clkCont_17__N_55[11] ), .LSR(\mainTimer.clkCont_17__N_52 ), 
    .CLK(SERCLK_OUT_c), .Q0(\mainTimer.clkCont[11] ), 
    .Q1(\mainTimer.clkCont[10] ), .F0(\mainTimer.clkCont_17__N_34[11] ), 
    .F1(\mainTimer.clkCont_17__N_34[10] ));
  mainTimer_SLICE_59 \mainTimer.SLICE_59 ( 
    .DI1(\mainTimer.clkCont_17__N_34[8] ), 
    .DI0(\mainTimer.clkCont_17__N_34[9] ), .D1(timeout_c), 
    .C1(\mainTimer.clkCont_17__N_55[8] ), .D0(\mainTimer.clkCont_17__N_55[9] ), 
    .C0(timeout_c), .LSR(\mainTimer.clkCont_17__N_52 ), .CLK(SERCLK_OUT_c), 
    .Q0(\mainTimer.clkCont[9] ), .Q1(\mainTimer.clkCont[8] ), 
    .F0(\mainTimer.clkCont_17__N_34[9] ), .F1(\mainTimer.clkCont_17__N_34[8] ));
  mainTimer_SLICE_61 \mainTimer.SLICE_61 ( 
    .DI1(\mainTimer.clkCont_17__N_34[6] ), 
    .DI0(\mainTimer.clkCont_17__N_34[7] ), .D1(timeout_c), 
    .B1(\mainTimer.clkCont_17__N_55[6] ), .D0(\mainTimer.clkCont_17__N_55[7] ), 
    .C0(timeout_c), .LSR(\mainTimer.clkCont_17__N_52 ), .CLK(SERCLK_OUT_c), 
    .Q0(\mainTimer.clkCont[7] ), .Q1(\mainTimer.clkCont[6] ), 
    .F0(\mainTimer.clkCont_17__N_34[7] ), .F1(\mainTimer.clkCont_17__N_34[6] ));
  mainTimer_SLICE_63 \mainTimer.SLICE_63 ( 
    .DI1(\mainTimer.clkCont_17__N_34[4] ), 
    .DI0(\mainTimer.clkCont_17__N_34[5] ), 
    .D1(\mainTimer.clkCont_17__N_55[4] ), .B1(timeout_c), 
    .C0(\mainTimer.clkCont_17__N_55[5] ), .A0(timeout_c), 
    .LSR(\mainTimer.clkCont_17__N_52 ), .CLK(SERCLK_OUT_c), 
    .Q0(\mainTimer.clkCont[5] ), .Q1(\mainTimer.clkCont[4] ), 
    .F0(\mainTimer.clkCont_17__N_34[5] ), .F1(\mainTimer.clkCont_17__N_34[4] ));
  mainTimer_SLICE_65 \mainTimer.SLICE_65 ( 
    .DI1(\mainTimer.clkCont_17__N_34[2] ), 
    .DI0(\mainTimer.clkCont_17__N_34[3] ), 
    .D1(\mainTimer.clkCont_17__N_55[2] ), .B1(timeout_c), 
    .C0(\mainTimer.clkCont_17__N_55[3] ), .A0(timeout_c), 
    .LSR(\mainTimer.clkCont_17__N_52 ), .CLK(SERCLK_OUT_c), 
    .Q0(\mainTimer.clkCont[3] ), .Q1(\mainTimer.clkCont[2] ), 
    .F0(\mainTimer.clkCont_17__N_34[3] ), .F1(\mainTimer.clkCont_17__N_34[2] ));
  mainTimer_SLICE_67 \mainTimer.SLICE_67 ( 
    .DI1(\mainTimer.clkCont_17__N_34[0] ), 
    .DI0(\mainTimer.clkCont_17__N_34[1] ), .D1(timeout_c), 
    .A1(\mainTimer.clkCont_17__N_55[0] ), .D0(\mainTimer.clkCont_17__N_55[1] ), 
    .A0(timeout_c), .LSR(\mainTimer.clkCont_17__N_52 ), .CLK(SERCLK_OUT_c), 
    .Q0(\mainTimer.clkCont[1] ), .Q1(\mainTimer.clkCont[0] ), 
    .F0(\mainTimer.clkCont_17__N_34[1] ), .F1(\mainTimer.clkCont_17__N_34[0] ));
  SLICE_69 SLICE_69( .DI1(n512), .DI0(n514), .D1(\j[5] ), .C1(waiting_N_154), 
    .B1(waiting), .A1(\waiting_N_155[5] ), .D0(waiting_N_154), .C0(\j[4] ), 
    .B0(\waiting_N_155[4] ), .A0(waiting), .CLK(SERCLK_OUT_c), .Q0(\j[4] ), 
    .Q1(\j[5] ), .F0(n514), .F1(n512));
  SLICE_70 SLICE_70( .DI1(n508), .DI0(n510), .D1(waiting), .C1(\j[7] ), 
    .B1(\waiting_N_155[7] ), .A1(waiting_N_154), .D0(waiting_N_154), 
    .C0(\j[6] ), .B0(waiting), .A0(\waiting_N_155[6] ), .CLK(SERCLK_OUT_c), 
    .Q0(\j[6] ), .Q1(\j[7] ), .F0(n510), .F1(n508));
  SLICE_73 SLICE_73( .DI1(n518), .DI0(n516), .D1(waiting), .C1(waiting_N_154), 
    .B1(\waiting_N_155[2] ), .A1(\j[2] ), .D0(waiting_N_154), 
    .C0(\waiting_N_155[3] ), .B0(waiting), .A0(\j[3] ), .CLK(SERCLK_OUT_c), 
    .Q0(\j[3] ), .Q1(\j[2] ), .F0(n516), .F1(n518));
  SLICE_75 SLICE_75( .DI1(n553), .DI0(n520), .D1(waiting_N_154), .C1(\j[11] ), 
    .B1(\waiting_N_155[11] ), .A1(waiting), .D0(\waiting_N_155[10] ), 
    .C0(\j[10] ), .B0(waiting), .A0(waiting_N_154), .CLK(SERCLK_OUT_c), 
    .Q0(\j[10] ), .Q1(\j[11] ), .F0(n520), .F1(n553));
  STATE_OUT_SLICE_76 \STATE_OUT.SLICE_76 ( .DI1(\STATE_OUT.n21[1] ), 
    .DI0(\STATE_OUT.n21[0] ), .D1(\STATE_OUT.cont[1] ), 
    .B1(\STATE_OUT.cont[0] ), .C0(\STATE_OUT.cont[0] ), 
    .LSR(\STATE_OUT.waiting_N_150 ), .CLK(SERCLK_OUT_c), 
    .Q0(\STATE_OUT.cont[0] ), .Q1(\STATE_OUT.cont[1] ), 
    .F0(\STATE_OUT.n21[0] ), .F1(\STATE_OUT.n21[1] ));
  SLICE_78 SLICE_78( .DI1(n557), .DI0(n555), .D1(\waiting_N_155[13] ), 
    .C1(\j[13] ), .B1(waiting_N_154), .A1(waiting), .D0(\waiting_N_155[12] ), 
    .C0(\j[12] ), .B0(waiting), .A0(waiting_N_154), .CLK(SERCLK_OUT_c), 
    .Q0(\j[12] ), .Q1(\j[13] ), .F0(n555), .F1(n557));
  SLICE_80 SLICE_80( .DI1(n561), .DI0(n559), .D1(waiting), .C1(waiting_N_154), 
    .B1(\j[15] ), .A1(\waiting_N_155[15] ), .D0(waiting_N_154), .C0(waiting), 
    .B0(\waiting_N_155[14] ), .A0(\j[14] ), .CLK(SERCLK_OUT_c), .Q0(\j[14] ), 
    .Q1(\j[15] ), .F0(n559), .F1(n561));
  SLICE_82 SLICE_82( .DI1(n565), .DI0(n563), .D1(waiting), 
    .C1(\waiting_N_155[17] ), .B1(waiting_N_154), .A1(\j[17] ), .D0(\j[16] ), 
    .C0(\waiting_N_155[16] ), .B0(waiting), .A0(waiting_N_154), 
    .CLK(SERCLK_OUT_c), .Q0(\j[16] ), .Q1(\j[17] ), .F0(n563), .F1(n565));
  SLICE_84 SLICE_84( .DI1(n569), .DI0(n567), .D1(\waiting_N_155[19] ), 
    .C1(\j[19] ), .B1(waiting_N_154), .A1(waiting), .D0(\waiting_N_155[18] ), 
    .C0(waiting_N_154), .B0(waiting), .A0(\j[18] ), .CLK(SERCLK_OUT_c), 
    .Q0(\j[18] ), .Q1(\j[19] ), .F0(n567), .F1(n569));
  SLICE_86 SLICE_86( .DI1(n591), .DI0(n593), .D1(waiting), .C1(\j[30] ), 
    .B1(waiting_N_154), .A1(\waiting_N_155[30] ), .D0(\j[31] ), 
    .C0(waiting_N_154), .B0(\waiting_N_155[31] ), .A0(waiting), 
    .CLK(SERCLK_OUT_c), .Q0(\j[31] ), .Q1(\j[30] ), .F0(n593), .F1(n591));
  SLICE_88 SLICE_88( .DI1(n587), .DI0(n589), .D1(\waiting_N_155[28] ), 
    .C1(waiting_N_154), .B1(waiting), .A1(\j[28] ), .D0(waiting_N_154), 
    .C0(\waiting_N_155[29] ), .B0(waiting), .A0(\j[29] ), .CLK(SERCLK_OUT_c), 
    .Q0(\j[29] ), .Q1(\j[28] ), .F0(n589), .F1(n587));
  SLICE_90 SLICE_90( .DI1(n583), .DI0(n585), .D1(waiting_N_154), 
    .C1(\waiting_N_155[26] ), .B1(waiting), .A1(\j[26] ), .D0(\j[27] ), 
    .C0(waiting_N_154), .B0(waiting), .A0(\waiting_N_155[27] ), 
    .CLK(SERCLK_OUT_c), .Q0(\j[27] ), .Q1(\j[26] ), .F0(n585), .F1(n583));
  SLICE_92 SLICE_92( .DI1(n579), .DI0(n581), .D1(\j[24] ), .C1(waiting_N_154), 
    .B1(waiting), .A1(\waiting_N_155[24] ), .D0(waiting_N_154), .C0(waiting), 
    .B0(\waiting_N_155[25] ), .A0(\j[25] ), .CLK(SERCLK_OUT_c), .Q0(\j[25] ), 
    .Q1(\j[24] ), .F0(n581), .F1(n579));
  SLICE_94 SLICE_94( .DI1(n575), .DI0(n577), .D1(waiting_N_154), .C1(\j[22] ), 
    .B1(\waiting_N_155[22] ), .A1(waiting), .D0(waiting), .C0(\j[23] ), 
    .B0(\waiting_N_155[23] ), .A0(waiting_N_154), .CLK(SERCLK_OUT_c), 
    .Q0(\j[23] ), .Q1(\j[22] ), .F0(n577), .F1(n575));
  SLICE_96 SLICE_96( .DI1(n571), .DI0(n573), .D1(\j[20] ), 
    .C1(\waiting_N_155[20] ), .B1(waiting_N_154), .A1(waiting), .D0(waiting), 
    .C0(waiting_N_154), .B0(\j[21] ), .A0(\waiting_N_155[21] ), 
    .CLK(SERCLK_OUT_c), .Q0(\j[21] ), .Q1(\j[20] ), .F0(n573), .F1(n571));
  SLICE_98 SLICE_98( .DI1(n506), .DI0(n504), .D1(waiting), .C1(\j[8] ), 
    .B1(waiting_N_154), .A1(\waiting_N_155[8] ), .D0(\waiting_N_155[9] ), 
    .C0(\j[9] ), .B0(waiting), .A0(waiting_N_154), .CLK(SERCLK_OUT_c), 
    .Q0(\j[9] ), .Q1(\j[8] ), .F0(n504), .F1(n506));
  STATE_OUT_SLICE_100 \STATE_OUT.SLICE_100 ( .DI1(\STATE_OUT.n21[3] ), 
    .DI0(\STATE_OUT.n21[2] ), .D1(\STATE_OUT.cont[3] ), 
    .C1(\STATE_OUT.cont[0] ), .B1(\STATE_OUT.cont[1] ), 
    .A1(\STATE_OUT.cont[2] ), .D0(\STATE_OUT.cont[2] ), 
    .B0(\STATE_OUT.cont[0] ), .A0(\STATE_OUT.cont[1] ), 
    .LSR(\STATE_OUT.waiting_N_150 ), .CLK(SERCLK_OUT_c), 
    .Q0(\STATE_OUT.cont[2] ), .Q1(\STATE_OUT.cont[3] ), 
    .F0(\STATE_OUT.n21[2] ), .F1(\STATE_OUT.n21[3] ));
  SLICE_105 SLICE_105( .DI1(n532), .DI0(n533), .D1(n145), .A1(n177), .C0(n146), 
    .B0(n177), .CLK(SERCLK_OUT_c), .Q0(\STATE_OUT.serial.j[20] ), 
    .Q1(\STATE_OUT.serial.j[21] ), .F0(n533), .F1(n532));
  SLICE_107 SLICE_107( .DI1(\SENSOR1_IN_c.sig_001.FeedThruLUT ), 
    .DI0(\SENSOR2_IN_c.sig_000.FeedThruLUT ), .B1(SENSOR1_IN_c), 
    .A0(SENSOR2_IN_c), .CE(\STATE_OUT.n176 ), .CLK(SERCLK_OUT_c), 
    .Q0(\STATE_OUT.serial.temp_data_out[0] ), 
    .Q1(\STATE_OUT.serial.temp_data_out[1] ), 
    .F0(\SENSOR2_IN_c.sig_000.FeedThruLUT ), 
    .F1(\SENSOR1_IN_c.sig_001.FeedThruLUT ));
  SLICE_109 SLICE_109( .DI1(n550), .DI0(n551), .B1(n163), .A1(n177), .D0(n177), 
    .B0(n164), .CLK(SERCLK_OUT_c), .Q0(\STATE_OUT.serial.j[2] ), 
    .Q1(\STATE_OUT.serial.j[3] ), .F0(n551), .F1(n550));
  SLICE_111 SLICE_111( .DI1(n548), .DI0(n549), .C1(n177), .A1(n161), .D0(n162), 
    .B0(n177), .CLK(SERCLK_OUT_c), .Q0(\STATE_OUT.serial.j[4] ), 
    .Q1(\STATE_OUT.serial.j[5] ), .F0(n549), .F1(n548));
  SLICE_113 SLICE_113( .DI1(n546), .DI0(n547), .D1(n159), .C1(n177), .D0(n160), 
    .B0(n177), .CLK(SERCLK_OUT_c), .Q0(\STATE_OUT.serial.j[6] ), 
    .Q1(\STATE_OUT.serial.j[7] ), .F0(n547), .F1(n546));
  SLICE_115 SLICE_115( .DI1(n544), .DI0(n545), .C1(n157), .A1(n177), .D0(n177), 
    .B0(n158), .CLK(SERCLK_OUT_c), .Q0(\STATE_OUT.serial.j[8] ), 
    .Q1(\STATE_OUT.serial.j[9] ), .F0(n545), .F1(n544));
  SLICE_117 SLICE_117( .DI1(n542), .DI0(n543), .D1(n155), .C1(n177), .B0(n177), 
    .A0(n156), .CLK(SERCLK_OUT_c), .Q0(\STATE_OUT.serial.j[10] ), 
    .Q1(\STATE_OUT.serial.j[11] ), .F0(n543), .F1(n542));
  SLICE_119 SLICE_119( .DI1(n540), .DI0(n541), .C1(n177), .A1(n153), .D0(n177), 
    .A0(n154), .CLK(SERCLK_OUT_c), .Q0(\STATE_OUT.serial.j[12] ), 
    .Q1(\STATE_OUT.serial.j[13] ), .F0(n541), .F1(n540));
  SLICE_122 SLICE_122( .DI1(n530), .DI0(n531), .D1(n177), .C1(n143), .C0(n144), 
    .A0(n177), .CLK(SERCLK_OUT_c), .Q0(\STATE_OUT.serial.j[22] ), 
    .Q1(\STATE_OUT.serial.j[23] ), .F0(n531), .F1(n530));
  SLICE_124 SLICE_124( .DI1(n528), .DI0(n529), .D1(n177), .A1(n141), .B0(n142), 
    .A0(n177), .CLK(SERCLK_OUT_c), .Q0(\STATE_OUT.serial.j[24] ), 
    .Q1(\STATE_OUT.serial.j[25] ), .F0(n529), .F1(n528));
  SLICE_126 SLICE_126( .DI1(n526), .DI0(n527), .C1(n177), .B1(n139), .D0(n177), 
    .C0(n140), .CLK(SERCLK_OUT_c), .Q0(\STATE_OUT.serial.j[26] ), 
    .Q1(\STATE_OUT.serial.j[27] ), .F0(n527), .F1(n526));
  SLICE_128 SLICE_128( .DI1(n524), .DI0(n525), .D1(n137), .C1(n177), .D0(n177), 
    .A0(n138), .CLK(SERCLK_OUT_c), .Q0(\STATE_OUT.serial.j[28] ), 
    .Q1(\STATE_OUT.serial.j[29] ), .F0(n525), .F1(n524));
  SLICE_130 SLICE_130( .DI1(n522), .DI0(n523), .D1(init), .B1(n135), .D0(n136), 
    .B0(n177), .CLK(SERCLK_OUT_c), .Q0(\STATE_OUT.serial.j[30] ), 
    .Q1(\STATE_OUT.serial.j[31] ), .F0(n523), .F1(n522));
  SLICE_132 SLICE_132( .DI1(n538), .DI0(n539), .C1(n177), .A1(n151), .D0(n152), 
    .B0(n177), .CLK(SERCLK_OUT_c), .Q0(\STATE_OUT.serial.j[14] ), 
    .Q1(\STATE_OUT.serial.j[15] ), .F0(n539), .F1(n538));
  SLICE_134 SLICE_134( .DI1(n536), .DI0(n537), .D1(n149), .B1(n177), .B0(n150), 
    .A0(n177), .CLK(SERCLK_OUT_c), .Q0(\STATE_OUT.serial.j[16] ), 
    .Q1(\STATE_OUT.serial.j[17] ), .F0(n537), .F1(n536));
  SLICE_136 SLICE_136( .DI1(n534), .DI0(n535), .D1(n147), .C1(n177), .D0(n177), 
    .A0(n148), .CLK(SERCLK_OUT_c), .Q0(\STATE_OUT.serial.j[18] ), 
    .Q1(\STATE_OUT.serial.j[19] ), .F0(n535), .F1(n534));
  SLICE_138 SLICE_138( .DI0(\Sreg[1].sig_002.FeedThruLUT ), .A0(\Sreg[1] ), 
    .CE(\STATE_OUT.n176 ), .LSR(n501), .CLK(SERCLK_OUT_c), 
    .Q0(\STATE_OUT.serial.temp_data_out[3] ), 
    .F0(\Sreg[1].sig_002.FeedThruLUT ));
  SLICE_140 SLICE_140( .D1(TIMER_EN), .C1(n8), .B1(\Sreg[1] ), .A1(n2043), 
    .D0(n4), .C0(SENSOR2_IN_c), .B0(\state[0] ), .A0(\state[1] ), .F0(n8), 
    .F1(n2443));
  SLICE_141 SLICE_141( .D1(KEY_STATUS_c_0), .C1(TIMER_EN), .B1(n1077), 
    .A1(KEY_STATUS_c_1), .C0(n2443), .B0(\Sreg[0] ), .A0(n27), .F0(TIMER_EN), 
    .F1(n27));
  keyboard_SLICE_142 \keyboard.SLICE_142 ( .D1(\state[1] ), 
    .C1(\keyboard.nextState[1] ), .B1(\keyboard.counter[0] ), 
    .A1(\keyboard.counter[1] ), .C0(\keyboard.n6 ), .A0(\state[0] ), 
    .F0(\keyboard.nextState[1] ), .F1(\keyboard.n6 ));
  SLICE_144 SLICE_144( .D1(n63), .C1(n724), .A1(\PREV_KEY[1] ), 
    .D0(SENSOR1_IN_c), .C0(n6), .B0(\Sreg[0] ), .A0(\Sreg[1] ), .F0(n724), 
    .F1(\PREV_KEY[1] ));
  SLICE_145 SLICE_145( .D1(KEY_STATUS_c_1), .C1(n2448), .B1(n2044), 
    .A1(\Sreg[1] ), .D0(\PREV_KEY[0] ), .C0(\PREV_KEY[1] ), .F0(n2448), 
    .F1(n22));
  SLICE_146 SLICE_146( .D1(SENSOR1_IN_c), .C1(TIMER_EN_N_26), 
    .B1(SENSOR2_IN_c), .A1(\Sreg[0] ), .D0(\state[0] ), .C0(n4), 
    .A0(\state[1] ), .F0(TIMER_EN_N_26), .F1(n2439));
  keyboard_SLICE_147 \keyboard.SLICE_147 ( .D1(\state[0] ), .C1(n4), 
    .B1(\state[1] ), .A1(SENSOR2_IN_c), .D0(\keyboard.actualKey[0][1] ), 
    .C0(\keyboard.n8 ), .B0(\state[0] ), .A0(\keyboard.actualKey[3][1] ), 
    .F0(n4), .F1(n6));
  keyboard_SLICE_148 \keyboard.SLICE_148 ( .D1(\keyboard.actualKey[3][0] ), 
    .C1(\keyboard.n1888 ), .A1(KB_IN_c_0), .D0(\state[0] ), .C0(\state[1] ), 
    .B0(\keyboard.counter[1] ), .A0(\keyboard.counter[0] ), 
    .F0(\keyboard.n1888 ), .F1(\keyboard.actualKey[3][0] ));
  keyboard_SLICE_149 \keyboard.SLICE_149 ( .C1(\keyboard.n2249 ), 
    .B1(\keyboard.actualKey[1][1] ), .A1(\keyboard.actualKey[2][1] ), 
    .D0(\keyboard.actualKey[2][0] ), .C0(\keyboard.actualKey[3][0] ), 
    .B0(\keyboard.actualKey[0][0] ), .A0(\keyboard.actualKey[1][0] ), 
    .F0(\keyboard.n2249 ), .F1(\keyboard.n8 ));
  keyboard_SLICE_150 \keyboard.SLICE_150 ( .D0(\keyboard.n1889 ), 
    .C0(\keyboard.actualKey[2][1] ), .A0(KB_IN_c_1), 
    .F0(\keyboard.actualKey[2][1] ));
  SLICE_154 SLICE_154( .D1(\Sreg[1] ), .C1(KEY_STATUS_c_1), .B1(\Sreg[0] ), 
    .A1(timeout_c), .D0(n4), .B0(\state[1] ), .F0(KEY_STATUS_c_1), .F1(n63));
  SLICE_156 SLICE_156( .C1(debug_c_0), .B1(\state[1] ), .A1(\state[0] ), 
    .C0(n22), .B0(\Sreg[0] ), .A0(n19), .F0(debug_c_0), .F1(n45));
  SLICE_158 SLICE_158( .C1(TIMER_EN_N_26), .B1(SENSOR2_IN_c), .A1(n2043), 
    .D0(\state[0] ), .C0(\state[1] ), .B0(SENSOR1_IN_c), .F0(n2043), 
    .F1(n2044));
  SLICE_160 SLICE_160( .D1(n45), .C1(timeout_c), .B1(KEY_STATUS_c_1), 
    .A1(\Sreg[1] ), .D0(timeout_c), .B0(\Sreg[1] ), .F0(n1077), .F1(n19));
  SLICE_162 SLICE_162( .C1(\Sreg[0] ), .B1(init), .D0(timeout_c), 
    .C0(\state[1] ), .B0(\Sreg[0] ), .A0(n4), .F0(n2436), .F1(n501));
  SLICE_163 SLICE_163( .C1(\Snext_1__N_1[1] ), .B1(n1904), .A1(debug_c_1), 
    .D0(n2436), .C0(n2439), .B0(KEY_STATUS_c_1), .A0(\Sreg[1] ), 
    .F0(\Snext_1__N_1[1] ), .F1(debug_c_1));
  keyboard_SLICE_164 \keyboard.SLICE_164 ( .C1(\keyboard.n1887 ), 
    .B1(KB_IN_c_0), .A1(\keyboard.actualKey[0][0] ), .D0(\state[0] ), 
    .C0(\keyboard.counter[1] ), .B0(\keyboard.counter[0] ), .A0(\state[1] ), 
    .F0(\keyboard.n1887 ), .F1(\keyboard.actualKey[0][0] ));
  keyboard_SLICE_166 \keyboard.SLICE_166 ( .C1(\keyboard.actualKey[2][0] ), 
    .B1(KB_IN_c_0), .A1(\keyboard.n1889 ), .D0(\state[0] ), .C0(\state[1] ), 
    .B0(\keyboard.counter[0] ), .A0(\keyboard.counter[1] ), 
    .F0(\keyboard.n1889 ), .F1(\keyboard.actualKey[2][0] ));
  keyboard_SLICE_169 \keyboard.SLICE_169 ( .C1(\keyboard.actualKey[0][1] ), 
    .B1(\keyboard.n1887 ), .A1(KB_IN_c_1), .D0(KB_IN_c_1), 
    .B0(\keyboard.n1888 ), .A0(\keyboard.actualKey[3][1] ), 
    .F0(\keyboard.actualKey[3][1] ), .F1(\keyboard.actualKey[0][1] ));
  keyboard_SLICE_170 \keyboard.SLICE_170 ( .C1(\keyboard.n1081 ), 
    .B1(KB_IN_c_1), .A1(\keyboard.actualKey[1][1] ), 
    .D0(\keyboard.counter[0] ), .C0(\keyboard.counter[1] ), .B0(\state[0] ), 
    .A0(\state[1] ), .F0(\keyboard.n1081 ), .F1(\keyboard.actualKey[1][1] ));
  keyboard_SLICE_172 \keyboard.SLICE_172 ( .D1(\keyboard.nextState[0] ), 
    .C1(\keyboard.n398 ), .B1(\keyboard.counter[0] ), 
    .A1(\keyboard.counter[1] ), .C0(\state[1] ), .A0(\state[0] ), 
    .F0(\keyboard.n398 ), .F1(\keyboard.nextState[0] ));
  keyboard_SLICE_174 \keyboard.SLICE_174 ( .D1(timeout_c), .C1(KEY_STATUS_c_0), 
    .B1(\Sreg[1] ), .A1(\Sreg[0] ), .B0(\state[0] ), .A0(\state[1] ), 
    .F0(KEY_STATUS_c_0), .F1(n1904));
  mainTimer_SLICE_176 \mainTimer.SLICE_176 ( .D1(\mainTimer.clkCont[10] ), 
    .C1(\mainTimer.n2247 ), .A1(\mainTimer.clkCont[12] ), 
    .D0(\mainTimer.clkCont[8] ), .C0(\mainTimer.clkCont[0] ), 
    .B0(\mainTimer.clkCont[15] ), .A0(\mainTimer.clkCont[14] ), 
    .F0(\mainTimer.n2247 ), .F1(\mainTimer.n17 ));
  mainTimer_SLICE_178 \mainTimer.SLICE_178 ( .DI1(\mainTimer.n3009 ), 
    .D1(\mainTimer.n8 ), .C1(\mainTimer.clkCont[9] ), .B1(\mainTimer.n7 ), 
    .A1(\mainTimer.clkCont[3] ), .D0(\mainTimer.clkCont[17] ), 
    .C0(\mainTimer.clkCont[7] ), .B0(\mainTimer.clkCont[13] ), .A0(timeout_c), 
    .LSR(\mainTimer.clkCont_17__N_52 ), .CLK(SERCLK_OUT_c), .Q1(timeout_c), 
    .F0(\mainTimer.n18 ), .F1(\mainTimer.n3009 ));
  mainTimer_SLICE_179 \mainTimer.SLICE_179 ( .D1(\mainTimer.clkCont[6] ), 
    .C1(\mainTimer.n19 ), .B1(\mainTimer.n17 ), .A1(\mainTimer.n18 ), 
    .D0(\mainTimer.clkCont[11] ), .C0(\mainTimer.clkCont[5] ), 
    .B0(\mainTimer.clkCont[4] ), .A0(\mainTimer.clkCont[16] ), 
    .F0(\mainTimer.n19 ), .F1(\mainTimer.n7 ));
  STATE_OUT_SLICE_180 \STATE_OUT.SLICE_180 ( .C0(\waiting_N_155[13] ), 
    .B0(\waiting_N_155[4] ), .F0(\STATE_OUT.n32 ));
  STATE_OUT_SLICE_181 \STATE_OUT.SLICE_181 ( .D1(\STATE_OUT.n32 ), 
    .C1(\STATE_OUT.n46 ), .B1(\waiting_N_155[3] ), .A1(\waiting_N_155[29] ), 
    .D0(\waiting_N_155[19] ), .C0(\waiting_N_155[25] ), 
    .B0(\waiting_N_155[20] ), .A0(\waiting_N_155[17] ), .F0(\STATE_OUT.n46 ), 
    .F1(\STATE_OUT.n52 ));
  STATE_OUT_SLICE_182 \STATE_OUT.SLICE_182 ( .D1(\STATE_OUT.n49 ), 
    .C1(\STATE_OUT.n50 ), .B1(\STATE_OUT.n48 ), .A1(\STATE_OUT.n47 ), 
    .D0(\waiting_N_155[10] ), .C0(\waiting_N_155[7] ), .B0(\waiting_N_155[8] ), 
    .A0(\waiting_N_155[30] ), .F0(\STATE_OUT.n50 ), .F1(\STATE_OUT.n56 ));
  STATE_OUT_SLICE_184 \STATE_OUT.SLICE_184 ( .D1(\waiting_N_155[22] ), 
    .C1(\STATE_OUT.n30 ), .B1(\waiting_N_155[14] ), .A1(\waiting_N_155[6] ), 
    .D0(\waiting_N_155[21] ), .C0(\waiting_N_155[5] ), .F0(\STATE_OUT.n30 ), 
    .F1(\STATE_OUT.n51 ));
  STATE_OUT_SLICE_186 \STATE_OUT.SLICE_186 ( .C1(waiting_N_154), .A1(waiting), 
    .D0(\waiting_N_155[31] ), .C0(\STATE_OUT.n56 ), .B0(\STATE_OUT.n52 ), 
    .A0(\STATE_OUT.n51 ), .F0(waiting_N_154), .F1(\STATE_OUT.n196 ));
  STATE_OUT_serial_SLICE_188 \STATE_OUT.serial.SLICE_188 ( 
    .D1(\STATE_OUT.serial.n49 ), .C1(\STATE_OUT.serial.n50 ), 
    .B1(\STATE_OUT.serial.n47 ), .A1(\STATE_OUT.serial.n48 ), .D0(n158), 
    .C0(n159), .B0(n136), .A0(n156), .F0(\STATE_OUT.serial.n50 ), 
    .F1(\STATE_OUT.serial.n56 ));
  STATE_OUT_serial_SLICE_190 \STATE_OUT.serial.SLICE_190 ( .D0(n153), 
    .C0(n162), .F0(\STATE_OUT.serial.n32 ));
  STATE_OUT_serial_SLICE_191 \STATE_OUT.serial.SLICE_191 ( 
    .D1(\STATE_OUT.serial.n32 ), .C1(\STATE_OUT.serial.n46 ), .B1(n163), 
    .A1(n137), .D0(n146), .C0(n141), .B0(n149), .A0(n147), 
    .F0(\STATE_OUT.serial.n46 ), .F1(\STATE_OUT.serial.n52 ));
  STATE_OUT_serial_SLICE_192 \STATE_OUT.serial.SLICE_192 ( .D1(n144), 
    .C1(\STATE_OUT.serial.n44 ), .B1(\STATE_OUT.serial.n52 ), .A1(n152), 
    .D0(n145), .B0(n160), .A0(n161), .F0(\STATE_OUT.serial.n44 ), 
    .F1(\STATE_OUT.serial.n55 ));
  SLICE_196 SLICE_196( .C0(n63), .B0(n724), .A0(\PREV_KEY[0] ), 
    .F0(\PREV_KEY[0] ));
  STATE_OUT_serial_SLICE_198 \STATE_OUT.serial.SLICE_198 ( 
    .DI1(\STATE_OUT.serial.status_out_N_267 ), .D1(\STATE_OUT.serial.j[1] ), 
    .C1(\STATE_OUT.serial.n2827 ), .B1(\STATE_OUT.serial.temp_data_out[1] ), 
    .A1(\STATE_OUT.serial.temp_data_out[0] ), .D0(\temp_data_out[2] ), 
    .C0(\STATE_OUT.serial.j[1] ), .B0(\STATE_OUT.serial.temp_data_out[3] ), 
    .A0(\STATE_OUT.serial.j[0] ), .LSR(\STATE_OUT.n176 ), .CLK(SERCLK_OUT_c), 
    .Q1(STATUS_OUT_c), .F0(\STATE_OUT.serial.n2827 ), 
    .F1(\STATE_OUT.serial.status_out_N_267 ));
  STATE_OUT_SLICE_200 \STATE_OUT.SLICE_200 ( .D0(\STATE_OUT.cont[2] ), 
    .C0(\STATE_OUT.cont[1] ), .B0(\STATE_OUT.cont[0] ), 
    .A0(\STATE_OUT.cont[3] ), .F0(\STATE_OUT.n2445 ));
  STATE_OUT_SLICE_201 \STATE_OUT.SLICE_201 ( .DI1(\STATE_OUT.n1919 ), 
    .C1(waiting_N_154), .B1(waiting), .A1(\STATE_OUT.n2445 ), .A0(waiting), 
    .CLK(SERCLK_OUT_c), .Q1(waiting), .F0(\STATE_OUT.waiting_N_150 ), 
    .F1(\STATE_OUT.n1919 ));
  mainTimer_SLICE_204 \mainTimer.SLICE_204 ( .C0(n27), .B0(\Sreg[0] ), 
    .A0(n2443), .F0(\mainTimer.clkCont_17__N_52 ));
  STATE_OUT_serial_SLICE_206 \STATE_OUT.serial.SLICE_206 ( .D1(n154), 
    .C1(n155), .B1(n151), .A1(n150), .D0(n164), .C0(n139), .B0(n157), 
    .A0(n138), .F0(\STATE_OUT.serial.n47 ), .F1(\STATE_OUT.serial.n48 ));
  STATE_OUT_serial_SLICE_207 \STATE_OUT.serial.SLICE_207 ( .D0(n142), 
    .C0(n148), .B0(n140), .A0(n143), .F0(\STATE_OUT.serial.n49 ));
  STATE_OUT_serial_SLICE_209 \STATE_OUT.serial.SLICE_209 ( 
    .D0(\STATE_OUT.serial.n55 ), .C0(\STATE_OUT.serial.n56 ), .B0(init), 
    .A0(n135), .F0(n177));
  STATE_OUT_SLICE_210 \STATE_OUT.SLICE_210 ( .D1(\waiting_N_155[16] ), 
    .C1(\waiting_N_155[15] ), .B1(\waiting_N_155[12] ), 
    .A1(\waiting_N_155[11] ), .D0(\waiting_N_155[9] ), .C0(\waiting_N_155[2] ), 
    .B0(\waiting_N_155[28] ), .A0(\waiting_N_155[27] ), .F0(\STATE_OUT.n47 ), 
    .F1(\STATE_OUT.n48 ));
  STATE_OUT_SLICE_211 \STATE_OUT.SLICE_211 ( .D0(\waiting_N_155[24] ), 
    .C0(\waiting_N_155[18] ), .B0(\waiting_N_155[26] ), 
    .A0(\waiting_N_155[23] ), .F0(\STATE_OUT.n49 ));
  SLICE_212 SLICE_212( .F0(VCC_net));
  SLICE_213 SLICE_213( .DI1(n2037), .D1(\temp_data_out[2] ), .C1(\Sreg[0] ), 
    .B1(init), .A1(\Sreg[1] ), .D0(\Sreg[0] ), .B0(\Sreg[1] ), 
    .CLK(SERCLK_OUT_c), .Q1(\temp_data_out[2] ), .F0(SIREN_OUT_c), .F1(n2037));
  keyboard_SLICE_214 \keyboard.SLICE_214 ( .D0(\keyboard.actualKey[1][0] ), 
    .B0(\keyboard.n1081 ), .A0(KB_IN_c_0), .F0(\keyboard.actualKey[1][0] ));
  mainTimer_SLICE_216 \mainTimer.SLICE_216 ( .B0(\mainTimer.clkCont[1] ), 
    .A0(\mainTimer.clkCont[2] ), .F0(\mainTimer.n8 ));
  STATE_OUT_SLICE_219 \STATE_OUT.SLICE_219 ( 
    .DI1(\STATE_OUT.waiting_N_150$n4 ), .D1(waiting), .B0(init), 
    .CLK(SERCLK_OUT_c), .Q1(init), .F0(\STATE_OUT.n176 ), 
    .F1(\STATE_OUT.waiting_N_150$n4 ));
  OSCInst1 OSCInst1( .CLKLFPU(VCC_net), .CLKLFEN(VCC_net), 
    .CLKLF(SERCLK_OUT_c));
  STATE_OUT_serial_status_send \STATE_OUT.serial.status_send ( .DO0(init), 
    .OUTCLK(SERCLK_OUT_c), .PADDO(STATUS_SEND_c));
  STATUS_SEND STATUS_SEND_I( .PADDO(STATUS_SEND_c), .STATUS_SEND(STATUS_SEND));
  STATUS_OUT STATUS_OUT_I( .PADDO(STATUS_OUT_c), .STATUS_OUT(STATUS_OUT));
  SIREN_OUT SIREN_OUT_I( .PADDO(SIREN_OUT_c), .SIREN_OUT(SIREN_OUT));
  SERCLK_OUT SERCLK_OUT_I( .PADDO(SERCLK_OUT_c), .SERCLK_OUT(SERCLK_OUT));
  KEY_STATUS_1_ \KEY_STATUS[1]_I ( .PADDO(KEY_STATUS_c_1), 
    .KEYSTATUS1(KEY_STATUS[1]));
  KEY_STATUS_0_ \KEY_STATUS[0]_I ( .PADDO(KEY_STATUS_c_0), 
    .KEYSTATUS0(KEY_STATUS[0]));
  debug_1_ \debug[1]_I ( .PADDO(debug_c_1), .debug1(debug[1]));
  debug_0_ \debug[0]_I ( .PADDO(debug_c_0), .debug0(debug[0]));
  timeout timeout_I( .PADDO(timeout_c), .timeout(timeout));
  SENSOR1_IN SENSOR1_IN_I( .PADDI(SENSOR1_IN_c), .SENSOR1_IN(SENSOR1_IN));
  SENSOR2_IN SENSOR2_IN_I( .PADDI(SENSOR2_IN_c), .SENSOR2_IN(SENSOR2_IN));
  KB_IN_1_ \KB_IN[1]_I ( .PADDI(KB_IN_c_1), .KBIN1(KB_IN[1]));
  KB_IN_0_ \KB_IN[0]_I ( .PADDI(KB_IN_c_0), .KBIN0(KB_IN[0]));
  KB_RECV KB_RECV_I( .PADDI(KB_RECV_c), .KB_RECV(KB_RECV));
  RESET_IN RESET_IN_I( .PADDI(RESET_IN_c), .RESET_IN(RESET_IN));
endmodule

module mainTimer_SLICE_0 ( input D1, B1, D0, B0, CIN0, CIN1, output F0, F1, 
    COUT1, COUT0 );
  wire   GNDI;

  fa2 \mainTimer/add_7_add_5_17 ( .A0(GNDI), .B0(B0), .C0(GNDI), .D0(D0), 
    .A1(GNDI), .B1(B1), .C1(GNDI), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module fa2 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI0, CI1, output S0, S1, 
    CO0, CO1 );

  FA2 inst1( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .CI0(CI0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .CI1(CI1), .CO0(CO0), .CO1(CO1), .S0(S0), .S1(S1));
  defparam inst1.INIT0 = "0xc33c";
  defparam inst1.INIT1 = "0xc33c";
endmodule

module gnd ( output PWR0 );

  VLO INST1( .Z(PWR0));
endmodule

module mainTimer_SLICE_1 ( input D1, B1, D0, B0, CIN0, CIN1, output F0, F1, 
    COUT1, COUT0 );
  wire   GNDI;

  fa2 \mainTimer/add_7_add_5_15 ( .A0(GNDI), .B0(B0), .C0(GNDI), .D0(D0), 
    .A1(GNDI), .B1(B1), .C1(GNDI), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module mainTimer_SLICE_2 ( input D1, B1, D0, B0, CIN0, CIN1, output F0, F1, 
    COUT1, COUT0 );
  wire   GNDI;

  fa2 \mainTimer/add_7_add_5_13 ( .A0(GNDI), .B0(B0), .C0(GNDI), .D0(D0), 
    .A1(GNDI), .B1(B1), .C1(GNDI), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module mainTimer_SLICE_3 ( input D1, B1, D0, B0, CIN0, CIN1, output F0, F1, 
    COUT1, COUT0 );
  wire   GNDI;

  fa2 \mainTimer/add_7_add_5_11 ( .A0(GNDI), .B0(B0), .C0(GNDI), .D0(D0), 
    .A1(GNDI), .B1(B1), .C1(GNDI), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module mainTimer_SLICE_4 ( input D1, B1, D0, B0, CIN0, CIN1, output F0, F1, 
    COUT1, COUT0 );
  wire   GNDI;

  fa2 \mainTimer/add_7_add_5_9 ( .A0(GNDI), .B0(B0), .C0(GNDI), .D0(D0), 
    .A1(GNDI), .B1(B1), .C1(GNDI), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module mainTimer_SLICE_5 ( input D1, B1, D0, B0, CIN0, CIN1, output F0, F1, 
    COUT1, COUT0 );
  wire   GNDI;

  fa2 \mainTimer/add_7_add_5_7 ( .A0(GNDI), .B0(B0), .C0(GNDI), .D0(D0), 
    .A1(GNDI), .B1(B1), .C1(GNDI), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module mainTimer_SLICE_6 ( input D1, B1, D0, B0, CIN0, CIN1, output F0, F1, 
    COUT1, COUT0 );
  wire   GNDI;

  fa2 \mainTimer/add_7_add_5_5 ( .A0(GNDI), .B0(B0), .C0(GNDI), .D0(D0), 
    .A1(GNDI), .B1(B1), .C1(GNDI), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module mainTimer_SLICE_7 ( input D1, B1, D0, B0, CIN0, CIN1, output F0, F1, 
    COUT1, COUT0 );
  wire   GNDI;

  fa2 \mainTimer/add_7_add_5_3 ( .A0(GNDI), .B0(B0), .C0(GNDI), .D0(D0), 
    .A1(GNDI), .B1(B1), .C1(GNDI), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module mainTimer_SLICE_8 ( input D1, C1, B1, CIN1, output F1, COUT1, COUT0 );
  wire   GNDI, VCCI;

  fa2 \mainTimer/add_7_add_5_1 ( .A0(GNDI), .B0(GNDI), .C0(GNDI), .D0(VCCI), 
    .A1(GNDI), .B1(B1), .C1(C1), .D1(D1), .CI0(VCCI), .CI1(CIN1), .S0(), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module vcc ( output PWR1 );

  VHI INST1( .Z(PWR1));
endmodule

module mainTimer_SLICE_9 ( input D1, D0, B0, CIN0, CIN1, output F0, COUT0 );
  wire   GNDI;

  fa2 \mainTimer/add_7_add_5_19 ( .A0(GNDI), .B0(B0), .C0(GNDI), .D0(D0), 
    .A1(GNDI), .B1(GNDI), .C1(GNDI), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(), .CO0(COUT0), .CO1());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
  endspecify

endmodule

module STATE_OUT_SLICE_10 ( input D1, B1, D0, B0, CIN0, CIN1, output F0, F1, 
    COUT1, COUT0 );
  wire   GNDI;

  fa2 \STATE_OUT/add_7_add_5_13 ( .A0(GNDI), .B0(B0), .C0(GNDI), .D0(D0), 
    .A1(GNDI), .B1(B1), .C1(GNDI), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module STATE_OUT_SLICE_11 ( input D1, B1, D0, B0, CIN0, CIN1, output F0, F1, 
    COUT1, COUT0 );
  wire   GNDI;

  fa2 \STATE_OUT/add_7_add_5_11 ( .A0(GNDI), .B0(B0), .C0(GNDI), .D0(D0), 
    .A1(GNDI), .B1(B1), .C1(GNDI), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module STATE_OUT_SLICE_12 ( input D1, D0, B0, CIN0, CIN1, output F0, COUT0 );
  wire   GNDI;

  fa2 \STATE_OUT/add_7_add_5_33 ( .A0(GNDI), .B0(B0), .C0(GNDI), .D0(D0), 
    .A1(GNDI), .B1(GNDI), .C1(GNDI), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(), .CO0(COUT0), .CO1());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
  endspecify

endmodule

module STATE_OUT_SLICE_13 ( input D1, B1, D0, B0, CIN0, CIN1, output F0, F1, 
    COUT1, COUT0 );
  wire   GNDI;

  fa2 \STATE_OUT/add_7_add_5_9 ( .A0(GNDI), .B0(B0), .C0(GNDI), .D0(D0), 
    .A1(GNDI), .B1(B1), .C1(GNDI), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module STATE_OUT_SLICE_14 ( input D1, B1, D0, B0, CIN0, CIN1, output F0, F1, 
    COUT1, COUT0 );
  wire   GNDI;

  fa2 \STATE_OUT/add_7_add_5_31 ( .A0(GNDI), .B0(B0), .C0(GNDI), .D0(D0), 
    .A1(GNDI), .B1(B1), .C1(GNDI), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module STATE_OUT_SLICE_15 ( input D1, B1, D0, B0, CIN0, CIN1, output F0, F1, 
    COUT1, COUT0 );
  wire   GNDI;

  fa2 \STATE_OUT/add_7_add_5_29 ( .A0(GNDI), .B0(B0), .C0(GNDI), .D0(D0), 
    .A1(GNDI), .B1(B1), .C1(GNDI), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module STATE_OUT_SLICE_16 ( input D1, B1, D0, B0, CIN0, CIN1, output F0, F1, 
    COUT1, COUT0 );
  wire   GNDI;

  fa2 \STATE_OUT/add_7_add_5_7 ( .A0(GNDI), .B0(B0), .C0(GNDI), .D0(D0), 
    .A1(GNDI), .B1(B1), .C1(GNDI), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module STATE_OUT_SLICE_17 ( input D1, B1, D0, B0, CIN0, CIN1, output F0, F1, 
    COUT1, COUT0 );
  wire   GNDI;

  fa2 \STATE_OUT/add_7_add_5_5 ( .A0(GNDI), .B0(B0), .C0(GNDI), .D0(D0), 
    .A1(GNDI), .B1(B1), .C1(GNDI), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module STATE_OUT_SLICE_18 ( input D1, B1, D0, B0, CIN0, CIN1, output F0, F1, 
    COUT1, COUT0 );
  wire   GNDI;

  fa2 \STATE_OUT/add_7_add_5_27 ( .A0(GNDI), .B0(B0), .C0(GNDI), .D0(D0), 
    .A1(GNDI), .B1(B1), .C1(GNDI), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module STATE_OUT_SLICE_19 ( input DI0, D1, B1, D0, B0, CE, LSR, CLK, CIN0, 
    CIN1, output Q0, F0, F1, COUT1, COUT0 );
  wire   GNDI, DI0_dly, CLK_dly, CE_dly, LSR_dly;

  fa2 \STATE_OUT/add_7_add_5_3 ( .A0(GNDI), .B0(B0), .C0(GNDI), .D0(D0), 
    .A1(GNDI), .B1(B1), .C1(GNDI), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \STATE_OUT/j__i1 ( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module ffsre2 ( input D0, SP, CK, LSR, output Q );

  FD1P3XZ INST01( .D(D0), .SP(SP), .CK(CK), .SR(LSR), .Q(Q));
  defparam INST01.REGSET = "RESET";
  defparam INST01.SRMODE = "CE_OVER_LSR";
endmodule

module STATE_OUT_SLICE_20 ( input DI1, D1, C1, B1, CE, LSR, CLK, CIN1, output 
    Q1, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, CE_dly, LSR_dly;

  fa2 \STATE_OUT/add_7_add_5_1 ( .A0(GNDI), .B0(GNDI), .C0(GNDI), .D0(VCCI), 
    .A1(GNDI), .B1(B1), .C1(C1), .D1(D1), .CI0(VCCI), .CI1(CIN1), .S0(), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \STATE_OUT/j__i0 ( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module STATE_OUT_SLICE_21 ( input D1, B1, D0, B0, CIN0, CIN1, output F0, F1, 
    COUT1, COUT0 );
  wire   GNDI;

  fa2 \STATE_OUT/add_7_add_5_25 ( .A0(GNDI), .B0(B0), .C0(GNDI), .D0(D0), 
    .A1(GNDI), .B1(B1), .C1(GNDI), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module STATE_OUT_SLICE_22 ( input D1, B1, D0, B0, CIN0, CIN1, output F0, F1, 
    COUT1, COUT0 );
  wire   GNDI;

  fa2 \STATE_OUT/add_7_add_5_23 ( .A0(GNDI), .B0(B0), .C0(GNDI), .D0(D0), 
    .A1(GNDI), .B1(B1), .C1(GNDI), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module STATE_OUT_SLICE_23 ( input D1, B1, D0, B0, CIN0, CIN1, output F0, F1, 
    COUT1, COUT0 );
  wire   GNDI;

  fa2 \STATE_OUT/add_7_add_5_21 ( .A0(GNDI), .B0(B0), .C0(GNDI), .D0(D0), 
    .A1(GNDI), .B1(B1), .C1(GNDI), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module STATE_OUT_SLICE_24 ( input D1, B1, D0, B0, CIN0, CIN1, output F0, F1, 
    COUT1, COUT0 );
  wire   GNDI;

  fa2 \STATE_OUT/add_7_add_5_19 ( .A0(GNDI), .B0(B0), .C0(GNDI), .D0(D0), 
    .A1(GNDI), .B1(B1), .C1(GNDI), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module STATE_OUT_SLICE_25 ( input D1, B1, D0, B0, CIN0, CIN1, output F0, F1, 
    COUT1, COUT0 );
  wire   GNDI;

  fa2 \STATE_OUT/add_7_add_5_17 ( .A0(GNDI), .B0(B0), .C0(GNDI), .D0(D0), 
    .A1(GNDI), .B1(B1), .C1(GNDI), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module STATE_OUT_SLICE_26 ( input D1, B1, D0, B0, CIN0, CIN1, output F0, F1, 
    COUT1, COUT0 );
  wire   GNDI;

  fa2 \STATE_OUT/add_7_add_5_15 ( .A0(GNDI), .B0(B0), .C0(GNDI), .D0(D0), 
    .A1(GNDI), .B1(B1), .C1(GNDI), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module STATE_OUT_serial_SLICE_27 ( input D1, B1, D0, B0, CIN0, CIN1, output F0, 
    F1, COUT1, COUT0 );
  wire   GNDI;

  fa2 \STATE_OUT/serial/add_6_add_5_17 ( .A0(GNDI), .B0(B0), .C0(GNDI), 
    .D0(D0), .A1(GNDI), .B1(B1), .C1(GNDI), .D1(D1), .CI0(CIN0), .CI1(CIN1), 
    .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module STATE_OUT_serial_SLICE_28 ( input D1, B1, D0, B0, CIN0, CIN1, output F0, 
    F1, COUT1, COUT0 );
  wire   GNDI;

  fa2 \STATE_OUT/serial/add_6_add_5_7 ( .A0(GNDI), .B0(B0), .C0(GNDI), .D0(D0), 
    .A1(GNDI), .B1(B1), .C1(GNDI), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module STATE_OUT_serial_SLICE_29 ( input D1, B1, D0, B0, CIN0, CIN1, output F0, 
    F1, COUT1, COUT0 );
  wire   GNDI;

  fa2 \STATE_OUT/serial/add_6_add_5_11 ( .A0(GNDI), .B0(B0), .C0(GNDI), 
    .D0(D0), .A1(GNDI), .B1(B1), .C1(GNDI), .D1(D1), .CI0(CIN0), .CI1(CIN1), 
    .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module STATE_OUT_serial_SLICE_30 ( input D1, D0, B0, CIN0, CIN1, output F0, 
    COUT0 );
  wire   GNDI;

  fa2 \STATE_OUT/serial/add_6_add_5_33 ( .A0(GNDI), .B0(B0), .C0(GNDI), 
    .D0(D0), .A1(GNDI), .B1(GNDI), .C1(GNDI), .D1(D1), .CI0(CIN0), .CI1(CIN1), 
    .S0(F0), .S1(), .CO0(COUT0), .CO1());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
  endspecify

endmodule

module STATE_OUT_serial_SLICE_31 ( input D1, B1, D0, B0, CIN0, CIN1, output F0, 
    F1, COUT1, COUT0 );
  wire   GNDI;

  fa2 \STATE_OUT/serial/add_6_add_5_5 ( .A0(GNDI), .B0(B0), .C0(GNDI), .D0(D0), 
    .A1(GNDI), .B1(B1), .C1(GNDI), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module STATE_OUT_serial_SLICE_32 ( input D1, B1, D0, B0, CIN0, CIN1, output F0, 
    F1, COUT1, COUT0 );
  wire   GNDI;

  fa2 \STATE_OUT/serial/add_6_add_5_31 ( .A0(GNDI), .B0(B0), .C0(GNDI), 
    .D0(D0), .A1(GNDI), .B1(B1), .C1(GNDI), .D1(D1), .CI0(CIN0), .CI1(CIN1), 
    .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module STATE_OUT_serial_SLICE_33 ( input DI0, D1, B1, D0, B0, LSR, CLK, CIN0, 
    CIN1, output Q0, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI0_dly, CLK_dly, LSR_dly;

  fa2 \STATE_OUT/serial/add_6_add_5_3 ( .A0(GNDI), .B0(B0), .C0(GNDI), .D0(D0), 
    .A1(GNDI), .B1(B1), .C1(GNDI), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \STATE_OUT/serial/j__i1 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module STATE_OUT_serial_SLICE_34 ( input D1, B1, D0, B0, CIN0, CIN1, output F0, 
    F1, COUT1, COUT0 );
  wire   GNDI;

  fa2 \STATE_OUT/serial/add_6_add_5_29 ( .A0(GNDI), .B0(B0), .C0(GNDI), 
    .D0(D0), .A1(GNDI), .B1(B1), .C1(GNDI), .D1(D1), .CI0(CIN0), .CI1(CIN1), 
    .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module STATE_OUT_serial_SLICE_35 ( input D1, B1, D0, B0, CIN0, CIN1, output F0, 
    F1, COUT1, COUT0 );
  wire   GNDI;

  fa2 \STATE_OUT/serial/add_6_add_5_15 ( .A0(GNDI), .B0(B0), .C0(GNDI), 
    .D0(D0), .A1(GNDI), .B1(B1), .C1(GNDI), .D1(D1), .CI0(CIN0), .CI1(CIN1), 
    .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module STATE_OUT_serial_SLICE_36 ( input D1, B1, D0, B0, CIN0, CIN1, output F0, 
    F1, COUT1, COUT0 );
  wire   GNDI;

  fa2 \STATE_OUT/serial/add_6_add_5_27 ( .A0(GNDI), .B0(B0), .C0(GNDI), 
    .D0(D0), .A1(GNDI), .B1(B1), .C1(GNDI), .D1(D1), .CI0(CIN0), .CI1(CIN1), 
    .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module STATE_OUT_serial_SLICE_37 ( input D1, B1, D0, B0, CIN0, CIN1, output F0, 
    F1, COUT1, COUT0 );
  wire   GNDI;

  fa2 \STATE_OUT/serial/add_6_add_5_9 ( .A0(GNDI), .B0(B0), .C0(GNDI), .D0(D0), 
    .A1(GNDI), .B1(B1), .C1(GNDI), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module STATE_OUT_serial_SLICE_38 ( input D1, B1, D0, B0, CIN0, CIN1, output F0, 
    F1, COUT1, COUT0 );
  wire   GNDI;

  fa2 \STATE_OUT/serial/add_6_add_5_25 ( .A0(GNDI), .B0(B0), .C0(GNDI), 
    .D0(D0), .A1(GNDI), .B1(B1), .C1(GNDI), .D1(D1), .CI0(CIN0), .CI1(CIN1), 
    .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module STATE_OUT_serial_SLICE_39 ( input D1, B1, D0, B0, CIN0, CIN1, output F0, 
    F1, COUT1, COUT0 );
  wire   GNDI;

  fa2 \STATE_OUT/serial/add_6_add_5_13 ( .A0(GNDI), .B0(B0), .C0(GNDI), 
    .D0(D0), .A1(GNDI), .B1(B1), .C1(GNDI), .D1(D1), .CI0(CIN0), .CI1(CIN1), 
    .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module STATE_OUT_serial_SLICE_40 ( input D1, B1, D0, B0, CIN0, CIN1, output F0, 
    F1, COUT1, COUT0 );
  wire   GNDI;

  fa2 \STATE_OUT/serial/add_6_add_5_23 ( .A0(GNDI), .B0(B0), .C0(GNDI), 
    .D0(D0), .A1(GNDI), .B1(B1), .C1(GNDI), .D1(D1), .CI0(CIN0), .CI1(CIN1), 
    .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module STATE_OUT_serial_SLICE_41 ( input D1, B1, D0, B0, CIN0, CIN1, output F0, 
    F1, COUT1, COUT0 );
  wire   GNDI;

  fa2 \STATE_OUT/serial/add_6_add_5_21 ( .A0(GNDI), .B0(B0), .C0(GNDI), 
    .D0(D0), .A1(GNDI), .B1(B1), .C1(GNDI), .D1(D1), .CI0(CIN0), .CI1(CIN1), 
    .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module STATE_OUT_serial_SLICE_42 ( input DI1, D1, C1, B1, LSR, CLK, CIN1, 
    output Q1, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, LSR_dly;

  fa2 \STATE_OUT/serial/add_6_add_5_1 ( .A0(GNDI), .B0(GNDI), .C0(GNDI), 
    .D0(VCCI), .A1(GNDI), .B1(B1), .C1(C1), .D1(D1), .CI0(VCCI), .CI1(CIN1), 
    .S0(), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \STATE_OUT/serial/j__i0 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module STATE_OUT_serial_SLICE_43 ( input D1, B1, D0, B0, CIN0, CIN1, output F0, 
    F1, COUT1, COUT0 );
  wire   GNDI;

  fa2 \STATE_OUT/serial/add_6_add_5_19 ( .A0(GNDI), .B0(B0), .C0(GNDI), 
    .D0(D0), .A1(GNDI), .B1(B1), .C1(GNDI), .D1(D1), .CI0(CIN0), .CI1(CIN1), 
    .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_44 ( input DI1, DI0, D1, C1, A1, C0, B0, A0, LSR, CLK, output Q0, 
    Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  lut4 SLICE_44_K1( .A(A1), .B(GNDI), .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40001 SLICE_44_K0( .A(A0), .B(B0), .C(C0), .D(GNDI), .Z(F0));
  ffsre20002 Sreg_i0( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), 
    .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre20002 Sreg_i1( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), 
    .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module lut4 ( input A, B, C, D, output Z );

  LUT4 #("0x505F") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40001 ( input A, B, C, D, output Z );

  LUT4 #("0xE2E2") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module ffsre20002 ( input D0, SP, CK, LSR, output Q );

  FD1P3XZ INST01( .D(D0), .SP(SP), .CK(CK), .SR(LSR), .Q(Q));
  defparam INST01.REGSET = "RESET";
  defparam INST01.SRMODE = "ASYNC";
endmodule

module keyboard_SLICE_46 ( input DI1, DI0, D1, C1, B1, A1, C0, A0, CLK, 
    output Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  lut40003 \keyboard.SLICE_46_K1 ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40004 \keyboard.SLICE_46_K0 ( .A(A0), .B(GNDI), .C(C0), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \keyboard/state_i0 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \keyboard/state_i1 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module lut40003 ( input A, B, C, D, output Z );

  LUT4 #("0x5540") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40004 ( input A, B, C, D, output Z );

  LUT4 #("0xFAFA") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module keyboard_SLICE_47 ( input DI1, DI0, C1, B1, C0, CLK, output Q0, Q1, F0, 
    F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  lut40005 \keyboard/i1208_2_lut ( .A(GNDI), .B(B1), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40006 \keyboard/i184_1_lut ( .A(GNDI), .B(GNDI), .C(C0), .D(GNDI), .Z(F0));
  ffsre2 \keyboard/counter_156__i1 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \keyboard/counter_156__i0 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module lut40005 ( input A, B, C, D, output Z );

  LUT4 #("0x3C3C") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40006 ( input A, B, C, D, output Z );

  LUT4 #("0x0F0F") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module mainTimer_SLICE_51 ( input DI1, DI0, D1, C1, C0, B0, LSR, CLK, output 
    Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  lut40007 \mainTimer/i884_2_lut ( .A(GNDI), .B(GNDI), .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40008 \mainTimer/i882_2_lut ( .A(GNDI), .B(B0), .C(C0), .D(GNDI), .Z(F0));
  ffsre20002 \mainTimer/clkCont_i16 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre20002 \mainTimer/clkCont_i17 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module lut40007 ( input A, B, C, D, output Z );

  LUT4 #("0x0F00") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40008 ( input A, B, C, D, output Z );

  LUT4 #("0x3030") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module mainTimer_SLICE_53 ( input DI1, DI0, C1, A1, D0, B0, LSR, CLK, output 
    Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  lut40009 \mainTimer/i886_2_lut ( .A(A1), .B(GNDI), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40010 \mainTimer/i885_2_lut ( .A(GNDI), .B(B0), .C(GNDI), .D(D0), .Z(F0));
  ffsre20002 \mainTimer/clkCont_i14 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre20002 \mainTimer/clkCont_i15 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module lut40009 ( input A, B, C, D, output Z );

  LUT4 #("0x5050") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40010 ( input A, B, C, D, output Z );

  LUT4 #("0x3300") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module mainTimer_SLICE_55 ( input DI1, DI0, D1, C1, C0, A0, LSR, CLK, output 
    Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  lut40011 \mainTimer/i888_2_lut ( .A(GNDI), .B(GNDI), .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40012 \mainTimer/i887_2_lut ( .A(A0), .B(GNDI), .C(C0), .D(GNDI), .Z(F0));
  ffsre20002 \mainTimer/clkCont_i12 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre20002 \mainTimer/clkCont_i13 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module lut40011 ( input A, B, C, D, output Z );

  LUT4 #("0x00F0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40012 ( input A, B, C, D, output Z );

  LUT4 #("0x5050") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module mainTimer_SLICE_57 ( input DI1, DI0, D1, C1, B0, A0, LSR, CLK, output 
    Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  lut40007 \mainTimer/i890_2_lut ( .A(GNDI), .B(GNDI), .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40013 \mainTimer/i889_2_lut ( .A(A0), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));
  ffsre20002 \mainTimer/clkCont_i10 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre20002 \mainTimer/clkCont_i11 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module lut40013 ( input A, B, C, D, output Z );

  LUT4 #("0x2222") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module mainTimer_SLICE_59 ( input DI1, DI0, D1, C1, D0, C0, LSR, CLK, output 
    Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  lut40011 \mainTimer/i892_2_lut ( .A(GNDI), .B(GNDI), .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40014 \mainTimer/i891_2_lut ( .A(GNDI), .B(GNDI), .C(C0), .D(D0), .Z(F0));
  ffsre20002 \mainTimer/clkCont_i8 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre20002 \mainTimer/clkCont_i9 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module lut40014 ( input A, B, C, D, output Z );

  LUT4 #("0x0F00") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module mainTimer_SLICE_61 ( input DI1, DI0, D1, B1, D0, C0, LSR, CLK, output 
    Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  lut40015 \mainTimer/i881_2_lut ( .A(GNDI), .B(B1), .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40014 \mainTimer/i880_2_lut ( .A(GNDI), .B(GNDI), .C(C0), .D(D0), .Z(F0));
  ffsre20002 \mainTimer/clkCont_i6 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre20002 \mainTimer/clkCont_i7 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module lut40015 ( input A, B, C, D, output Z );

  LUT4 #("0x00CC") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module mainTimer_SLICE_63 ( input DI1, DI0, D1, B1, C0, A0, LSR, CLK, output 
    Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  lut40016 \mainTimer/i871_2_lut ( .A(GNDI), .B(B1), .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40012 \mainTimer/i894_2_lut ( .A(A0), .B(GNDI), .C(C0), .D(GNDI), .Z(F0));
  ffsre20002 \mainTimer/clkCont_i4 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre20002 \mainTimer/clkCont_i5 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module lut40016 ( input A, B, C, D, output Z );

  LUT4 #("0x3300") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module mainTimer_SLICE_65 ( input DI1, DI0, D1, B1, C0, A0, LSR, CLK, output 
    Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  lut40016 \mainTimer/i876_2_lut ( .A(GNDI), .B(B1), .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40012 \mainTimer/i875_2_lut ( .A(A0), .B(GNDI), .C(C0), .D(GNDI), .Z(F0));
  ffsre20002 \mainTimer/clkCont_i2 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre20002 \mainTimer/clkCont_i3 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module mainTimer_SLICE_67 ( input DI1, DI0, D1, A1, D0, A0, LSR, CLK, output 
    Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  lut40017 \mainTimer/i869_2_lut ( .A(A1), .B(GNDI), .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40018 \mainTimer/i877_2_lut ( .A(A0), .B(GNDI), .C(GNDI), .D(D0), .Z(F0));
  ffsre20002 \mainTimer/clkCont_i0 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre20002 \mainTimer/clkCont_i1 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module lut40017 ( input A, B, C, D, output Z );

  LUT4 #("0x00AA") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40018 ( input A, B, C, D, output Z );

  LUT4 #("0x5500") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_69 ( input DI1, DI0, D1, C1, B1, A1, D0, C0, B0, A0, CLK, output 
    Q0, Q1, F0, F1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  lut40019 i385_4_lut_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40020 i387_4_lut_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  ffsre2 \STATE_OUT/j__i5 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \STATE_OUT/j__i4 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module lut40019 ( input A, B, C, D, output Z );

  LUT4 #("0xCE02") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40020 ( input A, B, C, D, output Z );

  LUT4 #("0xA0E4") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_70 ( input DI1, DI0, D1, C1, B1, A1, D0, C0, B0, A0, CLK, output 
    Q0, Q1, F0, F1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  lut40021 i381_4_lut_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40022 i383_4_lut_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  ffsre2 \STATE_OUT/j__i7 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \STATE_OUT/j__i6 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module lut40021 ( input A, B, C, D, output Z );

  LUT4 #("0xF044") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40022 ( input A, B, C, D, output Z );

  LUT4 #("0xC0E2") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_73 ( input DI1, DI0, D1, C1, B1, A1, D0, C0, B0, A0, CLK, output 
    Q0, Q1, F0, F1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  lut40023 i391_4_lut_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40024 i389_4_lut_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  ffsre2 \STATE_OUT/j__i2 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \STATE_OUT/j__i3 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module lut40023 ( input A, B, C, D, output Z );

  LUT4 #("0xAA0C") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40024 ( input A, B, C, D, output Z );

  LUT4 #("0x88B8") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_75 ( input DI1, DI0, D1, C1, B1, A1, D0, C0, B0, A0, CLK, output 
    Q0, Q1, F0, F1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  lut40025 i426_4_lut_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40026 i393_4_lut_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  ffsre2 \STATE_OUT/j__i11 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \STATE_OUT/j__i10 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module lut40025 ( input A, B, C, D, output Z );

  LUT4 #("0xA0E4") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40026 ( input A, B, C, D, output Z );

  LUT4 #("0xD1C0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module STATE_OUT_SLICE_76 ( input DI1, DI0, D1, B1, C0, LSR, CLK, output Q0, 
    Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  lut40027 \STATE_OUT/i1223_2_lut ( .A(GNDI), .B(B1), .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40006 \STATE_OUT/i1221_1_lut ( .A(GNDI), .B(GNDI), .C(C0), .D(GNDI), 
    .Z(F0));
  ffsre2 \STATE_OUT/cont_155__i1 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \STATE_OUT/cont_155__i0 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module lut40027 ( input A, B, C, D, output Z );

  LUT4 #("0x33CC") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_78 ( input DI1, DI0, D1, C1, B1, A1, D0, C0, B0, A0, CLK, output 
    Q0, Q1, F0, F1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  lut40028 i430_4_lut_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40026 i428_4_lut_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  ffsre2 \STATE_OUT/j__i13 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \STATE_OUT/j__i12 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module lut40028 ( input A, B, C, D, output Z );

  LUT4 #("0xB1A0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_80 ( input DI1, DI0, D1, C1, B1, A1, D0, C0, B0, A0, CLK, output 
    Q0, Q1, F0, F1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  lut40029 i434_4_lut_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40030 i432_4_lut_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  ffsre2 \STATE_OUT/j__i15 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \STATE_OUT/j__i14 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module lut40029 ( input A, B, C, D, output Z );

  LUT4 #("0xCC0A") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40030 ( input A, B, C, D, output Z );

  LUT4 #("0xA0AC") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_82 ( input DI1, DI0, D1, C1, B1, A1, D0, C0, B0, A0, CLK, output 
    Q0, Q1, F0, F1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  lut40031 i438_4_lut_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40032 i436_4_lut_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  ffsre2 \STATE_OUT/j__i17 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \STATE_OUT/j__i16 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module lut40031 ( input A, B, C, D, output Z );

  LUT4 #("0xAA30") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40032 ( input A, B, C, D, output Z );

  LUT4 #("0xDC10") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_84 ( input DI1, DI0, D1, C1, B1, A1, D0, C0, B0, A0, CLK, output 
    Q0, Q1, F0, F1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  lut40028 i442_4_lut_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40033 i440_4_lut_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  ffsre2 \STATE_OUT/j__i19 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \STATE_OUT/j__i18 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module lut40033 ( input A, B, C, D, output Z );

  LUT4 #("0x8B88") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_86 ( input DI1, DI0, D1, C1, B1, A1, D0, C0, B0, A0, CLK, output 
    Q0, Q1, F0, F1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  lut40034 i464_4_lut_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40035 i466_4_lut_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  ffsre2 \STATE_OUT/j__i30 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \STATE_OUT/j__i31 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module lut40034 ( input A, B, C, D, output Z );

  LUT4 #("0xF022") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40035 ( input A, B, C, D, output Z );

  LUT4 #("0xAE04") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_88 ( input DI1, DI0, D1, C1, B1, A1, D0, C0, B0, A0, CLK, output 
    Q0, Q1, F0, F1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  lut40036 i460_4_lut_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40024 i462_4_lut_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  ffsre2 \STATE_OUT/j__i28 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \STATE_OUT/j__i29 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module lut40036 ( input A, B, C, D, output Z );

  LUT4 #("0x8B88") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_90 ( input DI1, DI0, D1, C1, B1, A1, D0, C0, B0, A0, CLK, output 
    Q0, Q1, F0, F1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  lut40037 i456_4_lut_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40038 i458_4_lut_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  ffsre2 \STATE_OUT/j__i26 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \STATE_OUT/j__i27 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module lut40037 ( input A, B, C, D, output Z );

  LUT4 #("0x88B8") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40038 ( input A, B, C, D, output Z );

  LUT4 #("0xCE02") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_92 ( input DI1, DI0, D1, C1, B1, A1, D0, C0, B0, A0, CLK, output 
    Q0, Q1, F0, F1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  lut40019 i452_4_lut_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40030 i454_4_lut_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  ffsre2 \STATE_OUT/j__i24 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \STATE_OUT/j__i25 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module SLICE_94 ( input DI1, DI0, D1, C1, B1, A1, D0, C0, B0, A0, CLK, output 
    Q0, Q1, F0, F1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  lut40025 i448_4_lut_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40039 i450_4_lut_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  ffsre2 \STATE_OUT/j__i22 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \STATE_OUT/j__i23 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module lut40039 ( input A, B, C, D, output Z );

  LUT4 #("0xF044") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_96 ( input DI1, DI0, D1, C1, B1, A1, D0, C0, B0, A0, CLK, output 
    Q0, Q1, F0, F1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  lut40040 i444_4_lut_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40041 i446_4_lut_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  ffsre2 \STATE_OUT/j__i20 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \STATE_OUT/j__i21 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module lut40040 ( input A, B, C, D, output Z );

  LUT4 #("0xBA10") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40041 ( input A, B, C, D, output Z );

  LUT4 #("0xCC0A") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_98 ( input DI1, DI0, D1, C1, B1, A1, D0, C0, B0, A0, CLK, output 
    Q0, Q1, F0, F1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  lut40034 i379_4_lut_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40026 i377_4_lut_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  ffsre2 \STATE_OUT/j__i8 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \STATE_OUT/j__i9 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module STATE_OUT_SLICE_100 ( input DI1, DI0, D1, C1, B1, A1, D0, B0, A0, LSR, 
    CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  lut40042 \STATE_OUT/i1237_3_lut_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40043 \STATE_OUT/i1230_2_lut_3_lut ( .A(A0), .B(B0), .C(GNDI), .D(D0), 
    .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \STATE_OUT/cont_155__i3 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \STATE_OUT/cont_155__i2 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module lut40042 ( input A, B, C, D, output Z );

  LUT4 #("0x7F80") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40043 ( input A, B, C, D, output Z );

  LUT4 #("0x7788") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_105 ( input DI1, DI0, D1, A1, C0, B0, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  lut40044 i405_2_lut( .A(A1), .B(GNDI), .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40045 i406_2_lut( .A(GNDI), .B(B0), .C(C0), .D(GNDI), .Z(F0));
  ffsre2 \STATE_OUT/serial/j__i21 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \STATE_OUT/serial/j__i20 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module lut40044 ( input A, B, C, D, output Z );

  LUT4 #("0x5500") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40045 ( input A, B, C, D, output Z );

  LUT4 #("0x3030") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_107 ( input DI1, DI0, B1, A0, CE, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut40046 SLICE_107_K1( .A(GNDI), .B(B1), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40047 SLICE_107_K0( .A(A0), .B(GNDI), .C(GNDI), .D(GNDI), .Z(F0));
  ffsre2 \STATE_OUT/serial/temp_data_out_i0_i1 ( .D0(DI1_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  ffsre2 \STATE_OUT/serial/temp_data_out_i0_i0 ( .D0(DI0_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module lut40046 ( input A, B, C, D, output Z );

  LUT4 #("0xCCCC") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40047 ( input A, B, C, D, output Z );

  LUT4 #("0xAAAA") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_109 ( input DI1, DI0, B1, A1, D0, B0, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  lut40048 i423_2_lut( .A(A1), .B(B1), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40049 i424_2_lut( .A(GNDI), .B(B0), .C(GNDI), .D(D0), .Z(F0));
  ffsre2 \STATE_OUT/serial/j__i3 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \STATE_OUT/serial/j__i2 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module lut40048 ( input A, B, C, D, output Z );

  LUT4 #("0x4444") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40049 ( input A, B, C, D, output Z );

  LUT4 #("0x00CC") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_111 ( input DI1, DI0, C1, A1, D0, B0, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  lut40050 i421_2_lut( .A(A1), .B(GNDI), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40051 i422_2_lut( .A(GNDI), .B(B0), .C(GNDI), .D(D0), .Z(F0));
  ffsre2 \STATE_OUT/serial/j__i5 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \STATE_OUT/serial/j__i4 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module lut40050 ( input A, B, C, D, output Z );

  LUT4 #("0x0A0A") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40051 ( input A, B, C, D, output Z );

  LUT4 #("0x3300") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_113 ( input DI1, DI0, D1, C1, D0, B0, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  lut40052 i419_2_lut( .A(GNDI), .B(GNDI), .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40051 i420_2_lut( .A(GNDI), .B(B0), .C(GNDI), .D(D0), .Z(F0));
  ffsre2 \STATE_OUT/serial/j__i7 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \STATE_OUT/serial/j__i6 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module lut40052 ( input A, B, C, D, output Z );

  LUT4 #("0x0F00") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_115 ( input DI1, DI0, C1, A1, D0, B0, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  lut40053 i417_2_lut( .A(A1), .B(GNDI), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40049 i418_2_lut( .A(GNDI), .B(B0), .C(GNDI), .D(D0), .Z(F0));
  ffsre2 \STATE_OUT/serial/j__i9 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \STATE_OUT/serial/j__i8 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module lut40053 ( input A, B, C, D, output Z );

  LUT4 #("0x5050") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_117 ( input DI1, DI0, D1, C1, B0, A0, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  lut40052 i415_2_lut( .A(GNDI), .B(GNDI), .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40054 i416_2_lut( .A(A0), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));
  ffsre2 \STATE_OUT/serial/j__i11 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \STATE_OUT/serial/j__i10 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module lut40054 ( input A, B, C, D, output Z );

  LUT4 #("0x2222") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_119 ( input DI1, DI0, C1, A1, D0, A0, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  lut40050 i413_2_lut( .A(A1), .B(GNDI), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40055 i414_2_lut( .A(A0), .B(GNDI), .C(GNDI), .D(D0), .Z(F0));
  ffsre2 \STATE_OUT/serial/j__i13 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \STATE_OUT/serial/j__i12 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module lut40055 ( input A, B, C, D, output Z );

  LUT4 #("0x00AA") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_122 ( input DI1, DI0, D1, C1, C0, A0, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  lut40056 i403_2_lut( .A(GNDI), .B(GNDI), .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40057 i404_2_lut( .A(A0), .B(GNDI), .C(C0), .D(GNDI), .Z(F0));
  ffsre2 \STATE_OUT/serial/j__i23 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \STATE_OUT/serial/j__i22 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module lut40056 ( input A, B, C, D, output Z );

  LUT4 #("0x00F0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40057 ( input A, B, C, D, output Z );

  LUT4 #("0x5050") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_124 ( input DI1, DI0, D1, A1, B0, A0, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  lut40058 i401_2_lut( .A(A1), .B(GNDI), .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40059 i402_2_lut( .A(A0), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));
  ffsre2 \STATE_OUT/serial/j__i25 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \STATE_OUT/serial/j__i24 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module lut40058 ( input A, B, C, D, output Z );

  LUT4 #("0x00AA") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40059 ( input A, B, C, D, output Z );

  LUT4 #("0x4444") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_126 ( input DI1, DI0, C1, B1, D0, C0, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  lut40060 i399_2_lut( .A(GNDI), .B(B1), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40061 i400_2_lut( .A(GNDI), .B(GNDI), .C(C0), .D(D0), .Z(F0));
  ffsre2 \STATE_OUT/serial/j__i27 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \STATE_OUT/serial/j__i26 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module lut40060 ( input A, B, C, D, output Z );

  LUT4 #("0x0C0C") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40061 ( input A, B, C, D, output Z );

  LUT4 #("0x00F0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_128 ( input DI1, DI0, D1, C1, D0, A0, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  lut40052 i397_2_lut( .A(GNDI), .B(GNDI), .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40055 i398_2_lut( .A(A0), .B(GNDI), .C(GNDI), .D(D0), .Z(F0));
  ffsre2 \STATE_OUT/serial/j__i29 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \STATE_OUT/serial/j__i28 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module SLICE_130 ( input DI1, DI0, D1, B1, D0, B0, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  lut40062 i395_2_lut( .A(GNDI), .B(B1), .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40051 i396_2_lut( .A(GNDI), .B(B0), .C(GNDI), .D(D0), .Z(F0));
  ffsre2 \STATE_OUT/serial/j__i31 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \STATE_OUT/serial/j__i30 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module lut40062 ( input A, B, C, D, output Z );

  LUT4 #("0xCC00") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_132 ( input DI1, DI0, C1, A1, D0, B0, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  lut40050 i411_2_lut( .A(A1), .B(GNDI), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40051 i412_2_lut( .A(GNDI), .B(B0), .C(GNDI), .D(D0), .Z(F0));
  ffsre2 \STATE_OUT/serial/j__i15 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \STATE_OUT/serial/j__i14 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module SLICE_134 ( input DI1, DI0, D1, B1, B0, A0, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  lut40063 i409_2_lut( .A(GNDI), .B(B1), .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40059 i410_2_lut( .A(A0), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));
  ffsre2 \STATE_OUT/serial/j__i17 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \STATE_OUT/serial/j__i16 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module lut40063 ( input A, B, C, D, output Z );

  LUT4 #("0x3300") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_136 ( input DI1, DI0, D1, C1, D0, A0, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  lut40052 i407_2_lut( .A(GNDI), .B(GNDI), .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40055 i408_2_lut( .A(A0), .B(GNDI), .C(GNDI), .D(D0), .Z(F0));
  ffsre2 \STATE_OUT/serial/j__i19 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \STATE_OUT/serial/j__i18 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module SLICE_138 ( input DI0, A0, CE, LSR, CLK, output Q0, F0 );
  wire   GNDI, DI0_dly, CLK_dly, CE_dly, LSR_dly;

  lut40047 SLICE_138_K0( .A(A0), .B(GNDI), .C(GNDI), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre20064 \STATE_OUT/serial/temp_data_out_i0_i3 ( .D0(DI0_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module ffsre20064 ( input D0, SP, CK, LSR, output Q );

  FD1P3XZ INST01( .D(D0), .SP(SP), .CK(CK), .SR(LSR), .Q(Q));
  defparam INST01.REGSET = "SET";
  defparam INST01.SRMODE = "CE_OVER_LSR";
endmodule

module SLICE_140 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40065 i1935_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40066 i2_3_lut_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40065 ( input A, B, C, D, output Z );

  LUT4 #("0x2300") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40066 ( input A, B, C, D, output Z );

  LUT4 #("0x0B0A") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_141 ( input D1, C1, B1, A1, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40067 i924_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40001 i29_3_lut( .A(A0), .B(B0), .C(C0), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40067 ( input A, B, C, D, output Z );

  LUT4 #("0xFCB0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module keyboard_SLICE_142 ( input D1, C1, B1, A1, C0, A0, output F0, F1 );
  wire   GNDI;

  lut40068 \keyboard/i12_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40004 \keyboard/i1_2_lut ( .A(A0), .B(GNDI), .C(C0), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40068 ( input A, B, C, D, output Z );

  LUT4 #("0xEE70") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_144 ( input D1, C1, A1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40069 i1_3_lut( .A(A1), .B(GNDI), .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40070 i4_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40069 ( input A, B, C, D, output Z );

  LUT4 #("0xFAF0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40070 ( input A, B, C, D, output Z );

  LUT4 #("0x0040") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_145 ( input D1, C1, B1, A1, D0, C0, output F0, F1 );
  wire   GNDI;

  lut40071 i41_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40072 i1946_2_lut( .A(GNDI), .B(GNDI), .C(C0), .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40071 ( input A, B, C, D, output Z );

  LUT4 #("0x11FA") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40072 ( input A, B, C, D, output Z );

  LUT4 #("0xFFF0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_146 ( input D1, C1, B1, A1, D0, C0, A0, output F0, F1 );
  wire   GNDI;

  lut40073 i1940_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40074 KEY_STATUS_1__I_0_i3_2_lut_3_lut( .A(A0), .B(GNDI), .C(C0), .D(D0), 
    .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40073 ( input A, B, C, D, output Z );

  LUT4 #("0xAA8A") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40074 ( input A, B, C, D, output Z );

  LUT4 #("0xAFFF") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module keyboard_SLICE_147 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, 
    F1 );

  lut40075 i1_2_lut_3_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40076 \keyboard/i1_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40075 ( input A, B, C, D, output Z );

  LUT4 #("0x4454") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40076 ( input A, B, C, D, output Z );

  LUT4 #("0xFFFB") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module keyboard_SLICE_148 ( input D1, C1, A1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40077 \keyboard/i503_3_lut ( .A(A1), .B(GNDI), .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40078 \keyboard/i2_3_lut_4_lut_adj_42 ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40077 ( input A, B, C, D, output Z );

  LUT4 #("0xFA0A") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40078 ( input A, B, C, D, output Z );

  LUT4 #("0xFFFB") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module keyboard_SLICE_149 ( input C1, B1, A1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40079 \keyboard/i3_3_lut ( .A(A1), .B(B1), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40080 \keyboard/i1790_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40079 ( input A, B, C, D, output Z );

  LUT4 #("0xEFEF") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40080 ( input A, B, C, D, output Z );

  LUT4 #("0x8000") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module keyboard_SLICE_150 ( input D0, C0, A0, output F0 );
  wire   GNDI;

  lut40081 \keyboard/i517_3_lut ( .A(A0), .B(GNDI), .C(C0), .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40081 ( input A, B, C, D, output Z );

  LUT4 #("0xF0AA") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_154 ( input D1, C1, B1, A1, D0, B0, output F0, F1 );
  wire   GNDI;

  lut40082 i2_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40083 i893_2_lut( .A(GNDI), .B(B0), .C(GNDI), .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40082 ( input A, B, C, D, output Z );

  LUT4 #("0xFEFC") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40083 ( input A, B, C, D, output Z );

  LUT4 #("0xFFCC") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_156 ( input C1, B1, A1, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40084 i1_2_lut_3_lut_adj_43( .A(A1), .B(B1), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40085 i39_3_lut( .A(A0), .B(B0), .C(C0), .D(GNDI), .Z(F0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40084 ( input A, B, C, D, output Z );

  LUT4 #("0xD0D0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40085 ( input A, B, C, D, output Z );

  LUT4 #("0x1D1D") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_158 ( input C1, B1, A1, D0, C0, B0, output F0, F1 );
  wire   GNDI;

  lut40086 i2_3_lut( .A(A1), .B(B1), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40087 i1_2_lut_3_lut_adj_44( .A(GNDI), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40086 ( input A, B, C, D, output Z );

  LUT4 #("0xBFBF") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40087 ( input A, B, C, D, output Z );

  LUT4 #("0xCFCC") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_160 ( input D1, C1, B1, A1, D0, B0, output F0, F1 );
  wire   GNDI;

  lut40088 i40_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40089 i923_2_lut( .A(GNDI), .B(B0), .C(GNDI), .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40088 ( input A, B, C, D, output Z );

  LUT4 #("0x444E") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40089 ( input A, B, C, D, output Z );

  LUT4 #("0x00CC") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_162 ( input C1, B1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40090 i1_2_lut_2_lut( .A(GNDI), .B(B1), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40091 i1944_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40090 ( input A, B, C, D, output Z );

  LUT4 #("0x3030") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40091 ( input A, B, C, D, output Z );

  LUT4 #("0xFBFA") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_163 ( input C1, B1, A1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40092 i936_3_lut( .A(A1), .B(B1), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40093 Sreg_1__I_0_3_Mux_1_i3_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40092 ( input A, B, C, D, output Z );

  LUT4 #("0xE2E2") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40093 ( input A, B, C, D, output Z );

  LUT4 #("0xEA40") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module keyboard_SLICE_164 ( input C1, B1, A1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40094 \keyboard/i497_3_lut ( .A(A1), .B(B1), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40095 \keyboard/i2_3_lut_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40094 ( input A, B, C, D, output Z );

  LUT4 #("0xACAC") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40095 ( input A, B, C, D, output Z );

  LUT4 #("0xFFFD") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module keyboard_SLICE_166 ( input C1, B1, A1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40096 \keyboard/i501_3_lut ( .A(A1), .B(B1), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40097 \keyboard/i2_3_lut_4_lut_adj_41 ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40096 ( input A, B, C, D, output Z );

  LUT4 #("0xE4E4") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40097 ( input A, B, C, D, output Z );

  LUT4 #("0xFFFB") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module keyboard_SLICE_169 ( input C1, B1, A1, D0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40098 \keyboard/i513_3_lut ( .A(A1), .B(B1), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40099 \keyboard/i519_3_lut ( .A(A0), .B(B0), .C(GNDI), .D(D0), .Z(F0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40098 ( input A, B, C, D, output Z );

  LUT4 #("0xE2E2") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40099 ( input A, B, C, D, output Z );

  LUT4 #("0xBB88") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module keyboard_SLICE_170 ( input C1, B1, A1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40094 \keyboard/i515_3_lut ( .A(A1), .B(B1), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40100 \keyboard/i927_2_lut_3_lut_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40100 ( input A, B, C, D, output Z );

  LUT4 #("0xFFFE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module keyboard_SLICE_172 ( input D1, C1, B1, A1, C0, A0, output F0, F1 );
  wire   GNDI;

  lut40101 \keyboard/i505_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40004 \keyboard/i941_2_lut ( .A(A0), .B(GNDI), .C(C0), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40101 ( input A, B, C, D, output Z );

  LUT4 #("0x0F08") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module keyboard_SLICE_174 ( input D1, C1, B1, A1, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40102 i3_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40103 \keyboard/i901_2_lut ( .A(A0), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40102 ( input A, B, C, D, output Z );

  LUT4 #("0xFFBF") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40103 ( input A, B, C, D, output Z );

  LUT4 #("0xBBBB") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module mainTimer_SLICE_176 ( input D1, C1, A1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40104 \mainTimer/i6_3_lut ( .A(A1), .B(GNDI), .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40105 \mainTimer/i1788_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40104 ( input A, B, C, D, output Z );

  LUT4 #("0xFFAF") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40105 ( input A, B, C, D, output Z );

  LUT4 #("0x8000") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module mainTimer_SLICE_178 ( input DI1, D1, C1, B1, A1, D0, C0, B0, A0, LSR, 
    CLK, output Q1, F0, F1 );
  wire   VCCI, DI1_dly, CLK_dly, LSR_dly;

  lut40106 \mainTimer/i5_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40100 \mainTimer/i7_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  ffsre20002 \mainTimer/state ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module lut40106 ( input A, B, C, D, output Z );

  LUT4 #("0x8000") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module mainTimer_SLICE_179 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, 
    F1 );

  lut40107 \mainTimer/i1_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40108 \mainTimer/i8_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40107 ( input A, B, C, D, output Z );

  LUT4 #("0x0100") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40108 ( input A, B, C, D, output Z );

  LUT4 #("0xFFFE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module STATE_OUT_SLICE_180 ( input C0, B0, output F0 );
  wire   GNDI;

  lut40109 \STATE_OUT/i3_2_lut ( .A(GNDI), .B(B0), .C(C0), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40109 ( input A, B, C, D, output Z );

  LUT4 #("0xFCFC") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module STATE_OUT_SLICE_181 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, 
    F1 );

  lut40110 \STATE_OUT/i23_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40111 \STATE_OUT/i17_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40110 ( input A, B, C, D, output Z );

  LUT4 #("0xFFFE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40111 ( input A, B, C, D, output Z );

  LUT4 #("0xFFFE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module STATE_OUT_SLICE_182 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, 
    F1 );

  lut40112 \STATE_OUT/i27_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40113 \STATE_OUT/i21_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40112 ( input A, B, C, D, output Z );

  LUT4 #("0xFFFE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40113 ( input A, B, C, D, output Z );

  LUT4 #("0xFFFE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module STATE_OUT_SLICE_184 ( input D1, C1, B1, A1, D0, C0, output F0, F1 );
  wire   GNDI;

  lut40114 \STATE_OUT/i22_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40115 \STATE_OUT/i1_2_lut ( .A(GNDI), .B(GNDI), .C(C0), .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40114 ( input A, B, C, D, output Z );

  LUT4 #("0xFFFE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40115 ( input A, B, C, D, output Z );

  LUT4 #("0xFFF0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module STATE_OUT_SLICE_186 ( input C1, A1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40053 \STATE_OUT/i159_2_lut ( .A(A1), .B(GNDI), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40116 \STATE_OUT/i896_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40116 ( input A, B, C, D, output Z );

  LUT4 #("0x00FE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module STATE_OUT_serial_SLICE_188 ( input D1, C1, B1, A1, D0, C0, B0, A0, 
    output F0, F1 );

  lut40117 \STATE_OUT/serial/i27_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40118 \STATE_OUT/serial/i21_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40117 ( input A, B, C, D, output Z );

  LUT4 #("0xFFFE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40118 ( input A, B, C, D, output Z );

  LUT4 #("0xFFFE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module STATE_OUT_serial_SLICE_190 ( input D0, C0, output F0 );
  wire   GNDI;

  lut40115 \STATE_OUT/serial/i3_2_lut ( .A(GNDI), .B(GNDI), .C(C0), .D(D0), 
    .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module STATE_OUT_serial_SLICE_191 ( input D1, C1, B1, A1, D0, C0, B0, A0, 
    output F0, F1 );

  lut40110 \STATE_OUT/serial/i23_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40119 \STATE_OUT/serial/i17_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40119 ( input A, B, C, D, output Z );

  LUT4 #("0xFFFE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module STATE_OUT_serial_SLICE_192 ( input D1, C1, B1, A1, D0, B0, A0, output 
    F0, F1 );
  wire   GNDI;

  lut40120 \STATE_OUT/serial/i26_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40121 \STATE_OUT/serial/i15_3_lut ( .A(A0), .B(B0), .C(GNDI), .D(D0), 
    .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40120 ( input A, B, C, D, output Z );

  LUT4 #("0xFFFE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40121 ( input A, B, C, D, output Z );

  LUT4 #("0xFFEE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_196 ( input C0, B0, A0, output F0 );
  wire   GNDI;

  lut40122 i1_3_lut_adj_45( .A(A0), .B(B0), .C(C0), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40122 ( input A, B, C, D, output Z );

  LUT4 #("0xECEC") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module STATE_OUT_serial_SLICE_198 ( input DI1, D1, C1, B1, A1, D0, C0, B0, A0, 
    LSR, CLK, output Q1, F0, F1 );
  wire   VCCI, DI1_dly, CLK_dly, LSR_dly;

  lut40123 \STATE_OUT/serial/n2827_bdd_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40124 \STATE_OUT/serial/j[0]_bdd_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));
  ffsre2 \STATE_OUT/serial/status_out ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module lut40123 ( input A, B, C, D, output Z );

  LUT4 #("0xF0CA") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40124 ( input A, B, C, D, output Z );

  LUT4 #("0xDA8A") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module STATE_OUT_SLICE_200 ( input D0, C0, B0, A0, output F0 );

  lut40125 \STATE_OUT/i1934_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40125 ( input A, B, C, D, output Z );

  LUT4 #("0xFFEF") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module STATE_OUT_SLICE_201 ( input DI1, C1, B1, A1, A0, CLK, output Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly;

  lut40126 \STATE_OUT/i12_3_lut ( .A(A1), .B(B1), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40127 \STATE_OUT/waiting_I_35_1_lut ( .A(A0), .B(GNDI), .C(GNDI), 
    .D(GNDI), .Z(F0));
  ffsre2 \STATE_OUT/waiting_c ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
  endspecify

endmodule

module lut40126 ( input A, B, C, D, output Z );

  LUT4 #("0xB8B8") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40127 ( input A, B, C, D, output Z );

  LUT4 #("0x5555") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module mainTimer_SLICE_204 ( input C0, B0, A0, output F0 );
  wire   GNDI;

  lut40128 \mainTimer.EN_I_0_1_lut ( .A(A0), .B(B0), .C(C0), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40128 ( input A, B, C, D, output Z );

  LUT4 #("0x4747") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module STATE_OUT_serial_SLICE_206 ( input D1, C1, B1, A1, D0, C0, B0, A0, 
    output F0, F1 );

  lut40129 \STATE_OUT/serial/i19_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40130 \STATE_OUT/serial/i18_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40129 ( input A, B, C, D, output Z );

  LUT4 #("0xFFFE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40130 ( input A, B, C, D, output Z );

  LUT4 #("0xFFFE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module STATE_OUT_serial_SLICE_207 ( input D0, C0, B0, A0, output F0 );

  lut40130 \STATE_OUT/serial/i20_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module STATE_OUT_serial_SLICE_209 ( input D0, C0, B0, A0, output F0 );

  lut40131 \STATE_OUT.serial.i140_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40131 ( input A, B, C, D, output Z );

  LUT4 #("0x7773") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module STATE_OUT_SLICE_210 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, 
    F1 );

  lut40132 \STATE_OUT/i19_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40133 \STATE_OUT/i18_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40132 ( input A, B, C, D, output Z );

  LUT4 #("0xFFFE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40133 ( input A, B, C, D, output Z );

  LUT4 #("0xFFFE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module STATE_OUT_SLICE_211 ( input D0, C0, B0, A0, output F0 );

  lut40130 \STATE_OUT/i20_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_212 ( output F0 );
  wire   GNDI;

  lut40134 i2( .A(GNDI), .B(GNDI), .C(GNDI), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
  endspecify

endmodule

module lut40134 ( input A, B, C, D, output Z );

  LUT4 #("0xFFFF") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_213 ( input DI1, D1, C1, B1, A1, D0, B0, CLK, output Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly;

  lut40135 i11_3_lut_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40136 i1_2_lut( .A(GNDI), .B(B0), .C(GNDI), .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \STATE_OUT/serial/temp_data_out_i0_i2 ( .D0(DI1_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
  endspecify

endmodule

module lut40135 ( input A, B, C, D, output Z );

  LUT4 #("0xEC20") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40136 ( input A, B, C, D, output Z );

  LUT4 #("0xCC00") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module keyboard_SLICE_214 ( input D0, B0, A0, output F0 );
  wire   GNDI;

  lut40137 \keyboard/i499_3_lut ( .A(A0), .B(B0), .C(GNDI), .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40137 ( input A, B, C, D, output Z );

  LUT4 #("0xEE22") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module mainTimer_SLICE_216 ( input B0, A0, output F0 );
  wire   GNDI;

  lut40138 \mainTimer/i2_2_lut ( .A(A0), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40138 ( input A, B, C, D, output Z );

  LUT4 #("0x8888") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module STATE_OUT_SLICE_219 ( input DI1, D1, B0, CLK, output Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly;

  lut40139 \STATE_OUT.SLICE_219_K1 ( .A(GNDI), .B(GNDI), .C(GNDI), .D(D1), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40140 \STATE_OUT/i139_1_lut ( .A(GNDI), .B(B0), .C(GNDI), .D(GNDI), 
    .Z(F0));
  ffsre2 \STATE_OUT/init_c ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
  endspecify

endmodule

module lut40139 ( input A, B, C, D, output Z );

  LUT4 #("0x00FF") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40140 ( input A, B, C, D, output Z );

  LUT4 #("0x3333") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module OSCInst1 ( input CLKLFPU, CLKLFEN, output CLKLF );
  wire   GNDI;

  LSOSC_CORE_B OSCInst1( .CLKLFPU(CLKLFPU), .CLKLFEN(CLKLFEN), .TRIM9(GNDI), 
    .TRIM8(GNDI), .TRIM7(GNDI), .TRIM6(GNDI), .TRIM5(GNDI), .TRIM4(GNDI), 
    .TRIM3(GNDI), .TRIM2(GNDI), .TRIM1(GNDI), .TRIM0(GNDI), .CLKLF(CLKLF));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
  endspecify

endmodule

module LSOSC_CORE_B ( input CLKLFPU, CLKLFEN, TRIM9, TRIM8, TRIM7, TRIM6, 
    TRIM5, TRIM4, TRIM3, TRIM2, TRIM1, TRIM0, output CLKLF );

  LSOSC_CORE INST10( .CLKLFPU(CLKLFPU), .CLKLFEN(CLKLFEN), .TRIM9(TRIM9), 
    .TRIM8(TRIM8), .TRIM7(TRIM7), .TRIM6(TRIM6), .TRIM5(TRIM5), .TRIM4(TRIM4), 
    .TRIM3(TRIM3), .TRIM2(TRIM2), .TRIM1(TRIM1), .TRIM0(TRIM0), .CLKLF(CLKLF));
  defparam INST10.FABRIC_TRIME = "DISABLE";
endmodule

module STATE_OUT_serial_status_send ( input DO0, OUTCLK, output PADDO );
  wire   GNDI, VCCI, DO0_dly, OUTCLK_dly;

  IOL_B_B \STATE_OUT/serial/status_send ( .PADDI(GNDI), .DO1(GNDI), 
    .DO0(DO0_dly), .CE(VCCI), .IOLTO(GNDI), .HOLD(GNDI), .INCLK(GNDI), 
    .OUTCLK(OUTCLK_dly), .PADDO(PADDO), .PADDT(), .DI1(), .DI0());
  gnd DRIVEGND( .PWR0(GNDI));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (OUTCLK => PADDO) = (0:0:0,0:0:0);
    $setuphold (posedge OUTCLK, DO0, 0:0:0, 0:0:0,,,, OUTCLK_dly, DO0_dly);
  endspecify

endmodule

module IOL_B_B ( input PADDI, DO1, DO0, CE, IOLTO, HOLD, INCLK, OUTCLK, 
    output PADDO, PADDT, DI1, DI0 );

  IOL_B INST10( .PADDI(PADDI), .DO1(DO1), .DO0(DO0), .CE(CE), .IOLTO(IOLTO), 
    .HOLD(HOLD), .INCLK(INCLK), .OUTCLK(OUTCLK), .PADDO(PADDO), .PADDT(PADDT), 
    .DI1(DI1), .DI0(DI0));
  defparam INST10.LATCHIN = "LATCH_REG";
  defparam INST10.DDROUT = "NO";
endmodule

module STATUS_SEND ( input PADDO, output STATUS_SEND );
  wire   VCCI;

  BB_B_B \STATUS_SEND_pad.bb_inst ( .T_N(VCCI), .I(PADDO), .O(), 
    .B(STATUS_SEND));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (PADDO => STATUS_SEND) = (0:0:0,0:0:0);
  endspecify

endmodule

module BB_B_B ( input T_N, I, output O, inout B );

  BB_B INST10( .T_N(T_N), .I(I), .O(O), .B(B));
endmodule

module STATUS_OUT ( input PADDO, output STATUS_OUT );
  wire   VCCI;

  BB_B_B \STATUS_OUT_pad.bb_inst ( .T_N(VCCI), .I(PADDO), .O(), .B(STATUS_OUT));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (PADDO => STATUS_OUT) = (0:0:0,0:0:0);
  endspecify

endmodule

module SIREN_OUT ( input PADDO, output SIREN_OUT );
  wire   VCCI;

  BB_B_B \SIREN_OUT_pad.bb_inst ( .T_N(VCCI), .I(PADDO), .O(), .B(SIREN_OUT));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (PADDO => SIREN_OUT) = (0:0:0,0:0:0);
  endspecify

endmodule

module SERCLK_OUT ( input PADDO, output SERCLK_OUT );
  wire   VCCI;

  BB_B_B \SERCLK_OUT_pad.bb_inst ( .T_N(VCCI), .I(PADDO), .O(), .B(SERCLK_OUT));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (PADDO => SERCLK_OUT) = (0:0:0,0:0:0);
  endspecify

endmodule

module KEY_STATUS_1_ ( input PADDO, output KEYSTATUS1 );
  wire   VCCI;

  BB_B_B \KEY_STATUS_pad[1].bb_inst ( .T_N(VCCI), .I(PADDO), .O(), 
    .B(KEYSTATUS1));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (PADDO => KEYSTATUS1) = (0:0:0,0:0:0);
  endspecify

endmodule

module KEY_STATUS_0_ ( input PADDO, output KEYSTATUS0 );
  wire   VCCI;

  BB_B_B \KEY_STATUS_pad[0].bb_inst ( .T_N(VCCI), .I(PADDO), .O(), 
    .B(KEYSTATUS0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (PADDO => KEYSTATUS0) = (0:0:0,0:0:0);
  endspecify

endmodule

module debug_1_ ( input PADDO, output debug1 );
  wire   VCCI;

  BB_B_B \debug_pad[1].bb_inst ( .T_N(VCCI), .I(PADDO), .O(), .B(debug1));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (PADDO => debug1) = (0:0:0,0:0:0);
  endspecify

endmodule

module debug_0_ ( input PADDO, output debug0 );
  wire   VCCI;

  BB_B_B \debug_pad[0].bb_inst ( .T_N(VCCI), .I(PADDO), .O(), .B(debug0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (PADDO => debug0) = (0:0:0,0:0:0);
  endspecify

endmodule

module timeout ( input PADDO, output timeout );
  wire   VCCI;

  BB_B_B \timeout_pad.bb_inst ( .T_N(VCCI), .I(PADDO), .O(), .B(timeout));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (PADDO => timeout) = (0:0:0,0:0:0);
  endspecify

endmodule

module SENSOR1_IN ( output PADDI, input SENSOR1_IN );
  wire   GNDI;

  BB_B_B \SENSOR1_IN_pad.bb_inst ( .T_N(GNDI), .I(GNDI), .O(PADDI), 
    .B(SENSOR1_IN));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (SENSOR1_IN => PADDI) = (0:0:0,0:0:0);
  endspecify

endmodule

module SENSOR2_IN ( output PADDI, input SENSOR2_IN );
  wire   GNDI;

  BB_B_B \SENSOR2_IN_pad.bb_inst ( .T_N(GNDI), .I(GNDI), .O(PADDI), 
    .B(SENSOR2_IN));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (SENSOR2_IN => PADDI) = (0:0:0,0:0:0);
  endspecify

endmodule

module KB_IN_1_ ( output PADDI, input KBIN1 );
  wire   GNDI;

  BB_B_B \KB_IN_pad[1].bb_inst ( .T_N(GNDI), .I(GNDI), .O(PADDI), .B(KBIN1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (KBIN1 => PADDI) = (0:0:0,0:0:0);
  endspecify

endmodule

module KB_IN_0_ ( output PADDI, input KBIN0 );
  wire   GNDI;

  BB_B_B \KB_IN_pad[0].bb_inst ( .T_N(GNDI), .I(GNDI), .O(PADDI), .B(KBIN0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (KBIN0 => PADDI) = (0:0:0,0:0:0);
  endspecify

endmodule

module KB_RECV ( output PADDI, input KB_RECV );
  wire   GNDI;

  BB_B_B \KB_RECV_pad.bb_inst ( .T_N(GNDI), .I(GNDI), .O(PADDI), .B(KB_RECV));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (KB_RECV => PADDI) = (0:0:0,0:0:0);
  endspecify

endmodule

module RESET_IN ( output PADDI, input RESET_IN );
  wire   GNDI;

  BB_B_B \RESET_IN_pad.bb_inst ( .T_N(GNDI), .I(GNDI), .O(PADDI), .B(RESET_IN));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (RESET_IN => PADDI) = (0:0:0,0:0:0);
  endspecify

endmodule
